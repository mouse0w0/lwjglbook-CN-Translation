{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u300a\u7528LWJGL 3\u5f00\u53d13D\u6e38\u620f(3D Game Development with LWJGL 3)\u300b\u4e2d\u6587\u7ffb\u8bd1 \u672c\u4e66\u539f\u4ecb\u7ecd \u8fd9\u672c\u5728\u7ebf\u7535\u5b50\u4e66\u4e3b\u8981\u8bb2\u89e3\u4f7f\u7528LWJGL 3\u5e93\u5f00\u53d13D\u6e38\u620f\u3002 LWJGL\u662f\u4e00\u4e2aJava\u5e93\uff0c\u63d0\u4f9b\u4e86\u8bbf\u95eeOpenGL\u3001OpenAL\u548cOpenCL\u7684\u63a5\u53e3\u3002\u8fd9\u4e2a\u5e93\u53ef\u4ee5\u5728\u4f7f\u7528\u9ad8\u6027\u80fd\u7684OpenGL\u7684\u540c\u65f6\uff0c\u4f7f\u7528Java\u8bed\u8a00\u5f00\u53d1\u3002 \u6211\u6700\u521d\u7684\u76ee\u6807\u662f\u5b66\u4e60\u4f7f\u7528OpenGL\u5f00\u53d13D\u6e38\u620f\u6240\u6d89\u53ca\u7684\u6280\u672f\u3002\u6240\u9700\u8d44\u6599\u90fd\u53ef\u5728\u7f51\u4e0a\u627e\u5230\uff0c\u4f46\u662f\u6ca1\u6709\u4eba\u5c06\u5176\u6574\u7406\uff0c\u6709\u65f6\u5f88\u96be\u627e\u5230\uff0c\u751a\u81f3\u6709\u4e9b\u8d44\u6599\u4e0d\u5b8c\u6574\u6216\u5b58\u5728\u8bef\u5bfc\u3002 \u6211\u5f00\u59cb\u6536\u96c6\u4e00\u4e9b\u8d44\u6599\uff0c\u7f16\u5199\u4e00\u4e9b\u793a\u4f8b\uff0c\u5e76\u51b3\u5b9a\u4ee5\u7535\u5b50\u4e66\u7684\u5f62\u5f0f\u6574\u7406\u8fd9\u4e9b\u8d44\u6599\u3002 \u6e90\u4ee3\u7801 \u672c\u4e66\u4e2d\u6240\u6709\u7684\u6e90\u7801\u793a\u4f8b\u5747\u4e0a\u4f20\u81f3 GitHub . \u672c\u4e66\u82f1\u6587\u539f\u6587\u5730\u5740 GitBook GitHub . \u8bb8\u53ef\u8bc1 \u672c\u4f5c\u54c1\u91c7\u7528 \u77e5\u8bc6\u5171\u4eab\u7f72\u540d-\u76f8\u540c\u65b9\u5f0f\u5171\u4eab 4.0 \u56fd\u9645\u8bb8\u53ef\u534f\u8bae \u8fdb\u884c\u8bb8\u53ef\u3002 \u6240\u6709\u7684\u6e90\u4ee3\u7801\u7684\u8bb8\u53ef\u534f\u8bae\u5747\u4e3a Apache v2.0 \u539f\u4f5c\u8005 Antonio Hern\u00e1ndez Bejarano \u652f\u6301\u4f5c\u8005 \u5982\u679c\u4f60\u559c\u6b22\u8fd9\u672c\u4e66\uff0c\u8bf7Star\u5e76\u4e14\u5206\u4eab\u5b83\u3002\u5982\u679c\u4f60\u60f3\u6350\u52a9\u4f5c\u8005\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u6309\u94ae\u6350\u52a9\uff1a \u7279\u522b\u611f\u8c22 \u611f\u8c22\u6240\u6709\u63d0\u4f9b\u4e86\u6307\u6b63\u3001\u610f\u89c1\u548c\u5efa\u8bae\u7684\u8bfb\u8005\u3002 \u8bd1\u8005\u7684\u8bdd \u672c\u4e66\u662f\u8bd1\u8005\u4e3a\u4e86\u5b66\u4e60LWJGL3\u548cOpenGL\u800c\u7ffb\u8bd1\u7684\u3002\u9650\u4e8e\u8bd1\u8005\u7684\u80fd\u529b\uff0c\u672c\u8bd1\u672c\u4e2d\u5982\u6709\u4e0d\u59a5\u4e4b\u5904\u6b22\u8fce\u5404\u4f4d\u8bfb\u8005\u6307\u6b63\u3002 \u5982\u679c\u4f60\u559c\u6b22\u672c\u8bd1\u672c\uff0c\u8bf7Star\u5e76\u5206\u4eab\u5b83\u3002\u5982\u679c\u4f60\u60f3\u6350\u52a9\u8bd1\u8005\uff0c\u8bf7\u901a\u8fc7\u4e0b\u9762\u7684\u94fe\u63a5\u6350\u52a9\uff1a \u7231\u53d1\u7535 \u3002","title":"\u300a\u7528LWJGL 3\u5f00\u53d13D\u6e38\u620f(3D Game Development with LWJGL 3)\u300b\u4e2d\u6587\u7ffb\u8bd1"},{"location":"#lwjgl-33d3d-game-development-with-lwjgl-3","text":"","title":"\u300a\u7528LWJGL 3\u5f00\u53d13D\u6e38\u620f(3D Game Development with LWJGL 3)\u300b\u4e2d\u6587\u7ffb\u8bd1"},{"location":"#_1","text":"\u8fd9\u672c\u5728\u7ebf\u7535\u5b50\u4e66\u4e3b\u8981\u8bb2\u89e3\u4f7f\u7528LWJGL 3\u5e93\u5f00\u53d13D\u6e38\u620f\u3002 LWJGL\u662f\u4e00\u4e2aJava\u5e93\uff0c\u63d0\u4f9b\u4e86\u8bbf\u95eeOpenGL\u3001OpenAL\u548cOpenCL\u7684\u63a5\u53e3\u3002\u8fd9\u4e2a\u5e93\u53ef\u4ee5\u5728\u4f7f\u7528\u9ad8\u6027\u80fd\u7684OpenGL\u7684\u540c\u65f6\uff0c\u4f7f\u7528Java\u8bed\u8a00\u5f00\u53d1\u3002 \u6211\u6700\u521d\u7684\u76ee\u6807\u662f\u5b66\u4e60\u4f7f\u7528OpenGL\u5f00\u53d13D\u6e38\u620f\u6240\u6d89\u53ca\u7684\u6280\u672f\u3002\u6240\u9700\u8d44\u6599\u90fd\u53ef\u5728\u7f51\u4e0a\u627e\u5230\uff0c\u4f46\u662f\u6ca1\u6709\u4eba\u5c06\u5176\u6574\u7406\uff0c\u6709\u65f6\u5f88\u96be\u627e\u5230\uff0c\u751a\u81f3\u6709\u4e9b\u8d44\u6599\u4e0d\u5b8c\u6574\u6216\u5b58\u5728\u8bef\u5bfc\u3002 \u6211\u5f00\u59cb\u6536\u96c6\u4e00\u4e9b\u8d44\u6599\uff0c\u7f16\u5199\u4e00\u4e9b\u793a\u4f8b\uff0c\u5e76\u51b3\u5b9a\u4ee5\u7535\u5b50\u4e66\u7684\u5f62\u5f0f\u6574\u7406\u8fd9\u4e9b\u8d44\u6599\u3002","title":"\u672c\u4e66\u539f\u4ecb\u7ecd"},{"location":"#_2","text":"\u672c\u4e66\u4e2d\u6240\u6709\u7684\u6e90\u7801\u793a\u4f8b\u5747\u4e0a\u4f20\u81f3 GitHub . \u672c\u4e66\u82f1\u6587\u539f\u6587\u5730\u5740 GitBook GitHub .","title":"\u6e90\u4ee3\u7801"},{"location":"#_3","text":"\u672c\u4f5c\u54c1\u91c7\u7528 \u77e5\u8bc6\u5171\u4eab\u7f72\u540d-\u76f8\u540c\u65b9\u5f0f\u5171\u4eab 4.0 \u56fd\u9645\u8bb8\u53ef\u534f\u8bae \u8fdb\u884c\u8bb8\u53ef\u3002 \u6240\u6709\u7684\u6e90\u4ee3\u7801\u7684\u8bb8\u53ef\u534f\u8bae\u5747\u4e3a Apache v2.0","title":"\u8bb8\u53ef\u8bc1"},{"location":"#_4","text":"Antonio Hern\u00e1ndez Bejarano","title":"\u539f\u4f5c\u8005"},{"location":"#_5","text":"\u5982\u679c\u4f60\u559c\u6b22\u8fd9\u672c\u4e66\uff0c\u8bf7Star\u5e76\u4e14\u5206\u4eab\u5b83\u3002\u5982\u679c\u4f60\u60f3\u6350\u52a9\u4f5c\u8005\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u6309\u94ae\u6350\u52a9\uff1a","title":"\u652f\u6301\u4f5c\u8005"},{"location":"#_6","text":"\u611f\u8c22\u6240\u6709\u63d0\u4f9b\u4e86\u6307\u6b63\u3001\u610f\u89c1\u548c\u5efa\u8bae\u7684\u8bfb\u8005\u3002","title":"\u7279\u522b\u611f\u8c22"},{"location":"#_7","text":"\u672c\u4e66\u662f\u8bd1\u8005\u4e3a\u4e86\u5b66\u4e60LWJGL3\u548cOpenGL\u800c\u7ffb\u8bd1\u7684\u3002\u9650\u4e8e\u8bd1\u8005\u7684\u80fd\u529b\uff0c\u672c\u8bd1\u672c\u4e2d\u5982\u6709\u4e0d\u59a5\u4e4b\u5904\u6b22\u8fce\u5404\u4f4d\u8bfb\u8005\u6307\u6b63\u3002 \u5982\u679c\u4f60\u559c\u6b22\u672c\u8bd1\u672c\uff0c\u8bf7Star\u5e76\u5206\u4eab\u5b83\u3002\u5982\u679c\u4f60\u60f3\u6350\u52a9\u8bd1\u8005\uff0c\u8bf7\u901a\u8fc7\u4e0b\u9762\u7684\u94fe\u63a5\u6350\u52a9\uff1a \u7231\u53d1\u7535 \u3002","title":"\u8bd1\u8005\u7684\u8bdd"},{"location":"01-first-steps/","text":"\u4e8b\u524d\u51c6\u5907\uff08First Steps\uff09 \u5728\u672c\u4e66\u4e2d\uff0c\u6211\u4eec\u5c06\u5b66\u4e60\u5f00\u53d13D\u6e38\u620f\u6240\u6d89\u53ca\u7684\u4e3b\u8981\u6280\u672f\u3002\u672c\u4e66\u5c06\u4f7f\u7528Java\u8bed\u8a00\u548cJava\u8f7b\u91cf\u7ea7\u6e38\u620f\u5e93( LWJGL )\u6765\u7f16\u5199\u793a\u4f8b\u4ee3\u7801\u3002LWJGL\u5e93\u5141\u8bb8\u6211\u4eec\u8bbf\u95ee\u5e95\u5c42\u7684API\uff08\u5e94\u7528\u7a0b\u5e8f\u63a5\u53e3\uff09\uff0c\u4f8b\u5982OpenGL\u3002 LWJGL\u662f\u4e00\u4e2a\u5e95\u5c42\u7684API\uff0c\u5b83\u50cf\u4e00\u4e2aOpenGL\u5305\u88c5\u5e93\u3002\u5982\u679c\u4f60\u662f\u60f3\u5728\u77ed\u65f6\u95f4\u5185\u5f00\u59cb\u5236\u4f5c\u4e00\u4e2a3D\u6e38\u620f\uff0c\u90a3\u4e48\u4f60\u4e5f\u8bb8\u8be5\u8003\u8651\u5176\u5b83\u9009\u62e9\uff0c\u6bd4\u5982\u4f7f\u7528\u5f15\u64ce[JmonkeyEngine]\u3002\u4f7f\u7528LWJGL\u8fd9\u4e2a\u5e95\u5c42API\uff0c\u5728\u4f60\u6536\u5230\u6210\u6548\u4e4b\u524d\uff0c\u9700\u8981\u4e86\u89e3\u8bb8\u591a\u6982\u5ff5\u5e76\u4e14\u7f16\u5199\u5927\u91cf\u7684\u4ee3\u7801\u3002\u8fd9\u6837\u505a\u7684\u597d\u5904\u662f\u4f60\u53ef\u4ee5\u66f4\u597d\u7684\u7406\u89e33D\u56fe\u5f62\u6e32\u67d3\uff0c\u5e76\u4e14\u53ef\u4ee5\u66f4\u597d\u7684\u63a7\u5236\u5b83\u3002 \u5728\u4e0a\u6587\u8bf4\u5230\uff0c\u5728\u672c\u4e66\u4e2d\u6211\u4eec\u5c06\u4f7f\u7528Java\uff0c\u66f4\u786e\u5207\u6765\u8bf4\u6211\u4eec\u5c06\u4f7f\u7528Java 10\u3002\u6240\u4ee5\u4f60\u9700\u8981\u4eceOracle\u7684\u9875\u9762\u4e0b\u8f7d\u5bf9\u5e94\u7248\u672c\u7684JDK\u3002\u8bf7\u9009\u62e9\u9002\u5408\u4f60\u7684\u64cd\u4f5c\u7cfb\u7edf\u7684\u5b89\u88c5\u7a0b\u5e8f\u3002\u672c\u4e66\u5047\u5b9a\u4f60\u5bf9Java\u8bed\u8a00\u6709\u4e00\u5b9a\u7684\u4e86\u89e3\u3002 \u5982\u679c\u4f60\u9700\u8981\u4e00\u4e2a\u53ef\u4ee5\u8fd0\u884c\u793a\u4f8b\u4ee3\u7801\u7684Java IDE\uff08\u96c6\u6210\u5f00\u53d1\u73af\u5883\uff09\uff0c\u4f60\u53ef\u4ee5\u4e0b\u8f7d\u4e3aJava 10\u63d0\u4f9b\u826f\u597d\u652f\u6301\u7684IntelliJ IDEA\u3002\u7531\u4e8eJava 10\u4ec5\u652f\u630164\u4f4d\u7684\u5e73\u53f0\uff0c\u8bb0\u5f97\u4e0b\u8f7d64\u4f4d\u7248\u672c\u7684IntelliJ\u3002IntelliJ\u63d0\u4f9b\u6709\u4e00\u4e2a\u514d\u8d39\u4e14\u5f00\u6e90\u7684\u793e\u533a\u7248\uff0c\u4f60\u53ef\u4ee5\u5728\u8fd9\u91cc\u4e0b\u8f7d\u5b83\uff1a https://www.jetbrains.com/idea/download/ \u3002 \u4e3a\u4e86\u6784\u5efa\u793a\u4f8b\u4ee3\u7801\uff0c\u6211\u4eec\u5c06\u4f7f\u7528 Maven \u3002Maven\u5df2\u7ecf\u96c6\u6210\u5728\u5927\u591a\u6570IDE\u4e2d\uff0c\u4f60\u53ef\u4ee5\u5728IDE\u4e2d\u76f4\u63a5\u6253\u5f00\u4e0d\u540c\u7ae0\u8282\u7684\u793a\u4f8b\u4ee3\u7801\u3002\u53ea\u8981\u6253\u5f00\u4e86\u793a\u4f8b\u4ee3\u7801\u6240\u5728\u7684\u6587\u4ef6\u5939\uff0cIntelliJ\u5c31\u4f1a\u68c0\u6d4b\u5230\u5b83\u662f\u4e00\u4e2aMaven\u9879\u76ee\u3002 Maven\u57fa\u4e8e\u4e00\u4e2a\u540d\u4e3a pom.xml \uff08Project Object Model\uff0c\u9879\u76ee\u5bf9\u8c61\u6a21\u578b\uff09\u7684XML\u6587\u4ef6\u6765\u6784\u5efa\u9879\u76ee\uff0c\u5b83\u7ba1\u7406\u4e86\u9879\u76ee\u7684\u4f9d\u8d56\uff08\u9700\u8981\u4f7f\u7528\u7684\u5e93\uff09\u548c\u5728\u6784\u5efa\u8fc7\u7a0b\u4e2d\u9700\u8981\u6267\u884c\u7684\u6b65\u9aa4\u3002Maven\u9075\u5faa\u7ea6\u5b9a\u9ad8\u4e8e\u914d\u7f6e\u7684\u539f\u5219\uff0c\u5373\u5982\u679c\u4f60\u9075\u5b88\u6807\u51c6\u7684\u9879\u76ee\u7ed3\u6784\u548c\u547d\u540d\u7ea6\u5b9a\uff0c\u5c31\u4e0d\u9700\u8981\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u660e\u786e\u5730\u58f0\u660e\u6e90\u6587\u4ef6\u5728\u54ea\u91cc\u6216\u8005\u5e94\u8be5\u5728\u54ea\u91cc\u7f16\u8bd1\u7c7b\u3002 \u672c\u4e66\u4e0d\u662f\u4e00\u4e2aMaven\u6559\u7a0b\uff0c\u5982\u679c\u6709\u9700\u8981\uff0c\u8bf7\u5728\u7f51\u4e0a\u641c\u7d22Maven\u7684\u76f8\u5173\u8d44\u6599\u3002\u6e90\u4ee3\u7801\u6587\u4ef6\u5939\u5b9a\u4e49\u4e86\u4e00\u4e2a\u7236\u9879\u76ee\uff0c\u5b83\u58f0\u660e\u9700\u8981\u4f7f\u7528\u7684\u63d2\u4ef6\u5e76\u4e14\u58f0\u660e\u9700\u8981\u4f7f\u7528\u7684\u5e93\u7684\u7248\u672c\u3002 LWJGL 3.1\u5728\u9879\u76ee\u6784\u5efa\u4e0a\u6709\u4e00\u4e9b\u53d8\u5316\u3002\u73b0\u5728\uff0c\u5b83\u53d8\u5f97\u66f4\u52a0\u6a21\u5757\u5316\uff0c\u6211\u4eec\u53ef\u4ee5\u6709\u9009\u62e9\u5730\u4f7f\u7528\u7c7b\u5e93\uff0c\u800c\u4e0d\u662f\u5bfc\u5165\u4e00\u4e2a\u5de8\u5927\u7684Jar\u6587\u4ef6\u3002\u4f46\u8fd9\u662f\u6709\u4ee3\u4ef7\u7684\uff1a\u4f60\u9700\u8981\u4ed4\u7ec6\u5730\u9010\u4e2a\u6307\u5b9a\u4f9d\u8d56\u5173\u7cfb\u3002\u4e0d\u8fc7 LWJGL\u4e0b\u8f7d \u9875\u9762\u63d0\u4f9b\u4e86\u4e00\u4e2a\u4e3a\u60a8\u751f\u6210POM\u6587\u4ef6\u7684\u811a\u672c\u3002\u5728\u672c\u4f8b\u4e2d\uff0c\u6211\u4eec\u5c06\u53ea\u4f7f\u7528GLFW\u548cOpenGL\u3002\u4f60\u53ef\u4ee5\u5728\u6e90\u4ee3\u7801\u4e2d\u67e5\u770b\u6211\u4eec\u7684POM\u6587\u4ef6\u3002 LWJGL\u5e73\u53f0\u4f9d\u8d56\u5e93\u5df2\u7ecf\u53ef\u4ee5\u4e3a\u4f60\u7684\u64cd\u4f5c\u7cfb\u7edf\u81ea\u52a8\u89e3\u538b\u672c\u5730\u5e93\uff0c\u56e0\u6b64\u4e0d\u9700\u8981\u4f7f\u7528\u5176\u4ed6\u63d2\u4ef6\uff08\u4f8b\u5982 mavennatives \uff09\u3002\u6211\u4eec\u53ea\u9700\u8981\u914d\u7f6e\u4e09\u4e2aProfile\u6765\u8bbe\u7f6eLWJGL\u6240\u5904\u7684\u64cd\u4f5c\u7cfb\u7edf\u3002Profile\u5c06\u4f1a\u4e3aWindows\u3001Linux\u548cMac OS\u7cfb\u5217\u8bbe\u7f6e\u6b63\u786e\u7684\u503c\u3002 <profiles> <profile> <id>windows-profile</id> <activation> <os> <family>Windows</family> </os> </activation> <properties> <native.target>natives-windows</native.target> </properties> </profile> <profile> <id>linux-profile</id> <activation> <os> <family>Linux</family> </os> </activation> <properties> <native.target>natives-linux</native.target> </properties> </profile> <profile> <id>OSX-profile</id> <activation> <os> <family>mac</family> </os> </activation> <properties> <native.target>natives-osx</native.target> </properties> </profile> </profiles> \u5728\u6bcf\u4e2a\u9879\u76ee\u4e2d\uff0cLWJGL\u5e73\u53f0\u4f9d\u8d56\u9879\u5c06\u4f7f\u7528\u914d\u7f6e\u6587\u4ef6\u4e3a\u5f53\u524d\u5e73\u53f0\u8bbe\u7f6e\u7684\u6b63\u786e\u7684\u5c5e\u6027\u3002 <dependency> <groupId>org.lwjgl</groupId> <artifactId>lwjgl-platform</artifactId> <version>${lwjgl.version}</version> <classifier>${native.target}</classifier> </dependency> \u6b64\u5916\uff0c\u6bcf\u4e2a\u9879\u76ee\u53ef\u751f\u6210\u4e00\u4e2a\u53ef\u8fd0\u884c\u7684Jar\uff08\u4e00\u79cd\u53ef\u4ee5\u901a\u8fc7\u8f93\u5165 java -jar name_of_the_jar.jar \u5c31\u53ef\u8fd0\u884c\u7684Jar\uff09\uff0c\u8fd9\u662f\u901a\u8fc7\u4f7f\u7528Maven\u7684 maven-jar-plugin \u63d2\u4ef6\u5b9e\u73b0\u7684\u3002\u8be5\u63d2\u4ef6\u521b\u5efa\u4e86\u4e00\u4e2a\u542b\u6709 MANIFEST.MF \u6587\u4ef6\u7684Jar\uff0c\u5e76\u4e14\u6587\u4ef6\u5185\u6709\u6307\u5b9a\u7684\u503c\uff0c\u8be5\u6587\u4ef6\u6700\u91cd\u8981\u7684\u5c5e\u6027\u5c31\u662f Main-Class \uff0c\u5b83\u6307\u660e\u4e86\u7a0b\u5e8f\u7684\u5165\u53e3\u3002\u6b64\u5916\uff0c\u6240\u6709\u7684\u4f9d\u8d56\u5e93\u90fd\u88ab\u8bbe\u7f6e\u5728\u8be5\u6587\u4ef6\u7684 Class-Path \u5c5e\u6027\u4e2d\u3002\u8981\u5728\u53e6\u4e00\u53f0\u8ba1\u7b97\u673a\u4e0a\u8fd0\u884c\u5b83\uff0c\u4f60\u53ea\u9700\u8981\u590d\u5236\u4f4d\u4e8e\u76ee\u6807\u76ee\u5f55\u4e0b\u7684\u4e3bJar\u6587\u4ef6\u548cLib\u76ee\u5f55\uff08\u5305\u62ec\u5176\u4e2d\u6240\u6709\u7684Jar\u6587\u4ef6\uff09\u3002 Jar\u6587\u4ef6\u50a8\u5b58\u7740LWJGL\u7c7b\u548c\u672c\u5730\u5e93\u3002LWJGL\u8fd8\u5c06\u8d1f\u8d23\u63d0\u53d6\u5b83\u4eec\uff0c\u5e76\u5c06\u5b83\u4eec\u6dfb\u52a0\u5230JVM\u7684\u5e93\u8def\u5f84\u4e2d\u3002 \u672c\u7ae0\u7684\u6e90\u4ee3\u7801\u662fLWJGL\u7f51\u7ad9( https://www.lwjgl.org/guide )\u63d0\u4f9b\u7684\u7684\u5165\u95e8\u793a\u4f8b\uff0c\u4f60\u53ef\u4ee5\u770b\u5230\u6211\u4eec\u6ca1\u6709\u4f7f\u7528Swing\u6216JavaFX\u4f5c\u4e3a\u6211\u4eec\u7684GUI\u5e93\u3002\u6211\u4eec\u4f7f\u7528\u7684\u662f GLFW \uff0c\u5b83\u662f\u4e00\u4e2a\u7528\u4e8e\u5904\u7406GUI\u7ec4\u4ef6\uff08\u7a97\u53e3\u7b49\uff09\u548c\u4e8b\u4ef6\uff08\u6309\u952e\u6309\u4e0b\u3001\u9f20\u6807\u79fb\u52a8\u7b49\uff09\uff0c\u5e76\u4e14\u4e0eOpenGL\u4e0a\u4e0b\u6587\u8fdb\u884c\u7b80\u5355\u8fde\u63a5\u7684\u5e93\u3002\u6b64\u524d\u7248\u672c\u7684LWJGL\u63d0\u4f9b\u4e86\u4e00\u4e2a\u81ea\u5b9a\u4e49GUI API\uff0c\u4f46\u5728LWJGL 3\u4e2d\uff0cGLFW\u662f\u9996\u9009\u7684\u7a97\u53e3API\u3002 \u793a\u4f8b\u6e90\u7801\u5f88\u7b80\u5355\u5e76\u6709\u7740\u826f\u597d\u7684\u6587\u6863\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u4f1a\u5728\u4e66\u4e2d\u518d\u6b21\u8bf4\u660e\u3002 \u5982\u679c\u4f60\u6b63\u786e\u5730\u914d\u7f6e\u4e86\u73af\u5883\uff0c\u4f60\u5e94\u8be5\u80fd\u591f\u8fd0\u884c\u5b83\u5e76\u770b\u5230\u4e00\u4e2a\u6709\u7ea2\u8272\u80cc\u666f\u7684\u7a97\u53e3\u3002 \u672c\u4e66\u4e2d\u6e90\u4ee3\u7801\u53d1\u5e03\u4e8e GitHub \u3002","title":"\u4e8b\u524d\u51c6\u5907"},{"location":"01-first-steps/#first-steps","text":"\u5728\u672c\u4e66\u4e2d\uff0c\u6211\u4eec\u5c06\u5b66\u4e60\u5f00\u53d13D\u6e38\u620f\u6240\u6d89\u53ca\u7684\u4e3b\u8981\u6280\u672f\u3002\u672c\u4e66\u5c06\u4f7f\u7528Java\u8bed\u8a00\u548cJava\u8f7b\u91cf\u7ea7\u6e38\u620f\u5e93( LWJGL )\u6765\u7f16\u5199\u793a\u4f8b\u4ee3\u7801\u3002LWJGL\u5e93\u5141\u8bb8\u6211\u4eec\u8bbf\u95ee\u5e95\u5c42\u7684API\uff08\u5e94\u7528\u7a0b\u5e8f\u63a5\u53e3\uff09\uff0c\u4f8b\u5982OpenGL\u3002 LWJGL\u662f\u4e00\u4e2a\u5e95\u5c42\u7684API\uff0c\u5b83\u50cf\u4e00\u4e2aOpenGL\u5305\u88c5\u5e93\u3002\u5982\u679c\u4f60\u662f\u60f3\u5728\u77ed\u65f6\u95f4\u5185\u5f00\u59cb\u5236\u4f5c\u4e00\u4e2a3D\u6e38\u620f\uff0c\u90a3\u4e48\u4f60\u4e5f\u8bb8\u8be5\u8003\u8651\u5176\u5b83\u9009\u62e9\uff0c\u6bd4\u5982\u4f7f\u7528\u5f15\u64ce[JmonkeyEngine]\u3002\u4f7f\u7528LWJGL\u8fd9\u4e2a\u5e95\u5c42API\uff0c\u5728\u4f60\u6536\u5230\u6210\u6548\u4e4b\u524d\uff0c\u9700\u8981\u4e86\u89e3\u8bb8\u591a\u6982\u5ff5\u5e76\u4e14\u7f16\u5199\u5927\u91cf\u7684\u4ee3\u7801\u3002\u8fd9\u6837\u505a\u7684\u597d\u5904\u662f\u4f60\u53ef\u4ee5\u66f4\u597d\u7684\u7406\u89e33D\u56fe\u5f62\u6e32\u67d3\uff0c\u5e76\u4e14\u53ef\u4ee5\u66f4\u597d\u7684\u63a7\u5236\u5b83\u3002 \u5728\u4e0a\u6587\u8bf4\u5230\uff0c\u5728\u672c\u4e66\u4e2d\u6211\u4eec\u5c06\u4f7f\u7528Java\uff0c\u66f4\u786e\u5207\u6765\u8bf4\u6211\u4eec\u5c06\u4f7f\u7528Java 10\u3002\u6240\u4ee5\u4f60\u9700\u8981\u4eceOracle\u7684\u9875\u9762\u4e0b\u8f7d\u5bf9\u5e94\u7248\u672c\u7684JDK\u3002\u8bf7\u9009\u62e9\u9002\u5408\u4f60\u7684\u64cd\u4f5c\u7cfb\u7edf\u7684\u5b89\u88c5\u7a0b\u5e8f\u3002\u672c\u4e66\u5047\u5b9a\u4f60\u5bf9Java\u8bed\u8a00\u6709\u4e00\u5b9a\u7684\u4e86\u89e3\u3002 \u5982\u679c\u4f60\u9700\u8981\u4e00\u4e2a\u53ef\u4ee5\u8fd0\u884c\u793a\u4f8b\u4ee3\u7801\u7684Java IDE\uff08\u96c6\u6210\u5f00\u53d1\u73af\u5883\uff09\uff0c\u4f60\u53ef\u4ee5\u4e0b\u8f7d\u4e3aJava 10\u63d0\u4f9b\u826f\u597d\u652f\u6301\u7684IntelliJ IDEA\u3002\u7531\u4e8eJava 10\u4ec5\u652f\u630164\u4f4d\u7684\u5e73\u53f0\uff0c\u8bb0\u5f97\u4e0b\u8f7d64\u4f4d\u7248\u672c\u7684IntelliJ\u3002IntelliJ\u63d0\u4f9b\u6709\u4e00\u4e2a\u514d\u8d39\u4e14\u5f00\u6e90\u7684\u793e\u533a\u7248\uff0c\u4f60\u53ef\u4ee5\u5728\u8fd9\u91cc\u4e0b\u8f7d\u5b83\uff1a https://www.jetbrains.com/idea/download/ \u3002 \u4e3a\u4e86\u6784\u5efa\u793a\u4f8b\u4ee3\u7801\uff0c\u6211\u4eec\u5c06\u4f7f\u7528 Maven \u3002Maven\u5df2\u7ecf\u96c6\u6210\u5728\u5927\u591a\u6570IDE\u4e2d\uff0c\u4f60\u53ef\u4ee5\u5728IDE\u4e2d\u76f4\u63a5\u6253\u5f00\u4e0d\u540c\u7ae0\u8282\u7684\u793a\u4f8b\u4ee3\u7801\u3002\u53ea\u8981\u6253\u5f00\u4e86\u793a\u4f8b\u4ee3\u7801\u6240\u5728\u7684\u6587\u4ef6\u5939\uff0cIntelliJ\u5c31\u4f1a\u68c0\u6d4b\u5230\u5b83\u662f\u4e00\u4e2aMaven\u9879\u76ee\u3002 Maven\u57fa\u4e8e\u4e00\u4e2a\u540d\u4e3a pom.xml \uff08Project Object Model\uff0c\u9879\u76ee\u5bf9\u8c61\u6a21\u578b\uff09\u7684XML\u6587\u4ef6\u6765\u6784\u5efa\u9879\u76ee\uff0c\u5b83\u7ba1\u7406\u4e86\u9879\u76ee\u7684\u4f9d\u8d56\uff08\u9700\u8981\u4f7f\u7528\u7684\u5e93\uff09\u548c\u5728\u6784\u5efa\u8fc7\u7a0b\u4e2d\u9700\u8981\u6267\u884c\u7684\u6b65\u9aa4\u3002Maven\u9075\u5faa\u7ea6\u5b9a\u9ad8\u4e8e\u914d\u7f6e\u7684\u539f\u5219\uff0c\u5373\u5982\u679c\u4f60\u9075\u5b88\u6807\u51c6\u7684\u9879\u76ee\u7ed3\u6784\u548c\u547d\u540d\u7ea6\u5b9a\uff0c\u5c31\u4e0d\u9700\u8981\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u660e\u786e\u5730\u58f0\u660e\u6e90\u6587\u4ef6\u5728\u54ea\u91cc\u6216\u8005\u5e94\u8be5\u5728\u54ea\u91cc\u7f16\u8bd1\u7c7b\u3002 \u672c\u4e66\u4e0d\u662f\u4e00\u4e2aMaven\u6559\u7a0b\uff0c\u5982\u679c\u6709\u9700\u8981\uff0c\u8bf7\u5728\u7f51\u4e0a\u641c\u7d22Maven\u7684\u76f8\u5173\u8d44\u6599\u3002\u6e90\u4ee3\u7801\u6587\u4ef6\u5939\u5b9a\u4e49\u4e86\u4e00\u4e2a\u7236\u9879\u76ee\uff0c\u5b83\u58f0\u660e\u9700\u8981\u4f7f\u7528\u7684\u63d2\u4ef6\u5e76\u4e14\u58f0\u660e\u9700\u8981\u4f7f\u7528\u7684\u5e93\u7684\u7248\u672c\u3002 LWJGL 3.1\u5728\u9879\u76ee\u6784\u5efa\u4e0a\u6709\u4e00\u4e9b\u53d8\u5316\u3002\u73b0\u5728\uff0c\u5b83\u53d8\u5f97\u66f4\u52a0\u6a21\u5757\u5316\uff0c\u6211\u4eec\u53ef\u4ee5\u6709\u9009\u62e9\u5730\u4f7f\u7528\u7c7b\u5e93\uff0c\u800c\u4e0d\u662f\u5bfc\u5165\u4e00\u4e2a\u5de8\u5927\u7684Jar\u6587\u4ef6\u3002\u4f46\u8fd9\u662f\u6709\u4ee3\u4ef7\u7684\uff1a\u4f60\u9700\u8981\u4ed4\u7ec6\u5730\u9010\u4e2a\u6307\u5b9a\u4f9d\u8d56\u5173\u7cfb\u3002\u4e0d\u8fc7 LWJGL\u4e0b\u8f7d \u9875\u9762\u63d0\u4f9b\u4e86\u4e00\u4e2a\u4e3a\u60a8\u751f\u6210POM\u6587\u4ef6\u7684\u811a\u672c\u3002\u5728\u672c\u4f8b\u4e2d\uff0c\u6211\u4eec\u5c06\u53ea\u4f7f\u7528GLFW\u548cOpenGL\u3002\u4f60\u53ef\u4ee5\u5728\u6e90\u4ee3\u7801\u4e2d\u67e5\u770b\u6211\u4eec\u7684POM\u6587\u4ef6\u3002 LWJGL\u5e73\u53f0\u4f9d\u8d56\u5e93\u5df2\u7ecf\u53ef\u4ee5\u4e3a\u4f60\u7684\u64cd\u4f5c\u7cfb\u7edf\u81ea\u52a8\u89e3\u538b\u672c\u5730\u5e93\uff0c\u56e0\u6b64\u4e0d\u9700\u8981\u4f7f\u7528\u5176\u4ed6\u63d2\u4ef6\uff08\u4f8b\u5982 mavennatives \uff09\u3002\u6211\u4eec\u53ea\u9700\u8981\u914d\u7f6e\u4e09\u4e2aProfile\u6765\u8bbe\u7f6eLWJGL\u6240\u5904\u7684\u64cd\u4f5c\u7cfb\u7edf\u3002Profile\u5c06\u4f1a\u4e3aWindows\u3001Linux\u548cMac OS\u7cfb\u5217\u8bbe\u7f6e\u6b63\u786e\u7684\u503c\u3002 <profiles> <profile> <id>windows-profile</id> <activation> <os> <family>Windows</family> </os> </activation> <properties> <native.target>natives-windows</native.target> </properties> </profile> <profile> <id>linux-profile</id> <activation> <os> <family>Linux</family> </os> </activation> <properties> <native.target>natives-linux</native.target> </properties> </profile> <profile> <id>OSX-profile</id> <activation> <os> <family>mac</family> </os> </activation> <properties> <native.target>natives-osx</native.target> </properties> </profile> </profiles> \u5728\u6bcf\u4e2a\u9879\u76ee\u4e2d\uff0cLWJGL\u5e73\u53f0\u4f9d\u8d56\u9879\u5c06\u4f7f\u7528\u914d\u7f6e\u6587\u4ef6\u4e3a\u5f53\u524d\u5e73\u53f0\u8bbe\u7f6e\u7684\u6b63\u786e\u7684\u5c5e\u6027\u3002 <dependency> <groupId>org.lwjgl</groupId> <artifactId>lwjgl-platform</artifactId> <version>${lwjgl.version}</version> <classifier>${native.target}</classifier> </dependency> \u6b64\u5916\uff0c\u6bcf\u4e2a\u9879\u76ee\u53ef\u751f\u6210\u4e00\u4e2a\u53ef\u8fd0\u884c\u7684Jar\uff08\u4e00\u79cd\u53ef\u4ee5\u901a\u8fc7\u8f93\u5165 java -jar name_of_the_jar.jar \u5c31\u53ef\u8fd0\u884c\u7684Jar\uff09\uff0c\u8fd9\u662f\u901a\u8fc7\u4f7f\u7528Maven\u7684 maven-jar-plugin \u63d2\u4ef6\u5b9e\u73b0\u7684\u3002\u8be5\u63d2\u4ef6\u521b\u5efa\u4e86\u4e00\u4e2a\u542b\u6709 MANIFEST.MF \u6587\u4ef6\u7684Jar\uff0c\u5e76\u4e14\u6587\u4ef6\u5185\u6709\u6307\u5b9a\u7684\u503c\uff0c\u8be5\u6587\u4ef6\u6700\u91cd\u8981\u7684\u5c5e\u6027\u5c31\u662f Main-Class \uff0c\u5b83\u6307\u660e\u4e86\u7a0b\u5e8f\u7684\u5165\u53e3\u3002\u6b64\u5916\uff0c\u6240\u6709\u7684\u4f9d\u8d56\u5e93\u90fd\u88ab\u8bbe\u7f6e\u5728\u8be5\u6587\u4ef6\u7684 Class-Path \u5c5e\u6027\u4e2d\u3002\u8981\u5728\u53e6\u4e00\u53f0\u8ba1\u7b97\u673a\u4e0a\u8fd0\u884c\u5b83\uff0c\u4f60\u53ea\u9700\u8981\u590d\u5236\u4f4d\u4e8e\u76ee\u6807\u76ee\u5f55\u4e0b\u7684\u4e3bJar\u6587\u4ef6\u548cLib\u76ee\u5f55\uff08\u5305\u62ec\u5176\u4e2d\u6240\u6709\u7684Jar\u6587\u4ef6\uff09\u3002 Jar\u6587\u4ef6\u50a8\u5b58\u7740LWJGL\u7c7b\u548c\u672c\u5730\u5e93\u3002LWJGL\u8fd8\u5c06\u8d1f\u8d23\u63d0\u53d6\u5b83\u4eec\uff0c\u5e76\u5c06\u5b83\u4eec\u6dfb\u52a0\u5230JVM\u7684\u5e93\u8def\u5f84\u4e2d\u3002 \u672c\u7ae0\u7684\u6e90\u4ee3\u7801\u662fLWJGL\u7f51\u7ad9( https://www.lwjgl.org/guide )\u63d0\u4f9b\u7684\u7684\u5165\u95e8\u793a\u4f8b\uff0c\u4f60\u53ef\u4ee5\u770b\u5230\u6211\u4eec\u6ca1\u6709\u4f7f\u7528Swing\u6216JavaFX\u4f5c\u4e3a\u6211\u4eec\u7684GUI\u5e93\u3002\u6211\u4eec\u4f7f\u7528\u7684\u662f GLFW \uff0c\u5b83\u662f\u4e00\u4e2a\u7528\u4e8e\u5904\u7406GUI\u7ec4\u4ef6\uff08\u7a97\u53e3\u7b49\uff09\u548c\u4e8b\u4ef6\uff08\u6309\u952e\u6309\u4e0b\u3001\u9f20\u6807\u79fb\u52a8\u7b49\uff09\uff0c\u5e76\u4e14\u4e0eOpenGL\u4e0a\u4e0b\u6587\u8fdb\u884c\u7b80\u5355\u8fde\u63a5\u7684\u5e93\u3002\u6b64\u524d\u7248\u672c\u7684LWJGL\u63d0\u4f9b\u4e86\u4e00\u4e2a\u81ea\u5b9a\u4e49GUI API\uff0c\u4f46\u5728LWJGL 3\u4e2d\uff0cGLFW\u662f\u9996\u9009\u7684\u7a97\u53e3API\u3002 \u793a\u4f8b\u6e90\u7801\u5f88\u7b80\u5355\u5e76\u6709\u7740\u826f\u597d\u7684\u6587\u6863\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u4f1a\u5728\u4e66\u4e2d\u518d\u6b21\u8bf4\u660e\u3002 \u5982\u679c\u4f60\u6b63\u786e\u5730\u914d\u7f6e\u4e86\u73af\u5883\uff0c\u4f60\u5e94\u8be5\u80fd\u591f\u8fd0\u884c\u5b83\u5e76\u770b\u5230\u4e00\u4e2a\u6709\u7ea2\u8272\u80cc\u666f\u7684\u7a97\u53e3\u3002 \u672c\u4e66\u4e2d\u6e90\u4ee3\u7801\u53d1\u5e03\u4e8e GitHub \u3002","title":"\u4e8b\u524d\u51c6\u5907\uff08First Steps\uff09"},{"location":"02-the-game-loop/","text":"\u6e38\u620f\u5faa\u73af\uff08The Game Loop\uff09 \u5728\u672c\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u901a\u8fc7\u521b\u5efa\u6e38\u620f\u5faa\u73af\u6765\u5f00\u59cb\u5f00\u53d1\u6e38\u620f\u5f15\u64ce\u3002\u6e38\u620f\u5faa\u73af\u662f\u6bcf\u4e2a\u6e38\u620f\u7684\u6838\u5fc3\u90e8\u5206\uff0c\u5b83\u57fa\u672c\u4e0a\u662f\u4e00\u4e2a\u65e0\u4f11\u6b62\u7684\u5faa\u73af\uff0c\u8d1f\u8d23\u5468\u671f\u5730\u5904\u7406\u7528\u6237\u7684\u8f93\u5165\u3001\u66f4\u65b0\u6e38\u620f\u72b6\u6001\u548c\u6e32\u67d3\u56fe\u50cf\u5230\u5c4f\u5e55\u4e0a\u3002 \u4e0b\u8ff0\u4ee3\u7801\u7247\u6bb5\u5c55\u793a\u4e86\u6e38\u620f\u5faa\u73af\u7684\u7ed3\u6784\uff1a while (keepOnRunning) { handleInput(); updateGameState(); render(); } \u90a3\u4e48\uff0c\u8fd9\u5c31\u5b8c\u4e86\u5417\uff1f\u6211\u4eec\u5df2\u7ecf\u5b8c\u6210\u6e38\u620f\u5faa\u73af\u4e86\u5417\uff1f\u663e\u7136\u8fd8\u6ca1\u6709\uff0c\u4e0a\u8ff0\u4ee3\u7801\u4e2d\u6709\u5f88\u591a\u7f3a\u9677\u3002\u9996\u5148\uff0c\u6e38\u620f\u5faa\u73af\u8fd0\u884c\u7684\u901f\u5ea6\u5c06\u53d6\u51b3\u4e8e\u8fd0\u884c\u5b83\u7684\u8ba1\u7b97\u673a\u3002\u5982\u679c\u8ba1\u7b97\u673a\u8db3\u591f\u5feb\uff0c\u7528\u6237\u751a\u81f3\u770b\u4e0d\u5230\u6e38\u620f\u4e2d\u53d1\u751f\u4e86\u4ec0\u4e48\u3002\u6b64\u5916\uff0c\u8fd9\u4e2a\u6e38\u620f\u5faa\u73af\u5c06\u6d88\u8017\u6240\u6709\u7684\u8ba1\u7b97\u673a\u8d44\u6e90\u3002 \u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u6e38\u620f\u5faa\u73af\u72ec\u7acb\u4e8e\u8fd0\u884c\u7684\u8ba1\u7b97\u673a\uff0c\u5c1d\u8bd5\u4ee5\u6052\u5b9a\u901f\u7387\u8fd0\u884c\u3002\u5047\u8bbe\u6211\u4eec\u5e0c\u671b\u6e38\u620f\u4ee5\u6bcf\u79d250\u5e27\uff0850 Frames Per Second\uff0c50 FPS\uff09\u7684\u6052\u5b9a\u901f\u7387\u8fd0\u884c\uff0c\u90a3\u4e48\u6e38\u620f\u5faa\u73af\u4ee3\u7801\u53ef\u80fd\u662f\u8fd9\u6837\u7684\uff1a double secsPerFrame = 1.0d / 50.0d; while (keepOnRunning) { double now = getTime(); handleInput(); updateGameState(); render(); sleep(now + secsPerFrame \u2013 getTime()); } \u8fd9\u4e2a\u6e38\u620f\u5faa\u73af\u5f88\u7b80\u5355\uff0c\u53ef\u4ee5\u7528\u4e8e\u4e00\u4e9b\u6e38\u620f\uff0c\u4f46\u662f\u5b83\u4e5f\u5b58\u5728\u4e00\u4e9b\u7f3a\u9677\u3002\u9996\u5148\uff0c\u5b83\u5047\u5b9a\u6211\u4eec\u7684\u66f4\u65b0\u548c\u6e32\u67d3\u65b9\u6cd5\u9002\u5408\u4ee550FPS\uff08\u5373 secsPerFrame \u7b49\u4e8e20\u6beb\u79d2\uff09\u7684\u901f\u7387\u66f4\u65b0\u3002 \u6b64\u5916\uff0c\u6211\u4eec\u7684\u8ba1\u7b97\u673a\u53ef\u80fd\u4f1a\u4f18\u5148\u8003\u8651\u6682\u505c\u6e38\u620f\u5faa\u73af\u8fd0\u884c\u4e00\u6bb5\u65f6\u95f4\uff0c\u4ee5\u8fd0\u884c\u5176\u4ed6\u7684\u4efb\u52a1\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u80fd\u4f1a\u5728\u975e\u5e38\u4e0d\u7a33\u5b9a\u7684\u65f6\u95f4\u5468\u671f\u66f4\u65b0\u6e38\u620f\u72b6\u6001\uff0c\u8fd9\u662f\u4e0d\u7b26\u5408\u6e38\u620f\u7269\u7406\u7684\u8981\u6c42\u7684\u3002 \u6700\u540e\uff0c\u7ebf\u7a0b\u4f11\u7720\u7684\u65f6\u95f4\u7cbe\u5ea6\u4ec5\u4ec5\u53ea\u67090.1\u79d2\uff0c\u6240\u4ee5\u5373\u4f7f\u6211\u4eec\u7684\u66f4\u65b0\u548c\u6e32\u67d3\u65b9\u6cd5\u6ca1\u6709\u6d88\u8017\u65f6\u95f4\uff0c\u4e5f\u4e0d\u4f1a\u4ee5\u6052\u5b9a\u7684\u901f\u7387\u66f4\u65b0\u3002\u6240\u4ee5\uff0c\u5982\u4f60\u6240\u89c1\uff0c\u95ee\u9898\u6ca1\u90a3\u4e48\u7b80\u5355\u3002 \u5728\u7f51\u4e0a\u4f60\u53ef\u4ee5\u627e\u5230\u5927\u91cf\u7684\u6e38\u620f\u5faa\u73af\u7684\u53d8\u79cd\u3002\u5728\u672c\u4e66\u4e2d\uff0c\u6211\u4eec\u5c06\u7528\u4e00\u4e2a\u4e0d\u592a\u590d\u6742\u7684\uff0c\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u90fd\u80fd\u6b63\u5e38\u5de5\u4f5c\u7684\u65b9\u6cd5\u3002\u6211\u4eec\u5c06\u7528\u7684\u65b9\u6cd5\u901a\u5e38\u88ab\u79f0\u4e3a \u5b9a\u957f\u6e38\u620f\u5faa\u73af \uff08Fixed Step Game Loop\uff09\u3002 \u9996\u5148\uff0c\u6211\u4eec\u53ef\u80fd\u60f3\u8981\u5355\u72ec\u63a7\u5236\u6e38\u620f\u72b6\u6001\u88ab\u66f4\u65b0\u7684\u5468\u671f\u548c\u6e38\u620f\u88ab\u6e32\u67d3\u5230\u5c4f\u5e55\u7684\u5468\u671f\u3002\u4e3a\u4ec0\u4e48\u8981\u8fd9\u4e48\u505a\uff1f\u56e0\u4e3a\u4ee5\u6052\u5b9a\u7684\u901f\u7387\u66f4\u65b0\u6e38\u620f\u72b6\u6001\u66f4\u4e3a\u91cd\u8981\uff0c\u7279\u522b\u662f\u5982\u679c\u4f7f\u7528\u7269\u7406\u5f15\u64ce\u3002\u76f8\u53cd\uff0c\u5982\u679c\u6e32\u67d3\u6ca1\u6709\u53ca\u65f6\u5b8c\u6210\uff0c\u5728\u8fd0\u884c\u6e38\u620f\u5faa\u73af\u65f6\u6e32\u67d3\u65e7\u5e27\u4e5f\u662f\u6ca1\u6709\u610f\u4e49\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u7075\u6d3b\u5730\u8df3\u8fc7\u67d0\u4e9b\u5e27\u3002 \u8ba9\u6211\u4eec\u770b\u770b\u73b0\u5728\u7684\u6e38\u620f\u5faa\u73af\u662f\u4ec0\u4e48\u6837\u7684\uff1a double secsPerUpdate = 1.0d / 30.0d; double previous = getTime(); double steps = 0.0; while (true) { double loopStartTime = getTime(); double elapsed = loopStartTime - previous; previous = loopStartTime; steps += elapsed; handleInput(); while (steps >= secsPerUpdate) { updateGameState(); steps -= secsPerUpdate; } render(); sync(loopStartTime); } \u4f7f\u7528\u8fd9\u4e2a\u6e38\u620f\u5faa\u73af\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u56fa\u5b9a\u7684\u5468\u671f\u66f4\u65b0\u6e38\u620f\u72b6\u6001\u3002\u4f46\u662f\u5982\u4f55\u907f\u514d\u8017\u5c3d\u8ba1\u7b97\u673a\u8d44\u6e90\uff0c\u4f7f\u5b83\u4e0d\u8fde\u7eed\u6e32\u67d3\u5462\uff1f\u8fd9\u5728 sync \u65b9\u6cd5\u4e2d\u5b9e\u73b0\uff1a private void sync(double loopStartTime) { float loopSlot = 1f / 50; double endTime = loopStartTime + loopSlot; while(getTime() < endTime) { try { Thread.sleep(1); } catch (InterruptedException ie) {} } } \u90a3\u4e48\u4e0a\u8ff0\u65b9\u6cd5\u505a\u4e86\u4ec0\u4e48\u5462\uff1f\u7b80\u800c\u8a00\u4e4b\uff0c\u6211\u4eec\u8ba1\u7b97\u6e38\u620f\u5faa\u73af\u8fed\u4ee3\u5e94\u8be5\u6301\u7eed\u591a\u957f\u65f6\u95f4\uff08\u5b83\u88ab\u50a8\u5b58\u5728 loopSlot \u53d8\u91cf\u4e2d\uff09\uff0c\u4f11\u7720\u7684\u65f6\u95f4\u53d6\u51b3\u4e8e\u5728\u5faa\u73af\u4e2d\u82b1\u8d39\u7684\u65f6\u95f4\u3002\u4f46\u6211\u4eec\u4e0d\u505a\u4e00\u6574\u6bb5\u65f6\u95f4\u7684\u4f11\u7720\uff0c\u800c\u662f\u8fdb\u884c\u4e00\u4e9b\u5c0f\u7684\u4f11\u7720\u3002\u8fd9\u5141\u8bb8\u5176\u4ed6\u4efb\u52a1\u8fd0\u884c\uff0c\u5e76\u907f\u514d\u6b64\u524d\u63d0\u5230\u7684\u4f11\u7720\u51c6\u786e\u6027\u95ee\u9898\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u8981\u505a\u7684\u662f\uff1a 1. \u8ba1\u7b97\u5e94\u8be5\u9000\u51fa\u8fd9\u4e2a\u65b9\u6cd5\u7684\u65f6\u95f4\uff08\u8fd9\u4e2a\u53d8\u91cf\u540d\u4e3a endTime \uff09\uff0c\u5e76\u5f00\u59cb\u6e38\u620f\u5faa\u73af\u7684\u53e6\u4e00\u6b21\u8fed\u4ee3\u3002 2. \u6bd4\u8f83\u5f53\u524d\u65f6\u95f4\u548c\u7ed3\u675f\u65f6\u95f4\uff0c\u5982\u679c\u6ca1\u6709\u5230\u8fbe\u7ed3\u675f\u65f6\u95f4\uff0c\u5c31\u4f11\u77201\u6beb\u79d2\u3002 \u73b0\u5728\u662f\u6784\u5efa\u4ee3\u7801\u5e93\u4ee5\u4fbf\u5f00\u59cb\u7f16\u5199\u6e38\u620f\u5f15\u64ce\u7684\u7b2c\u4e00\u4e2a\u7248\u672c\u7684\u65f6\u5019\u4e86\u3002\u4f46\u5728\u6b64\u4e4b\u524d\uff0c\u6211\u4eec\u6765\u8ba8\u8bba\u4e00\u4e0b\u63a7\u5236\u6e32\u67d3\u901f\u7387\u7684\u53e6\u4e00\u79cd\u65b9\u6cd5\u3002\u5728\u4e0a\u8ff0\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u505a\u5fae\u4f11\u7720\u662f\u4e3a\u4e86\u63a7\u5236\u9700\u8981\u7b49\u5f85\u7684\u65f6\u95f4\u3002\u4f46\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u53e6\u4e00\u79cd\u65b9\u6cd5\u6765\u9650\u5236\u5e27\u7387\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 \u5782\u76f4\u540c\u6b65 \uff08Vertical Synchronization\uff09\uff0c\u5782\u76f4\u540c\u6b65\u7684\u4e3b\u8981\u76ee\u7684\u662f\u907f\u514d\u753b\u9762\u6495\u88c2\u3002\u4ec0\u4e48\u662f\u753b\u9762\u6495\u88c2\uff1f\u8fd9\u662f\u4e00\u79cd\u663e\u793a\u73b0\u8c61\uff0c\u5f53\u6b63\u5728\u6e32\u67d3\u65f6\uff0c\u6211\u4eec\u66f4\u65b0\u56fe\u50cf\u50a8\u5b58\u533a\uff0c\u5bfc\u81f4\u5c4f\u5e55\u7684\u4e00\u90e8\u5206\u663e\u793a\u5148\u524d\u7684\u56fe\u50cf\uff0c\u800c\u5c4f\u5e55\u7684\u53e6\u4e00\u90e8\u5206\u663e\u793a\u6b63\u5728\u6e32\u67d3\u7684\u56fe\u50cf\u3002\u5982\u679c\u542f\u7528\u5782\u76f4\u540c\u6b65\uff0c\u5f53GPU\u4e2d\u7684\u6570\u636e\u6b63\u88ab\u6e32\u67d3\u5230\u5c4f\u5e55\u4e0a\u65f6\uff0c\u6211\u4eec\u4e0d\u4f1a\u5411GPU\u53d1\u9001\u6570\u636e\u3002 \u5f53\u5f00\u542f\u5782\u76f4\u540c\u6b65\u65f6\uff0c\u6211\u4eec\u5c06\u4e0e\u663e\u5361\u7684\u5237\u65b0\u7387\u540c\u6b65\uff0c\u663e\u5361\u5c06\u4ee5\u6052\u5b9a\u7684\u5e27\u7387\u6e32\u67d3\u3002\u7528\u4e0b\u8ff0\u4e00\u884c\u4ee3\u7801\u542f\u7528\u5b83\uff1a glfwSwapInterval(1); \u6709\u4e86\u4e0a\u8ff0\u4ee3\u7801\uff0c\u5c31\u610f\u5473\u7740\u81f3\u5c11\u5728\u4e00\u4e2a\u5c4f\u5e55\u66f4\u65b0\u88ab\u7ed8\u5236\u5230\u5c4f\u5e55\u4e4b\u524d\uff0c\u6211\u4eec\u5fc5\u987b\u7b49\u5f85\u3002\u4e8b\u5b9e\u4e0a\u6211\u4eec\u4e0d\u662f\u76f4\u63a5\u7ed8\u5236\u5230\u5c4f\u5e55\u4e0a\u3002\u76f8\u53cd\uff0c\u6211\u4eec\u5c06\u6570\u636e\u50a8\u5b58\u5728\u7f13\u51b2\u533a\u4e2d\uff0c\u7136\u540e\u7528\u4e0b\u9762\u7684\u65b9\u6cd5\u4ea4\u6362\u5b83\uff1a glfwSwapBuffers(windowHandle); \u56e0\u6b64\uff0c\u5982\u679c\u542f\u7528\u5782\u76f4\u540c\u6b65\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5b9e\u73b0\u7a33\u5b9a\u7684\u5e27\u7387\uff0c\u800c\u4e0d\u9700\u8981\u8fdb\u884c\u5fae\u4f11\u7720\u6765\u68c0\u67e5\u66f4\u65b0\u65f6\u95f4\u3002\u6b64\u5916\uff0c\u5e27\u7387\u5c06\u4e0e\u8bbe\u5907\u7684\u663e\u5361\u5237\u65b0\u7387\u76f8\u5339\u914d\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u5b83\u8bbe\u5b9a\u4e3a60Hz\uff0860FPS\uff09\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u670960FPS\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5728 glfwSwapInterval \u65b9\u6cd5\u4e2d\u8bbe\u7f6e\u9ad8\u4e8e1\u7684\u6570\u5b57\u6765\u964d\u4f4e\u8fd9\u4e2a\u901f\u7387\uff08\u5982\u679c\u8bbe\u7f6e\u4e3a2\uff0c\u5c06\u5f97\u523030FPS\uff09\u3002 \u8ba9\u6211\u4eec\u6574\u7406\u4e00\u4e0b\u6e90\u4ee3\u7801\u3002\u9996\u5148\uff0c\u6211\u4eec\u5c06\u628a\u6240\u6709\u7684GLFW\u7a97\u53e3\u521d\u59cb\u5316\u4ee3\u7801\u5c01\u88c5\u5728\u4e00\u4e2a\u540d\u4e3a Window \u7684\u7c7b\u4e2d\uff0c\u4f20\u9012\u4e00\u4e9b\u57fa\u672c\u7684\u53c2\u6570\uff08\u5982\u6807\u9898\u548c\u5927\u5c0f\uff09\u3002 Window \u7c7b\u8fd8\u63d0\u4f9b\u4e00\u4e2a\u65b9\u6cd5\u4ee5\u4fbf\u5728\u6e38\u620f\u5faa\u73af\u4e2d\u68c0\u6d4b\u6309\u4e0b\u7684\u6309\u952e\uff1a public boolean isKeyPressed(int keyCode) { return glfwGetKey(windowHandle, keyCode) == GLFW_PRESS; } \u9664\u4e86\u6709\u521d\u59cb\u5316\u4ee3\u7801\u4ee5\u5916\uff0c Window \u7c7b\u8fd8\u9700\u8981\u77e5\u9053\u7a97\u53e3\u5927\u5c0f\u88ab\u8c03\u6574\u3002\u56e0\u6b64\u9700\u8981\u8bbe\u7f6e\u4e00\u4e2a\u56de\u8c03\u65b9\u6cd5\uff0c\u5728\u7a97\u53e3\u5927\u5c0f\u88ab\u8c03\u6574\u65f6\u8c03\u7528\u5b83\u3002\u56de\u8c03\u65b9\u6cd5\u5c06\u63a5\u6536\u5e27\u7f13\u51b2\u533a\uff08\u6e32\u67d3\u533a\u57df\uff0c\u7b80\u5355\u6765\u8bf4\u5c31\u662f\u663e\u793a\u533a\u57df\uff09\u7684\u4ee5\u50cf\u7d20\u4e3a\u5355\u4f4d\u7684\u5bbd\u5ea6\u548c\u9ad8\u5ea6\u3002\u5982\u679c\u5e0c\u671b\u5f97\u5230\u5e27\u7f13\u51b2\u533a\u7684\u5bbd\u5ea6\u548c\u9ad8\u5ea6\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 glfwSetWindowSizeCallback \u65b9\u6cd5\u3002\u5c4f\u5e55\u5750\u6807\u4e0d\u4e00\u5b9a\u5bf9\u5e94\u50cf\u7d20\uff08\u4f8b\u5982\uff0c\u5177\u6709\u89c6\u7f51\u819c\u663e\u793a\u5c4f\uff08Retina Display\uff09\u7684Mac\u8bbe\u5907\uff09\u3002\u56e0\u4e3a\u6211\u4eec\u5c06\u5728\u8fdb\u884cOpenGL\u8c03\u7528\u65f6\u4f7f\u7528\u8fd9\u4e9b\u4fe1\u606f\uff0c\u6240\u4ee5\u8981\u6ce8\u610f\u50cf\u7d20\u4e0d\u5728\u5c4f\u5e55\u5750\u6807\u4e2d\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7GLFW\u7684\u6587\u6863\u4e86\u89e3\u66f4\u591a\u4fe1\u606f\u3002 // \u8bbe\u7f6e\u8c03\u6574\u5927\u5c0f\u56de\u8c03 glfwSetFramebufferSizeCallback(windowHandle, (window, width, height) -> { Window.this.width = width; Window.this.height = height; Window.this.setResized(true); }); \u6211\u4eec\u8fd8\u5c06\u521b\u5efa\u4e00\u4e2a Renderer \u7c7b\uff0c\u5b83\u5c06\u5904\u7406\u6211\u4eec\u6e38\u620f\u7684\u6e32\u67d3\u3002\u73b0\u5728\uff0c\u5b83\u4ec5\u4f1a\u6709\u4e00\u4e2a\u7a7a\u7684 init \u65b9\u6cd5\uff0c\u548c\u53e6\u4e00\u4e2a\u7528\u9884\u8bbe\u989c\u8272\u6e05\u7a7a\u5c4f\u5e55\u7684\u65b9\u6cd5\uff1a public void init() throws Exception { } public void clear() { glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT); } \u7136\u540e\u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a IGameLogic \u7684\u63a5\u53e3\uff0c\u5b83\u5c01\u88c5\u4e86\u6211\u4eec\u7684\u6e38\u620f\u903b\u8f91\u3002\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u8ba9\u6e38\u620f\u5f15\u64ce\u5728\u4e0d\u540c\u7684\u6e38\u620f\u4e0a\u91cd\u590d\u4f7f\u7528\u3002\u8be5\u63a5\u53e3\u5c06\u5177\u6709\u83b7\u53d6\u8f93\u5165\u3001\u66f4\u65b0\u6e38\u620f\u72b6\u6001\u548c\u6e32\u67d3\u6e38\u620f\u5185\u5bb9\u7684\u65b9\u6cd5\u3002 public interface IGameLogic { void init() throws Exception; void input(Window window); void update(float interval); void render(Window window); } \u7136\u540e\u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a GameEngine \u7684\u7c7b\uff0c\u5b83\u5c06\u5305\u542b\u6211\u4eec\u6e38\u620f\u5faa\u73af\u7684\u4ee3\u7801\uff0c\u8be5\u7c7b\u5c06\u5b9e\u73b0\u50a8\u5b58\u6e38\u620f\u5faa\u73af\uff1a public class GameEngine implements Runnable { //... public GameEngine(String windowTitle, int width, int height, boolean vSync, IGameLogic gameLogic) throws Exception { window = new Window(windowTitle, width, height, vSync); this.gameLogic = gameLogic; //... } vSync \u53c2\u6570\u5141\u8bb8\u6211\u4eec\u9009\u62e9\u662f\u5426\u542f\u7528\u5782\u76f4\u540c\u6b65\u3002\u4f60\u53ef\u4ee5\u770b\u5230\u6211\u4eec\u5b9e\u73b0\u4e86 GameEngine \u7c7b\u7684 run \u65b9\u6cd5\uff0c\u5176\u4e2d\u5305\u62ec\u6e38\u620f\u5faa\u73af\uff1a @Override public void run() { try { init(); gameLoop(); } catch (Exception excp) { excp.printStackTrace(); } } GameEngine \u7c7b\u63d0\u4f9b\u4e86\u4e00\u4e2a run \u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u5c06\u6267\u884c\u521d\u59cb\u5316\u4efb\u52a1\uff0c\u5e76\u8fd0\u884c\u6e38\u620f\u5faa\u73af\uff0c\u76f4\u5230\u6211\u4eec\u5173\u95ed\u7a97\u53e3\u3002\u5173\u4e8e\u7ebf\u7a0b\u9700\u8981\u6ce8\u610f\u7684\u4e00\u70b9\u662f\uff0cGLFW\u9700\u8981\u4ece\u4e3b\u7ebf\u7a0b\u521d\u59cb\u5316\uff0c\u4e8b\u4ef6\u7684\u8f6e\u8be2\u4e5f\u5e94\u8be5\u5728\u8be5\u7ebf\u7a0b\u4e2d\u5b8c\u6210\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u5c06\u5728\u4e3b\u7ebf\u7a0b\u4e2d\u6267\u884c\u6240\u6709\u5185\u5bb9\uff0c\u800c\u4e0d\u662f\u4e3a\u6e38\u620f\u5faa\u73af\u521b\u5efa\u5355\u72ec\u7684\u7ebf\u7a0b\u3002 \u5728\u6e90\u4ee3\u7801\u4e2d\uff0c\u4f60\u5c06\u770b\u5230\u6211\u4eec\u521b\u5efa\u4e86\u5176\u4ed6\u8f85\u52a9\u7c7b\uff0c\u4f8b\u5982 Timer \uff08\u5b83\u5c06\u63d0\u4f9b\u7528\u4e8e\u8ba1\u7b97\u5df2\u7ecf\u8fc7\u7684\u65f6\u95f4\u7684\u5b9e\u7528\u65b9\u6cd5\uff09\uff0c\u5e76\u5728\u6e38\u620f\u5faa\u73af\u903b\u8f91\u4e2d\u4f7f\u7528\u5b83\u4eec\u3002 GameEngine \u7c7b\u53ea\u662f\u5c06 input \u548c update \u65b9\u6cd5\u59d4\u6258\u7ed9 IGameLogic \u5b9e\u4f8b\u3002\u5728 render \u65b9\u6cd5\u4e2d\uff0c\u5b83\u4e5f\u59d4\u6258\u7ed9 IGameLogic \u5b9e\u4f8b\u5e76\u66f4\u65b0\u7a97\u53e3\u3002 protected void input() { gameLogic.input(window); } protected void update(float interval) { gameLogic.update(interval); } protected void render() { gameLogic.render(window); window.update(); } \u5728\u7a0b\u5e8f\u7684\u5165\u53e3\uff0c\u542b\u6709 main \u65b9\u6cd5\u7684\u7c7b\u53ea\u4f1a\u521b\u5efa\u4e00\u4e2a GameEngine \u5b9e\u4f8b\u5e76\u8fd0\u884c\u5b83\u3002 public class Main { public static void main(String[] args) { try { boolean vSync = true; IGameLogic gameLogic = new DummyGame(); GameEngine gameEng = new GameEngine(\"GAME\", 600, 480, vSync, gameLogic); gameEng.run(); } catch (Exception excp) { excp.printStackTrace(); System.exit(-1); } } } \u6700\u540e\uff0c\u5728\u672c\u7ae0\u4e2d\u6211\u4eec\u53ea\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u7b80\u5355\u7684\u6e38\u620f\u903b\u8f91\u7c7b\u3002\u5b83\u53ea\u4f1a\u5728\u6309\u4e0b\u4e0a\u6216\u4e0b\u952e\u65f6\uff0c\u53d8\u4eae\u6216\u53d8\u6697\u7a97\u53e3\u7684\u989c\u8272\u7f13\u51b2\u533a\u7684\u6e05\u7a7a\u989c\u8272\uff0c render \u65b9\u6cd5\u5c06\u4f1a\u7528\u8fd9\u4e2a\u989c\u8272\u6e05\u7a7a\u7a97\u53e3\u7684\u989c\u8272\u7f13\u51b2\u533a\u3002 public class DummyGame implements IGameLogic { private int direction = 0; private float color = 0.0f; private final Renderer renderer; public DummyGame() { renderer = new Renderer(); } @Override public void init() throws Exception { renderer.init(); } @Override public void input(Window window) { if (window.isKeyPressed(GLFW_KEY_UP)) { direction = 1; } else if (window.isKeyPressed(GLFW_KEY_DOWN)) { direction = -1; } else { direction = 0; } } @Override public void update(float interval) { color += direction * 0.01f; if (color > 1) { color = 1.0f; } else if ( color < 0 ) { color = 0.0f; } } @Override public void render(Window window) { if (window.isResized()) { glViewport(0, 0, window.getWidth(), window.getHeight()); window.setResized(false); } window.setClearColor(color, color, color, 0.0f); renderer.clear(); } } \u5728 render \u65b9\u6cd5\u4e2d\uff0c\u5f53\u7a97\u53e3\u5927\u5c0f\u88ab\u8c03\u6574\u65f6\uff0c\u6211\u4eec\u63a5\u6536\u901a\u77e5\uff0c\u4ee5\u4fbf\u66f4\u65b0\u89c6\u53e3\u5c06\u5750\u6807\u4e2d\u5fc3\u5b9a\u4f4d\u5230\u7a97\u53e3\u7684\u4e2d\u5fc3\u3002 \u521b\u5efa\u7684\u7c7b\u5c42\u6b21\u7ed3\u6784\u5c06\u5e2e\u52a9\u6211\u4eec\u5c06\u6e38\u620f\u5f15\u64ce\u4ee3\u7801\u4e0e\u5177\u4f53\u7684\u6e38\u620f\u4ee3\u7801\u5206\u5f00\u3002\u867d\u7136\u73b0\u5728\u53ef\u80fd\u770b\u8d77\u6765\u6ca1\u6709\u5fc5\u8981\uff0c\u4f46\u6211\u4eec\u5df2\u5c06\u6bcf\u4e2a\u6e38\u620f\u7684\u901a\u7528\u4ee3\u7801\uff0c\u4ece\u5177\u4f53\u7684\u6e38\u620f\u7684\u903b\u8f91\u3001\u7f8e\u672f\u4f5c\u54c1\u548c\u8d44\u6e90\u4e2d\u5206\u79bb\u51fa\u6765\uff0c\u4ee5\u4fbf\u91cd\u7528\u6e38\u620f\u5f15\u64ce\u3002\u5728\u6b64\u540e\u7684\u7ae0\u8282\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u91cd\u6784\u8fd9\u4e2a\u7c7b\u5c42\u6b21\u7ed3\u6784\uff0c\u56e0\u4e3a\u6211\u4eec\u7684\u6e38\u620f\u5f15\u64ce\u53d8\u5f97\u66f4\u52a0\u590d\u6742\u3002 \u5e73\u53f0\u5dee\u5f02\uff08OSX\uff09 \u4f60\u53ef\u4ee5\u8fd0\u884c\u4e0a\u9762\u7684\u4ee3\u7801\u5728Windows\u6216Linux\u4e0a\uff0c\u4f46\u6211\u4eec\u4ecd\u9700\u8981\u4e3aOS X\u5e73\u53f0\u505a\u4e00\u4e9b\u4fee\u6539\u3002\u6b63\u5982GLFW\u6587\u6863\u4e2d\u6240\u63cf\u8ff0\u7684\uff1a \u76ee\u524dOS X\u4ec5\u652f\u6301\u7684OpenGL 3.x\u548c4.x\u7248\u672c\u7684\u73af\u5883\u662f\u5411\u4e0a\u517c\u5bb9\u7684\u3002OS X 10.7 Lion\u652f\u6301OpenGL 3.2\u7248\u672c\u548cOS X 10.9 Mavericks\u652f\u6301OpenGL 3.3\u548c4.1\u7248\u672c\u3002\u5728\u4efb\u4f55\u60c5\u51b5\u4e0b\uff0c\u4f60\u7684GPU\u9700\u8981\u652f\u6301\u6307\u5b9a\u7248\u672c\u7684OpenGL\uff0c\u4ee5\u6210\u529f\u521b\u5efa\u73af\u5883\u3002 \u56e0\u6b64\uff0c\u4e3a\u4e86\u652f\u6301\u5728\u6b64\u540e\u7ae0\u8282\u4e2d\u4ecb\u7ecd\u7684\u7279\u6027\uff0c\u6211\u4eec\u9700\u8981\u5c06\u4e0b\u8ff0\u4ee3\u7801\u6dfb\u52a0\u5230 Window \u7c7b\u521b\u5efa\u7a97\u53e3\u4ee3\u7801\u4e4b\u524d\uff1a glfwWindowHint(GLFW_CONTEXT_VERSION_MAJOR, 3); glfwWindowHint(GLFW_CONTEXT_VERSION_MINOR, 2); glfwWindowHint(GLFW_OPENGL_PROFILE, GLFW_OPENGL_CORE_PROFILE); glfwWindowHint(GLFW_OPENGL_FORWARD_COMPAT, GL_TRUE); \u8fd9\u5c06\u4f7f\u7a0b\u5e8f\u4f7f\u7528OpenGL 3.2\u52304.1\u4e4b\u95f4\u7684\u6700\u9ad8\u7248\u672c\u3002\u5982\u679c\u6ca1\u6709\u4e0a\u8ff0\u4ee3\u7801\uff0c\u5c31\u4f1a\u4f7f\u7528\u65e7\u7248\u672c\u7684OpenGL\u3002","title":"\u6e38\u620f\u5faa\u73af"},{"location":"02-the-game-loop/#the-game-loop","text":"\u5728\u672c\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u901a\u8fc7\u521b\u5efa\u6e38\u620f\u5faa\u73af\u6765\u5f00\u59cb\u5f00\u53d1\u6e38\u620f\u5f15\u64ce\u3002\u6e38\u620f\u5faa\u73af\u662f\u6bcf\u4e2a\u6e38\u620f\u7684\u6838\u5fc3\u90e8\u5206\uff0c\u5b83\u57fa\u672c\u4e0a\u662f\u4e00\u4e2a\u65e0\u4f11\u6b62\u7684\u5faa\u73af\uff0c\u8d1f\u8d23\u5468\u671f\u5730\u5904\u7406\u7528\u6237\u7684\u8f93\u5165\u3001\u66f4\u65b0\u6e38\u620f\u72b6\u6001\u548c\u6e32\u67d3\u56fe\u50cf\u5230\u5c4f\u5e55\u4e0a\u3002 \u4e0b\u8ff0\u4ee3\u7801\u7247\u6bb5\u5c55\u793a\u4e86\u6e38\u620f\u5faa\u73af\u7684\u7ed3\u6784\uff1a while (keepOnRunning) { handleInput(); updateGameState(); render(); } \u90a3\u4e48\uff0c\u8fd9\u5c31\u5b8c\u4e86\u5417\uff1f\u6211\u4eec\u5df2\u7ecf\u5b8c\u6210\u6e38\u620f\u5faa\u73af\u4e86\u5417\uff1f\u663e\u7136\u8fd8\u6ca1\u6709\uff0c\u4e0a\u8ff0\u4ee3\u7801\u4e2d\u6709\u5f88\u591a\u7f3a\u9677\u3002\u9996\u5148\uff0c\u6e38\u620f\u5faa\u73af\u8fd0\u884c\u7684\u901f\u5ea6\u5c06\u53d6\u51b3\u4e8e\u8fd0\u884c\u5b83\u7684\u8ba1\u7b97\u673a\u3002\u5982\u679c\u8ba1\u7b97\u673a\u8db3\u591f\u5feb\uff0c\u7528\u6237\u751a\u81f3\u770b\u4e0d\u5230\u6e38\u620f\u4e2d\u53d1\u751f\u4e86\u4ec0\u4e48\u3002\u6b64\u5916\uff0c\u8fd9\u4e2a\u6e38\u620f\u5faa\u73af\u5c06\u6d88\u8017\u6240\u6709\u7684\u8ba1\u7b97\u673a\u8d44\u6e90\u3002 \u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u6e38\u620f\u5faa\u73af\u72ec\u7acb\u4e8e\u8fd0\u884c\u7684\u8ba1\u7b97\u673a\uff0c\u5c1d\u8bd5\u4ee5\u6052\u5b9a\u901f\u7387\u8fd0\u884c\u3002\u5047\u8bbe\u6211\u4eec\u5e0c\u671b\u6e38\u620f\u4ee5\u6bcf\u79d250\u5e27\uff0850 Frames Per Second\uff0c50 FPS\uff09\u7684\u6052\u5b9a\u901f\u7387\u8fd0\u884c\uff0c\u90a3\u4e48\u6e38\u620f\u5faa\u73af\u4ee3\u7801\u53ef\u80fd\u662f\u8fd9\u6837\u7684\uff1a double secsPerFrame = 1.0d / 50.0d; while (keepOnRunning) { double now = getTime(); handleInput(); updateGameState(); render(); sleep(now + secsPerFrame \u2013 getTime()); } \u8fd9\u4e2a\u6e38\u620f\u5faa\u73af\u5f88\u7b80\u5355\uff0c\u53ef\u4ee5\u7528\u4e8e\u4e00\u4e9b\u6e38\u620f\uff0c\u4f46\u662f\u5b83\u4e5f\u5b58\u5728\u4e00\u4e9b\u7f3a\u9677\u3002\u9996\u5148\uff0c\u5b83\u5047\u5b9a\u6211\u4eec\u7684\u66f4\u65b0\u548c\u6e32\u67d3\u65b9\u6cd5\u9002\u5408\u4ee550FPS\uff08\u5373 secsPerFrame \u7b49\u4e8e20\u6beb\u79d2\uff09\u7684\u901f\u7387\u66f4\u65b0\u3002 \u6b64\u5916\uff0c\u6211\u4eec\u7684\u8ba1\u7b97\u673a\u53ef\u80fd\u4f1a\u4f18\u5148\u8003\u8651\u6682\u505c\u6e38\u620f\u5faa\u73af\u8fd0\u884c\u4e00\u6bb5\u65f6\u95f4\uff0c\u4ee5\u8fd0\u884c\u5176\u4ed6\u7684\u4efb\u52a1\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u80fd\u4f1a\u5728\u975e\u5e38\u4e0d\u7a33\u5b9a\u7684\u65f6\u95f4\u5468\u671f\u66f4\u65b0\u6e38\u620f\u72b6\u6001\uff0c\u8fd9\u662f\u4e0d\u7b26\u5408\u6e38\u620f\u7269\u7406\u7684\u8981\u6c42\u7684\u3002 \u6700\u540e\uff0c\u7ebf\u7a0b\u4f11\u7720\u7684\u65f6\u95f4\u7cbe\u5ea6\u4ec5\u4ec5\u53ea\u67090.1\u79d2\uff0c\u6240\u4ee5\u5373\u4f7f\u6211\u4eec\u7684\u66f4\u65b0\u548c\u6e32\u67d3\u65b9\u6cd5\u6ca1\u6709\u6d88\u8017\u65f6\u95f4\uff0c\u4e5f\u4e0d\u4f1a\u4ee5\u6052\u5b9a\u7684\u901f\u7387\u66f4\u65b0\u3002\u6240\u4ee5\uff0c\u5982\u4f60\u6240\u89c1\uff0c\u95ee\u9898\u6ca1\u90a3\u4e48\u7b80\u5355\u3002 \u5728\u7f51\u4e0a\u4f60\u53ef\u4ee5\u627e\u5230\u5927\u91cf\u7684\u6e38\u620f\u5faa\u73af\u7684\u53d8\u79cd\u3002\u5728\u672c\u4e66\u4e2d\uff0c\u6211\u4eec\u5c06\u7528\u4e00\u4e2a\u4e0d\u592a\u590d\u6742\u7684\uff0c\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u90fd\u80fd\u6b63\u5e38\u5de5\u4f5c\u7684\u65b9\u6cd5\u3002\u6211\u4eec\u5c06\u7528\u7684\u65b9\u6cd5\u901a\u5e38\u88ab\u79f0\u4e3a \u5b9a\u957f\u6e38\u620f\u5faa\u73af \uff08Fixed Step Game Loop\uff09\u3002 \u9996\u5148\uff0c\u6211\u4eec\u53ef\u80fd\u60f3\u8981\u5355\u72ec\u63a7\u5236\u6e38\u620f\u72b6\u6001\u88ab\u66f4\u65b0\u7684\u5468\u671f\u548c\u6e38\u620f\u88ab\u6e32\u67d3\u5230\u5c4f\u5e55\u7684\u5468\u671f\u3002\u4e3a\u4ec0\u4e48\u8981\u8fd9\u4e48\u505a\uff1f\u56e0\u4e3a\u4ee5\u6052\u5b9a\u7684\u901f\u7387\u66f4\u65b0\u6e38\u620f\u72b6\u6001\u66f4\u4e3a\u91cd\u8981\uff0c\u7279\u522b\u662f\u5982\u679c\u4f7f\u7528\u7269\u7406\u5f15\u64ce\u3002\u76f8\u53cd\uff0c\u5982\u679c\u6e32\u67d3\u6ca1\u6709\u53ca\u65f6\u5b8c\u6210\uff0c\u5728\u8fd0\u884c\u6e38\u620f\u5faa\u73af\u65f6\u6e32\u67d3\u65e7\u5e27\u4e5f\u662f\u6ca1\u6709\u610f\u4e49\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u7075\u6d3b\u5730\u8df3\u8fc7\u67d0\u4e9b\u5e27\u3002 \u8ba9\u6211\u4eec\u770b\u770b\u73b0\u5728\u7684\u6e38\u620f\u5faa\u73af\u662f\u4ec0\u4e48\u6837\u7684\uff1a double secsPerUpdate = 1.0d / 30.0d; double previous = getTime(); double steps = 0.0; while (true) { double loopStartTime = getTime(); double elapsed = loopStartTime - previous; previous = loopStartTime; steps += elapsed; handleInput(); while (steps >= secsPerUpdate) { updateGameState(); steps -= secsPerUpdate; } render(); sync(loopStartTime); } \u4f7f\u7528\u8fd9\u4e2a\u6e38\u620f\u5faa\u73af\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u56fa\u5b9a\u7684\u5468\u671f\u66f4\u65b0\u6e38\u620f\u72b6\u6001\u3002\u4f46\u662f\u5982\u4f55\u907f\u514d\u8017\u5c3d\u8ba1\u7b97\u673a\u8d44\u6e90\uff0c\u4f7f\u5b83\u4e0d\u8fde\u7eed\u6e32\u67d3\u5462\uff1f\u8fd9\u5728 sync \u65b9\u6cd5\u4e2d\u5b9e\u73b0\uff1a private void sync(double loopStartTime) { float loopSlot = 1f / 50; double endTime = loopStartTime + loopSlot; while(getTime() < endTime) { try { Thread.sleep(1); } catch (InterruptedException ie) {} } } \u90a3\u4e48\u4e0a\u8ff0\u65b9\u6cd5\u505a\u4e86\u4ec0\u4e48\u5462\uff1f\u7b80\u800c\u8a00\u4e4b\uff0c\u6211\u4eec\u8ba1\u7b97\u6e38\u620f\u5faa\u73af\u8fed\u4ee3\u5e94\u8be5\u6301\u7eed\u591a\u957f\u65f6\u95f4\uff08\u5b83\u88ab\u50a8\u5b58\u5728 loopSlot \u53d8\u91cf\u4e2d\uff09\uff0c\u4f11\u7720\u7684\u65f6\u95f4\u53d6\u51b3\u4e8e\u5728\u5faa\u73af\u4e2d\u82b1\u8d39\u7684\u65f6\u95f4\u3002\u4f46\u6211\u4eec\u4e0d\u505a\u4e00\u6574\u6bb5\u65f6\u95f4\u7684\u4f11\u7720\uff0c\u800c\u662f\u8fdb\u884c\u4e00\u4e9b\u5c0f\u7684\u4f11\u7720\u3002\u8fd9\u5141\u8bb8\u5176\u4ed6\u4efb\u52a1\u8fd0\u884c\uff0c\u5e76\u907f\u514d\u6b64\u524d\u63d0\u5230\u7684\u4f11\u7720\u51c6\u786e\u6027\u95ee\u9898\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u8981\u505a\u7684\u662f\uff1a 1. \u8ba1\u7b97\u5e94\u8be5\u9000\u51fa\u8fd9\u4e2a\u65b9\u6cd5\u7684\u65f6\u95f4\uff08\u8fd9\u4e2a\u53d8\u91cf\u540d\u4e3a endTime \uff09\uff0c\u5e76\u5f00\u59cb\u6e38\u620f\u5faa\u73af\u7684\u53e6\u4e00\u6b21\u8fed\u4ee3\u3002 2. \u6bd4\u8f83\u5f53\u524d\u65f6\u95f4\u548c\u7ed3\u675f\u65f6\u95f4\uff0c\u5982\u679c\u6ca1\u6709\u5230\u8fbe\u7ed3\u675f\u65f6\u95f4\uff0c\u5c31\u4f11\u77201\u6beb\u79d2\u3002 \u73b0\u5728\u662f\u6784\u5efa\u4ee3\u7801\u5e93\u4ee5\u4fbf\u5f00\u59cb\u7f16\u5199\u6e38\u620f\u5f15\u64ce\u7684\u7b2c\u4e00\u4e2a\u7248\u672c\u7684\u65f6\u5019\u4e86\u3002\u4f46\u5728\u6b64\u4e4b\u524d\uff0c\u6211\u4eec\u6765\u8ba8\u8bba\u4e00\u4e0b\u63a7\u5236\u6e32\u67d3\u901f\u7387\u7684\u53e6\u4e00\u79cd\u65b9\u6cd5\u3002\u5728\u4e0a\u8ff0\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u505a\u5fae\u4f11\u7720\u662f\u4e3a\u4e86\u63a7\u5236\u9700\u8981\u7b49\u5f85\u7684\u65f6\u95f4\u3002\u4f46\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u53e6\u4e00\u79cd\u65b9\u6cd5\u6765\u9650\u5236\u5e27\u7387\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 \u5782\u76f4\u540c\u6b65 \uff08Vertical Synchronization\uff09\uff0c\u5782\u76f4\u540c\u6b65\u7684\u4e3b\u8981\u76ee\u7684\u662f\u907f\u514d\u753b\u9762\u6495\u88c2\u3002\u4ec0\u4e48\u662f\u753b\u9762\u6495\u88c2\uff1f\u8fd9\u662f\u4e00\u79cd\u663e\u793a\u73b0\u8c61\uff0c\u5f53\u6b63\u5728\u6e32\u67d3\u65f6\uff0c\u6211\u4eec\u66f4\u65b0\u56fe\u50cf\u50a8\u5b58\u533a\uff0c\u5bfc\u81f4\u5c4f\u5e55\u7684\u4e00\u90e8\u5206\u663e\u793a\u5148\u524d\u7684\u56fe\u50cf\uff0c\u800c\u5c4f\u5e55\u7684\u53e6\u4e00\u90e8\u5206\u663e\u793a\u6b63\u5728\u6e32\u67d3\u7684\u56fe\u50cf\u3002\u5982\u679c\u542f\u7528\u5782\u76f4\u540c\u6b65\uff0c\u5f53GPU\u4e2d\u7684\u6570\u636e\u6b63\u88ab\u6e32\u67d3\u5230\u5c4f\u5e55\u4e0a\u65f6\uff0c\u6211\u4eec\u4e0d\u4f1a\u5411GPU\u53d1\u9001\u6570\u636e\u3002 \u5f53\u5f00\u542f\u5782\u76f4\u540c\u6b65\u65f6\uff0c\u6211\u4eec\u5c06\u4e0e\u663e\u5361\u7684\u5237\u65b0\u7387\u540c\u6b65\uff0c\u663e\u5361\u5c06\u4ee5\u6052\u5b9a\u7684\u5e27\u7387\u6e32\u67d3\u3002\u7528\u4e0b\u8ff0\u4e00\u884c\u4ee3\u7801\u542f\u7528\u5b83\uff1a glfwSwapInterval(1); \u6709\u4e86\u4e0a\u8ff0\u4ee3\u7801\uff0c\u5c31\u610f\u5473\u7740\u81f3\u5c11\u5728\u4e00\u4e2a\u5c4f\u5e55\u66f4\u65b0\u88ab\u7ed8\u5236\u5230\u5c4f\u5e55\u4e4b\u524d\uff0c\u6211\u4eec\u5fc5\u987b\u7b49\u5f85\u3002\u4e8b\u5b9e\u4e0a\u6211\u4eec\u4e0d\u662f\u76f4\u63a5\u7ed8\u5236\u5230\u5c4f\u5e55\u4e0a\u3002\u76f8\u53cd\uff0c\u6211\u4eec\u5c06\u6570\u636e\u50a8\u5b58\u5728\u7f13\u51b2\u533a\u4e2d\uff0c\u7136\u540e\u7528\u4e0b\u9762\u7684\u65b9\u6cd5\u4ea4\u6362\u5b83\uff1a glfwSwapBuffers(windowHandle); \u56e0\u6b64\uff0c\u5982\u679c\u542f\u7528\u5782\u76f4\u540c\u6b65\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5b9e\u73b0\u7a33\u5b9a\u7684\u5e27\u7387\uff0c\u800c\u4e0d\u9700\u8981\u8fdb\u884c\u5fae\u4f11\u7720\u6765\u68c0\u67e5\u66f4\u65b0\u65f6\u95f4\u3002\u6b64\u5916\uff0c\u5e27\u7387\u5c06\u4e0e\u8bbe\u5907\u7684\u663e\u5361\u5237\u65b0\u7387\u76f8\u5339\u914d\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u5b83\u8bbe\u5b9a\u4e3a60Hz\uff0860FPS\uff09\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u670960FPS\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5728 glfwSwapInterval \u65b9\u6cd5\u4e2d\u8bbe\u7f6e\u9ad8\u4e8e1\u7684\u6570\u5b57\u6765\u964d\u4f4e\u8fd9\u4e2a\u901f\u7387\uff08\u5982\u679c\u8bbe\u7f6e\u4e3a2\uff0c\u5c06\u5f97\u523030FPS\uff09\u3002 \u8ba9\u6211\u4eec\u6574\u7406\u4e00\u4e0b\u6e90\u4ee3\u7801\u3002\u9996\u5148\uff0c\u6211\u4eec\u5c06\u628a\u6240\u6709\u7684GLFW\u7a97\u53e3\u521d\u59cb\u5316\u4ee3\u7801\u5c01\u88c5\u5728\u4e00\u4e2a\u540d\u4e3a Window \u7684\u7c7b\u4e2d\uff0c\u4f20\u9012\u4e00\u4e9b\u57fa\u672c\u7684\u53c2\u6570\uff08\u5982\u6807\u9898\u548c\u5927\u5c0f\uff09\u3002 Window \u7c7b\u8fd8\u63d0\u4f9b\u4e00\u4e2a\u65b9\u6cd5\u4ee5\u4fbf\u5728\u6e38\u620f\u5faa\u73af\u4e2d\u68c0\u6d4b\u6309\u4e0b\u7684\u6309\u952e\uff1a public boolean isKeyPressed(int keyCode) { return glfwGetKey(windowHandle, keyCode) == GLFW_PRESS; } \u9664\u4e86\u6709\u521d\u59cb\u5316\u4ee3\u7801\u4ee5\u5916\uff0c Window \u7c7b\u8fd8\u9700\u8981\u77e5\u9053\u7a97\u53e3\u5927\u5c0f\u88ab\u8c03\u6574\u3002\u56e0\u6b64\u9700\u8981\u8bbe\u7f6e\u4e00\u4e2a\u56de\u8c03\u65b9\u6cd5\uff0c\u5728\u7a97\u53e3\u5927\u5c0f\u88ab\u8c03\u6574\u65f6\u8c03\u7528\u5b83\u3002\u56de\u8c03\u65b9\u6cd5\u5c06\u63a5\u6536\u5e27\u7f13\u51b2\u533a\uff08\u6e32\u67d3\u533a\u57df\uff0c\u7b80\u5355\u6765\u8bf4\u5c31\u662f\u663e\u793a\u533a\u57df\uff09\u7684\u4ee5\u50cf\u7d20\u4e3a\u5355\u4f4d\u7684\u5bbd\u5ea6\u548c\u9ad8\u5ea6\u3002\u5982\u679c\u5e0c\u671b\u5f97\u5230\u5e27\u7f13\u51b2\u533a\u7684\u5bbd\u5ea6\u548c\u9ad8\u5ea6\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 glfwSetWindowSizeCallback \u65b9\u6cd5\u3002\u5c4f\u5e55\u5750\u6807\u4e0d\u4e00\u5b9a\u5bf9\u5e94\u50cf\u7d20\uff08\u4f8b\u5982\uff0c\u5177\u6709\u89c6\u7f51\u819c\u663e\u793a\u5c4f\uff08Retina Display\uff09\u7684Mac\u8bbe\u5907\uff09\u3002\u56e0\u4e3a\u6211\u4eec\u5c06\u5728\u8fdb\u884cOpenGL\u8c03\u7528\u65f6\u4f7f\u7528\u8fd9\u4e9b\u4fe1\u606f\uff0c\u6240\u4ee5\u8981\u6ce8\u610f\u50cf\u7d20\u4e0d\u5728\u5c4f\u5e55\u5750\u6807\u4e2d\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7GLFW\u7684\u6587\u6863\u4e86\u89e3\u66f4\u591a\u4fe1\u606f\u3002 // \u8bbe\u7f6e\u8c03\u6574\u5927\u5c0f\u56de\u8c03 glfwSetFramebufferSizeCallback(windowHandle, (window, width, height) -> { Window.this.width = width; Window.this.height = height; Window.this.setResized(true); }); \u6211\u4eec\u8fd8\u5c06\u521b\u5efa\u4e00\u4e2a Renderer \u7c7b\uff0c\u5b83\u5c06\u5904\u7406\u6211\u4eec\u6e38\u620f\u7684\u6e32\u67d3\u3002\u73b0\u5728\uff0c\u5b83\u4ec5\u4f1a\u6709\u4e00\u4e2a\u7a7a\u7684 init \u65b9\u6cd5\uff0c\u548c\u53e6\u4e00\u4e2a\u7528\u9884\u8bbe\u989c\u8272\u6e05\u7a7a\u5c4f\u5e55\u7684\u65b9\u6cd5\uff1a public void init() throws Exception { } public void clear() { glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT); } \u7136\u540e\u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a IGameLogic \u7684\u63a5\u53e3\uff0c\u5b83\u5c01\u88c5\u4e86\u6211\u4eec\u7684\u6e38\u620f\u903b\u8f91\u3002\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u8ba9\u6e38\u620f\u5f15\u64ce\u5728\u4e0d\u540c\u7684\u6e38\u620f\u4e0a\u91cd\u590d\u4f7f\u7528\u3002\u8be5\u63a5\u53e3\u5c06\u5177\u6709\u83b7\u53d6\u8f93\u5165\u3001\u66f4\u65b0\u6e38\u620f\u72b6\u6001\u548c\u6e32\u67d3\u6e38\u620f\u5185\u5bb9\u7684\u65b9\u6cd5\u3002 public interface IGameLogic { void init() throws Exception; void input(Window window); void update(float interval); void render(Window window); } \u7136\u540e\u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a GameEngine \u7684\u7c7b\uff0c\u5b83\u5c06\u5305\u542b\u6211\u4eec\u6e38\u620f\u5faa\u73af\u7684\u4ee3\u7801\uff0c\u8be5\u7c7b\u5c06\u5b9e\u73b0\u50a8\u5b58\u6e38\u620f\u5faa\u73af\uff1a public class GameEngine implements Runnable { //... public GameEngine(String windowTitle, int width, int height, boolean vSync, IGameLogic gameLogic) throws Exception { window = new Window(windowTitle, width, height, vSync); this.gameLogic = gameLogic; //... } vSync \u53c2\u6570\u5141\u8bb8\u6211\u4eec\u9009\u62e9\u662f\u5426\u542f\u7528\u5782\u76f4\u540c\u6b65\u3002\u4f60\u53ef\u4ee5\u770b\u5230\u6211\u4eec\u5b9e\u73b0\u4e86 GameEngine \u7c7b\u7684 run \u65b9\u6cd5\uff0c\u5176\u4e2d\u5305\u62ec\u6e38\u620f\u5faa\u73af\uff1a @Override public void run() { try { init(); gameLoop(); } catch (Exception excp) { excp.printStackTrace(); } } GameEngine \u7c7b\u63d0\u4f9b\u4e86\u4e00\u4e2a run \u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u5c06\u6267\u884c\u521d\u59cb\u5316\u4efb\u52a1\uff0c\u5e76\u8fd0\u884c\u6e38\u620f\u5faa\u73af\uff0c\u76f4\u5230\u6211\u4eec\u5173\u95ed\u7a97\u53e3\u3002\u5173\u4e8e\u7ebf\u7a0b\u9700\u8981\u6ce8\u610f\u7684\u4e00\u70b9\u662f\uff0cGLFW\u9700\u8981\u4ece\u4e3b\u7ebf\u7a0b\u521d\u59cb\u5316\uff0c\u4e8b\u4ef6\u7684\u8f6e\u8be2\u4e5f\u5e94\u8be5\u5728\u8be5\u7ebf\u7a0b\u4e2d\u5b8c\u6210\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u5c06\u5728\u4e3b\u7ebf\u7a0b\u4e2d\u6267\u884c\u6240\u6709\u5185\u5bb9\uff0c\u800c\u4e0d\u662f\u4e3a\u6e38\u620f\u5faa\u73af\u521b\u5efa\u5355\u72ec\u7684\u7ebf\u7a0b\u3002 \u5728\u6e90\u4ee3\u7801\u4e2d\uff0c\u4f60\u5c06\u770b\u5230\u6211\u4eec\u521b\u5efa\u4e86\u5176\u4ed6\u8f85\u52a9\u7c7b\uff0c\u4f8b\u5982 Timer \uff08\u5b83\u5c06\u63d0\u4f9b\u7528\u4e8e\u8ba1\u7b97\u5df2\u7ecf\u8fc7\u7684\u65f6\u95f4\u7684\u5b9e\u7528\u65b9\u6cd5\uff09\uff0c\u5e76\u5728\u6e38\u620f\u5faa\u73af\u903b\u8f91\u4e2d\u4f7f\u7528\u5b83\u4eec\u3002 GameEngine \u7c7b\u53ea\u662f\u5c06 input \u548c update \u65b9\u6cd5\u59d4\u6258\u7ed9 IGameLogic \u5b9e\u4f8b\u3002\u5728 render \u65b9\u6cd5\u4e2d\uff0c\u5b83\u4e5f\u59d4\u6258\u7ed9 IGameLogic \u5b9e\u4f8b\u5e76\u66f4\u65b0\u7a97\u53e3\u3002 protected void input() { gameLogic.input(window); } protected void update(float interval) { gameLogic.update(interval); } protected void render() { gameLogic.render(window); window.update(); } \u5728\u7a0b\u5e8f\u7684\u5165\u53e3\uff0c\u542b\u6709 main \u65b9\u6cd5\u7684\u7c7b\u53ea\u4f1a\u521b\u5efa\u4e00\u4e2a GameEngine \u5b9e\u4f8b\u5e76\u8fd0\u884c\u5b83\u3002 public class Main { public static void main(String[] args) { try { boolean vSync = true; IGameLogic gameLogic = new DummyGame(); GameEngine gameEng = new GameEngine(\"GAME\", 600, 480, vSync, gameLogic); gameEng.run(); } catch (Exception excp) { excp.printStackTrace(); System.exit(-1); } } } \u6700\u540e\uff0c\u5728\u672c\u7ae0\u4e2d\u6211\u4eec\u53ea\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u7b80\u5355\u7684\u6e38\u620f\u903b\u8f91\u7c7b\u3002\u5b83\u53ea\u4f1a\u5728\u6309\u4e0b\u4e0a\u6216\u4e0b\u952e\u65f6\uff0c\u53d8\u4eae\u6216\u53d8\u6697\u7a97\u53e3\u7684\u989c\u8272\u7f13\u51b2\u533a\u7684\u6e05\u7a7a\u989c\u8272\uff0c render \u65b9\u6cd5\u5c06\u4f1a\u7528\u8fd9\u4e2a\u989c\u8272\u6e05\u7a7a\u7a97\u53e3\u7684\u989c\u8272\u7f13\u51b2\u533a\u3002 public class DummyGame implements IGameLogic { private int direction = 0; private float color = 0.0f; private final Renderer renderer; public DummyGame() { renderer = new Renderer(); } @Override public void init() throws Exception { renderer.init(); } @Override public void input(Window window) { if (window.isKeyPressed(GLFW_KEY_UP)) { direction = 1; } else if (window.isKeyPressed(GLFW_KEY_DOWN)) { direction = -1; } else { direction = 0; } } @Override public void update(float interval) { color += direction * 0.01f; if (color > 1) { color = 1.0f; } else if ( color < 0 ) { color = 0.0f; } } @Override public void render(Window window) { if (window.isResized()) { glViewport(0, 0, window.getWidth(), window.getHeight()); window.setResized(false); } window.setClearColor(color, color, color, 0.0f); renderer.clear(); } } \u5728 render \u65b9\u6cd5\u4e2d\uff0c\u5f53\u7a97\u53e3\u5927\u5c0f\u88ab\u8c03\u6574\u65f6\uff0c\u6211\u4eec\u63a5\u6536\u901a\u77e5\uff0c\u4ee5\u4fbf\u66f4\u65b0\u89c6\u53e3\u5c06\u5750\u6807\u4e2d\u5fc3\u5b9a\u4f4d\u5230\u7a97\u53e3\u7684\u4e2d\u5fc3\u3002 \u521b\u5efa\u7684\u7c7b\u5c42\u6b21\u7ed3\u6784\u5c06\u5e2e\u52a9\u6211\u4eec\u5c06\u6e38\u620f\u5f15\u64ce\u4ee3\u7801\u4e0e\u5177\u4f53\u7684\u6e38\u620f\u4ee3\u7801\u5206\u5f00\u3002\u867d\u7136\u73b0\u5728\u53ef\u80fd\u770b\u8d77\u6765\u6ca1\u6709\u5fc5\u8981\uff0c\u4f46\u6211\u4eec\u5df2\u5c06\u6bcf\u4e2a\u6e38\u620f\u7684\u901a\u7528\u4ee3\u7801\uff0c\u4ece\u5177\u4f53\u7684\u6e38\u620f\u7684\u903b\u8f91\u3001\u7f8e\u672f\u4f5c\u54c1\u548c\u8d44\u6e90\u4e2d\u5206\u79bb\u51fa\u6765\uff0c\u4ee5\u4fbf\u91cd\u7528\u6e38\u620f\u5f15\u64ce\u3002\u5728\u6b64\u540e\u7684\u7ae0\u8282\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u91cd\u6784\u8fd9\u4e2a\u7c7b\u5c42\u6b21\u7ed3\u6784\uff0c\u56e0\u4e3a\u6211\u4eec\u7684\u6e38\u620f\u5f15\u64ce\u53d8\u5f97\u66f4\u52a0\u590d\u6742\u3002","title":"\u6e38\u620f\u5faa\u73af\uff08The Game Loop\uff09"},{"location":"02-the-game-loop/#osx","text":"\u4f60\u53ef\u4ee5\u8fd0\u884c\u4e0a\u9762\u7684\u4ee3\u7801\u5728Windows\u6216Linux\u4e0a\uff0c\u4f46\u6211\u4eec\u4ecd\u9700\u8981\u4e3aOS X\u5e73\u53f0\u505a\u4e00\u4e9b\u4fee\u6539\u3002\u6b63\u5982GLFW\u6587\u6863\u4e2d\u6240\u63cf\u8ff0\u7684\uff1a \u76ee\u524dOS X\u4ec5\u652f\u6301\u7684OpenGL 3.x\u548c4.x\u7248\u672c\u7684\u73af\u5883\u662f\u5411\u4e0a\u517c\u5bb9\u7684\u3002OS X 10.7 Lion\u652f\u6301OpenGL 3.2\u7248\u672c\u548cOS X 10.9 Mavericks\u652f\u6301OpenGL 3.3\u548c4.1\u7248\u672c\u3002\u5728\u4efb\u4f55\u60c5\u51b5\u4e0b\uff0c\u4f60\u7684GPU\u9700\u8981\u652f\u6301\u6307\u5b9a\u7248\u672c\u7684OpenGL\uff0c\u4ee5\u6210\u529f\u521b\u5efa\u73af\u5883\u3002 \u56e0\u6b64\uff0c\u4e3a\u4e86\u652f\u6301\u5728\u6b64\u540e\u7ae0\u8282\u4e2d\u4ecb\u7ecd\u7684\u7279\u6027\uff0c\u6211\u4eec\u9700\u8981\u5c06\u4e0b\u8ff0\u4ee3\u7801\u6dfb\u52a0\u5230 Window \u7c7b\u521b\u5efa\u7a97\u53e3\u4ee3\u7801\u4e4b\u524d\uff1a glfwWindowHint(GLFW_CONTEXT_VERSION_MAJOR, 3); glfwWindowHint(GLFW_CONTEXT_VERSION_MINOR, 2); glfwWindowHint(GLFW_OPENGL_PROFILE, GLFW_OPENGL_CORE_PROFILE); glfwWindowHint(GLFW_OPENGL_FORWARD_COMPAT, GL_TRUE); \u8fd9\u5c06\u4f7f\u7a0b\u5e8f\u4f7f\u7528OpenGL 3.2\u52304.1\u4e4b\u95f4\u7684\u6700\u9ad8\u7248\u672c\u3002\u5982\u679c\u6ca1\u6709\u4e0a\u8ff0\u4ee3\u7801\uff0c\u5c31\u4f1a\u4f7f\u7528\u65e7\u7248\u672c\u7684OpenGL\u3002","title":"\u5e73\u53f0\u5dee\u5f02\uff08OSX\uff09"},{"location":"03-a-brief-about-coordinates/","text":"\u5750\u6807\u7b80\u4ecb\uff08A brief about coordinates\uff09 \u672c\u7ae0\u4e2d\u6211\u4eec\u5c06\u8ba8\u8bba\u5750\u6807\u548c\u5750\u6807\u7cfb\uff08Coordinate System\uff09\uff0c\u5c1d\u8bd5\u4ee5\u7b80\u5355\u7684\u65b9\u5f0f\u4ecb\u7ecd\u4e00\u4e9b\u57fa\u672c\u7684\u6570\u5b66\u6982\u5ff5\uff0c\u4e3a\u540e\u9762\u7ae0\u8282\u5c06\u8981\u4ecb\u7ecd\u7684\u6280\u672f\u548c\u5185\u5bb9\u63d0\u4f9b\u5e2e\u52a9\u3002\u6211\u4eec\u5c06\u4f1a\u5c06\u4e00\u4e9b\u5185\u5bb9\u7b80\u5316\uff0c\u4ee5\u6613\u4e8e\u5b66\u4e60\uff0c\u4f46\u727a\u7272\u4e86\u51c6\u786e\u6027\u3002 \u6211\u4eec\u901a\u8fc7\u6307\u5b9a\u5750\u6807\u6765\u786e\u5b9a\u7269\u4f53\u5728\u7a7a\u95f4\u4e2d\u7684\u4f4d\u7f6e\u3002\u8054\u60f3\u5730\u56fe\uff0c\u901a\u8fc7\u5728\u5730\u56fe\u4e0a\u6307\u5b9a\u7eac\u5ea6\u548c\u7ecf\u5ea6\u6765\u786e\u5b9a\u4e00\u4e2a\u70b9\u3002\u53ea\u9700\u4e00\u5bf9\u6570\u5b57\uff0c\u5c31\u53ef\u4ee5\u7cbe\u786e\u5730\u786e\u8ba4\u4e00\u4e2a\u70b9\uff0c\u8fd9\u5bf9\u6570\u5b57\u5c31\u662f\u70b9\u5750\u6807\uff08\u5b9e\u9645\u4e0a\u6709\u4e9b\u590d\u6742\uff0c\u9700\u8981\u66f4\u591a\u7684\u6570\u636e\u624d\u80fd\u5728\u5730\u56fe\u4e0a\u786e\u5b9a\u4e00\u4e2a\u70b9\uff0c\u56e0\u4e3a\u5730\u56fe\u662f\u4e00\u4e2a\u4e0d\u5b8c\u7f8e\u7684\u692d\u5706\u7403\u4f53\uff08\u5730\u7403\uff09\u7684\u6295\u5f71\uff0c\u4f46\u8fd9\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u7c7b\u6bd4\uff09\u3002 \u5750\u6807\u7cfb\u662f\u4e00\u4e2a\u7cfb\u7edf\uff0c\u5b83\u4f7f\u7528\u4e00\u4e2a\u6216\u591a\u4e2a\u6570\u5b57\uff0c\u5373\u4e00\u4e2a\u6216\u591a\u4e2a\u5206\u91cf\u6765\u552f\u4e00\u5730\u786e\u5b9a\u4e00\u4e2a\u70b9\u7684\u4f4d\u7f6e\u3002\u5b58\u5728\u7740\u591a\u79cd\u4e0d\u540c\u7684\u5750\u6807\u7cfb\uff08\u5982\u7b1b\u5361\u5c14\u5750\u6807\u7cfb\uff0c\u6781\u5750\u6807\u7cfb\u7b49\uff09\uff0c\u5e76\u4e14\u53ef\u4ee5\u5c06\u5750\u6807\u4ece\u4e00\u4e2a\u5750\u6807\u7cfb\u8f6c\u6362\u5230\u53e6\u4e00\u4e2a\u5750\u6807\u7cfb\u3002\u6211\u4eec\u5c06\u4f7f\u7528\u7b1b\u5361\u5c14\u5750\u6807\u7cfb\u3002 \u5728\u4e8c\u7ef4\u7b1b\u5361\u5c14\u5750\u6807\u7cfb\u4e2d\uff0c\u5750\u6807\u7531\u4e24\u4e2a\u6570\u5b57\u5b9a\u4e49\uff0c\u5b83\u4eec\u8868\u793a\u5230\u4e24\u4e2a\u76f8\u4e92\u5782\u76f4\u7684X\u8f74\u548cY\u8f74\u95f4\u8ddd\u79bb\u3002 \u7ee7\u7eed\u7c7b\u6bd4\u5730\u56fe\uff0c\u5750\u6807\u7cfb\u5b9a\u4e49\u4e00\u4e2a\u539f\u70b9\u3002\u5bf9\u4e8e\u5730\u7406\u5750\u6807\u6765\u8bf4\uff0c\u539f\u70b9\u88ab\u8bbe\u7f6e\u4e3a\u8d64\u9053\u548c\u96f6\u5ea6\u7ecf\u7ebf\u4ea4\u53c9\u7684\u70b9\u3002\u6839\u636e\u539f\u70b9\u8bbe\u7f6e\u7684\u4f4d\u7f6e\uff0c\u7279\u5b9a\u70b9\u7684\u5750\u6807\u662f\u4e0d\u540c\u7684\u3002\u5750\u6807\u7cfb\u4e5f\u53ef\u4ee5\u5b9a\u4e49\u8f74\u7684\u65b9\u5411\u3002\u5728\u4e0a\u56fe\u4e2d\uff0cX\u5750\u6807\u968f\u7740\u70b9\u5411\u53f3\u79fb\u52a8\u800c\u589e\u52a0\uff0cY\u5750\u6807\u968f\u7740\u70b9\u5411\u4e0a\u79fb\u52a8\u800c\u589e\u52a0\u3002\u4f46\u6211\u4eec\u4e5f\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u4e0e\u7b1b\u5361\u5c14\u5750\u6807\u7cfb\u4e0d\u540c\u7684\uff0c\u5177\u6709\u4e0d\u540c\u7684\u8f74\u53d6\u5411\u7684\u5750\u6807\u7cfb\uff0c\u6211\u4eec\u5c06\u5f97\u5230\u4e0d\u540c\u7684\u5750\u6807\u3002 \u5982\u4f60\u6240\u89c1\uff0c\u6211\u4eec\u9700\u8981\u5b9a\u4e49\u4e00\u4e9b\u53c2\u6570\uff0c\u4f8b\u5982\u539f\u70b9\u548c\u8f74\u65b9\u5411\uff0c\u4ee5\u4fbf\u4f7f\u6784\u6210\u5750\u6807\u7684\u6570\u5b57\u5bf9\u6709\u6070\u5f53\u7684\u542b\u4e49\u3002\u4e3a\u4e86\u4f7f\u7528\u4e00\u7ec4\u5750\u6807\uff0c\u6211\u4eec\u5fc5\u987b\u4f7f\u7528\u5bf9\u5e94\u7684\u5750\u6807\u7cfb\uff0c\u597d\u6d88\u606f\u662f\u53ef\u4ee5\u901a\u8fc7\u5e73\u79fb\u548c\u65cb\u8f6c\u5c06\u5750\u6807\u4ece\u4e00\u4e2a\u5750\u6807\u7cfb\u8f6c\u6362\u5230\u53e6\u4e00\u4e2a\u5750\u6807\u7cfb\u3002 \u5982\u679c\u8981\u5904\u7406\u4e09\u7ef4\u5750\u6807\uff0c\u6211\u4eec\u9700\u8981\u589e\u52a0\u4e00\u4e2a\u8f74\uff0c\u5373Z\u8f74\u3002\u4e09\u7ef4\u5750\u6807\u5c06\u7531\u4e09\u4e2a\u6570\u5b57(x, y, z)\u6784\u6210\u3002 \u5728\u4e8c\u7ef4\u7b1b\u5361\u5c14\u5750\u6807\u7cfb\u4e2d\uff0c\u53ea\u8981\u8f74\u76f8\u4e92\u5782\u76f4\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u6539\u53d8\u4e09\u7ef4\u5750\u6807\u7cfb\u4e2d\u7684\u8f74\u7684\u65b9\u5411\u3002\u4e0b\u56fe\u663e\u793a\u53e6\u4e00\u4e2a\u4e09\u7ef4\u5750\u6807\u7cfb\u3002 \u4e09\u7ef4\u5750\u6807\u53ef\u5206\u4e3a\u5de6\u624b\u7cfb\u548c\u53f3\u624b\u7cfb\u4e24\u79cd\u7c7b\u578b\u3002\u4f60\u600e\u4e48\u77e5\u9053\u5b83\u662f\u4ec0\u4e48\u7c7b\u578b\u7684\uff1f\u7528\u4f60\u7684\u624b\u5728\u4f60\u7684\u62c7\u6307\u548c\u98df\u6307\u4e4b\u95f4\u5f62\u6210\u4e00\u4e2a\u201cL\u201d\uff0c\u4e2d\u6307\u5e94\u6307\u5411\u5782\u76f4\u4e8e\u5176\u4ed6\u4e24\u4e2a\u624b\u6307\u7684\u65b9\u5411\u3002\u62c7\u6307\u5e94\u8be5\u6307\u5411X\u8f74\u7684\u6b63\u65b9\u5411\uff0c\u98df\u6307\u5e94\u8be5\u6307\u5411Y\u8f74\u7684\u6b63\u65b9\u5411\uff0c\u800c\u4e2d\u6307\u5e94\u8be5\u6307\u5411Z\u8f74\u7684\u6b63\u65b9\u5411\u3002\u5982\u679c\u4f60\u80fd\u7528\u5de6\u624b\u505a\u5230\uff0c\u90a3\u4e48\u5b83\u5c31\u662f\u5de6\u624b\u7cfb\uff0c\u5982\u679c\u4f60\u9700\u8981\u7528\u53f3\u624b\uff0c\u90a3\u5b83\u5c31\u662f\u53f3\u624b\u7cfb\u3002 \u4e8c\u7ef4\u5750\u6807\u7cfb\u662f\u76f8\u540c\u7684\uff0c\u56e0\u4e3a\u901a\u8fc7\u65cb\u8f6c\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u4e00\u4e2a\u5750\u6807\u7cfb\u8f6c\u6362\u5230\u53e6\u4e00\u4e2a\u5750\u6807\u7cfb\u3002\u4f46\u662f\uff0c\u4e09\u7ef4\u5750\u6807\u7cfb\u5e76\u4e0d\u90fd\u662f\u76f8\u540c\u7684\u3002\u5982\u679c\u5b83\u4eec\u53ef\u4ee5\u4f7f\u7528\u76f8\u540c\u7684\u624b\u6765\u8868\u793a\uff0c\u6362\u53e5\u8bdd\u8bf4\uff0c\u5982\u679c\u4e24\u8005\u90fd\u662f\u5de6\u624b\u7cfb\u6216\u8005\u53f3\u624b\u7cfb\uff0c\u90a3\u4e48\u5c31\u80fd\u901a\u8fc7\u65cb\u8f6c\u4ece\u4e00\u4e2a\u5750\u6807\u7cfb\u8f6c\u6362\u5230\u53e6\u4e00\u4e2a\u5750\u6807\u7cfb\u3002 \u73b0\u5728\u5df2\u7ecf\u660e\u786e\u4e86\u4e00\u4e9b\u57fa\u672c\u7684\u6982\u5ff5\uff0c\u8ba9\u6211\u4eec\u6765\u8bb2\u89e3\u4e00\u4e9b\u5728\u5904\u7406\u4e09\u7ef4\u56fe\u5f62\u65f6\u5e38\u7528\u7684\u672f\u8bed\u3002\u5f53\u6211\u4eec\u5728\u6b64\u540e\u7684\u7ae0\u8282\u4e2d\u89e3\u91ca\u5982\u4f55\u6e32\u67d3\u4e09\u7ef4\u6a21\u578b\u65f6\uff0c\u5c06\u770b\u5230\u6211\u4eec\u5c06\u4f7f\u7528\u4e0d\u540c\u7684\u4e09\u7ef4\u5750\u6807\u7cfb\uff0c\u8fd9\u662f\u56e0\u4e3a\u6bcf\u4e2a\u5750\u6807\u7cfb\u90fd\u6709\u4e0d\u540c\u7684\u8bbe\u5b9a\uff0c\u6709\u4e0d\u540c\u7684\u76ee\u7684\u3002\u4e00\u7ec4\u5750\u6807\u662f\u6ca1\u6709\u610f\u4e49\u7684\uff0c\u9664\u975e\u660e\u786e\u5b83\u662f\u67d0\u4e2a\u5750\u6807\u7cfb\u7684\u5750\u6807\u3002\u5f53\u4f60\u770b\u5230\u5750\u6807(40.438031, -3.676626)\u65f6\uff0c\u4f60\u53ef\u80fd\u4f1a\u6709\u4e00\u4e2a\u5927\u80c6\u7684\u60f3\u6cd5\u3002\u4f46\u662f\u5982\u679c\u6211\u8bf4\u5b83\u662f\u51e0\u4f55\u5750\u6807\uff08\u7ecf\u5ea6\u548c\u7eac\u5ea6\uff09\u65f6\uff0c\u4f60\u5c31\u4f1a\u53d1\u73b0\u5b83\u662f\u9a6c\u5fb7\u91cc\u67d0\u4e2a\u5730\u65b9\u7684\u5750\u6807\u3002 \u5f53\u6211\u4eec\u52a0\u8f7d\u4e09\u7ef4\u7269\u4f53\u65f6\uff0c\u6211\u4eec\u5c06\u5f97\u5230\u4e00\u7ec4\u4e09\u7ef4\u5750\u6807\u3002\u8fd9\u4e9b\u5750\u6807\u5728\u88ab\u79f0\u4e3a\u7269\u4f53\u5750\u6807\u7cfb\uff08Object Coordinate Space\uff09\u7684\u4e09\u7ef4\u5750\u6807\u7cfb\u4e2d\u8868\u8fbe\u3002\u5f53\u5efa\u6a21\u5e08\u5728\u8bbe\u8ba1\u8fd9\u4e9b\u4e09\u7ef4\u6a21\u578b\u7684\u65f6\u5019\uff0c\u4ed6\u4eec\u5bf9\u8be5\u6a21\u578b\u5c06\u663e\u793a\u7684\u4e09\u7ef4\u573a\u666f\u6beb\u4e0d\u77e5\u60c5\uff0c\u56e0\u6b64\u53ea\u80fd\u4f7f\u7528\u4e0e\u6a21\u578b\u76f8\u5173\u7684\u5750\u6807\u7cfb\u6765\u5b9a\u4e49\u5750\u6807\u3002 \u5f53\u8981\u7ed8\u5236\u4e00\u4e2a\u4e09\u7ef4\u573a\u666f\u65f6\uff0c\u6240\u6709\u7684\u4e09\u7ef4\u7269\u4f53\u5c06\u4e0e\u88ab\u79f0\u4e3a\u4e16\u754c\u7a7a\u95f4\u5750\u6807\u7cfb\u7684\u5750\u6807\u7cfb\u5bf9\u5e94\u3002\u6211\u4eec\u9700\u8981\u5c06\u4e09\u7ef4\u7269\u4f53\u7684\u5750\u6807\u7cfb\u8f6c\u6362\u5230\u4e16\u754c\u5750\u6807\u7cfb\u3002\u4e00\u4e9b\u7269\u4f53\u9700\u8981\u65cb\u8f6c\u3001\u62c9\u4f38\u3001\u653e\u5927\u548c\u8f6c\u6362\uff0c\u4ee5\u4fbf\u5728\u4e09\u7ef4\u573a\u666f\u4e2d\u80fd\u591f\u6b63\u786e\u5730\u663e\u793a\u3002 \u6211\u4eec\u8fd8\u9700\u8981\u9650\u5236\u6240\u663e\u793a\u7684\u4e09\u7ef4\u7a7a\u95f4\u7684\u8303\u56f4\uff0c\u4f8b\u5982\u79fb\u52a8\u6444\u50cf\u673a\u7a7f\u68ad\u5728\u4e09\u7ef4\u7a7a\u95f4\u4e2d\u3002\u7136\u540e\u6211\u4eec\u9700\u8981\u5c06\u4e16\u754c\u7a7a\u95f4\u5750\u6807\u7cfb\u7684\u5750\u6807\u8f6c\u6362\u5230\u6444\u50cf\u673a\u6216\u89c2\u5bdf\u7a7a\u95f4\u5750\u6807\u7cfb\u3002\u6700\u540e\uff0c\u8fd9\u4e9b\u5750\u6807\u9700\u8981\u8f6c\u6362\u4e3a\u4e8c\u7ef4\u7684\u5c4f\u5e55\u5750\u6807\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5c06\u4e09\u7ef4\u89c2\u5bdf\u5750\u6807\u6295\u5f71\u5230\u4e8c\u7ef4\u5c4f\u5e55\u7a7a\u95f4\u5750\u6807\u7cfb\u3002 \u4e0b\u56fe\u5c55\u793a\u4e86OpenGL\u5750\u6807\u7cfb\uff08Z\u8f74\u5782\u76f4\u4e8e\u5c4f\u5e55\uff09\uff0c\u5750\u6807\u5728-1\u548c+1\u4e4b\u95f4\u3002 \u5982\u679c\u4f60\u4e0d\u80fd\u6e05\u695a\u5730\u7406\u89e3\u8fd9\u4e9b\u6982\u5ff5\uff0c\u522b\u62c5\u5fc3\u3002\u5728\u4e0b\u4e00\u7ae0\u4e2d\uff0c\u5b83\u4eec\u5c06\u7528\u5b9e\u4f8b\u8868\u73b0\u51fa\u6765\u3002","title":"\u5750\u6807\u7b80\u4ecb"},{"location":"03-a-brief-about-coordinates/#a-brief-about-coordinates","text":"\u672c\u7ae0\u4e2d\u6211\u4eec\u5c06\u8ba8\u8bba\u5750\u6807\u548c\u5750\u6807\u7cfb\uff08Coordinate System\uff09\uff0c\u5c1d\u8bd5\u4ee5\u7b80\u5355\u7684\u65b9\u5f0f\u4ecb\u7ecd\u4e00\u4e9b\u57fa\u672c\u7684\u6570\u5b66\u6982\u5ff5\uff0c\u4e3a\u540e\u9762\u7ae0\u8282\u5c06\u8981\u4ecb\u7ecd\u7684\u6280\u672f\u548c\u5185\u5bb9\u63d0\u4f9b\u5e2e\u52a9\u3002\u6211\u4eec\u5c06\u4f1a\u5c06\u4e00\u4e9b\u5185\u5bb9\u7b80\u5316\uff0c\u4ee5\u6613\u4e8e\u5b66\u4e60\uff0c\u4f46\u727a\u7272\u4e86\u51c6\u786e\u6027\u3002 \u6211\u4eec\u901a\u8fc7\u6307\u5b9a\u5750\u6807\u6765\u786e\u5b9a\u7269\u4f53\u5728\u7a7a\u95f4\u4e2d\u7684\u4f4d\u7f6e\u3002\u8054\u60f3\u5730\u56fe\uff0c\u901a\u8fc7\u5728\u5730\u56fe\u4e0a\u6307\u5b9a\u7eac\u5ea6\u548c\u7ecf\u5ea6\u6765\u786e\u5b9a\u4e00\u4e2a\u70b9\u3002\u53ea\u9700\u4e00\u5bf9\u6570\u5b57\uff0c\u5c31\u53ef\u4ee5\u7cbe\u786e\u5730\u786e\u8ba4\u4e00\u4e2a\u70b9\uff0c\u8fd9\u5bf9\u6570\u5b57\u5c31\u662f\u70b9\u5750\u6807\uff08\u5b9e\u9645\u4e0a\u6709\u4e9b\u590d\u6742\uff0c\u9700\u8981\u66f4\u591a\u7684\u6570\u636e\u624d\u80fd\u5728\u5730\u56fe\u4e0a\u786e\u5b9a\u4e00\u4e2a\u70b9\uff0c\u56e0\u4e3a\u5730\u56fe\u662f\u4e00\u4e2a\u4e0d\u5b8c\u7f8e\u7684\u692d\u5706\u7403\u4f53\uff08\u5730\u7403\uff09\u7684\u6295\u5f71\uff0c\u4f46\u8fd9\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u7c7b\u6bd4\uff09\u3002 \u5750\u6807\u7cfb\u662f\u4e00\u4e2a\u7cfb\u7edf\uff0c\u5b83\u4f7f\u7528\u4e00\u4e2a\u6216\u591a\u4e2a\u6570\u5b57\uff0c\u5373\u4e00\u4e2a\u6216\u591a\u4e2a\u5206\u91cf\u6765\u552f\u4e00\u5730\u786e\u5b9a\u4e00\u4e2a\u70b9\u7684\u4f4d\u7f6e\u3002\u5b58\u5728\u7740\u591a\u79cd\u4e0d\u540c\u7684\u5750\u6807\u7cfb\uff08\u5982\u7b1b\u5361\u5c14\u5750\u6807\u7cfb\uff0c\u6781\u5750\u6807\u7cfb\u7b49\uff09\uff0c\u5e76\u4e14\u53ef\u4ee5\u5c06\u5750\u6807\u4ece\u4e00\u4e2a\u5750\u6807\u7cfb\u8f6c\u6362\u5230\u53e6\u4e00\u4e2a\u5750\u6807\u7cfb\u3002\u6211\u4eec\u5c06\u4f7f\u7528\u7b1b\u5361\u5c14\u5750\u6807\u7cfb\u3002 \u5728\u4e8c\u7ef4\u7b1b\u5361\u5c14\u5750\u6807\u7cfb\u4e2d\uff0c\u5750\u6807\u7531\u4e24\u4e2a\u6570\u5b57\u5b9a\u4e49\uff0c\u5b83\u4eec\u8868\u793a\u5230\u4e24\u4e2a\u76f8\u4e92\u5782\u76f4\u7684X\u8f74\u548cY\u8f74\u95f4\u8ddd\u79bb\u3002 \u7ee7\u7eed\u7c7b\u6bd4\u5730\u56fe\uff0c\u5750\u6807\u7cfb\u5b9a\u4e49\u4e00\u4e2a\u539f\u70b9\u3002\u5bf9\u4e8e\u5730\u7406\u5750\u6807\u6765\u8bf4\uff0c\u539f\u70b9\u88ab\u8bbe\u7f6e\u4e3a\u8d64\u9053\u548c\u96f6\u5ea6\u7ecf\u7ebf\u4ea4\u53c9\u7684\u70b9\u3002\u6839\u636e\u539f\u70b9\u8bbe\u7f6e\u7684\u4f4d\u7f6e\uff0c\u7279\u5b9a\u70b9\u7684\u5750\u6807\u662f\u4e0d\u540c\u7684\u3002\u5750\u6807\u7cfb\u4e5f\u53ef\u4ee5\u5b9a\u4e49\u8f74\u7684\u65b9\u5411\u3002\u5728\u4e0a\u56fe\u4e2d\uff0cX\u5750\u6807\u968f\u7740\u70b9\u5411\u53f3\u79fb\u52a8\u800c\u589e\u52a0\uff0cY\u5750\u6807\u968f\u7740\u70b9\u5411\u4e0a\u79fb\u52a8\u800c\u589e\u52a0\u3002\u4f46\u6211\u4eec\u4e5f\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u4e0e\u7b1b\u5361\u5c14\u5750\u6807\u7cfb\u4e0d\u540c\u7684\uff0c\u5177\u6709\u4e0d\u540c\u7684\u8f74\u53d6\u5411\u7684\u5750\u6807\u7cfb\uff0c\u6211\u4eec\u5c06\u5f97\u5230\u4e0d\u540c\u7684\u5750\u6807\u3002 \u5982\u4f60\u6240\u89c1\uff0c\u6211\u4eec\u9700\u8981\u5b9a\u4e49\u4e00\u4e9b\u53c2\u6570\uff0c\u4f8b\u5982\u539f\u70b9\u548c\u8f74\u65b9\u5411\uff0c\u4ee5\u4fbf\u4f7f\u6784\u6210\u5750\u6807\u7684\u6570\u5b57\u5bf9\u6709\u6070\u5f53\u7684\u542b\u4e49\u3002\u4e3a\u4e86\u4f7f\u7528\u4e00\u7ec4\u5750\u6807\uff0c\u6211\u4eec\u5fc5\u987b\u4f7f\u7528\u5bf9\u5e94\u7684\u5750\u6807\u7cfb\uff0c\u597d\u6d88\u606f\u662f\u53ef\u4ee5\u901a\u8fc7\u5e73\u79fb\u548c\u65cb\u8f6c\u5c06\u5750\u6807\u4ece\u4e00\u4e2a\u5750\u6807\u7cfb\u8f6c\u6362\u5230\u53e6\u4e00\u4e2a\u5750\u6807\u7cfb\u3002 \u5982\u679c\u8981\u5904\u7406\u4e09\u7ef4\u5750\u6807\uff0c\u6211\u4eec\u9700\u8981\u589e\u52a0\u4e00\u4e2a\u8f74\uff0c\u5373Z\u8f74\u3002\u4e09\u7ef4\u5750\u6807\u5c06\u7531\u4e09\u4e2a\u6570\u5b57(x, y, z)\u6784\u6210\u3002 \u5728\u4e8c\u7ef4\u7b1b\u5361\u5c14\u5750\u6807\u7cfb\u4e2d\uff0c\u53ea\u8981\u8f74\u76f8\u4e92\u5782\u76f4\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u6539\u53d8\u4e09\u7ef4\u5750\u6807\u7cfb\u4e2d\u7684\u8f74\u7684\u65b9\u5411\u3002\u4e0b\u56fe\u663e\u793a\u53e6\u4e00\u4e2a\u4e09\u7ef4\u5750\u6807\u7cfb\u3002 \u4e09\u7ef4\u5750\u6807\u53ef\u5206\u4e3a\u5de6\u624b\u7cfb\u548c\u53f3\u624b\u7cfb\u4e24\u79cd\u7c7b\u578b\u3002\u4f60\u600e\u4e48\u77e5\u9053\u5b83\u662f\u4ec0\u4e48\u7c7b\u578b\u7684\uff1f\u7528\u4f60\u7684\u624b\u5728\u4f60\u7684\u62c7\u6307\u548c\u98df\u6307\u4e4b\u95f4\u5f62\u6210\u4e00\u4e2a\u201cL\u201d\uff0c\u4e2d\u6307\u5e94\u6307\u5411\u5782\u76f4\u4e8e\u5176\u4ed6\u4e24\u4e2a\u624b\u6307\u7684\u65b9\u5411\u3002\u62c7\u6307\u5e94\u8be5\u6307\u5411X\u8f74\u7684\u6b63\u65b9\u5411\uff0c\u98df\u6307\u5e94\u8be5\u6307\u5411Y\u8f74\u7684\u6b63\u65b9\u5411\uff0c\u800c\u4e2d\u6307\u5e94\u8be5\u6307\u5411Z\u8f74\u7684\u6b63\u65b9\u5411\u3002\u5982\u679c\u4f60\u80fd\u7528\u5de6\u624b\u505a\u5230\uff0c\u90a3\u4e48\u5b83\u5c31\u662f\u5de6\u624b\u7cfb\uff0c\u5982\u679c\u4f60\u9700\u8981\u7528\u53f3\u624b\uff0c\u90a3\u5b83\u5c31\u662f\u53f3\u624b\u7cfb\u3002 \u4e8c\u7ef4\u5750\u6807\u7cfb\u662f\u76f8\u540c\u7684\uff0c\u56e0\u4e3a\u901a\u8fc7\u65cb\u8f6c\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u4e00\u4e2a\u5750\u6807\u7cfb\u8f6c\u6362\u5230\u53e6\u4e00\u4e2a\u5750\u6807\u7cfb\u3002\u4f46\u662f\uff0c\u4e09\u7ef4\u5750\u6807\u7cfb\u5e76\u4e0d\u90fd\u662f\u76f8\u540c\u7684\u3002\u5982\u679c\u5b83\u4eec\u53ef\u4ee5\u4f7f\u7528\u76f8\u540c\u7684\u624b\u6765\u8868\u793a\uff0c\u6362\u53e5\u8bdd\u8bf4\uff0c\u5982\u679c\u4e24\u8005\u90fd\u662f\u5de6\u624b\u7cfb\u6216\u8005\u53f3\u624b\u7cfb\uff0c\u90a3\u4e48\u5c31\u80fd\u901a\u8fc7\u65cb\u8f6c\u4ece\u4e00\u4e2a\u5750\u6807\u7cfb\u8f6c\u6362\u5230\u53e6\u4e00\u4e2a\u5750\u6807\u7cfb\u3002 \u73b0\u5728\u5df2\u7ecf\u660e\u786e\u4e86\u4e00\u4e9b\u57fa\u672c\u7684\u6982\u5ff5\uff0c\u8ba9\u6211\u4eec\u6765\u8bb2\u89e3\u4e00\u4e9b\u5728\u5904\u7406\u4e09\u7ef4\u56fe\u5f62\u65f6\u5e38\u7528\u7684\u672f\u8bed\u3002\u5f53\u6211\u4eec\u5728\u6b64\u540e\u7684\u7ae0\u8282\u4e2d\u89e3\u91ca\u5982\u4f55\u6e32\u67d3\u4e09\u7ef4\u6a21\u578b\u65f6\uff0c\u5c06\u770b\u5230\u6211\u4eec\u5c06\u4f7f\u7528\u4e0d\u540c\u7684\u4e09\u7ef4\u5750\u6807\u7cfb\uff0c\u8fd9\u662f\u56e0\u4e3a\u6bcf\u4e2a\u5750\u6807\u7cfb\u90fd\u6709\u4e0d\u540c\u7684\u8bbe\u5b9a\uff0c\u6709\u4e0d\u540c\u7684\u76ee\u7684\u3002\u4e00\u7ec4\u5750\u6807\u662f\u6ca1\u6709\u610f\u4e49\u7684\uff0c\u9664\u975e\u660e\u786e\u5b83\u662f\u67d0\u4e2a\u5750\u6807\u7cfb\u7684\u5750\u6807\u3002\u5f53\u4f60\u770b\u5230\u5750\u6807(40.438031, -3.676626)\u65f6\uff0c\u4f60\u53ef\u80fd\u4f1a\u6709\u4e00\u4e2a\u5927\u80c6\u7684\u60f3\u6cd5\u3002\u4f46\u662f\u5982\u679c\u6211\u8bf4\u5b83\u662f\u51e0\u4f55\u5750\u6807\uff08\u7ecf\u5ea6\u548c\u7eac\u5ea6\uff09\u65f6\uff0c\u4f60\u5c31\u4f1a\u53d1\u73b0\u5b83\u662f\u9a6c\u5fb7\u91cc\u67d0\u4e2a\u5730\u65b9\u7684\u5750\u6807\u3002 \u5f53\u6211\u4eec\u52a0\u8f7d\u4e09\u7ef4\u7269\u4f53\u65f6\uff0c\u6211\u4eec\u5c06\u5f97\u5230\u4e00\u7ec4\u4e09\u7ef4\u5750\u6807\u3002\u8fd9\u4e9b\u5750\u6807\u5728\u88ab\u79f0\u4e3a\u7269\u4f53\u5750\u6807\u7cfb\uff08Object Coordinate Space\uff09\u7684\u4e09\u7ef4\u5750\u6807\u7cfb\u4e2d\u8868\u8fbe\u3002\u5f53\u5efa\u6a21\u5e08\u5728\u8bbe\u8ba1\u8fd9\u4e9b\u4e09\u7ef4\u6a21\u578b\u7684\u65f6\u5019\uff0c\u4ed6\u4eec\u5bf9\u8be5\u6a21\u578b\u5c06\u663e\u793a\u7684\u4e09\u7ef4\u573a\u666f\u6beb\u4e0d\u77e5\u60c5\uff0c\u56e0\u6b64\u53ea\u80fd\u4f7f\u7528\u4e0e\u6a21\u578b\u76f8\u5173\u7684\u5750\u6807\u7cfb\u6765\u5b9a\u4e49\u5750\u6807\u3002 \u5f53\u8981\u7ed8\u5236\u4e00\u4e2a\u4e09\u7ef4\u573a\u666f\u65f6\uff0c\u6240\u6709\u7684\u4e09\u7ef4\u7269\u4f53\u5c06\u4e0e\u88ab\u79f0\u4e3a\u4e16\u754c\u7a7a\u95f4\u5750\u6807\u7cfb\u7684\u5750\u6807\u7cfb\u5bf9\u5e94\u3002\u6211\u4eec\u9700\u8981\u5c06\u4e09\u7ef4\u7269\u4f53\u7684\u5750\u6807\u7cfb\u8f6c\u6362\u5230\u4e16\u754c\u5750\u6807\u7cfb\u3002\u4e00\u4e9b\u7269\u4f53\u9700\u8981\u65cb\u8f6c\u3001\u62c9\u4f38\u3001\u653e\u5927\u548c\u8f6c\u6362\uff0c\u4ee5\u4fbf\u5728\u4e09\u7ef4\u573a\u666f\u4e2d\u80fd\u591f\u6b63\u786e\u5730\u663e\u793a\u3002 \u6211\u4eec\u8fd8\u9700\u8981\u9650\u5236\u6240\u663e\u793a\u7684\u4e09\u7ef4\u7a7a\u95f4\u7684\u8303\u56f4\uff0c\u4f8b\u5982\u79fb\u52a8\u6444\u50cf\u673a\u7a7f\u68ad\u5728\u4e09\u7ef4\u7a7a\u95f4\u4e2d\u3002\u7136\u540e\u6211\u4eec\u9700\u8981\u5c06\u4e16\u754c\u7a7a\u95f4\u5750\u6807\u7cfb\u7684\u5750\u6807\u8f6c\u6362\u5230\u6444\u50cf\u673a\u6216\u89c2\u5bdf\u7a7a\u95f4\u5750\u6807\u7cfb\u3002\u6700\u540e\uff0c\u8fd9\u4e9b\u5750\u6807\u9700\u8981\u8f6c\u6362\u4e3a\u4e8c\u7ef4\u7684\u5c4f\u5e55\u5750\u6807\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5c06\u4e09\u7ef4\u89c2\u5bdf\u5750\u6807\u6295\u5f71\u5230\u4e8c\u7ef4\u5c4f\u5e55\u7a7a\u95f4\u5750\u6807\u7cfb\u3002 \u4e0b\u56fe\u5c55\u793a\u4e86OpenGL\u5750\u6807\u7cfb\uff08Z\u8f74\u5782\u76f4\u4e8e\u5c4f\u5e55\uff09\uff0c\u5750\u6807\u5728-1\u548c+1\u4e4b\u95f4\u3002 \u5982\u679c\u4f60\u4e0d\u80fd\u6e05\u695a\u5730\u7406\u89e3\u8fd9\u4e9b\u6982\u5ff5\uff0c\u522b\u62c5\u5fc3\u3002\u5728\u4e0b\u4e00\u7ae0\u4e2d\uff0c\u5b83\u4eec\u5c06\u7528\u5b9e\u4f8b\u8868\u73b0\u51fa\u6765\u3002","title":"\u5750\u6807\u7b80\u4ecb\uff08A brief about coordinates\uff09"},{"location":"04-rendering/","text":"\u6e32\u67d3\uff08Rendering\uff09 \u5728\u672c\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u5b66\u4e60\u7528OpenGL\u6e32\u67d3\u573a\u666f\u65f6\u8981\u505a\u7684\u4e8b\u9879\u3002\u5982\u679c\u4f60\u5df2\u7ecf\u4e60\u60ef\u4e86OpenGL\u7684\u65e7\u7248\u672c\uff0c\u4e60\u60ef\u4e86\u4f7f\u7528\u56fa\u5b9a\u7ba1\u7ebf\uff0c\u4f60\u53ef\u80fd\u4f1a\u8df3\u8fc7\u8fd9\u4e00\u7ae0\uff0c\u4e0d\u60f3\u77e5\u9053\u4e3a\u4ec0\u4e48\u5b83\u9700\u8981\u8fd9\u4e48\u590d\u6742\u3002\u5b83\u5176\u5b9e\u66f4\u7b80\u5355\u3001\u66f4\u7075\u6d3b\uff0c\u4f60\u53ea\u9700\u8981\u7ed9\u5b83\u4e00\u4e2a\u8868\u73b0\u7684\u673a\u4f1a\u3002\u73b0\u4ee3OpenGL\u4f7f\u4f60\u53ea\u9700\u8003\u8651\u4e00\u4e2a\u95ee\u9898\uff0c\u8fd9\u53ef\u4ee5\u4f7f\u4f60\u4ee5\u66f4\u5408\u7406\u7684\u65b9\u5f0f\u7ec4\u7ec7\u4ee3\u7801\u548c\u5f00\u53d1\u3002 \u5c06\u4e09\u7ef4\u8868\u793a\u6620\u5c04\u5230\u4e8c\u7ef4\u5c4f\u5e55\u7684\u4e00\u7cfb\u5217\u6b65\u9aa4\u88ab\u7edf\u79f0\u4e3a\u56fe\u5f62\u7ba1\u7ebf\uff08Graphics Pipeline\uff09\u3002OpenGL\u6700\u521d\u7684\u7248\u672c\u4f7f\u7528\u4e86\u4e00\u4e2a\u88ab\u79f0\u4e3a\u56fa\u5b9a\u7ba1\u7ebf\uff08Fixed-function Pipeline\uff09\u7684\u6a21\u578b\u3002\u8be5\u6a21\u578b\u5728\u7ed8\u5236\u8fc7\u7a0b\u4e2d\u5b9a\u4e49\u4e86\u4e00\u7ec4\u56fa\u5b9a\u7684\u64cd\u4f5c\u6b65\u9aa4\uff0c\u7a0b\u5e8f\u5458\u88ab\u6bcf\u4e00\u6b65\u9aa4\u53ef\u7528\u7684\u51fd\u6570\u96c6\u7ea6\u675f\uff0c\u53ef\u4ee5\u4f7f\u7528\u7684\u6548\u679c\u548c\u53ef\u8fdb\u884c\u7684\u64cd\u4f5c\u53d7\u5230API\uff08\u4f8b\u5982\uff0c\u201c\u8bbe\u7f6e\u96fe\u201d\u6216\u201c\u6dfb\u52a0\u5149\u7167\u201d\uff09\u7684\u9650\u5236\uff0c\u4f46\u662f\u8fd9\u4e9b\u529f\u80fd\u7684\u5b9e\u73b0\u662f\u56fa\u5b9a\u7684\uff0c\u5e76\u4e14\u4e0d\u80fd\u4fee\u6539\u3002 \u56fe\u5f62\u7ba1\u7ebf\u7531\u4ee5\u4e0b\u64cd\u4f5c\u6b65\u9aa4\u7ec4\u6210\uff1a OpenGL 2.0 \u5f15\u5165\u4e86\u53ef\u7f16\u7a0b\u7ba1\u7ebf\uff08Programmable Pipeline\uff09\u7684\u6982\u5ff5\u3002\u5728\u8be5\u6a21\u578b\u4e2d\uff0c\u7ec4\u6210\u56fe\u5f62\u7ba1\u7ebf\u7684\u4e0d\u540c\u6b65\u9aa4\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528\u4e00\u7ec4\u53eb\u505a\u7740\u8272\u5668\uff08Shader\uff09\u7684\u7279\u5b9a\u7a0b\u5e8f\u6765\u63a7\u5236\u6216\u7f16\u7a0b\u3002\u4e0b\u56fe\u7b80\u5355\u7684\u5c55\u793a\u4e86OpenGL\u53ef\u7f16\u7a0b\u7ba1\u7ebf\uff1a \u8be5\u6e32\u67d3\u65b9\u5f0f\u6700\u521d\u5c06\u4ee5\u9876\u70b9\u7f13\u51b2\u533a\u4e3a\u5f62\u5f0f\u7684\u4e00\u7cfb\u5217\u9876\u70b9\u4f5c\u4e3a\u8f93\u5165\u3002\u4f46\u662f\uff0c\u4ec0\u4e48\u662f\u9876\u70b9\uff1f\u9876\u70b9\uff08Vertex\uff09\u662f\u63cf\u8ff0\u4e8c\u7ef4\u6216\u8005\u4e09\u7ef4\u7a7a\u95f4\u4e2d\u7684\u70b9\u7684\u6570\u636e\u7ed3\u6784\u3002\u5982\u4f55\u63cf\u8ff0\u4e09\u7ef4\u7a7a\u95f4\u4e2d\u7684\u4e00\u4e2a\u70b9\u5462\uff1f\u901a\u8fc7\u6307\u5b9a\u5176X\u3001Y\u548cZ\u5750\u6807\u3002\u4ec0\u4e48\u662f\u9876\u70b9\u7f13\u51b2\u533a\uff1f\u9876\u70b9\u7f13\u51b2\u533a\uff08Vertex Buffer\uff09\u662f\u4f7f\u7528\u9876\u70b9\u6570\u7ec4\u6765\u5305\u88c5\u6240\u6709\u9700\u8981\u6e32\u67d3\u7684\u9876\u70b9\u7684\u53e6\u4e00\u79cd\u6570\u636e\u7ed3\u6784\uff0c\u5e76\u4f7f\u8fd9\u4e9b\u6570\u636e\u80fd\u591f\u5728\u56fe\u5f62\u7ba1\u7ebf\u7684\u7740\u8272\u5668\u4e2d\u4f7f\u7528\u3002 \u8fd9\u4e9b\u9876\u70b9\u7531\u9876\u70b9\u7740\u8272\u5668\uff08Vertex Shader\uff09\u5904\u7406\uff0c\u9876\u70b9\u7740\u8272\u5668\u7684\u529f\u80fd\u662f\u8ba1\u7b97\u6bcf\u4e2a\u9876\u70b9\u5230\u5c4f\u5e55\u7a7a\u95f4\u4e2d\u7684\u6295\u5f71\u4f4d\u7f6e\u3002\u8be5\u7740\u8272\u5668\u8fd8\u53ef\u4ee5\u751f\u6210\u4e0e\u989c\u8272\u6216\u7eb9\u7406\u76f8\u5173\u7684\u5176\u4ed6\u8f93\u51fa\uff0c\u4f46\u5176\u4e3b\u8981\u76ee\u7684\u8fd8\u662f\u5c06\u9876\u70b9\u6295\u5f71\u5230\u5c4f\u5e55\u7a7a\u95f4\u4e2d\uff0c\u5373\u751f\u6210\u70b9\u3002 \u51e0\u4f55\u5904\u7406\u9636\u6bb5\uff08Geometry Processing\uff09\u5c06\u7531\u9876\u70b9\u7740\u8272\u5668\u53d8\u6362\u7684\u9876\u70b9\u8fde\u63a5\u6210\u4e09\u89d2\u5f62\u3002\u5b83\u4f9d\u7167\u9876\u70b9\u50a8\u5b58\u7684\u987a\u5e8f\uff0c\u4f7f\u7528\u4e0d\u540c\u7684\u6a21\u578b\u5bf9\u9876\u70b9\u8fdb\u884c\u5206\u7ec4\u3002\u4e3a\u4ec0\u4e48\u662f\u4e09\u89d2\u5f62\uff1f\u4e09\u89d2\u5f62\u5c31\u662f\u663e\u5361\u7684\u57fa\u672c\u5de5\u4f5c\u5355\u5143\uff0c\u5b83\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u51e0\u4f55\u5f62\u72b6\uff0c\u53ef\u4ee5\u7ec4\u5408\u548c\u53d8\u6362\uff0c\u4ee5\u6784\u5efa\u590d\u6742\u7684\u4e09\u7ef4\u573a\u666f\u3002\u6b64\u9636\u6bb5\u8fd8\u53ef\u4ee5\u4f7f\u7528\u7279\u5b9a\u7684\u7740\u8272\u5668\u6765\u5bf9\u9876\u70b9\u8fdb\u884c\u5206\u7ec4\u3002 \u5149\u6805\u5316\uff08Rasterization\uff09\u9636\u6bb5\u63a5\u6536\u6b64\u524d\u751f\u6210\u7684\u4e09\u89d2\u5f62\uff0c\u526a\u8f91\u5b83\u4eec\uff0c\u5e76\u5c06\u5b83\u4eec\u8f6c\u6362\u4e3a\u50cf\u7d20\u5927\u5c0f\u7684\u7247\u5143\u3002 \u8fd9\u4e9b\u7247\u5143\u5c06\u5728\u7247\u5143\u5904\u7406\u9636\u6bb5\uff08Fragment Processing\uff09\u88ab\u7247\u5143\u7740\u8272\u5668\uff08Fragment Shader\uff09\u4f7f\u7528\uff0c\u4ee5\u751f\u6210\u5199\u5165\u5230\u5e27\u7f13\u51b2\u533a\u7684\u50cf\u7d20\u7684\u6700\u7ec8\u989c\u8272\u3002\u5e27\u7f13\u51b2\u533a\uff08Framebuffer\uff09\u662f\u56fe\u5f62\u7ba1\u7ebf\u7684\u6700\u7ec8\u8f93\u51fa\uff0c\u5b83\u50a8\u5b58\u4e86\u6bcf\u4e2a\u50cf\u7d20\u5e94\u8be5\u88ab\u7ed8\u5236\u5230\u5c4f\u5e55\u4e0a\u7684\u503c\u3002 \u6ce8\u610f\uff0c\u663e\u5361\u88ab\u8bbe\u8ba1\u6210\u5e76\u884c\u5904\u7406\u4e0a\u8ff0\u6240\u6709\u64cd\u4f5c\uff0c\u8f93\u5165\u7684\u6570\u636e\u53ef\u4ee5\u5e76\u884c\u5904\u7406\u4ee5\u751f\u6210\u6700\u7ec8\u573a\u666f\u3002 \u8ba9\u6211\u4eec\u5f00\u59cb\u7f16\u5199\u7b2c\u4e00\u4e2a\u7740\u8272\u5668\u7a0b\u5e8f\u3002\u7740\u8272\u5668\u662f\u4f7f\u7528\u57fa\u4e8eANSI C\u7684OpenGL\u7740\u8272\u5668\u8bed\u8a00\uff08GLSL\uff09\u7f16\u5199\u7684\u3002\u9996\u5148\uff0c\u5728 resources \u76ee\u5f55\u4e0b\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a\u201c vertex.vs \u201d\uff08\u6269\u5c55\u540d\u4e3a\u9876\u70b9\u7740\u8272\u5668\u82f1\u6587\u7b80\u5199\uff09\u7684\u6587\u4ef6\uff0c\u5185\u5bb9\u5982\u4e0b\uff1a #version 330 layout (location=0) in vec3 position; void main() { gl_Position = vec4(position, 1.0); } \u7b2c\u4e00\u884c\u662f\u4e00\u4e2a\u8868\u793a\u6211\u4eec\u6b63\u4f7f\u7528\u7684GLSL\u8bed\u8a00\u7248\u672c\u7684\u6807\u8bc6\u7b26\u3002\u4e0b\u8868\u662fGLSL\u7248\u672c\u3001\u4e0e\u8be5\u7248\u672c\u5339\u914d\u7684OpenGL\u7248\u672c\u548c\u4f7f\u7528\u65b9\u6cd5\uff08\u6765\u81ea\u7ef4\u57fa\u767e\u79d1\uff1a https://en.wikipedia.org/wiki/OpenGL_Shading_Language#Versions \uff09\uff1a GLSL\u7248\u672c OpenGL\u7248\u672c \u7740\u8272\u5668\u6807\u8bc6\u7b26 1.10.59 2.0 #version 110 1.20.8 2.1 #version 120 1.30.10 3.0 #version 130 1.40.08 3.1 #version 140 1.50.11 3.2 #version 150 3.30.6 3.3 #version 330 4.00.9 4.0 #version 400 4.10.6 4.1 #version 410 4.20.11 4.2 #version 420 4.30.8 4.3 #version 430 4.40 4.4 #version 440 4.50 4.5 #version 450 \u7b2c\u4e8c\u884c\u6307\u5b9a\u6b64\u7740\u8272\u5668\u7684\u8f93\u5165\u683c\u5f0f\u3002OpenGL\u7f13\u51b2\u533a\u4e2d\u7684\u6570\u636e\u53ef\u4ee5\u662f\u6211\u4eec\u60f3\u8981\u7684\u4efb\u4f55\u6570\u636e\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u8be5\u8bed\u8a00\u4e0d\u4f1a\u5f3a\u8feb\u4f60\u4f20\u9012\u9884\u5b9a\u4e49\u8bed\u8a00\u7684\u4efb\u4f55\u6307\u5b9a\u6570\u636e\u7ed3\u6784\u3002\u4ece\u7740\u8272\u5668\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u5b83\u671f\u671b\u63a5\u6536\u4e00\u4e2a\u5b58\u6709\u6570\u636e\u7684\u7f13\u51b2\u533a\u3002\u5b83\u53ef\u4ee5\u662f\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u4e00\u4e2a\u6709\u4e00\u4e9b\u9644\u52a0\u4fe1\u606f\u7684\u4f4d\u7f6e\uff0c\u6216\u8005\u6211\u4eec\u60f3\u8981\u7684\u4efb\u4f55\u6570\u636e\u3002\u9876\u70b9\u7740\u8272\u5668\u53ea\u63a5\u6536\u6d6e\u70b9\u6570\u7ec4\u3002\u5f53\u586b\u5145\u7f13\u51b2\u533a\u65f6\uff0c\u6211\u4eec\u5b9a\u4e49\u8981\u7531\u7740\u8272\u5668\u5904\u7406\u7684\u7f13\u51b2\u533a\u5757\u3002 \u9996\u5148\uff0c\u9700\u8981\u628a\u8fd9\u4e9b\u5757\u53d8\u6210\u5bf9\u6211\u4eec\u6709\u610f\u4e49\u7684\u6570\u636e\u3002\u73b0\u5728\u89c4\u5b9a\u4ece\u4f4d\u7f6e0\u5f00\u59cb\uff0c\u6211\u4eec\u671f\u671b\u63a5\u6536\u7531\u4e09\u4e2a\u5c5e\u6027(X, Y, Z)\u7ec4\u6210\u7684\u5411\u91cf\u3002 \u7740\u8272\u5668\u6709\u4e2a main \u4ee3\u7801\u5757\uff0c\u5c31\u50cf\u4efb\u4f55C\u8bed\u8a00\u7a0b\u5e8f\u4e00\u6837\uff0c\u4e0a\u8ff0\u793a\u4f8b\u662f\u975e\u5e38\u7b80\u5355\u7684\u3002\u5b83\u53ea\u662f\u5c06\u63a5\u6536\u5230\u7684\u5750\u6807\u4e0d\u7ecf\u4efb\u4f55\u53d8\u6362\u5730\u8fd4\u56de\u5230 gl_Position \u3002\u4f60\u73b0\u5728\u53ef\u80fd\u60f3\u77e5\u9053\u4e3a\u4ec0\u4e48\u4e09\u4e2a\u5c5e\u6027\u7684\u5411\u91cf\u88ab\u8f6c\u6362\u6210\u56db\u4e2a\u5c5e\u6027\u7684\u5411\u91cf\uff08 vec4 \uff09\u3002\u8fd9\u662f\u56e0\u4e3a gl_Position \u4ec5\u63a5\u6536 vec4 \u7c7b\u578b\u7684\u6570\u636e\uff0c\u56e0\u4e3a\u5b83\u662f\u9f50\u6b21\u5750\u6807\uff08Homogeneous Coordinates\uff09\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5b83\u5e0c\u671b\u63a5\u6536\u5230\u5f62\u4f3c(X, Y, Z, W)\u7684\u4e1c\u897f\uff0c\u5176\u4e2dW\u4ee3\u8868\u4e00\u4e2a\u989d\u5916\u7684\u7ef4\u5ea6\u3002\u4e3a\u4ec0\u4e48\u8fd8\u8981\u6dfb\u52a0\u53e6\u4e00\u4e2a\u7ef4\u5ea6\uff1f\u5728\u6b64\u540e\u7684\u7ae0\u8282\u4e2d\uff0c\u4f60\u4f1a\u770b\u5230\u6211\u4eec\u9700\u8981\u505a\u7684\u5927\u90e8\u5206\u64cd\u4f5c\u90fd\u662f\u57fa\u4e8e\u5411\u91cf\u548c\u77e9\u9635\u7684\u3002\u5982\u679c\u6ca1\u6709\u989d\u5916\u7684\u7ef4\u5ea6\uff0c\u4e00\u4e9b\u64cd\u4f5c\u4e0d\u80fd\u7ec4\u5408\u3002\u4f8b\u5982\uff0c\u4e0d\u80fd\u628a\u65cb\u8f6c\u548c\u4f4d\u79fb\u64cd\u4f5c\u7ec4\u5408\u8d77\u6765\u3002\uff08\u5982\u679c\u4f60\u60f3\u5b66\u4e60\u66f4\u591a\u6709\u5173\u4e8e\u8fd9\u65b9\u9762\u7684\u77e5\u8bc6\uff0c\u8fd9\u4e2a\u989d\u5916\u7684\u7ef4\u5ea6\u5141\u8bb8\u6211\u4eec\u7ec4\u5408\u4eff\u5c04\u548c\u7ebf\u6027\u53d8\u6362\u3002\u4f60\u53ef\u4ee5\u901a\u8fc7\u9605\u8bfb\u300a3D Math Primer for Graphics and Game Development\u300b\uff08\u4f5c\u8005\u662fFletcher Dunn \u548c Ian Parberry\uff09\u6765\u66f4\u591a\u5730\u4e86\u89e3\u8fd9\u4e00\u70b9\u3002\uff09 \u73b0\u5728\u6765\u770b\u770b\u6211\u4eec\u7684\u7b2c\u4e00\u4e2a\u7247\u5143\u7740\u8272\u5668\u3002\u5728 resources \u76ee\u5f55\u4e0b\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a fragment.fs \uff08\u6269\u5c55\u540d\u7247\u5143\u7740\u8272\u5668\u82f1\u6587\u7b80\u5199\uff09\u7684\u6587\u4ef6\uff0c\u5185\u5bb9\u5982\u4e0b\uff1a #version 330 out vec4 fragColor; void main() { fragColor = vec4(0.0, 0.5, 0.5, 1.0); } \u8be5\u7ed3\u6784\u4e0e\u6211\u4eec\u7684\u9876\u70b9\u7740\u8272\u5668\u975e\u5e38\u76f8\u4f3c\u3002\u73b0\u5728\uff0c\u5b83\u5c06\u4e3a\u6bcf\u4e2a\u7247\u5143\u8bbe\u7f6e\u56fa\u5b9a\u7684\u989c\u8272\u3002\u8f93\u51fa\u503c\u88ab\u5b9a\u4e49\u4e3a\u7b2c\u4e8c\u884c\u7684 vec4 \u7c7b\u578b\u7684 fragColor \u53d8\u91cf\u3002 \u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u521b\u5efa\u4e86\u7740\u8272\u5668\uff0c\u8be5\u5982\u4f55\u4f7f\u7528\u5b83\u4eec\u5462\uff1f\u4ee5\u4e0b\u662f\u6211\u4eec\u8981\u505a\u7684\u4e00\u7cfb\u5217\u6b65\u9aa4\uff1a 1. \u521b\u5efaOpenGL\u7a0b\u5e8f\u3002 2. \u8f7d\u5165\u9876\u70b9\u548c\u7247\u5143\u7740\u8272\u5668\u6587\u4ef6\u3002 3. \u4e3a\u6bcf\u4e2a\u7740\u8272\u5668\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u7740\u8272\u5668\u7a0b\u5e8f\u5e76\u6307\u5b9a\u5b83\u7684\u7c7b\u578b\uff08\u9876\u70b9\u6216\u7247\u5143\uff09\u3002 4. \u7f16\u8bd1\u7740\u8272\u5668\u3002 5. \u5c06\u7740\u8272\u5668\u7ed1\u5b9a\u5230OpenGL\u7a0b\u5e8f\u4e0a\u3002 6. \u8fde\u63a5\u7a0b\u5e8f\u3002 \u6700\u540e\uff0c\u7740\u8272\u5668\u5c06\u4f1a\u88ab\u8f7d\u5165\u5230\u663e\u5361\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5f15\u7528\u7a0b\u5e8fID\u6765\u4f7f\u7528\u5b83\u3002 package org.lwjglb.engine.graph; import static org.lwjgl.opengl.GL20.*; public class ShaderProgram { private final int programId; private int vertexShaderId; private int fragmentShaderId; public ShaderProgram() throws Exception { programId = glCreateProgram(); if (programId == 0) { throw new Exception(\"Could not create Shader\"); } } public void createVertexShader(String shaderCode) throws Exception { vertexShaderId = createShader(shaderCode, GL_VERTEX_SHADER); } public void createFragmentShader(String shaderCode) throws Exception { fragmentShaderId = createShader(shaderCode, GL_FRAGMENT_SHADER); } protected int createShader(String shaderCode, int shaderType) throws Exception { int shaderId = glCreateShader(shaderType); if (shaderId == 0) { throw new Exception(\"Error creating shader. Type: \" + shaderType); } glShaderSource(shaderId, shaderCode); glCompileShader(shaderId); if (glGetShaderi(shaderId, GL_COMPILE_STATUS) == 0) { throw new Exception(\"Error compiling Shader code: \" + glGetShaderInfoLog(shaderId, 1024)); } glAttachShader(programId, shaderId); return shaderId; } public void link() throws Exception { glLinkProgram(programId); if (glGetProgrami(programId, GL_LINK_STATUS) == 0) { throw new Exception(\"Error linking Shader code: \" + glGetProgramInfoLog(programId, 1024)); } if (vertexShaderId != 0) { glDetachShader(programId, vertexShaderId); } if (fragmentShaderId != 0) { glDetachShader(programId, fragmentShaderId); } glValidateProgram(programId); if (glGetProgrami(programId, GL_VALIDATE_STATUS) == 0) { System.err.println(\"Warning validating Shader code: \" + glGetProgramInfoLog(programId, 1024)); } } public void bind() { glUseProgram(programId); } public void unbind() { glUseProgram(0); } public void cleanup() { unbind(); if (programId != 0) { glDeleteProgram(programId); } } } ShaderProgram \u7c7b\u7684\u6784\u9020\u51fd\u6570\u5728OpenGL\u4e2d\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u7a0b\u5e8f\uff0c\u5e76\u63d0\u4f9b\u6dfb\u52a0\u9876\u70b9\u548c\u7247\u5143\u7740\u8272\u5668\u7684\u65b9\u6cd5\u3002\u8fd9\u4e9b\u7740\u8272\u5668\u88ab\u7f16\u8bd1\u5e76\u7ed1\u5b9a\u5230OpenGL\u7a0b\u5e8f\u4e2d\u3002\u5f53\u6240\u6709\u7684\u7740\u8272\u5668\u90fd\u88ab\u7ed1\u5b9a\u65f6\uff0c\u5e94\u8be5\u8c03\u7528 link \u65b9\u6cd5\uff0c\u6765\u8fde\u63a5\u6240\u6709\u4ee3\u7801\u5e76\u9a8c\u8bc1\u6240\u6709\u64cd\u4f5c\u90fd\u5df2\u6b63\u786e\u5730\u5b8c\u6210\u3002 \u4e00\u65e6\u7740\u8272\u5668\u7a0b\u5e8f\u88ab\u8fde\u63a5\uff0c\u7f16\u8bd1\u7684\u9876\u70b9\u548c\u7247\u5143\u7740\u8272\u5668\u53ef\u4ee5\u88ab\u91ca\u653e\uff08\u901a\u8fc7\u8c03\u7528 glDetachShader \u65b9\u6cd5\uff09\u3002 \u9a8c\u8bc1\u662f\u901a\u8fc7\u8c03\u7528 glValidateProgram \u65b9\u6cd5\u5b8c\u6210\u7684\u3002\u6b64\u65b9\u6cd5\u4e3b\u8981\u7528\u4e8e\u8c03\u8bd5\uff0c\u5f53\u6e38\u620f\u5230\u8fbe\u751f\u4ea7\u9636\u6bb5\u65f6\uff0c\u5e94\u5c06\u5176\u5220\u9664\u3002\u6b64\u65b9\u6cd5\u5c06\u9a8c\u8bc1\u5728 \u5f53\u524dOpenGL\u72b6\u6001 \u4e0b\u7740\u8272\u5668\u662f\u5426\u6b63\u786e\u3002\u8fd9\u610f\u5473\u7740\uff0c\u5373\u4f7f\u7740\u8272\u5668\u662f\u6b63\u786e\u7684\uff0c\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u4e5f\u53ef\u80fd\u9a8c\u8bc1\u5931\u8d25\uff0c\u8fd9\u662f\u56e0\u4e3a\u5f53\u524d\u72b6\u6001\u4e0d\u591f\u5b8c\u6574\uff08\u4e00\u4e9b\u6570\u636e\u53ef\u80fd\u5c1a\u672a\u52a0\u8f7d\uff09\uff0c\u65e0\u6cd5\u8fd0\u884c\u7740\u8272\u5668\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u9519\u8bef\u4fe1\u606f\u8f93\u51fa\u5230\u6807\u51c6\u9519\u8bef\u8f93\u51fa\u4e2d\u3002 ShaderProgram \u7c7b\u8fd8\u63d0\u4f9b\u4e86\u5728\u6e32\u67d3\u65f6\u6fc0\u6d3b\u8be5\u7a0b\u5e8f\uff08\u7ed1\u5b9a\uff09\u548c\u505c\u6b62\u4f7f\u7528\u5b83\uff08\u89e3\u7ed1\uff09\u7684\u65b9\u6cd5\u3002\u6700\u540e\uff0c\u5b83\u63d0\u4f9b\u4e86\u4e00\u4e2a cleanup \u65b9\u6cd5\uff0c\u7528\u4e8e\u5728\u5b83\u4e0d\u518d\u88ab\u9700\u8981\u65f6\uff0c\u91ca\u653e\u6240\u6709\u8d44\u6e90\u3002 \u65e2\u7136\u6709\u4e00\u4e2a\u6e05\u7406\u65b9\u6cd5\uff0c\u8ba9\u6211\u4eec\u66f4\u6539 IGameLogic \u63a5\u53e3\u6765\u6dfb\u52a0\u4e00\u4e2a cleanup \u65b9\u6cd5\uff1a void cleanup(); \u8be5\u65b9\u6cd5\u5c06\u5728\u6e38\u620f\u5faa\u73af\u7ed3\u675f\u65f6\u8c03\u7528\uff0c\u6240\u4ee5\u9700\u8981\u4fee\u6539 GameEngine \u7c7b\u7684 run \u65b9\u6cd5\uff1a @Override public void run() { try { init(); gameLoop(); } catch (Exception excp) { excp.printStackTrace(); } finally { cleanup(); } } \u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u5728 Renderer \u7c7b\u7684 init \u65b9\u6cd5\u4e2d\u4f7f\u7528\u7740\u8272\u5668\u6765\u663e\u793a\u4e00\u4e2a\u4e09\u89d2\u5f62\u3002\u9996\u5148\uff0c\u6211\u4eec\u8981\u521b\u5efa\u7740\u8272\u5668\u7a0b\u5e8f\uff1a public void init() throws Exception { shaderProgram = new ShaderProgram(); shaderProgram.createVertexShader(Utils.loadResource(\"/vertex.vs\")); shaderProgram.createFragmentShader(Utils.loadResource(\"/fragment.fs\")); shaderProgram.link(); } \u6211\u4eec\u5df2\u7ecf\u521b\u5efa\u4e86\u4e00\u4e2a\u5de5\u5177\u7c7b\uff0c\u5b83\u63d0\u4f9b\u4e86\u4e00\u4e2a\u4ece\u7c7b\u8def\u5f84\u4e2d\u53d6\u5f97\u6587\u4ef6\u5185\u5bb9\u7684\u65b9\u6cd5\uff0c\u6b64\u65b9\u6cd5\u7528\u4e8e\u53d6\u5f97\u6211\u4eec\u7684\u7740\u8272\u5668\u4ee3\u7801\u3002 \u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u628a\u4e09\u89d2\u5f62\u5b9a\u4e49\u4e3a\u4e00\u7ec4\u6d6e\u70b9\u6570\uff0c\u521b\u5efa\u4e00\u4e2a\u4e00\u7ef4\u6d6e\u70b9\u6570\u7ec4\uff0c\u5b83\u5c06\u5b9a\u4e49\u4e09\u89d2\u5f62\u7684\u9876\u70b9\u3002\u5982\u4f60\u6240\u89c1\uff0c\u6570\u7ec4\u4e2d\u6ca1\u6709\u6570\u636e\u7ed3\u6784\u3002\u5c31\u76ee\u524d\u800c\u8a00\uff0cOpenGL\u65e0\u6cd5\u77e5\u9053\u8be5\u6570\u7ec4\u7684\u7ed3\u6784\uff0c\u8fd9\u53ea\u662f\u4e00\u7ec4\u6d6e\u70b9\u6570\uff1a float[] vertices = new float[]{ 0.0f, 0.5f, 0.0f, -0.5f, -0.5f, 0.0f, 0.5f, -0.5f, 0.0f }; \u4e0b\u56fe\u4f53\u73b0\u4e86\u5728\u5750\u6807\u7cfb\u4e2d\u7684\u4e09\u89d2\u5f62\u3002 \u73b0\u5728\u6211\u4eec\u6709\u4e86\u5750\u6807\uff0c\u9700\u8981\u628a\u5b83\u4eec\u50a8\u5b58\u5230\u663e\u5361\u4e2d\uff0c\u5e76\u544a\u8bc9OpenGL\u5b83\u7684\u6570\u636e\u7ed3\u6784\u3002\u73b0\u5728\u5c06\u4ecb\u7ecd\u4e24\u4e2a\u91cd\u8981\u7684\u6982\u5ff5\uff0c\u9876\u70b9\u6570\u7ec4\u5bf9\u8c61\uff08Vertex Array Object\uff0cVAO\uff09\u548c\u9876\u70b9\u7f13\u51b2\u5bf9\u8c61\uff08Vertex Buffer Object\uff0cVBO\uff09\u3002\u5982\u679c\u4f60\u5bf9\u63a5\u4e0b\u6765\u7684\u4ee3\u7801\u611f\u5230\u56f0\u60d1\uff0c\u8bf7\u8bb0\u4f4f\uff0c\u73b0\u5728\u6240\u505a\u7684\u662f\u628a\u5c06\u8981\u7ed8\u5236\u7684\u6a21\u578b\u5bf9\u8c61\u7684\u6570\u636e\u4f20\u9012\u5230\u663e\u5b58\u4e2d\u3002\u5f53\u50a8\u5b58\u5b83\u7684\u65f6\u5019\uff0c\u6211\u4eec\u4f1a\u5f97\u5230\u4e00\u4e2aID\uff0c\u7a0d\u540e\u7ed8\u5236\u65f6\u4f1a\u4f7f\u7528\u5b83\u3002 \u5148\u4ecb\u7ecd\u9876\u70b9\u7f13\u51b2\u5bf9\u8c61\uff08VBO\uff09\u5427\uff0cVBO\u53ea\u662f\u663e\u5b58\u4e2d\u5b58\u50a8\u9876\u70b9\u7684\u5185\u5b58\u7f13\u51b2\u533a\u3002\u8fd9\u662f\u7528\u6765\u6682\u5b58\u4e00\u7ec4\u7528\u4e8e\u5efa\u6a21\u4e09\u89d2\u5f62\u7684\u6d6e\u70b9\u6570\u7684\u5730\u65b9\u3002\u5982\u4e0a\u6240\u8ff0\uff0cOpenGL\u5bf9\u6211\u4eec\u7684\u6570\u636e\u7ed3\u6784\u4e00\u65e0\u6240\u77e5\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5b83\u4e0d\u4ec5\u53ef\u4ee5\u50a8\u5b58\u5750\u6807\uff0c\u8fd8\u53ef\u4ee5\u50a8\u5b58\u5176\u4ed6\u4fe1\u606f\uff0c\u6bd4\u5982\u7eb9\u7406\u3001\u989c\u8272\u7b49\u3002 \u9876\u70b9\u6570\u7ec4\u5bf9\u8c61\uff08VAO\uff09\u662f\u4e00\u4e2a\u5bf9\u8c61\uff0c\u50a8\u5b58\u4e00\u4e2a\u6216\u591a\u4e2a\u901a\u5e38\u88ab\u79f0\u4e3a\u5c5e\u6027\u5217\u8868\u7684VBO\u3002\u6bcf\u4e2a\u5c5e\u6027\u5217\u8868\u53ef\u4ee5\u4fdd\u5b58\u4e00\u79cd\u7c7b\u578b\u7684\u6570\u636e\uff1a\u4f4d\u7f6e\u3001\u989c\u8272\u3001\u7eb9\u7406\u7b49\u3002\u5728\u6bcf\u4e2a\u6e32\u67d3\u95f4\u9694\u4e2d\uff0c\u4f60\u53ef\u4ee5\u81ea\u7531\u5730\u50a8\u5b58\u6240\u9700\u7684\u4efb\u4f55\u6570\u636e\u3002 \u4e00\u4e2aVAO\u5c31\u50cf\u662f\u4e00\u4e2a\u5305\u88c5\uff0c\u5b83\u6309\u4e00\u7ec4\u5b9a\u4e49\u5bf9\u50a8\u5b58\u5728\u663e\u5361\u4e2d\u7684\u6570\u636e\u5206\u7ec4\u3002\u5f53\u521b\u5efa\u4e00\u4e2aVAO\u65f6\uff0c\u6211\u4eec\u5f97\u5230\u4e00\u4e2aID\u3002\u6211\u4eec\u4f7f\u7528\u6b64ID\u6765\u6e32\u67d3\u5b83\u548c\u4f7f\u7528\u5b83\u5728\u521b\u5efa\u8fc7\u7a0b\u4e2d\u5b9a\u4e49\u7684\u6570\u636e\u3002 \u8ba9\u6211\u4eec\u7ee7\u7eed\u7f16\u5199\u793a\u4f8b\u4ee3\u7801\u3002\u9996\u5148\u8981\u505a\u7684\u4e8b\u5c31\u662f\u628a\u6d6e\u70b9\u6570\u50a8\u5b58\u5728\u4e00\u4e2a FloatBuffer \u4e2d\u3002\u8fd9\u4e3b\u8981\u662f\u56e0\u4e3a\u6211\u4eec\u5fc5\u987b\u4f7f\u7528\u57fa\u4e8eC\u8bed\u8a00\u7684OpenGL\u5e93\u7684\u63a5\u53e3\uff0c\u6240\u4ee5\u5fc5\u987b\u628a\u6d6e\u70b9\u6570\u7ec4\u8f6c\u6362\u6210\u53ef\u4ee5\u7531\u5e93\u7ba1\u7406\u7684\u4e1c\u897f\u3002 FloatBuffer verticesBuffer = MemoryUtil.memAllocFloat(vertices.length); verticesBuffer.put(vertices).flip(); \u6211\u4eec\u4f7f\u7528 MemoryUtil \u7c7b\u6765\u5728\u5806\u5916\u5185\u5b58\u4e2d\u521b\u5efa\u4e86\u4e00\u4e2a\u7f13\u51b2\u533a\uff0c\u4ee5\u4fbfOpenGL\u5e93\u8bbf\u95ee\u5b83\u3002\u5728\u50a8\u5b58\u4e86\u6570\u636e\uff08\u8c03\u7528 put \u65b9\u6cd5\uff09\u4e4b\u540e\uff0c\u6211\u4eec\u9700\u8981\u8c03\u7528 flip \u65b9\u6cd5\u5c06\u7f13\u51b2\u533a\u7684\u4f4d\u7f6e\u91cd\u7f6e\u4e3a0\uff08\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u5df2\u7ecf\u5b8c\u6210\u4e86\u5bf9\u5b83\u7684\u5199\u5165\uff09\u3002\u8bb0\u4f4f\uff0cJava\u4e2d\u7684\u5bf9\u8c61\uff0c\u88ab\u5206\u914d\u5728\u4e00\u4e2a\u53eb\u5806\uff08Heap\uff09\u7684\u5185\u5b58\u7a7a\u95f4\u3002\u5806\u662fJVM\u5185\u5b58\u4e2d\u4fdd\u7559\u7684\u4e00\u5927\u5806\u5185\u5b58\uff0c\u50a8\u5b58\u5728\u5806\u4e2d\u7684\u5bf9\u8c61\u4e0d\u80fd\u901a\u8fc7\u672c\u5730\u4ee3\u7801\u8bbf\u95ee\uff08JNI\uff0c\u8fd9\u79cd\u673a\u5236\u4f7f\u5f97Java\u4e0d\u80fd\u76f4\u63a5\u8c03\u7528\u672c\u5730\u4ee3\u7801\uff09\u3002Java\u4ee3\u7801\u548c\u672c\u5730\u4ee3\u7801\u76f4\u63a5\u5171\u4eab\u5185\u5b58\u6570\u636e\u7684\u552f\u4e00\u65b9\u6cd5\u662f\u5728Java\u4e2d\u76f4\u63a5\u5730\u5206\u914d\u5185\u5b58\u3002 \u5982\u679c\u4f60\u6765\u81eaLWJGL\u7684\u65e7\u7248\u672c\uff0c\u5f3a\u8c03\u4e00\u4e9b\u8981\u70b9\u662f\u5f88\u91cd\u8981\u7684\u3002\u4f60\u53ef\u80fd\u6ce8\u610f\u5230\u4e86\uff0c\u6211\u4eec\u4e0d\u4f7f\u7528\u5de5\u5177\u7c7b BufferUtils \uff0c\u800c\u4f7f\u7528 MemoryUtil \u7c7b\u6765\u521b\u5efa\u7f13\u51b2\u533a\u3002\u8fd9\u662f\u7531\u4e8e BufferUtils \u4e0d\u662f\u975e\u5e38\u6709\u6548\u7684\uff0c\u5e76\u4e14\u4ec5\u88ab\u7528\u4e8e\u5411\u4e0b\u517c\u5bb9\u3002LWJGL3\u63d0\u4f9b\u4e86\u4e24\u79cd\u7f13\u51b2\u533a\u7684\u7ba1\u7406\u65b9\u6cd5\uff1a \u81ea\u52a8\u7ba1\u7406\u7f13\u51b2\u533a\uff0c\u5373\u7531\u5783\u573e\u56de\u6536\u5668\u81ea\u52a8\u56de\u6536\u7684\u7f13\u51b2\u533a\u3002\u8fd9\u4e9b\u7f13\u51b2\u533a\u9002\u7528\u4e8e\u77ed\u6682\u7684\u64cd\u4f5c\uff0c\u6216\u8005\u7528\u4e8e\u4f20\u9012\u5230GPU\u7684\u6570\u636e\uff0c\u5e76\u4e14\u4e0d\u9700\u8981\u50a8\u5b58\u4e8e\u8fdb\u7a0b\u5185\u5b58\u4e2d\u3002\u8fd9\u662f\u901a\u8fc7\u4f7f\u7528 org.lwjgl.system.MemoryStack \u5b9e\u73b0\u7684\u3002 \u624b\u52a8\u7ba1\u7406\u7f13\u51b2\u533a\u3002\u6b64\u60c5\u51b5\u4e0b\uff0c\u4e00\u65e6\u5b8c\u6210\u64cd\u4f5c\uff0c\u6211\u4eec\u9700\u8981\u5c0f\u5fc3\u5730\u91ca\u653e\u5b83\u4eec\u3002\u8fd9\u4e9b\u7f13\u51b2\u533a\u9002\u7528\u4e8e\u957f\u65f6\u95f4\u7684\u64cd\u4f5c\u6216\u8005\u5927\u91cf\u7684\u6570\u636e\u3002\u8fd9\u662f\u901a\u8fc7\u4f7f\u7528 MemoryUtil \u7c7b\u5b9e\u73b0\u7684\u3002 \u4f60\u53ef\u4ee5\u5728\u6b64\u5904\u67e5\u9605\u7ec6\u8282\uff1a https://blog.lwjgl.org/memory-management-in-lwjgl-3/ \u5728\u6b64\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u7684\u6570\u636e\u88ab\u53d1\u9001\u5230GPU\uff0c\u8fd9\u6837\u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u81ea\u52a8\u7ba1\u7406\u7684\u7f13\u51b2\u533a\u3002\u4f46\u7a0d\u540e\u6211\u4eec\u5c06\u4f7f\u7528\u5b83\u4eec\u6765\u50a8\u5b58\u53ef\u80fd\u9700\u8981\u624b\u52a8\u7ba1\u7406\u7684\u5927\u91cf\u6570\u636e\uff0c\u8fd9\u5c31\u662f\u4f7f\u7528 MemoryUtil \u7c7b\u7684\u539f\u56e0\uff0c\u56e0\u6b64\uff0c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u4eec\u8981\u5728\u6700\u540e\u4e00\u4e2a\u5757\u4e2d\u91ca\u653e\u7f13\u51b2\u533a\u8d44\u6e90\u3002\u5728\u4e0b\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u5b66\u4e60\u5982\u4f55\u4f7f\u7528\u81ea\u52a8\u7ba1\u7406\u7f13\u51b2\u533a\u3002 \u73b0\u5728\u9700\u8981\u521b\u5efaVAO\u7136\u540e\u7ed1\u5b9a\u5b83\uff1a vaoId = glGenVertexArrays(); glBindVertexArray(vaoId); \u7136\u540e\u9700\u8981\u521b\u5efaVBO\uff0c\u7ed1\u5b9a\u5b83\u5e76\u5c06\u6570\u636e\u8f93\u5165\uff1a vboId = glGenBuffers(); glBindBuffer(GL_ARRAY_BUFFER, vboId); glBufferData(GL_ARRAY_BUFFER, verticesBuffer, GL_STATIC_DRAW); glEnableVertexAttribArray(0); \u63a5\u4e0b\u6765\u662f\u6700\u91cd\u8981\u7684\u90e8\u5206\u3002\u6211\u4eec\u9700\u8981\u5b9a\u4e49\u6570\u636e\u7ed3\u6784\uff0c\u5e76\u5c06\u5176\u50a8\u5b58\u5728VAO\u7684\u5c5e\u6027\u5217\u8868\u4e2d\uff0c\u8fd9\u662f\u7528\u4e0b\u8ff0\u4ee3\u7801\u5b8c\u6210\u7684\uff1a glVertexAttribPointer(0, 3, GL_FLOAT, false, 0, 0); \u5b83\u7684\u53c2\u6570\u662f\uff1a index: \u6307\u5b9a\u7740\u8272\u5668\u671f\u671b\u6b64\u6570\u636e\u7684\u4f4d\u7f6e\u3002 size: \u6307\u5b9a\u6bcf\u4e2a\u9876\u70b9\u5c5e\u6027\u7684\u6570\u636e\u6570\uff08\u4ece1\u52304\uff09\u3002\u73b0\u5728\uff0c\u6211\u4eec\u4f7f\u7528\u4e09\u7ef4\u5750\u6807\uff0c\u6240\u4ee5\u5b83\u5e94\u8be5\u662f3\u3002 type: \u6307\u5b9a\u6570\u7ec4\u4e2d\u6bcf\u4e2a\u6570\u636e\u7684\u7c7b\u578b\uff0c\u73b0\u5728\u662f\u6d6e\u70b9\u6570\u3002 normalized: \u6307\u5b9a\u503c\u662f\u5426\u5e94\u5f52\u4e00\u5316\u3002 stride: \u6307\u5b9a\u8fde\u7eed\u9876\u70b9\u6570\u636e\u4e4b\u95f4\u7684\u5b57\u8282\u504f\u79fb\u91cf\uff08\u7a0d\u540e\u6211\u4eec\u518d\u89e3\u91ca\uff09\u3002 offset: \u6307\u5b9a\u7f13\u51b2\u533a\u4e2d\u7b2c\u4e00\u4e2a\u6570\u636e\u7684\u504f\u79fb\u91cf\u3002 \u5728\u5b8c\u6210\u4e86VBO\u64cd\u4f5c\u4e4b\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u89e3\u9664\u5b83\u548cVAO\u7684\u7ed1\u5b9a\uff08\u7ed1\u5b9a\u52300\uff09\u3002 // \u89e3\u7ed1VBO glBindBuffer(GL_ARRAY_BUFFER, 0); // \u89e3\u7ed1VAO glBindVertexArray(0); \u4e00\u65e6\u5b8c\u6210\u64cd\u4f5c\uff0c\u6211\u4eec \u5fc5\u987b \u901a\u8fc7\u624b\u52a8\u8c03\u7528 memFree \u65b9\u6cd5\u91ca\u653e\u7531 FloatBuffer \u5360\u7528\u7684\u5806\u5916\u5185\u5b58\uff0c\u56e0\u4e3aJava\u5783\u573e\u56de\u6536\u4e0d\u4f1a\u6e05\u7406\u5206\u914d\u7684\u5806\u5916\u5185\u5b58\u3002 if (verticesBuffer != null) { MemoryUtil.memFree(verticesBuffer); } \u8fd9\u5c31\u662f init \u65b9\u6cd5\u5e94\u6709\u7684\u4ee3\u7801\u3002\u6211\u4eec\u7684\u6570\u636e\u5df2\u7ecf\u5728\u663e\u5361\u4e2d\u51c6\u5907\u4f7f\u7528\u4e86\uff0c\u73b0\u5728\u53ea\u9700\u8981\u4fee\u6539 render \u65b9\u6cd5\u5728\u6e38\u620f\u5faa\u73af\u4e2d\u8fdb\u884c\u6e32\u67d3\u3002 public void render(Window window) { clear(); if ( window.isResized() ) { glViewport(0, 0, window.getWidth(), window.getHeight()); window.setResized(false); } shaderProgram.bind(); // \u7ed1\u5b9aVAO glBindVertexArray(vaoId); // \u7ed8\u5236\u9876\u70b9 glDrawArrays(GL_TRIANGLES, 0, 3); // \u8fd8\u539f\u72b6\u6001 glBindVertexArray(0); shaderProgram.unbind(); } \u5982\u4f60\u6240\u89c1\uff0c\u6211\u4eec\u53ea\u9700\u8981\u6e05\u7406\u7a97\u53e3\uff0c\u7ed1\u5b9a\u7740\u8272\u5668\u7a0b\u5e8f\uff0c\u7ed1\u5b9aVAO\uff0c\u7ed8\u5236\u50a8\u5b58\u5728VAO\u5173\u8054\u7684VBO\u4e2d\u7684\u9876\u70b9\uff0c\u7136\u540e\u8fd8\u539f\u72b6\u6001\uff0c\u4ec5\u6b64\u800c\u5df2\u3002 \u6211\u4eec\u8fd8\u5728 Renderer \u7c7b\u4e2d\u6dfb\u52a0\u4e86\u4e00\u4e2a cleanup \u65b9\u6cd5\u7528\u4e8e\u91ca\u653e\u8d44\u6e90\u3002 public void cleanup() { if (shaderProgram != null) { shaderProgram.cleanup(); } glDisableVertexAttribArray(0); // \u5220\u9664VBO glBindBuffer(GL_ARRAY_BUFFER, 0); glDeleteBuffers(vboId); // \u5220\u9664VAO glBindVertexArray(0); glDeleteVertexArrays(vaoId); } \u5c31\u8fd9\u6837\uff01\u5982\u679c\u4f60\u5c0f\u5fc3\u5730\u6309\u7740\u4e0a\u8ff0\u6b65\u9aa4\u505a\uff0c\u4f60\u4f1a\u770b\u5230\u7c7b\u4f3c\u7684\u56fe\u50cf\u3002 \u8fd9\u5c31\u662f\u6211\u4eec\u7684\u7b2c\u4e00\u4e2a\u4e09\u89d2\u5f62\uff01\u4f60\u4e5f\u8bb8\u4f1a\u60f3\u8fd9\u5e76\u4e0d\u4f1a\u4f7f\u5b83\u6210\u4e3a\u524d\u5341\u540d\u7684\u6e38\u620f\uff0c\u4f60\u7684\u60f3\u6cd5\u662f\u5bf9\u7684\u3002\u4f60\u4e5f\u53ef\u4ee5\u8ba4\u4e3a\u8fd9\u662f\u4e00\u4ef6\u65e0\u804a\u7684\u4e8b\u60c5\u6765\u753b\u4e00\u4e2a\u65e0\u804a\u7684\u4e09\u89d2\u5f62\u3002\u4f46\u8bf7\u8bb0\u4f4f\uff0c\u6211\u4eec\u6b63\u5728\u4ecb\u7ecd\u5173\u952e\u7684\u6982\u5ff5\uff0c\u5e76\u51c6\u5907\u57fa\u4e8e\u67b6\u6784\u6765\u505a\u66f4\u590d\u6742\u7684\u4e8b\u60c5\uff0c\u8bf7\u8010\u5fc3\u7b49\u5f85\uff0c\u7ee7\u7eed\u9605\u8bfb\u3002","title":"\u6e32\u67d3"},{"location":"04-rendering/#rendering","text":"\u5728\u672c\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u5b66\u4e60\u7528OpenGL\u6e32\u67d3\u573a\u666f\u65f6\u8981\u505a\u7684\u4e8b\u9879\u3002\u5982\u679c\u4f60\u5df2\u7ecf\u4e60\u60ef\u4e86OpenGL\u7684\u65e7\u7248\u672c\uff0c\u4e60\u60ef\u4e86\u4f7f\u7528\u56fa\u5b9a\u7ba1\u7ebf\uff0c\u4f60\u53ef\u80fd\u4f1a\u8df3\u8fc7\u8fd9\u4e00\u7ae0\uff0c\u4e0d\u60f3\u77e5\u9053\u4e3a\u4ec0\u4e48\u5b83\u9700\u8981\u8fd9\u4e48\u590d\u6742\u3002\u5b83\u5176\u5b9e\u66f4\u7b80\u5355\u3001\u66f4\u7075\u6d3b\uff0c\u4f60\u53ea\u9700\u8981\u7ed9\u5b83\u4e00\u4e2a\u8868\u73b0\u7684\u673a\u4f1a\u3002\u73b0\u4ee3OpenGL\u4f7f\u4f60\u53ea\u9700\u8003\u8651\u4e00\u4e2a\u95ee\u9898\uff0c\u8fd9\u53ef\u4ee5\u4f7f\u4f60\u4ee5\u66f4\u5408\u7406\u7684\u65b9\u5f0f\u7ec4\u7ec7\u4ee3\u7801\u548c\u5f00\u53d1\u3002 \u5c06\u4e09\u7ef4\u8868\u793a\u6620\u5c04\u5230\u4e8c\u7ef4\u5c4f\u5e55\u7684\u4e00\u7cfb\u5217\u6b65\u9aa4\u88ab\u7edf\u79f0\u4e3a\u56fe\u5f62\u7ba1\u7ebf\uff08Graphics Pipeline\uff09\u3002OpenGL\u6700\u521d\u7684\u7248\u672c\u4f7f\u7528\u4e86\u4e00\u4e2a\u88ab\u79f0\u4e3a\u56fa\u5b9a\u7ba1\u7ebf\uff08Fixed-function Pipeline\uff09\u7684\u6a21\u578b\u3002\u8be5\u6a21\u578b\u5728\u7ed8\u5236\u8fc7\u7a0b\u4e2d\u5b9a\u4e49\u4e86\u4e00\u7ec4\u56fa\u5b9a\u7684\u64cd\u4f5c\u6b65\u9aa4\uff0c\u7a0b\u5e8f\u5458\u88ab\u6bcf\u4e00\u6b65\u9aa4\u53ef\u7528\u7684\u51fd\u6570\u96c6\u7ea6\u675f\uff0c\u53ef\u4ee5\u4f7f\u7528\u7684\u6548\u679c\u548c\u53ef\u8fdb\u884c\u7684\u64cd\u4f5c\u53d7\u5230API\uff08\u4f8b\u5982\uff0c\u201c\u8bbe\u7f6e\u96fe\u201d\u6216\u201c\u6dfb\u52a0\u5149\u7167\u201d\uff09\u7684\u9650\u5236\uff0c\u4f46\u662f\u8fd9\u4e9b\u529f\u80fd\u7684\u5b9e\u73b0\u662f\u56fa\u5b9a\u7684\uff0c\u5e76\u4e14\u4e0d\u80fd\u4fee\u6539\u3002 \u56fe\u5f62\u7ba1\u7ebf\u7531\u4ee5\u4e0b\u64cd\u4f5c\u6b65\u9aa4\u7ec4\u6210\uff1a OpenGL 2.0 \u5f15\u5165\u4e86\u53ef\u7f16\u7a0b\u7ba1\u7ebf\uff08Programmable Pipeline\uff09\u7684\u6982\u5ff5\u3002\u5728\u8be5\u6a21\u578b\u4e2d\uff0c\u7ec4\u6210\u56fe\u5f62\u7ba1\u7ebf\u7684\u4e0d\u540c\u6b65\u9aa4\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528\u4e00\u7ec4\u53eb\u505a\u7740\u8272\u5668\uff08Shader\uff09\u7684\u7279\u5b9a\u7a0b\u5e8f\u6765\u63a7\u5236\u6216\u7f16\u7a0b\u3002\u4e0b\u56fe\u7b80\u5355\u7684\u5c55\u793a\u4e86OpenGL\u53ef\u7f16\u7a0b\u7ba1\u7ebf\uff1a \u8be5\u6e32\u67d3\u65b9\u5f0f\u6700\u521d\u5c06\u4ee5\u9876\u70b9\u7f13\u51b2\u533a\u4e3a\u5f62\u5f0f\u7684\u4e00\u7cfb\u5217\u9876\u70b9\u4f5c\u4e3a\u8f93\u5165\u3002\u4f46\u662f\uff0c\u4ec0\u4e48\u662f\u9876\u70b9\uff1f\u9876\u70b9\uff08Vertex\uff09\u662f\u63cf\u8ff0\u4e8c\u7ef4\u6216\u8005\u4e09\u7ef4\u7a7a\u95f4\u4e2d\u7684\u70b9\u7684\u6570\u636e\u7ed3\u6784\u3002\u5982\u4f55\u63cf\u8ff0\u4e09\u7ef4\u7a7a\u95f4\u4e2d\u7684\u4e00\u4e2a\u70b9\u5462\uff1f\u901a\u8fc7\u6307\u5b9a\u5176X\u3001Y\u548cZ\u5750\u6807\u3002\u4ec0\u4e48\u662f\u9876\u70b9\u7f13\u51b2\u533a\uff1f\u9876\u70b9\u7f13\u51b2\u533a\uff08Vertex Buffer\uff09\u662f\u4f7f\u7528\u9876\u70b9\u6570\u7ec4\u6765\u5305\u88c5\u6240\u6709\u9700\u8981\u6e32\u67d3\u7684\u9876\u70b9\u7684\u53e6\u4e00\u79cd\u6570\u636e\u7ed3\u6784\uff0c\u5e76\u4f7f\u8fd9\u4e9b\u6570\u636e\u80fd\u591f\u5728\u56fe\u5f62\u7ba1\u7ebf\u7684\u7740\u8272\u5668\u4e2d\u4f7f\u7528\u3002 \u8fd9\u4e9b\u9876\u70b9\u7531\u9876\u70b9\u7740\u8272\u5668\uff08Vertex Shader\uff09\u5904\u7406\uff0c\u9876\u70b9\u7740\u8272\u5668\u7684\u529f\u80fd\u662f\u8ba1\u7b97\u6bcf\u4e2a\u9876\u70b9\u5230\u5c4f\u5e55\u7a7a\u95f4\u4e2d\u7684\u6295\u5f71\u4f4d\u7f6e\u3002\u8be5\u7740\u8272\u5668\u8fd8\u53ef\u4ee5\u751f\u6210\u4e0e\u989c\u8272\u6216\u7eb9\u7406\u76f8\u5173\u7684\u5176\u4ed6\u8f93\u51fa\uff0c\u4f46\u5176\u4e3b\u8981\u76ee\u7684\u8fd8\u662f\u5c06\u9876\u70b9\u6295\u5f71\u5230\u5c4f\u5e55\u7a7a\u95f4\u4e2d\uff0c\u5373\u751f\u6210\u70b9\u3002 \u51e0\u4f55\u5904\u7406\u9636\u6bb5\uff08Geometry Processing\uff09\u5c06\u7531\u9876\u70b9\u7740\u8272\u5668\u53d8\u6362\u7684\u9876\u70b9\u8fde\u63a5\u6210\u4e09\u89d2\u5f62\u3002\u5b83\u4f9d\u7167\u9876\u70b9\u50a8\u5b58\u7684\u987a\u5e8f\uff0c\u4f7f\u7528\u4e0d\u540c\u7684\u6a21\u578b\u5bf9\u9876\u70b9\u8fdb\u884c\u5206\u7ec4\u3002\u4e3a\u4ec0\u4e48\u662f\u4e09\u89d2\u5f62\uff1f\u4e09\u89d2\u5f62\u5c31\u662f\u663e\u5361\u7684\u57fa\u672c\u5de5\u4f5c\u5355\u5143\uff0c\u5b83\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u51e0\u4f55\u5f62\u72b6\uff0c\u53ef\u4ee5\u7ec4\u5408\u548c\u53d8\u6362\uff0c\u4ee5\u6784\u5efa\u590d\u6742\u7684\u4e09\u7ef4\u573a\u666f\u3002\u6b64\u9636\u6bb5\u8fd8\u53ef\u4ee5\u4f7f\u7528\u7279\u5b9a\u7684\u7740\u8272\u5668\u6765\u5bf9\u9876\u70b9\u8fdb\u884c\u5206\u7ec4\u3002 \u5149\u6805\u5316\uff08Rasterization\uff09\u9636\u6bb5\u63a5\u6536\u6b64\u524d\u751f\u6210\u7684\u4e09\u89d2\u5f62\uff0c\u526a\u8f91\u5b83\u4eec\uff0c\u5e76\u5c06\u5b83\u4eec\u8f6c\u6362\u4e3a\u50cf\u7d20\u5927\u5c0f\u7684\u7247\u5143\u3002 \u8fd9\u4e9b\u7247\u5143\u5c06\u5728\u7247\u5143\u5904\u7406\u9636\u6bb5\uff08Fragment Processing\uff09\u88ab\u7247\u5143\u7740\u8272\u5668\uff08Fragment Shader\uff09\u4f7f\u7528\uff0c\u4ee5\u751f\u6210\u5199\u5165\u5230\u5e27\u7f13\u51b2\u533a\u7684\u50cf\u7d20\u7684\u6700\u7ec8\u989c\u8272\u3002\u5e27\u7f13\u51b2\u533a\uff08Framebuffer\uff09\u662f\u56fe\u5f62\u7ba1\u7ebf\u7684\u6700\u7ec8\u8f93\u51fa\uff0c\u5b83\u50a8\u5b58\u4e86\u6bcf\u4e2a\u50cf\u7d20\u5e94\u8be5\u88ab\u7ed8\u5236\u5230\u5c4f\u5e55\u4e0a\u7684\u503c\u3002 \u6ce8\u610f\uff0c\u663e\u5361\u88ab\u8bbe\u8ba1\u6210\u5e76\u884c\u5904\u7406\u4e0a\u8ff0\u6240\u6709\u64cd\u4f5c\uff0c\u8f93\u5165\u7684\u6570\u636e\u53ef\u4ee5\u5e76\u884c\u5904\u7406\u4ee5\u751f\u6210\u6700\u7ec8\u573a\u666f\u3002 \u8ba9\u6211\u4eec\u5f00\u59cb\u7f16\u5199\u7b2c\u4e00\u4e2a\u7740\u8272\u5668\u7a0b\u5e8f\u3002\u7740\u8272\u5668\u662f\u4f7f\u7528\u57fa\u4e8eANSI C\u7684OpenGL\u7740\u8272\u5668\u8bed\u8a00\uff08GLSL\uff09\u7f16\u5199\u7684\u3002\u9996\u5148\uff0c\u5728 resources \u76ee\u5f55\u4e0b\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a\u201c vertex.vs \u201d\uff08\u6269\u5c55\u540d\u4e3a\u9876\u70b9\u7740\u8272\u5668\u82f1\u6587\u7b80\u5199\uff09\u7684\u6587\u4ef6\uff0c\u5185\u5bb9\u5982\u4e0b\uff1a #version 330 layout (location=0) in vec3 position; void main() { gl_Position = vec4(position, 1.0); } \u7b2c\u4e00\u884c\u662f\u4e00\u4e2a\u8868\u793a\u6211\u4eec\u6b63\u4f7f\u7528\u7684GLSL\u8bed\u8a00\u7248\u672c\u7684\u6807\u8bc6\u7b26\u3002\u4e0b\u8868\u662fGLSL\u7248\u672c\u3001\u4e0e\u8be5\u7248\u672c\u5339\u914d\u7684OpenGL\u7248\u672c\u548c\u4f7f\u7528\u65b9\u6cd5\uff08\u6765\u81ea\u7ef4\u57fa\u767e\u79d1\uff1a https://en.wikipedia.org/wiki/OpenGL_Shading_Language#Versions \uff09\uff1a GLSL\u7248\u672c OpenGL\u7248\u672c \u7740\u8272\u5668\u6807\u8bc6\u7b26 1.10.59 2.0 #version 110 1.20.8 2.1 #version 120 1.30.10 3.0 #version 130 1.40.08 3.1 #version 140 1.50.11 3.2 #version 150 3.30.6 3.3 #version 330 4.00.9 4.0 #version 400 4.10.6 4.1 #version 410 4.20.11 4.2 #version 420 4.30.8 4.3 #version 430 4.40 4.4 #version 440 4.50 4.5 #version 450 \u7b2c\u4e8c\u884c\u6307\u5b9a\u6b64\u7740\u8272\u5668\u7684\u8f93\u5165\u683c\u5f0f\u3002OpenGL\u7f13\u51b2\u533a\u4e2d\u7684\u6570\u636e\u53ef\u4ee5\u662f\u6211\u4eec\u60f3\u8981\u7684\u4efb\u4f55\u6570\u636e\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u8be5\u8bed\u8a00\u4e0d\u4f1a\u5f3a\u8feb\u4f60\u4f20\u9012\u9884\u5b9a\u4e49\u8bed\u8a00\u7684\u4efb\u4f55\u6307\u5b9a\u6570\u636e\u7ed3\u6784\u3002\u4ece\u7740\u8272\u5668\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u5b83\u671f\u671b\u63a5\u6536\u4e00\u4e2a\u5b58\u6709\u6570\u636e\u7684\u7f13\u51b2\u533a\u3002\u5b83\u53ef\u4ee5\u662f\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u4e00\u4e2a\u6709\u4e00\u4e9b\u9644\u52a0\u4fe1\u606f\u7684\u4f4d\u7f6e\uff0c\u6216\u8005\u6211\u4eec\u60f3\u8981\u7684\u4efb\u4f55\u6570\u636e\u3002\u9876\u70b9\u7740\u8272\u5668\u53ea\u63a5\u6536\u6d6e\u70b9\u6570\u7ec4\u3002\u5f53\u586b\u5145\u7f13\u51b2\u533a\u65f6\uff0c\u6211\u4eec\u5b9a\u4e49\u8981\u7531\u7740\u8272\u5668\u5904\u7406\u7684\u7f13\u51b2\u533a\u5757\u3002 \u9996\u5148\uff0c\u9700\u8981\u628a\u8fd9\u4e9b\u5757\u53d8\u6210\u5bf9\u6211\u4eec\u6709\u610f\u4e49\u7684\u6570\u636e\u3002\u73b0\u5728\u89c4\u5b9a\u4ece\u4f4d\u7f6e0\u5f00\u59cb\uff0c\u6211\u4eec\u671f\u671b\u63a5\u6536\u7531\u4e09\u4e2a\u5c5e\u6027(X, Y, Z)\u7ec4\u6210\u7684\u5411\u91cf\u3002 \u7740\u8272\u5668\u6709\u4e2a main \u4ee3\u7801\u5757\uff0c\u5c31\u50cf\u4efb\u4f55C\u8bed\u8a00\u7a0b\u5e8f\u4e00\u6837\uff0c\u4e0a\u8ff0\u793a\u4f8b\u662f\u975e\u5e38\u7b80\u5355\u7684\u3002\u5b83\u53ea\u662f\u5c06\u63a5\u6536\u5230\u7684\u5750\u6807\u4e0d\u7ecf\u4efb\u4f55\u53d8\u6362\u5730\u8fd4\u56de\u5230 gl_Position \u3002\u4f60\u73b0\u5728\u53ef\u80fd\u60f3\u77e5\u9053\u4e3a\u4ec0\u4e48\u4e09\u4e2a\u5c5e\u6027\u7684\u5411\u91cf\u88ab\u8f6c\u6362\u6210\u56db\u4e2a\u5c5e\u6027\u7684\u5411\u91cf\uff08 vec4 \uff09\u3002\u8fd9\u662f\u56e0\u4e3a gl_Position \u4ec5\u63a5\u6536 vec4 \u7c7b\u578b\u7684\u6570\u636e\uff0c\u56e0\u4e3a\u5b83\u662f\u9f50\u6b21\u5750\u6807\uff08Homogeneous Coordinates\uff09\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5b83\u5e0c\u671b\u63a5\u6536\u5230\u5f62\u4f3c(X, Y, Z, W)\u7684\u4e1c\u897f\uff0c\u5176\u4e2dW\u4ee3\u8868\u4e00\u4e2a\u989d\u5916\u7684\u7ef4\u5ea6\u3002\u4e3a\u4ec0\u4e48\u8fd8\u8981\u6dfb\u52a0\u53e6\u4e00\u4e2a\u7ef4\u5ea6\uff1f\u5728\u6b64\u540e\u7684\u7ae0\u8282\u4e2d\uff0c\u4f60\u4f1a\u770b\u5230\u6211\u4eec\u9700\u8981\u505a\u7684\u5927\u90e8\u5206\u64cd\u4f5c\u90fd\u662f\u57fa\u4e8e\u5411\u91cf\u548c\u77e9\u9635\u7684\u3002\u5982\u679c\u6ca1\u6709\u989d\u5916\u7684\u7ef4\u5ea6\uff0c\u4e00\u4e9b\u64cd\u4f5c\u4e0d\u80fd\u7ec4\u5408\u3002\u4f8b\u5982\uff0c\u4e0d\u80fd\u628a\u65cb\u8f6c\u548c\u4f4d\u79fb\u64cd\u4f5c\u7ec4\u5408\u8d77\u6765\u3002\uff08\u5982\u679c\u4f60\u60f3\u5b66\u4e60\u66f4\u591a\u6709\u5173\u4e8e\u8fd9\u65b9\u9762\u7684\u77e5\u8bc6\uff0c\u8fd9\u4e2a\u989d\u5916\u7684\u7ef4\u5ea6\u5141\u8bb8\u6211\u4eec\u7ec4\u5408\u4eff\u5c04\u548c\u7ebf\u6027\u53d8\u6362\u3002\u4f60\u53ef\u4ee5\u901a\u8fc7\u9605\u8bfb\u300a3D Math Primer for Graphics and Game Development\u300b\uff08\u4f5c\u8005\u662fFletcher Dunn \u548c Ian Parberry\uff09\u6765\u66f4\u591a\u5730\u4e86\u89e3\u8fd9\u4e00\u70b9\u3002\uff09 \u73b0\u5728\u6765\u770b\u770b\u6211\u4eec\u7684\u7b2c\u4e00\u4e2a\u7247\u5143\u7740\u8272\u5668\u3002\u5728 resources \u76ee\u5f55\u4e0b\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a fragment.fs \uff08\u6269\u5c55\u540d\u7247\u5143\u7740\u8272\u5668\u82f1\u6587\u7b80\u5199\uff09\u7684\u6587\u4ef6\uff0c\u5185\u5bb9\u5982\u4e0b\uff1a #version 330 out vec4 fragColor; void main() { fragColor = vec4(0.0, 0.5, 0.5, 1.0); } \u8be5\u7ed3\u6784\u4e0e\u6211\u4eec\u7684\u9876\u70b9\u7740\u8272\u5668\u975e\u5e38\u76f8\u4f3c\u3002\u73b0\u5728\uff0c\u5b83\u5c06\u4e3a\u6bcf\u4e2a\u7247\u5143\u8bbe\u7f6e\u56fa\u5b9a\u7684\u989c\u8272\u3002\u8f93\u51fa\u503c\u88ab\u5b9a\u4e49\u4e3a\u7b2c\u4e8c\u884c\u7684 vec4 \u7c7b\u578b\u7684 fragColor \u53d8\u91cf\u3002 \u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u521b\u5efa\u4e86\u7740\u8272\u5668\uff0c\u8be5\u5982\u4f55\u4f7f\u7528\u5b83\u4eec\u5462\uff1f\u4ee5\u4e0b\u662f\u6211\u4eec\u8981\u505a\u7684\u4e00\u7cfb\u5217\u6b65\u9aa4\uff1a 1. \u521b\u5efaOpenGL\u7a0b\u5e8f\u3002 2. \u8f7d\u5165\u9876\u70b9\u548c\u7247\u5143\u7740\u8272\u5668\u6587\u4ef6\u3002 3. \u4e3a\u6bcf\u4e2a\u7740\u8272\u5668\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u7740\u8272\u5668\u7a0b\u5e8f\u5e76\u6307\u5b9a\u5b83\u7684\u7c7b\u578b\uff08\u9876\u70b9\u6216\u7247\u5143\uff09\u3002 4. \u7f16\u8bd1\u7740\u8272\u5668\u3002 5. \u5c06\u7740\u8272\u5668\u7ed1\u5b9a\u5230OpenGL\u7a0b\u5e8f\u4e0a\u3002 6. \u8fde\u63a5\u7a0b\u5e8f\u3002 \u6700\u540e\uff0c\u7740\u8272\u5668\u5c06\u4f1a\u88ab\u8f7d\u5165\u5230\u663e\u5361\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5f15\u7528\u7a0b\u5e8fID\u6765\u4f7f\u7528\u5b83\u3002 package org.lwjglb.engine.graph; import static org.lwjgl.opengl.GL20.*; public class ShaderProgram { private final int programId; private int vertexShaderId; private int fragmentShaderId; public ShaderProgram() throws Exception { programId = glCreateProgram(); if (programId == 0) { throw new Exception(\"Could not create Shader\"); } } public void createVertexShader(String shaderCode) throws Exception { vertexShaderId = createShader(shaderCode, GL_VERTEX_SHADER); } public void createFragmentShader(String shaderCode) throws Exception { fragmentShaderId = createShader(shaderCode, GL_FRAGMENT_SHADER); } protected int createShader(String shaderCode, int shaderType) throws Exception { int shaderId = glCreateShader(shaderType); if (shaderId == 0) { throw new Exception(\"Error creating shader. Type: \" + shaderType); } glShaderSource(shaderId, shaderCode); glCompileShader(shaderId); if (glGetShaderi(shaderId, GL_COMPILE_STATUS) == 0) { throw new Exception(\"Error compiling Shader code: \" + glGetShaderInfoLog(shaderId, 1024)); } glAttachShader(programId, shaderId); return shaderId; } public void link() throws Exception { glLinkProgram(programId); if (glGetProgrami(programId, GL_LINK_STATUS) == 0) { throw new Exception(\"Error linking Shader code: \" + glGetProgramInfoLog(programId, 1024)); } if (vertexShaderId != 0) { glDetachShader(programId, vertexShaderId); } if (fragmentShaderId != 0) { glDetachShader(programId, fragmentShaderId); } glValidateProgram(programId); if (glGetProgrami(programId, GL_VALIDATE_STATUS) == 0) { System.err.println(\"Warning validating Shader code: \" + glGetProgramInfoLog(programId, 1024)); } } public void bind() { glUseProgram(programId); } public void unbind() { glUseProgram(0); } public void cleanup() { unbind(); if (programId != 0) { glDeleteProgram(programId); } } } ShaderProgram \u7c7b\u7684\u6784\u9020\u51fd\u6570\u5728OpenGL\u4e2d\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u7a0b\u5e8f\uff0c\u5e76\u63d0\u4f9b\u6dfb\u52a0\u9876\u70b9\u548c\u7247\u5143\u7740\u8272\u5668\u7684\u65b9\u6cd5\u3002\u8fd9\u4e9b\u7740\u8272\u5668\u88ab\u7f16\u8bd1\u5e76\u7ed1\u5b9a\u5230OpenGL\u7a0b\u5e8f\u4e2d\u3002\u5f53\u6240\u6709\u7684\u7740\u8272\u5668\u90fd\u88ab\u7ed1\u5b9a\u65f6\uff0c\u5e94\u8be5\u8c03\u7528 link \u65b9\u6cd5\uff0c\u6765\u8fde\u63a5\u6240\u6709\u4ee3\u7801\u5e76\u9a8c\u8bc1\u6240\u6709\u64cd\u4f5c\u90fd\u5df2\u6b63\u786e\u5730\u5b8c\u6210\u3002 \u4e00\u65e6\u7740\u8272\u5668\u7a0b\u5e8f\u88ab\u8fde\u63a5\uff0c\u7f16\u8bd1\u7684\u9876\u70b9\u548c\u7247\u5143\u7740\u8272\u5668\u53ef\u4ee5\u88ab\u91ca\u653e\uff08\u901a\u8fc7\u8c03\u7528 glDetachShader \u65b9\u6cd5\uff09\u3002 \u9a8c\u8bc1\u662f\u901a\u8fc7\u8c03\u7528 glValidateProgram \u65b9\u6cd5\u5b8c\u6210\u7684\u3002\u6b64\u65b9\u6cd5\u4e3b\u8981\u7528\u4e8e\u8c03\u8bd5\uff0c\u5f53\u6e38\u620f\u5230\u8fbe\u751f\u4ea7\u9636\u6bb5\u65f6\uff0c\u5e94\u5c06\u5176\u5220\u9664\u3002\u6b64\u65b9\u6cd5\u5c06\u9a8c\u8bc1\u5728 \u5f53\u524dOpenGL\u72b6\u6001 \u4e0b\u7740\u8272\u5668\u662f\u5426\u6b63\u786e\u3002\u8fd9\u610f\u5473\u7740\uff0c\u5373\u4f7f\u7740\u8272\u5668\u662f\u6b63\u786e\u7684\uff0c\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u4e5f\u53ef\u80fd\u9a8c\u8bc1\u5931\u8d25\uff0c\u8fd9\u662f\u56e0\u4e3a\u5f53\u524d\u72b6\u6001\u4e0d\u591f\u5b8c\u6574\uff08\u4e00\u4e9b\u6570\u636e\u53ef\u80fd\u5c1a\u672a\u52a0\u8f7d\uff09\uff0c\u65e0\u6cd5\u8fd0\u884c\u7740\u8272\u5668\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u9519\u8bef\u4fe1\u606f\u8f93\u51fa\u5230\u6807\u51c6\u9519\u8bef\u8f93\u51fa\u4e2d\u3002 ShaderProgram \u7c7b\u8fd8\u63d0\u4f9b\u4e86\u5728\u6e32\u67d3\u65f6\u6fc0\u6d3b\u8be5\u7a0b\u5e8f\uff08\u7ed1\u5b9a\uff09\u548c\u505c\u6b62\u4f7f\u7528\u5b83\uff08\u89e3\u7ed1\uff09\u7684\u65b9\u6cd5\u3002\u6700\u540e\uff0c\u5b83\u63d0\u4f9b\u4e86\u4e00\u4e2a cleanup \u65b9\u6cd5\uff0c\u7528\u4e8e\u5728\u5b83\u4e0d\u518d\u88ab\u9700\u8981\u65f6\uff0c\u91ca\u653e\u6240\u6709\u8d44\u6e90\u3002 \u65e2\u7136\u6709\u4e00\u4e2a\u6e05\u7406\u65b9\u6cd5\uff0c\u8ba9\u6211\u4eec\u66f4\u6539 IGameLogic \u63a5\u53e3\u6765\u6dfb\u52a0\u4e00\u4e2a cleanup \u65b9\u6cd5\uff1a void cleanup(); \u8be5\u65b9\u6cd5\u5c06\u5728\u6e38\u620f\u5faa\u73af\u7ed3\u675f\u65f6\u8c03\u7528\uff0c\u6240\u4ee5\u9700\u8981\u4fee\u6539 GameEngine \u7c7b\u7684 run \u65b9\u6cd5\uff1a @Override public void run() { try { init(); gameLoop(); } catch (Exception excp) { excp.printStackTrace(); } finally { cleanup(); } } \u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u5728 Renderer \u7c7b\u7684 init \u65b9\u6cd5\u4e2d\u4f7f\u7528\u7740\u8272\u5668\u6765\u663e\u793a\u4e00\u4e2a\u4e09\u89d2\u5f62\u3002\u9996\u5148\uff0c\u6211\u4eec\u8981\u521b\u5efa\u7740\u8272\u5668\u7a0b\u5e8f\uff1a public void init() throws Exception { shaderProgram = new ShaderProgram(); shaderProgram.createVertexShader(Utils.loadResource(\"/vertex.vs\")); shaderProgram.createFragmentShader(Utils.loadResource(\"/fragment.fs\")); shaderProgram.link(); } \u6211\u4eec\u5df2\u7ecf\u521b\u5efa\u4e86\u4e00\u4e2a\u5de5\u5177\u7c7b\uff0c\u5b83\u63d0\u4f9b\u4e86\u4e00\u4e2a\u4ece\u7c7b\u8def\u5f84\u4e2d\u53d6\u5f97\u6587\u4ef6\u5185\u5bb9\u7684\u65b9\u6cd5\uff0c\u6b64\u65b9\u6cd5\u7528\u4e8e\u53d6\u5f97\u6211\u4eec\u7684\u7740\u8272\u5668\u4ee3\u7801\u3002 \u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u628a\u4e09\u89d2\u5f62\u5b9a\u4e49\u4e3a\u4e00\u7ec4\u6d6e\u70b9\u6570\uff0c\u521b\u5efa\u4e00\u4e2a\u4e00\u7ef4\u6d6e\u70b9\u6570\u7ec4\uff0c\u5b83\u5c06\u5b9a\u4e49\u4e09\u89d2\u5f62\u7684\u9876\u70b9\u3002\u5982\u4f60\u6240\u89c1\uff0c\u6570\u7ec4\u4e2d\u6ca1\u6709\u6570\u636e\u7ed3\u6784\u3002\u5c31\u76ee\u524d\u800c\u8a00\uff0cOpenGL\u65e0\u6cd5\u77e5\u9053\u8be5\u6570\u7ec4\u7684\u7ed3\u6784\uff0c\u8fd9\u53ea\u662f\u4e00\u7ec4\u6d6e\u70b9\u6570\uff1a float[] vertices = new float[]{ 0.0f, 0.5f, 0.0f, -0.5f, -0.5f, 0.0f, 0.5f, -0.5f, 0.0f }; \u4e0b\u56fe\u4f53\u73b0\u4e86\u5728\u5750\u6807\u7cfb\u4e2d\u7684\u4e09\u89d2\u5f62\u3002 \u73b0\u5728\u6211\u4eec\u6709\u4e86\u5750\u6807\uff0c\u9700\u8981\u628a\u5b83\u4eec\u50a8\u5b58\u5230\u663e\u5361\u4e2d\uff0c\u5e76\u544a\u8bc9OpenGL\u5b83\u7684\u6570\u636e\u7ed3\u6784\u3002\u73b0\u5728\u5c06\u4ecb\u7ecd\u4e24\u4e2a\u91cd\u8981\u7684\u6982\u5ff5\uff0c\u9876\u70b9\u6570\u7ec4\u5bf9\u8c61\uff08Vertex Array Object\uff0cVAO\uff09\u548c\u9876\u70b9\u7f13\u51b2\u5bf9\u8c61\uff08Vertex Buffer Object\uff0cVBO\uff09\u3002\u5982\u679c\u4f60\u5bf9\u63a5\u4e0b\u6765\u7684\u4ee3\u7801\u611f\u5230\u56f0\u60d1\uff0c\u8bf7\u8bb0\u4f4f\uff0c\u73b0\u5728\u6240\u505a\u7684\u662f\u628a\u5c06\u8981\u7ed8\u5236\u7684\u6a21\u578b\u5bf9\u8c61\u7684\u6570\u636e\u4f20\u9012\u5230\u663e\u5b58\u4e2d\u3002\u5f53\u50a8\u5b58\u5b83\u7684\u65f6\u5019\uff0c\u6211\u4eec\u4f1a\u5f97\u5230\u4e00\u4e2aID\uff0c\u7a0d\u540e\u7ed8\u5236\u65f6\u4f1a\u4f7f\u7528\u5b83\u3002 \u5148\u4ecb\u7ecd\u9876\u70b9\u7f13\u51b2\u5bf9\u8c61\uff08VBO\uff09\u5427\uff0cVBO\u53ea\u662f\u663e\u5b58\u4e2d\u5b58\u50a8\u9876\u70b9\u7684\u5185\u5b58\u7f13\u51b2\u533a\u3002\u8fd9\u662f\u7528\u6765\u6682\u5b58\u4e00\u7ec4\u7528\u4e8e\u5efa\u6a21\u4e09\u89d2\u5f62\u7684\u6d6e\u70b9\u6570\u7684\u5730\u65b9\u3002\u5982\u4e0a\u6240\u8ff0\uff0cOpenGL\u5bf9\u6211\u4eec\u7684\u6570\u636e\u7ed3\u6784\u4e00\u65e0\u6240\u77e5\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5b83\u4e0d\u4ec5\u53ef\u4ee5\u50a8\u5b58\u5750\u6807\uff0c\u8fd8\u53ef\u4ee5\u50a8\u5b58\u5176\u4ed6\u4fe1\u606f\uff0c\u6bd4\u5982\u7eb9\u7406\u3001\u989c\u8272\u7b49\u3002 \u9876\u70b9\u6570\u7ec4\u5bf9\u8c61\uff08VAO\uff09\u662f\u4e00\u4e2a\u5bf9\u8c61\uff0c\u50a8\u5b58\u4e00\u4e2a\u6216\u591a\u4e2a\u901a\u5e38\u88ab\u79f0\u4e3a\u5c5e\u6027\u5217\u8868\u7684VBO\u3002\u6bcf\u4e2a\u5c5e\u6027\u5217\u8868\u53ef\u4ee5\u4fdd\u5b58\u4e00\u79cd\u7c7b\u578b\u7684\u6570\u636e\uff1a\u4f4d\u7f6e\u3001\u989c\u8272\u3001\u7eb9\u7406\u7b49\u3002\u5728\u6bcf\u4e2a\u6e32\u67d3\u95f4\u9694\u4e2d\uff0c\u4f60\u53ef\u4ee5\u81ea\u7531\u5730\u50a8\u5b58\u6240\u9700\u7684\u4efb\u4f55\u6570\u636e\u3002 \u4e00\u4e2aVAO\u5c31\u50cf\u662f\u4e00\u4e2a\u5305\u88c5\uff0c\u5b83\u6309\u4e00\u7ec4\u5b9a\u4e49\u5bf9\u50a8\u5b58\u5728\u663e\u5361\u4e2d\u7684\u6570\u636e\u5206\u7ec4\u3002\u5f53\u521b\u5efa\u4e00\u4e2aVAO\u65f6\uff0c\u6211\u4eec\u5f97\u5230\u4e00\u4e2aID\u3002\u6211\u4eec\u4f7f\u7528\u6b64ID\u6765\u6e32\u67d3\u5b83\u548c\u4f7f\u7528\u5b83\u5728\u521b\u5efa\u8fc7\u7a0b\u4e2d\u5b9a\u4e49\u7684\u6570\u636e\u3002 \u8ba9\u6211\u4eec\u7ee7\u7eed\u7f16\u5199\u793a\u4f8b\u4ee3\u7801\u3002\u9996\u5148\u8981\u505a\u7684\u4e8b\u5c31\u662f\u628a\u6d6e\u70b9\u6570\u50a8\u5b58\u5728\u4e00\u4e2a FloatBuffer \u4e2d\u3002\u8fd9\u4e3b\u8981\u662f\u56e0\u4e3a\u6211\u4eec\u5fc5\u987b\u4f7f\u7528\u57fa\u4e8eC\u8bed\u8a00\u7684OpenGL\u5e93\u7684\u63a5\u53e3\uff0c\u6240\u4ee5\u5fc5\u987b\u628a\u6d6e\u70b9\u6570\u7ec4\u8f6c\u6362\u6210\u53ef\u4ee5\u7531\u5e93\u7ba1\u7406\u7684\u4e1c\u897f\u3002 FloatBuffer verticesBuffer = MemoryUtil.memAllocFloat(vertices.length); verticesBuffer.put(vertices).flip(); \u6211\u4eec\u4f7f\u7528 MemoryUtil \u7c7b\u6765\u5728\u5806\u5916\u5185\u5b58\u4e2d\u521b\u5efa\u4e86\u4e00\u4e2a\u7f13\u51b2\u533a\uff0c\u4ee5\u4fbfOpenGL\u5e93\u8bbf\u95ee\u5b83\u3002\u5728\u50a8\u5b58\u4e86\u6570\u636e\uff08\u8c03\u7528 put \u65b9\u6cd5\uff09\u4e4b\u540e\uff0c\u6211\u4eec\u9700\u8981\u8c03\u7528 flip \u65b9\u6cd5\u5c06\u7f13\u51b2\u533a\u7684\u4f4d\u7f6e\u91cd\u7f6e\u4e3a0\uff08\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u5df2\u7ecf\u5b8c\u6210\u4e86\u5bf9\u5b83\u7684\u5199\u5165\uff09\u3002\u8bb0\u4f4f\uff0cJava\u4e2d\u7684\u5bf9\u8c61\uff0c\u88ab\u5206\u914d\u5728\u4e00\u4e2a\u53eb\u5806\uff08Heap\uff09\u7684\u5185\u5b58\u7a7a\u95f4\u3002\u5806\u662fJVM\u5185\u5b58\u4e2d\u4fdd\u7559\u7684\u4e00\u5927\u5806\u5185\u5b58\uff0c\u50a8\u5b58\u5728\u5806\u4e2d\u7684\u5bf9\u8c61\u4e0d\u80fd\u901a\u8fc7\u672c\u5730\u4ee3\u7801\u8bbf\u95ee\uff08JNI\uff0c\u8fd9\u79cd\u673a\u5236\u4f7f\u5f97Java\u4e0d\u80fd\u76f4\u63a5\u8c03\u7528\u672c\u5730\u4ee3\u7801\uff09\u3002Java\u4ee3\u7801\u548c\u672c\u5730\u4ee3\u7801\u76f4\u63a5\u5171\u4eab\u5185\u5b58\u6570\u636e\u7684\u552f\u4e00\u65b9\u6cd5\u662f\u5728Java\u4e2d\u76f4\u63a5\u5730\u5206\u914d\u5185\u5b58\u3002 \u5982\u679c\u4f60\u6765\u81eaLWJGL\u7684\u65e7\u7248\u672c\uff0c\u5f3a\u8c03\u4e00\u4e9b\u8981\u70b9\u662f\u5f88\u91cd\u8981\u7684\u3002\u4f60\u53ef\u80fd\u6ce8\u610f\u5230\u4e86\uff0c\u6211\u4eec\u4e0d\u4f7f\u7528\u5de5\u5177\u7c7b BufferUtils \uff0c\u800c\u4f7f\u7528 MemoryUtil \u7c7b\u6765\u521b\u5efa\u7f13\u51b2\u533a\u3002\u8fd9\u662f\u7531\u4e8e BufferUtils \u4e0d\u662f\u975e\u5e38\u6709\u6548\u7684\uff0c\u5e76\u4e14\u4ec5\u88ab\u7528\u4e8e\u5411\u4e0b\u517c\u5bb9\u3002LWJGL3\u63d0\u4f9b\u4e86\u4e24\u79cd\u7f13\u51b2\u533a\u7684\u7ba1\u7406\u65b9\u6cd5\uff1a \u81ea\u52a8\u7ba1\u7406\u7f13\u51b2\u533a\uff0c\u5373\u7531\u5783\u573e\u56de\u6536\u5668\u81ea\u52a8\u56de\u6536\u7684\u7f13\u51b2\u533a\u3002\u8fd9\u4e9b\u7f13\u51b2\u533a\u9002\u7528\u4e8e\u77ed\u6682\u7684\u64cd\u4f5c\uff0c\u6216\u8005\u7528\u4e8e\u4f20\u9012\u5230GPU\u7684\u6570\u636e\uff0c\u5e76\u4e14\u4e0d\u9700\u8981\u50a8\u5b58\u4e8e\u8fdb\u7a0b\u5185\u5b58\u4e2d\u3002\u8fd9\u662f\u901a\u8fc7\u4f7f\u7528 org.lwjgl.system.MemoryStack \u5b9e\u73b0\u7684\u3002 \u624b\u52a8\u7ba1\u7406\u7f13\u51b2\u533a\u3002\u6b64\u60c5\u51b5\u4e0b\uff0c\u4e00\u65e6\u5b8c\u6210\u64cd\u4f5c\uff0c\u6211\u4eec\u9700\u8981\u5c0f\u5fc3\u5730\u91ca\u653e\u5b83\u4eec\u3002\u8fd9\u4e9b\u7f13\u51b2\u533a\u9002\u7528\u4e8e\u957f\u65f6\u95f4\u7684\u64cd\u4f5c\u6216\u8005\u5927\u91cf\u7684\u6570\u636e\u3002\u8fd9\u662f\u901a\u8fc7\u4f7f\u7528 MemoryUtil \u7c7b\u5b9e\u73b0\u7684\u3002 \u4f60\u53ef\u4ee5\u5728\u6b64\u5904\u67e5\u9605\u7ec6\u8282\uff1a https://blog.lwjgl.org/memory-management-in-lwjgl-3/ \u5728\u6b64\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u7684\u6570\u636e\u88ab\u53d1\u9001\u5230GPU\uff0c\u8fd9\u6837\u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u81ea\u52a8\u7ba1\u7406\u7684\u7f13\u51b2\u533a\u3002\u4f46\u7a0d\u540e\u6211\u4eec\u5c06\u4f7f\u7528\u5b83\u4eec\u6765\u50a8\u5b58\u53ef\u80fd\u9700\u8981\u624b\u52a8\u7ba1\u7406\u7684\u5927\u91cf\u6570\u636e\uff0c\u8fd9\u5c31\u662f\u4f7f\u7528 MemoryUtil \u7c7b\u7684\u539f\u56e0\uff0c\u56e0\u6b64\uff0c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u4eec\u8981\u5728\u6700\u540e\u4e00\u4e2a\u5757\u4e2d\u91ca\u653e\u7f13\u51b2\u533a\u8d44\u6e90\u3002\u5728\u4e0b\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u5b66\u4e60\u5982\u4f55\u4f7f\u7528\u81ea\u52a8\u7ba1\u7406\u7f13\u51b2\u533a\u3002 \u73b0\u5728\u9700\u8981\u521b\u5efaVAO\u7136\u540e\u7ed1\u5b9a\u5b83\uff1a vaoId = glGenVertexArrays(); glBindVertexArray(vaoId); \u7136\u540e\u9700\u8981\u521b\u5efaVBO\uff0c\u7ed1\u5b9a\u5b83\u5e76\u5c06\u6570\u636e\u8f93\u5165\uff1a vboId = glGenBuffers(); glBindBuffer(GL_ARRAY_BUFFER, vboId); glBufferData(GL_ARRAY_BUFFER, verticesBuffer, GL_STATIC_DRAW); glEnableVertexAttribArray(0); \u63a5\u4e0b\u6765\u662f\u6700\u91cd\u8981\u7684\u90e8\u5206\u3002\u6211\u4eec\u9700\u8981\u5b9a\u4e49\u6570\u636e\u7ed3\u6784\uff0c\u5e76\u5c06\u5176\u50a8\u5b58\u5728VAO\u7684\u5c5e\u6027\u5217\u8868\u4e2d\uff0c\u8fd9\u662f\u7528\u4e0b\u8ff0\u4ee3\u7801\u5b8c\u6210\u7684\uff1a glVertexAttribPointer(0, 3, GL_FLOAT, false, 0, 0); \u5b83\u7684\u53c2\u6570\u662f\uff1a index: \u6307\u5b9a\u7740\u8272\u5668\u671f\u671b\u6b64\u6570\u636e\u7684\u4f4d\u7f6e\u3002 size: \u6307\u5b9a\u6bcf\u4e2a\u9876\u70b9\u5c5e\u6027\u7684\u6570\u636e\u6570\uff08\u4ece1\u52304\uff09\u3002\u73b0\u5728\uff0c\u6211\u4eec\u4f7f\u7528\u4e09\u7ef4\u5750\u6807\uff0c\u6240\u4ee5\u5b83\u5e94\u8be5\u662f3\u3002 type: \u6307\u5b9a\u6570\u7ec4\u4e2d\u6bcf\u4e2a\u6570\u636e\u7684\u7c7b\u578b\uff0c\u73b0\u5728\u662f\u6d6e\u70b9\u6570\u3002 normalized: \u6307\u5b9a\u503c\u662f\u5426\u5e94\u5f52\u4e00\u5316\u3002 stride: \u6307\u5b9a\u8fde\u7eed\u9876\u70b9\u6570\u636e\u4e4b\u95f4\u7684\u5b57\u8282\u504f\u79fb\u91cf\uff08\u7a0d\u540e\u6211\u4eec\u518d\u89e3\u91ca\uff09\u3002 offset: \u6307\u5b9a\u7f13\u51b2\u533a\u4e2d\u7b2c\u4e00\u4e2a\u6570\u636e\u7684\u504f\u79fb\u91cf\u3002 \u5728\u5b8c\u6210\u4e86VBO\u64cd\u4f5c\u4e4b\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u89e3\u9664\u5b83\u548cVAO\u7684\u7ed1\u5b9a\uff08\u7ed1\u5b9a\u52300\uff09\u3002 // \u89e3\u7ed1VBO glBindBuffer(GL_ARRAY_BUFFER, 0); // \u89e3\u7ed1VAO glBindVertexArray(0); \u4e00\u65e6\u5b8c\u6210\u64cd\u4f5c\uff0c\u6211\u4eec \u5fc5\u987b \u901a\u8fc7\u624b\u52a8\u8c03\u7528 memFree \u65b9\u6cd5\u91ca\u653e\u7531 FloatBuffer \u5360\u7528\u7684\u5806\u5916\u5185\u5b58\uff0c\u56e0\u4e3aJava\u5783\u573e\u56de\u6536\u4e0d\u4f1a\u6e05\u7406\u5206\u914d\u7684\u5806\u5916\u5185\u5b58\u3002 if (verticesBuffer != null) { MemoryUtil.memFree(verticesBuffer); } \u8fd9\u5c31\u662f init \u65b9\u6cd5\u5e94\u6709\u7684\u4ee3\u7801\u3002\u6211\u4eec\u7684\u6570\u636e\u5df2\u7ecf\u5728\u663e\u5361\u4e2d\u51c6\u5907\u4f7f\u7528\u4e86\uff0c\u73b0\u5728\u53ea\u9700\u8981\u4fee\u6539 render \u65b9\u6cd5\u5728\u6e38\u620f\u5faa\u73af\u4e2d\u8fdb\u884c\u6e32\u67d3\u3002 public void render(Window window) { clear(); if ( window.isResized() ) { glViewport(0, 0, window.getWidth(), window.getHeight()); window.setResized(false); } shaderProgram.bind(); // \u7ed1\u5b9aVAO glBindVertexArray(vaoId); // \u7ed8\u5236\u9876\u70b9 glDrawArrays(GL_TRIANGLES, 0, 3); // \u8fd8\u539f\u72b6\u6001 glBindVertexArray(0); shaderProgram.unbind(); } \u5982\u4f60\u6240\u89c1\uff0c\u6211\u4eec\u53ea\u9700\u8981\u6e05\u7406\u7a97\u53e3\uff0c\u7ed1\u5b9a\u7740\u8272\u5668\u7a0b\u5e8f\uff0c\u7ed1\u5b9aVAO\uff0c\u7ed8\u5236\u50a8\u5b58\u5728VAO\u5173\u8054\u7684VBO\u4e2d\u7684\u9876\u70b9\uff0c\u7136\u540e\u8fd8\u539f\u72b6\u6001\uff0c\u4ec5\u6b64\u800c\u5df2\u3002 \u6211\u4eec\u8fd8\u5728 Renderer \u7c7b\u4e2d\u6dfb\u52a0\u4e86\u4e00\u4e2a cleanup \u65b9\u6cd5\u7528\u4e8e\u91ca\u653e\u8d44\u6e90\u3002 public void cleanup() { if (shaderProgram != null) { shaderProgram.cleanup(); } glDisableVertexAttribArray(0); // \u5220\u9664VBO glBindBuffer(GL_ARRAY_BUFFER, 0); glDeleteBuffers(vboId); // \u5220\u9664VAO glBindVertexArray(0); glDeleteVertexArrays(vaoId); } \u5c31\u8fd9\u6837\uff01\u5982\u679c\u4f60\u5c0f\u5fc3\u5730\u6309\u7740\u4e0a\u8ff0\u6b65\u9aa4\u505a\uff0c\u4f60\u4f1a\u770b\u5230\u7c7b\u4f3c\u7684\u56fe\u50cf\u3002 \u8fd9\u5c31\u662f\u6211\u4eec\u7684\u7b2c\u4e00\u4e2a\u4e09\u89d2\u5f62\uff01\u4f60\u4e5f\u8bb8\u4f1a\u60f3\u8fd9\u5e76\u4e0d\u4f1a\u4f7f\u5b83\u6210\u4e3a\u524d\u5341\u540d\u7684\u6e38\u620f\uff0c\u4f60\u7684\u60f3\u6cd5\u662f\u5bf9\u7684\u3002\u4f60\u4e5f\u53ef\u4ee5\u8ba4\u4e3a\u8fd9\u662f\u4e00\u4ef6\u65e0\u804a\u7684\u4e8b\u60c5\u6765\u753b\u4e00\u4e2a\u65e0\u804a\u7684\u4e09\u89d2\u5f62\u3002\u4f46\u8bf7\u8bb0\u4f4f\uff0c\u6211\u4eec\u6b63\u5728\u4ecb\u7ecd\u5173\u952e\u7684\u6982\u5ff5\uff0c\u5e76\u51c6\u5907\u57fa\u4e8e\u67b6\u6784\u6765\u505a\u66f4\u590d\u6742\u7684\u4e8b\u60c5\uff0c\u8bf7\u8010\u5fc3\u7b49\u5f85\uff0c\u7ee7\u7eed\u9605\u8bfb\u3002","title":"\u6e32\u67d3\uff08Rendering\uff09"},{"location":"05-more-on-rendering/","text":"\u6e32\u67d3\u8865\u5145\uff08More on Rendering\uff09 \u672c\u7ae0\u6211\u4eec\u5c06\u7ee7\u7eed\u8bb2\u8ff0OpenGL\u5982\u4f55\u6e32\u67d3\u7269\u4f53\u3002\u4e3a\u4e86\u6574\u7406\u4ee3\u7801\uff0c\u6211\u4eec\u8981\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a Mesh \u7684\u65b0\u7c7b\uff0c\u628a\u4e00\u4e2a\u4f4d\u7f6e\u6570\u7ec4\u4f5c\u4e3a\u8f93\u5165\uff0c\u4e3a\u9700\u8981\u52a0\u8f7d\u5230\u663e\u5361\u4e2d\u7684\u6a21\u578b\u521b\u5efaVBO\u548cVAO\u5bf9\u8c61\u3002 package org.lwjglb.engine.graph; import java.nio.FloatBuffer; import org.lwjgl.system.MemoryUtil; import static org.lwjgl.opengl.GL30.*; public class Mesh { private final int vaoId; private final int vboId; private final int vertexCount; public Mesh(float[] positions) { FloatBuffer verticesBuffer = null; try { verticesBuffer = MemoryUtil.memAllocFloat(positions.length); vertexCount = positions.length / 3; verticesBuffer.put(positions).flip(); vaoId = glGenVertexArrays(); glBindVertexArray(vaoId); vboId = glGenBuffers(); glBindBuffer(GL_ARRAY_BUFFER, vboId); glBufferData(GL_ARRAY_BUFFER, verticesBuffer, GL_STATIC_DRAW); glEnableVertexAttribArray(0); glVertexAttribPointer(0, 3, GL_FLOAT, false, 0, 0); glBindBuffer(GL_ARRAY_BUFFER, 0); glBindVertexArray(0); } finally { if (verticesBuffer != null) { MemoryUtil.memFree(verticesBuffer); } } } public int getVaoId() { return vaoId; } public int getVertexCount() { return vertexCount; } public void cleanUp() { glDisableVertexAttribArray(0); // \u5220\u9664VBO glBindBuffer(GL_ARRAY_BUFFER, 0); glDeleteBuffers(vboId); // \u5220\u9664VAO glBindVertexArray(0); glDeleteVertexArrays(vaoId); } } \u6211\u4eec\u5c06\u5728 DummyGame \u7c7b\u4e2d\u5b9e\u4f8b\u5316 Mesh \uff0c\u7136\u540e\u5c06 Renderer \u7684 init \u65b9\u6cd5\u4e2d\u7684VAO\u548cVBO\u4ee3\u7801\u5220\u9664\u3002\u5728 Renderer \u7c7b\u7684\u6e32\u67d3\u65b9\u6cd5\u4e2d\u5c06\u63a5\u6536\u4e00\u4e2a Mesh \u5bf9\u8c61\u6765\u6e32\u67d3\u3002 cleanup \u65b9\u6cd5\u4e5f\u88ab\u7b80\u5316\uff0c\u56e0\u4e3a Mesh \u7c7b\u5df2\u7ecf\u63d0\u4f9b\u4e86\u4e00\u4e2a\u91ca\u653eVAO\u548cVBO\u8d44\u6e90\u7684\u65b9\u6cd5\u3002 public void render(Mesh mesh) { clear(); if ( window.isResized() ) { glViewport(0, 0, window.getWidth(), window.getHeight()); window.setResized(false); } shaderProgram.bind(); // \u7ed8\u5236 glBindVertexArray(mesh.getVaoId()); glDrawArrays(GL_TRIANGLES, 0, mesh.getVertexCount()); // \u8fd8\u539f\u72b6\u6001 glBindVertexArray(0); shaderProgram.unbind(); } public void cleanup() { if (shaderProgram != null) { shaderProgram.cleanup(); } } \u503c\u5f97\u6ce8\u610f\u7684\u4e00\u70b9\u662f\uff1a glDrawArrays(GL_TRIANGLES, 0, mesh.getVertexCount()); Mesh \u7c7b\u901a\u8fc7\u5c06\u4f4d\u7f6e\u6570\u7ec4\u9664\u4ee53\u6765\u8ba1\u7b97\u9876\u70b9\u7684\u6570\u76ee\uff08\u56e0\u4e3a\u6211\u4eec\u4f7f\u7528X\uff0cY\u548cZ\u5750\u6807\uff09\u3002\u73b0\u5728\uff0c\u6211\u4eec\u53ef\u4ee5\u6e32\u67d3\u66f4\u590d\u6742\u7684\u5f62\u72b6\u3002\u6765\u8bd5\u8bd5\u6e32\u67d3\u4e00\u4e2a\u6b63\u65b9\u5f62\uff0c\u4e00\u4e2a\u6b63\u65b9\u5f62\u53ef\u4ee5\u7528\u4e24\u4e2a\u4e09\u89d2\u5f62\u6765\u7ec4\u6210\uff0c\u5982\u56fe\u6240\u793a\uff1a \u5982\u4f60\u6240\u89c1\uff0c\u8fd9\u4e24\u4e2a\u4e09\u89d2\u5f62\u4e2d\u7684\u6bcf\u4e00\u4e2a\u90fd\u7531\u4e09\u4e2a\u9876\u70b9\u7ec4\u6210\u3002\u7b2c\u4e00\u4e2a\u4e09\u89d2\u5f62\u7531\u9876\u70b9V1\u3001V2\u548cV4\uff08\u6a59\u8272\u7684\u70b9\uff09\u7ec4\u6210\uff0c\u7b2c\u4e8c\u4e2a\u4e09\u89d2\u5f62\u7531\u9876\u70b9V4\uff0cV2\u548cV3\uff08\u7eff\u8272\u7684\u70b9\uff09\u7ec4\u6210\u3002\u9876\u70b9\u4ee5\u9006\u65f6\u9488\u987a\u5e8f\u8fde\u63a5\uff0c\u56e0\u6b64\u8981\u4f20\u9012\u7684\u6d6e\u70b9\u6570\u6570\u7ec4\u5e94\u8be5\u662f[V1, V2, V4, V4, V2, V3]\u3002\u56e0\u6b64\uff0c DummyGame \u7684 init \u65b9\u6cd5\u5c06\u662f\u8fd9\u6837\u7684\uff1a @Override public void init() throws Exception { renderer.init(); float[] positions = new float[]{ -0.5f, 0.5f, 0.0f, -0.5f, -0.5f, 0.0f, 0.5f, 0.5f, 0.0f, 0.5f, 0.5f, 0.0f, -0.5f, -0.5f, 0.0f, 0.5f, -0.5f, 0.0f, }; mesh = new Mesh(positions); } \u73b0\u5728\u4f60\u5e94\u8be5\u53ef\u4ee5\u770b\u5230\u8fd9\u6837\u7684\u4e00\u4e2a\u6b63\u65b9\u5f62\uff1a \u6211\u4eec\u505a\u5b8c\u4e86\u5417\uff1f\u5e76\u6ca1\u6709\uff0c\u4e0a\u8ff0\u4ee3\u7801\u4ecd\u5b58\u5728\u4e00\u4e9b\u95ee\u9898\u3002\u6211\u4eec\u4f7f\u7528\u4e86\u91cd\u590d\u7684\u5750\u6807\u6765\u8868\u793a\u6b63\u65b9\u5f62\uff0c\u4f20\u9012\u4e86\u4e24\u6b21V2\u548cV4\u5750\u6807\u3002\u8fd9\u662f\u4e2a\u5c0f\u56fe\u5f62\uff0c\u5b83\u53ef\u80fd\u4e0d\u662f\u4ec0\u4e48\u5927\u95ee\u9898\uff0c\u4f46\u60f3\u8c61\u5728\u4e00\u4e2a\u66f4\u590d\u6742\u76843D\u6a21\u578b\u4e2d\uff0c\u6211\u4eec\u4f1a\u591a\u6b21\u91cd\u590d\u4f20\u9012\u5750\u6807\u3002\u8bb0\u4f4f\uff0c\u6211\u4eec\u4f7f\u7528\u4e09\u4e2a\u6d6e\u70b9\u6570\u8868\u793a\u9876\u70b9\u7684\u4f4d\u7f6e\uff0c\u4f46\u6b64\u540e\u5c06\u9700\u8981\u66f4\u591a\u7684\u6570\u636e\u6765\u8868\u793a\u7eb9\u7406\u7b49\u3002\u8003\u8651\u5230\u5728\u66f4\u590d\u6742\u7684\u5f62\u72b6\u4e2d\uff0c\u4e09\u89d2\u5f62\u76f4\u63a5\u5171\u4eab\u7684\u9876\u70b9\u6570\u91cf\u751a\u81f3\u66f4\u9ad8\uff0c\u5982\u56fe\u6240\u793a\uff08\u5176\u9876\u70b9\u53ef\u4ee5\u5728\u516d\u4e2a\u4e09\u89d2\u5f62\u4e4b\u95f4\u5171\u4eab\uff09\uff1a \u6700\u540e\uff0c\u6211\u4eec\u9700\u8981\u66f4\u591a\u7684\u5185\u5b58\u6765\u50a8\u5b58\u91cd\u590d\u7684\u6570\u636e\uff0c\u8fd9\u5c31\u662f\u7d22\u5f15\u7f13\u51b2\u533a\uff08Index Buffer\uff09\u5927\u663e\u8eab\u624b\u7684\u65f6\u5019\u3002\u4e3a\u4e86\u7ed8\u5236\u6b63\u65b9\u5f62\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4ee5\u8fd9\u6837\u7684\u65b9\u5f0f\u6307\u5b9a\u6bcf\u4e2a\u9876\u70b9\uff1aV1, V2, V3, V4\u3002\u6bcf\u4e2a\u9876\u70b9\u5728\u6570\u7ec4\u4e2d\u90fd\u6709\u4e00\u4e2a\u4f4d\u7f6e\u3002V1\u5728\u4f4d\u7f6e0\u4e0a\uff0cV2\u5728\u4f4d\u7f6e1\u4e0a\uff0c\u7b49\u7b49\uff1a V1 V2 V3 V4 0 1 2 3 \u7136\u540e\uff0c\u6211\u4eec\u901a\u8fc7\u5f15\u7528\u5b83\u4eec\u7684\u4f4d\u7f6e\u6765\u6307\u5b9a\u8fd9\u4e9b\u9876\u70b9\u7684\u987a\u5e8f\uff1a 0 1 3 3 1 2 V1 V2 V4 V4 V2 V3 \u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u4fee\u6539 Mesh \u7c7b\u6765\u63a5\u6536\u53e6\u4e00\u4e2a\u53c2\u6570\uff0c\u4e00\u4e2a\u7d22\u5f15\u6570\u7ec4\uff0c\u73b0\u5728\u7ed8\u5236\u7684\u9876\u70b9\u6570\u91cf\u662f\u8be5\u7d22\u5f15\u6570\u7ec4\u7684\u957f\u5ea6\u3002 public Mesh(float[] positions, int[] indices) { vertexCount = indices.length; \u5728\u521b\u5efa\u4e86\u50a8\u5b58\u4f4d\u7f6e\u7684VBO\u4e4b\u540e\uff0c\u6211\u4eec\u9700\u8981\u521b\u5efa\u53e6\u4e00\u4e2aVBO\u6765\u50a8\u5b58\u7d22\u5f15\u3002\u56e0\u6b64\uff0c\u91cd\u547d\u540d\u50a8\u5b58\u4f4d\u7f6e\u7684VBO\u7684ID\u7684\u53d8\u91cf\u540d\uff0c\u5e76\u4e3a\u7d22\u5f15VBO\uff08 idxVboId \uff09\u521b\u5efa\u4e00\u4e2aID\u3002\u521b\u5efaVBO\u7684\u8fc7\u7a0b\u76f8\u4f3c\uff0c\u4f46\u73b0\u5728\u7684\u7c7b\u578b\u662f GL_ELEMENT_ARRAY_BUFFER \u3002 idxVboId = glGenBuffers(); indicesBuffer = MemoryUtil.memAllocInt(indices.length); indicesBuffer.put(indices).flip(); glBindBuffer(GL_ELEMENT_ARRAY_BUFFER, idxVboId); glBufferData(GL_ELEMENT_ARRAY_BUFFER, indicesBuffer, GL_STATIC_DRAW); memFree(indicesBuffer); \u56e0\u4e3a\u6211\u4eec\u662f\u5728\u5904\u7406\u6574\u6570\uff0c\u6240\u4ee5\u9700\u8981\u521b\u5efa\u4e00\u4e2a IntBuffer \u800c\u4e0d\u662f\u4e00\u4e2a FloatBuffer \u3002 \u5c31\u662f\u8fd9\u6837\u3002\u73b0\u5728VAO\u5305\u542b\u4e24\u4e2aVBO\uff0c\u4e00\u4e2a\u50a8\u5b58\u4f4d\u7f6e\uff0c\u53e6\u4e00\u4e2a\u50a8\u5b58\u7d22\u5f15\u3002 Mesh \u7c7b\u7684 cleanUp \u65b9\u6cd5\u4e5f\u5fc5\u987b\u8003\u8651\u5230\u8981\u91ca\u653e\u53e6\u4e00\u4e2aVBO\u3002 public void cleanUp() { glDisableVertexAttribArray(0); // \u5220\u9664 VBO glBindBuffer(GL_ARRAY_BUFFER, 0); glDeleteBuffers(posVboId); glDeleteBuffers(idxVboId); // \u5220\u9664 VAO glBindVertexArray(0); glDeleteVertexArrays(vaoId); } \u6700\u540e\uff0c\u6211\u4eec\u9700\u8981\u4fee\u6539\u5728\u7ed8\u5236\u65f6\u8c03\u7528\u7684 glDrawArrays \u65b9\u6cd5\uff1a glDrawArrays(GL_TRIANGLES, 0, mesh.getVertexCount()); \u6539\u4e3a\u8c03\u7528 glDrawElements \u65b9\u6cd5\uff1a glDrawElements(GL_TRIANGLES, mesh.getVertexCount(), GL_UNSIGNED_INT, 0); \u65b9\u6cd5\u7684\u53c2\u6570\u5982\u4e0b\uff1a * mode: \u6307\u5b9a\u6e32\u67d3\u7684\u56fe\u5143\u7c7b\u578b\uff0c\u73b0\u5728\u662f\u4e09\u89d2\u5f62\uff0c\u6ca1\u6709\u53d8\u5316\u3002 * count: \u6307\u5b9a\u8981\u6e32\u67d3\u7684\u9876\u70b9\u6570\u3002 * type: \u6307\u5b9a\u7d22\u5f15\u6570\u636e\u7684\u7c7b\u578b\uff0c\u73b0\u5728\u662f\u65e0\u7b26\u53f7\u6574\u6570\u578b\u3002 * indices: \u6307\u5b9a\u8981\u5f00\u59cb\u4f7f\u7528\u7d22\u5f15\u6e32\u67d3\u7684\u6570\u636e\u504f\u79fb\u91cf\u3002 \u73b0\u5728\u53ef\u4ee5\u4f7f\u7528\u5168\u65b0\u548c\u66f4\u6709\u6548\u7684\u65b9\u6cd5\u6765\u7ed8\u5236\u590d\u6742\u7684\u6a21\u578b\u4e86\uff0c\u4ec5\u9700\u6307\u5b9a\u7d22\u5f15\u3002 public void init() throws Exception { renderer.init(); float[] positions = new float[]{ -0.5f, 0.5f, 0.0f, -0.5f, -0.5f, 0.0f, 0.5f, -0.5f, 0.0f, 0.5f, 0.5f, 0.0f, }; int[] indices = new int[]{ 0, 1, 3, 3, 1, 2, }; mesh = new Mesh(positions, indices); } \u73b0\u5728\u4e3a\u793a\u4f8b\u4ee3\u7801\u6dfb\u52a0\u989c\u8272\u5427\u3002\u6211\u4eec\u628a\u53e6\u4e00\u7ec4\u6d6e\u70b9\u6570\u4f20\u9012\u7ed9 Mesh \u7c7b\uff0c\u5b83\u50a8\u5b58\u4e86\u6b63\u65b9\u5f62\u4e2d\u6bcf\u4e2a\u9876\u70b9\u7684\u989c\u8272\u3002 public Mesh(float[] positions, float[] colours, int[] indices) { \u4e3a\u4e86\u4f7f\u7528\u8be5\u6570\u7ec4\uff0c\u6211\u4eec\u9700\u8981\u521b\u5efa\u53e6\u4e00\u4e2aVBO\uff0c\u5b83\u5c06\u4e0e\u6211\u4eec\u7684VAO\u76f8\u5173\u8054\u3002 // \u989c\u8272 VBO colourVboId = glGenBuffers(); FloatBuffer colourBuffer = memAllocFloat(colours.length); colourBuffer.put(colours).flip(); glBindBuffer(GL_ARRAY_BUFFER, colourVboId); glBufferData(GL_ARRAY_BUFFER, colourBuffer, GL_STATIC_DRAW); glEnableVertexAttribArray(1); glVertexAttribPointer(1, 3, GL_FLOAT, false, 0, 0); \u8bf7\u6ce8\u610f glVertexAttribPointer \u65b9\u6cd5\u7684\u8c03\u7528\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570\u73b0\u5728\u662f\u201c1\u201d\uff0c\u8fd9\u662f\u7740\u8272\u5668\u671f\u671b\u6570\u636e\u7684\u4f4d\u7f6e\u3002\uff08\u5f53\u7136\uff0c\u7531\u4e8e\u589e\u52a0\u4e86\u4e00\u4e2aVBO\uff0c\u6211\u4eec\u9700\u8981\u5728 cleanUp \u65b9\u6cd5\u4e2d\u91ca\u653e\u5b83\uff09\u3002\u53ef\u4ee5\u770b\u5230\uff0c\u6211\u4eec\u9700\u8981\u5728\u6e32\u67d3\u671f\u95f4\u542f\u7528\u4f4d\u7f6e1\u5904\u7684VAO\u5c5e\u6027\u3002 \u63a5\u4e0b\u6765\u662f\u4fee\u6539\u7740\u8272\u5668\u3002\u9876\u70b9\u7740\u8272\u5668\u73b0\u5728\u9700\u8981\u4e24\u4e2a\u53c2\u6570\uff0c\u5750\u6807\uff08\u4f4d\u7f6e0\uff09\u548c\u989c\u8272\uff08\u4f4d\u7f6e1\uff09\u3002\u9876\u70b9\u7740\u8272\u5668\u5c06\u53ea\u8f93\u51fa\u63a5\u6536\u5230\u7684\u989c\u8272\uff0c\u4ee5\u4fbf\u7247\u5143\u7740\u8272\u5668\u53ef\u4ee5\u5bf9\u5176\u8fdb\u884c\u5904\u7406\u3002 #version 330 layout (location=0) in vec3 position; layout (location=1) in vec3 inColour; out vec3 exColour; void main() { gl_Position = vec4(position, 1.0); exColour = inColour; } \u73b0\u5728\uff0c\u7247\u5143\u7740\u8272\u5668\u63a5\u6536\u7531\u9876\u70b9\u7740\u8272\u5668\u5904\u7406\u7684\u989c\u8272\uff0c\u5e76\u4f7f\u7528\u5b83\u6765\u751f\u6210\u989c\u8272\u3002 #version 330 in vec3 exColour; out vec4 fragColor; void main() { fragColor = vec4(exColour, 1.0); } \u6700\u540e\u8981\u505a\u7684\u662f\u4fee\u6539\u6e32\u67d3\u4ee3\u7801\u4ee5\u4f7f\u7528\u7b2c\u4e8c\u4e2a\u6570\u636e\u6570\u7ec4\uff1a \u6211\u4eec\u73b0\u5728\u53ef\u4ee5\u5c06\u5982\u4e0b\u6240\u793a\u7684\u989c\u8272\u6570\u7ec4\u4f20\u9012\u7ed9 Mesh \u7c7b\uff0c\u4e3a\u6b63\u65b9\u5f62\u6dfb\u52a0\u4e00\u4e9b\u989c\u8272\u3002 float[] colours = new float[]{ 0.5f, 0.0f, 0.0f, 0.0f, 0.5f, 0.0f, 0.0f, 0.0f, 0.5f, 0.0f, 0.5f, 0.5f, }; \u7136\u540e\u4f1a\u5f97\u5230\u4e00\u4e2a\u8272\u5f69\u9c9c\u8273\u7684\u6b63\u65b9\u5f62\u3002","title":"\u6e32\u67d3\u8865\u5145"},{"location":"05-more-on-rendering/#more-on-rendering","text":"\u672c\u7ae0\u6211\u4eec\u5c06\u7ee7\u7eed\u8bb2\u8ff0OpenGL\u5982\u4f55\u6e32\u67d3\u7269\u4f53\u3002\u4e3a\u4e86\u6574\u7406\u4ee3\u7801\uff0c\u6211\u4eec\u8981\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a Mesh \u7684\u65b0\u7c7b\uff0c\u628a\u4e00\u4e2a\u4f4d\u7f6e\u6570\u7ec4\u4f5c\u4e3a\u8f93\u5165\uff0c\u4e3a\u9700\u8981\u52a0\u8f7d\u5230\u663e\u5361\u4e2d\u7684\u6a21\u578b\u521b\u5efaVBO\u548cVAO\u5bf9\u8c61\u3002 package org.lwjglb.engine.graph; import java.nio.FloatBuffer; import org.lwjgl.system.MemoryUtil; import static org.lwjgl.opengl.GL30.*; public class Mesh { private final int vaoId; private final int vboId; private final int vertexCount; public Mesh(float[] positions) { FloatBuffer verticesBuffer = null; try { verticesBuffer = MemoryUtil.memAllocFloat(positions.length); vertexCount = positions.length / 3; verticesBuffer.put(positions).flip(); vaoId = glGenVertexArrays(); glBindVertexArray(vaoId); vboId = glGenBuffers(); glBindBuffer(GL_ARRAY_BUFFER, vboId); glBufferData(GL_ARRAY_BUFFER, verticesBuffer, GL_STATIC_DRAW); glEnableVertexAttribArray(0); glVertexAttribPointer(0, 3, GL_FLOAT, false, 0, 0); glBindBuffer(GL_ARRAY_BUFFER, 0); glBindVertexArray(0); } finally { if (verticesBuffer != null) { MemoryUtil.memFree(verticesBuffer); } } } public int getVaoId() { return vaoId; } public int getVertexCount() { return vertexCount; } public void cleanUp() { glDisableVertexAttribArray(0); // \u5220\u9664VBO glBindBuffer(GL_ARRAY_BUFFER, 0); glDeleteBuffers(vboId); // \u5220\u9664VAO glBindVertexArray(0); glDeleteVertexArrays(vaoId); } } \u6211\u4eec\u5c06\u5728 DummyGame \u7c7b\u4e2d\u5b9e\u4f8b\u5316 Mesh \uff0c\u7136\u540e\u5c06 Renderer \u7684 init \u65b9\u6cd5\u4e2d\u7684VAO\u548cVBO\u4ee3\u7801\u5220\u9664\u3002\u5728 Renderer \u7c7b\u7684\u6e32\u67d3\u65b9\u6cd5\u4e2d\u5c06\u63a5\u6536\u4e00\u4e2a Mesh \u5bf9\u8c61\u6765\u6e32\u67d3\u3002 cleanup \u65b9\u6cd5\u4e5f\u88ab\u7b80\u5316\uff0c\u56e0\u4e3a Mesh \u7c7b\u5df2\u7ecf\u63d0\u4f9b\u4e86\u4e00\u4e2a\u91ca\u653eVAO\u548cVBO\u8d44\u6e90\u7684\u65b9\u6cd5\u3002 public void render(Mesh mesh) { clear(); if ( window.isResized() ) { glViewport(0, 0, window.getWidth(), window.getHeight()); window.setResized(false); } shaderProgram.bind(); // \u7ed8\u5236 glBindVertexArray(mesh.getVaoId()); glDrawArrays(GL_TRIANGLES, 0, mesh.getVertexCount()); // \u8fd8\u539f\u72b6\u6001 glBindVertexArray(0); shaderProgram.unbind(); } public void cleanup() { if (shaderProgram != null) { shaderProgram.cleanup(); } } \u503c\u5f97\u6ce8\u610f\u7684\u4e00\u70b9\u662f\uff1a glDrawArrays(GL_TRIANGLES, 0, mesh.getVertexCount()); Mesh \u7c7b\u901a\u8fc7\u5c06\u4f4d\u7f6e\u6570\u7ec4\u9664\u4ee53\u6765\u8ba1\u7b97\u9876\u70b9\u7684\u6570\u76ee\uff08\u56e0\u4e3a\u6211\u4eec\u4f7f\u7528X\uff0cY\u548cZ\u5750\u6807\uff09\u3002\u73b0\u5728\uff0c\u6211\u4eec\u53ef\u4ee5\u6e32\u67d3\u66f4\u590d\u6742\u7684\u5f62\u72b6\u3002\u6765\u8bd5\u8bd5\u6e32\u67d3\u4e00\u4e2a\u6b63\u65b9\u5f62\uff0c\u4e00\u4e2a\u6b63\u65b9\u5f62\u53ef\u4ee5\u7528\u4e24\u4e2a\u4e09\u89d2\u5f62\u6765\u7ec4\u6210\uff0c\u5982\u56fe\u6240\u793a\uff1a \u5982\u4f60\u6240\u89c1\uff0c\u8fd9\u4e24\u4e2a\u4e09\u89d2\u5f62\u4e2d\u7684\u6bcf\u4e00\u4e2a\u90fd\u7531\u4e09\u4e2a\u9876\u70b9\u7ec4\u6210\u3002\u7b2c\u4e00\u4e2a\u4e09\u89d2\u5f62\u7531\u9876\u70b9V1\u3001V2\u548cV4\uff08\u6a59\u8272\u7684\u70b9\uff09\u7ec4\u6210\uff0c\u7b2c\u4e8c\u4e2a\u4e09\u89d2\u5f62\u7531\u9876\u70b9V4\uff0cV2\u548cV3\uff08\u7eff\u8272\u7684\u70b9\uff09\u7ec4\u6210\u3002\u9876\u70b9\u4ee5\u9006\u65f6\u9488\u987a\u5e8f\u8fde\u63a5\uff0c\u56e0\u6b64\u8981\u4f20\u9012\u7684\u6d6e\u70b9\u6570\u6570\u7ec4\u5e94\u8be5\u662f[V1, V2, V4, V4, V2, V3]\u3002\u56e0\u6b64\uff0c DummyGame \u7684 init \u65b9\u6cd5\u5c06\u662f\u8fd9\u6837\u7684\uff1a @Override public void init() throws Exception { renderer.init(); float[] positions = new float[]{ -0.5f, 0.5f, 0.0f, -0.5f, -0.5f, 0.0f, 0.5f, 0.5f, 0.0f, 0.5f, 0.5f, 0.0f, -0.5f, -0.5f, 0.0f, 0.5f, -0.5f, 0.0f, }; mesh = new Mesh(positions); } \u73b0\u5728\u4f60\u5e94\u8be5\u53ef\u4ee5\u770b\u5230\u8fd9\u6837\u7684\u4e00\u4e2a\u6b63\u65b9\u5f62\uff1a \u6211\u4eec\u505a\u5b8c\u4e86\u5417\uff1f\u5e76\u6ca1\u6709\uff0c\u4e0a\u8ff0\u4ee3\u7801\u4ecd\u5b58\u5728\u4e00\u4e9b\u95ee\u9898\u3002\u6211\u4eec\u4f7f\u7528\u4e86\u91cd\u590d\u7684\u5750\u6807\u6765\u8868\u793a\u6b63\u65b9\u5f62\uff0c\u4f20\u9012\u4e86\u4e24\u6b21V2\u548cV4\u5750\u6807\u3002\u8fd9\u662f\u4e2a\u5c0f\u56fe\u5f62\uff0c\u5b83\u53ef\u80fd\u4e0d\u662f\u4ec0\u4e48\u5927\u95ee\u9898\uff0c\u4f46\u60f3\u8c61\u5728\u4e00\u4e2a\u66f4\u590d\u6742\u76843D\u6a21\u578b\u4e2d\uff0c\u6211\u4eec\u4f1a\u591a\u6b21\u91cd\u590d\u4f20\u9012\u5750\u6807\u3002\u8bb0\u4f4f\uff0c\u6211\u4eec\u4f7f\u7528\u4e09\u4e2a\u6d6e\u70b9\u6570\u8868\u793a\u9876\u70b9\u7684\u4f4d\u7f6e\uff0c\u4f46\u6b64\u540e\u5c06\u9700\u8981\u66f4\u591a\u7684\u6570\u636e\u6765\u8868\u793a\u7eb9\u7406\u7b49\u3002\u8003\u8651\u5230\u5728\u66f4\u590d\u6742\u7684\u5f62\u72b6\u4e2d\uff0c\u4e09\u89d2\u5f62\u76f4\u63a5\u5171\u4eab\u7684\u9876\u70b9\u6570\u91cf\u751a\u81f3\u66f4\u9ad8\uff0c\u5982\u56fe\u6240\u793a\uff08\u5176\u9876\u70b9\u53ef\u4ee5\u5728\u516d\u4e2a\u4e09\u89d2\u5f62\u4e4b\u95f4\u5171\u4eab\uff09\uff1a \u6700\u540e\uff0c\u6211\u4eec\u9700\u8981\u66f4\u591a\u7684\u5185\u5b58\u6765\u50a8\u5b58\u91cd\u590d\u7684\u6570\u636e\uff0c\u8fd9\u5c31\u662f\u7d22\u5f15\u7f13\u51b2\u533a\uff08Index Buffer\uff09\u5927\u663e\u8eab\u624b\u7684\u65f6\u5019\u3002\u4e3a\u4e86\u7ed8\u5236\u6b63\u65b9\u5f62\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4ee5\u8fd9\u6837\u7684\u65b9\u5f0f\u6307\u5b9a\u6bcf\u4e2a\u9876\u70b9\uff1aV1, V2, V3, V4\u3002\u6bcf\u4e2a\u9876\u70b9\u5728\u6570\u7ec4\u4e2d\u90fd\u6709\u4e00\u4e2a\u4f4d\u7f6e\u3002V1\u5728\u4f4d\u7f6e0\u4e0a\uff0cV2\u5728\u4f4d\u7f6e1\u4e0a\uff0c\u7b49\u7b49\uff1a V1 V2 V3 V4 0 1 2 3 \u7136\u540e\uff0c\u6211\u4eec\u901a\u8fc7\u5f15\u7528\u5b83\u4eec\u7684\u4f4d\u7f6e\u6765\u6307\u5b9a\u8fd9\u4e9b\u9876\u70b9\u7684\u987a\u5e8f\uff1a 0 1 3 3 1 2 V1 V2 V4 V4 V2 V3 \u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u4fee\u6539 Mesh \u7c7b\u6765\u63a5\u6536\u53e6\u4e00\u4e2a\u53c2\u6570\uff0c\u4e00\u4e2a\u7d22\u5f15\u6570\u7ec4\uff0c\u73b0\u5728\u7ed8\u5236\u7684\u9876\u70b9\u6570\u91cf\u662f\u8be5\u7d22\u5f15\u6570\u7ec4\u7684\u957f\u5ea6\u3002 public Mesh(float[] positions, int[] indices) { vertexCount = indices.length; \u5728\u521b\u5efa\u4e86\u50a8\u5b58\u4f4d\u7f6e\u7684VBO\u4e4b\u540e\uff0c\u6211\u4eec\u9700\u8981\u521b\u5efa\u53e6\u4e00\u4e2aVBO\u6765\u50a8\u5b58\u7d22\u5f15\u3002\u56e0\u6b64\uff0c\u91cd\u547d\u540d\u50a8\u5b58\u4f4d\u7f6e\u7684VBO\u7684ID\u7684\u53d8\u91cf\u540d\uff0c\u5e76\u4e3a\u7d22\u5f15VBO\uff08 idxVboId \uff09\u521b\u5efa\u4e00\u4e2aID\u3002\u521b\u5efaVBO\u7684\u8fc7\u7a0b\u76f8\u4f3c\uff0c\u4f46\u73b0\u5728\u7684\u7c7b\u578b\u662f GL_ELEMENT_ARRAY_BUFFER \u3002 idxVboId = glGenBuffers(); indicesBuffer = MemoryUtil.memAllocInt(indices.length); indicesBuffer.put(indices).flip(); glBindBuffer(GL_ELEMENT_ARRAY_BUFFER, idxVboId); glBufferData(GL_ELEMENT_ARRAY_BUFFER, indicesBuffer, GL_STATIC_DRAW); memFree(indicesBuffer); \u56e0\u4e3a\u6211\u4eec\u662f\u5728\u5904\u7406\u6574\u6570\uff0c\u6240\u4ee5\u9700\u8981\u521b\u5efa\u4e00\u4e2a IntBuffer \u800c\u4e0d\u662f\u4e00\u4e2a FloatBuffer \u3002 \u5c31\u662f\u8fd9\u6837\u3002\u73b0\u5728VAO\u5305\u542b\u4e24\u4e2aVBO\uff0c\u4e00\u4e2a\u50a8\u5b58\u4f4d\u7f6e\uff0c\u53e6\u4e00\u4e2a\u50a8\u5b58\u7d22\u5f15\u3002 Mesh \u7c7b\u7684 cleanUp \u65b9\u6cd5\u4e5f\u5fc5\u987b\u8003\u8651\u5230\u8981\u91ca\u653e\u53e6\u4e00\u4e2aVBO\u3002 public void cleanUp() { glDisableVertexAttribArray(0); // \u5220\u9664 VBO glBindBuffer(GL_ARRAY_BUFFER, 0); glDeleteBuffers(posVboId); glDeleteBuffers(idxVboId); // \u5220\u9664 VAO glBindVertexArray(0); glDeleteVertexArrays(vaoId); } \u6700\u540e\uff0c\u6211\u4eec\u9700\u8981\u4fee\u6539\u5728\u7ed8\u5236\u65f6\u8c03\u7528\u7684 glDrawArrays \u65b9\u6cd5\uff1a glDrawArrays(GL_TRIANGLES, 0, mesh.getVertexCount()); \u6539\u4e3a\u8c03\u7528 glDrawElements \u65b9\u6cd5\uff1a glDrawElements(GL_TRIANGLES, mesh.getVertexCount(), GL_UNSIGNED_INT, 0); \u65b9\u6cd5\u7684\u53c2\u6570\u5982\u4e0b\uff1a * mode: \u6307\u5b9a\u6e32\u67d3\u7684\u56fe\u5143\u7c7b\u578b\uff0c\u73b0\u5728\u662f\u4e09\u89d2\u5f62\uff0c\u6ca1\u6709\u53d8\u5316\u3002 * count: \u6307\u5b9a\u8981\u6e32\u67d3\u7684\u9876\u70b9\u6570\u3002 * type: \u6307\u5b9a\u7d22\u5f15\u6570\u636e\u7684\u7c7b\u578b\uff0c\u73b0\u5728\u662f\u65e0\u7b26\u53f7\u6574\u6570\u578b\u3002 * indices: \u6307\u5b9a\u8981\u5f00\u59cb\u4f7f\u7528\u7d22\u5f15\u6e32\u67d3\u7684\u6570\u636e\u504f\u79fb\u91cf\u3002 \u73b0\u5728\u53ef\u4ee5\u4f7f\u7528\u5168\u65b0\u548c\u66f4\u6709\u6548\u7684\u65b9\u6cd5\u6765\u7ed8\u5236\u590d\u6742\u7684\u6a21\u578b\u4e86\uff0c\u4ec5\u9700\u6307\u5b9a\u7d22\u5f15\u3002 public void init() throws Exception { renderer.init(); float[] positions = new float[]{ -0.5f, 0.5f, 0.0f, -0.5f, -0.5f, 0.0f, 0.5f, -0.5f, 0.0f, 0.5f, 0.5f, 0.0f, }; int[] indices = new int[]{ 0, 1, 3, 3, 1, 2, }; mesh = new Mesh(positions, indices); } \u73b0\u5728\u4e3a\u793a\u4f8b\u4ee3\u7801\u6dfb\u52a0\u989c\u8272\u5427\u3002\u6211\u4eec\u628a\u53e6\u4e00\u7ec4\u6d6e\u70b9\u6570\u4f20\u9012\u7ed9 Mesh \u7c7b\uff0c\u5b83\u50a8\u5b58\u4e86\u6b63\u65b9\u5f62\u4e2d\u6bcf\u4e2a\u9876\u70b9\u7684\u989c\u8272\u3002 public Mesh(float[] positions, float[] colours, int[] indices) { \u4e3a\u4e86\u4f7f\u7528\u8be5\u6570\u7ec4\uff0c\u6211\u4eec\u9700\u8981\u521b\u5efa\u53e6\u4e00\u4e2aVBO\uff0c\u5b83\u5c06\u4e0e\u6211\u4eec\u7684VAO\u76f8\u5173\u8054\u3002 // \u989c\u8272 VBO colourVboId = glGenBuffers(); FloatBuffer colourBuffer = memAllocFloat(colours.length); colourBuffer.put(colours).flip(); glBindBuffer(GL_ARRAY_BUFFER, colourVboId); glBufferData(GL_ARRAY_BUFFER, colourBuffer, GL_STATIC_DRAW); glEnableVertexAttribArray(1); glVertexAttribPointer(1, 3, GL_FLOAT, false, 0, 0); \u8bf7\u6ce8\u610f glVertexAttribPointer \u65b9\u6cd5\u7684\u8c03\u7528\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570\u73b0\u5728\u662f\u201c1\u201d\uff0c\u8fd9\u662f\u7740\u8272\u5668\u671f\u671b\u6570\u636e\u7684\u4f4d\u7f6e\u3002\uff08\u5f53\u7136\uff0c\u7531\u4e8e\u589e\u52a0\u4e86\u4e00\u4e2aVBO\uff0c\u6211\u4eec\u9700\u8981\u5728 cleanUp \u65b9\u6cd5\u4e2d\u91ca\u653e\u5b83\uff09\u3002\u53ef\u4ee5\u770b\u5230\uff0c\u6211\u4eec\u9700\u8981\u5728\u6e32\u67d3\u671f\u95f4\u542f\u7528\u4f4d\u7f6e1\u5904\u7684VAO\u5c5e\u6027\u3002 \u63a5\u4e0b\u6765\u662f\u4fee\u6539\u7740\u8272\u5668\u3002\u9876\u70b9\u7740\u8272\u5668\u73b0\u5728\u9700\u8981\u4e24\u4e2a\u53c2\u6570\uff0c\u5750\u6807\uff08\u4f4d\u7f6e0\uff09\u548c\u989c\u8272\uff08\u4f4d\u7f6e1\uff09\u3002\u9876\u70b9\u7740\u8272\u5668\u5c06\u53ea\u8f93\u51fa\u63a5\u6536\u5230\u7684\u989c\u8272\uff0c\u4ee5\u4fbf\u7247\u5143\u7740\u8272\u5668\u53ef\u4ee5\u5bf9\u5176\u8fdb\u884c\u5904\u7406\u3002 #version 330 layout (location=0) in vec3 position; layout (location=1) in vec3 inColour; out vec3 exColour; void main() { gl_Position = vec4(position, 1.0); exColour = inColour; } \u73b0\u5728\uff0c\u7247\u5143\u7740\u8272\u5668\u63a5\u6536\u7531\u9876\u70b9\u7740\u8272\u5668\u5904\u7406\u7684\u989c\u8272\uff0c\u5e76\u4f7f\u7528\u5b83\u6765\u751f\u6210\u989c\u8272\u3002 #version 330 in vec3 exColour; out vec4 fragColor; void main() { fragColor = vec4(exColour, 1.0); } \u6700\u540e\u8981\u505a\u7684\u662f\u4fee\u6539\u6e32\u67d3\u4ee3\u7801\u4ee5\u4f7f\u7528\u7b2c\u4e8c\u4e2a\u6570\u636e\u6570\u7ec4\uff1a \u6211\u4eec\u73b0\u5728\u53ef\u4ee5\u5c06\u5982\u4e0b\u6240\u793a\u7684\u989c\u8272\u6570\u7ec4\u4f20\u9012\u7ed9 Mesh \u7c7b\uff0c\u4e3a\u6b63\u65b9\u5f62\u6dfb\u52a0\u4e00\u4e9b\u989c\u8272\u3002 float[] colours = new float[]{ 0.5f, 0.0f, 0.0f, 0.0f, 0.5f, 0.0f, 0.0f, 0.0f, 0.5f, 0.0f, 0.5f, 0.5f, }; \u7136\u540e\u4f1a\u5f97\u5230\u4e00\u4e2a\u8272\u5f69\u9c9c\u8273\u7684\u6b63\u65b9\u5f62\u3002","title":"\u6e32\u67d3\u8865\u5145\uff08More on Rendering\uff09"},{"location":"06-transformations/","text":"\u53d8\u6362\uff08Transformations\uff09 \u6295\u5f71 \u8ba9\u6211\u4eec\u56de\u770b\u5728\u524d\u4e00\u7ae0\u4e2d\u521b\u5efa\u7684\u8272\u5f69\u9c9c\u8273\u7684\u6b63\u65b9\u5f62\u3002\u5982\u679c\u4ed4\u7ec6\u770b\uff0c\u5b83\u66f4\u50cf\u4e00\u4e2a\u77e9\u5f62\uff0c\u4f60\u751a\u81f3\u53ef\u4ee5\u5c06\u7a97\u53e3\u7684\u5bbd\u5ea6\u4ece600\u50cf\u7d20\u6539\u4e3a900\u50cf\u7d20\uff0c\u5931\u771f\u5c31\u4f1a\u66f4\u52a0\u660e\u663e\u3002\u8fd9\u53d1\u751f\u4e86\u4ec0\u4e48\u5462\uff1f \u5982\u679c\u4f60\u67e5\u770b\u9876\u70b9\u7740\u8272\u5668\u7684\u4ee3\u7801\uff0c\u6211\u4eec\u53ea\u662f\u76f4\u63a5\u5730\u4f20\u9012\u5750\u6807\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5f53\u4e00\u4e2a\u9876\u70b9\u7684X\u5750\u6807\u4e3a0.5\u65f6\uff0c\u6211\u4eec\u8ba9OpenGL\u5728\u5c4f\u5e55\u7684X\u5750\u6807\u4e3a0.5\u7684\u4f4d\u7f6e\u7ed8\u5236\u5b83\u3002\u4e0b\u56fe\u5c55\u793a\u4e86OpenGL\u5750\u6807\u7cfb\uff08\u4ec5\u542bX\u548cY\u8f74\uff09\u3002 \u5c06\u8fd9\u4e9b\u5750\u6807\u6295\u5f71\u5230\u7a97\u53e3\u5750\u6807\u7cfb\uff08\u5176\u539f\u70b9\u4f4d\u4e8e\u4e0a\u56fe\u7684\u5de6\u4e0a\u89d2\uff09\uff0c\u9700\u8981\u8003\u8651\u5230\u7a97\u53e3\u7684\u5927\u5c0f\u3002\u56e0\u6b64\uff0c\u5982\u679c\u6211\u4eec\u7684\u7a97\u53e3\u5927\u5c0f\u4e3a900x480\uff0cOpenGL\u5750\u6807(1, 0)\u5c06\u88ab\u6295\u5f71\u5230\u7a97\u53e3\u5750\u6807(900, 0)\uff0c\u6700\u7ec8\u521b\u5efa\u4e00\u4e2a\u77e9\u5f62\u800c\u4e0d\u662f\u4e00\u4e2a\u6b63\u65b9\u5f62\u3002 \u4f46\u662f\uff0c\u95ee\u9898\u8fdc\u6bd4\u8fd9\u66f4\u4e25\u91cd\u3002\u5c06\u56db\u8fb9\u5f62\u7684Z\u5750\u6807\u4ece0.0\u4fee\u6539\u4e3a1.0\u548c-1.0\uff0c\u4f60\u53d1\u73b0\u4e86\u4ec0\u4e48\uff1f\u56db\u8fb9\u5f62\u5b8c\u5168\u662f\u7ed8\u5236\u5728\u540c\u4e00\u4e2a\u5730\u65b9\uff0c\u4e0d\u7ba1\u5b83\u662f\u5426\u6cbf\u7740Z\u8f74\u4f4d\u79fb\u3002\u4e3a\u4ec0\u4e48\u4f1a\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\uff1f\u8fdc\u5904\u7684\u7269\u4f53\u5e94\u8be5\u6bd4\u8fd1\u5904\u7684\u7269\u4f53\u7ed8\u5236\u5f97\u66f4\u5c0f\uff0c\u4f46\u662f\u6211\u4eec\u4f7f\u7528\u76f8\u540c\u7684X\u548cY\u5750\u6807\u7ed8\u5236\u5b83\u4eec\u3002 \u4f46\u7a0d\u7b49\u4e00\u4e0b\uff0c\u8fd9\u4e0d\u5e94\u8be5\u7531Z\u5750\u6807\u6765\u5904\u7406\u5417\uff1f\u8fd9\u534a\u5bf9\u534a\u9519\u3002Z\u5750\u6807\u544a\u8bc9OpenGL\u4e00\u4e2a\u7269\u4f53\u7684\u8fdc\u8fd1\uff0c\u4f46\u662fOpenGL\u5bf9\u4f60\u7684\u7269\u4f53\u7684\u5927\u5c0f\u4e00\u65e0\u6240\u77e5\u3002\u4f60\u53ef\u4ee5\u6709\u4e24\u4e2a\u4e0d\u540c\u5927\u5c0f\u7684\u7269\u4f53\uff0c\u4e00\u4e2a\u66f4\u8fd1\u66f4\u5c0f\uff0c\u4e00\u4e2a\u66f4\u8fdc\u66f4\u5927\uff0c\u800c\u4e14\u53ef\u4ee5\u4ee5\u76f8\u540c\u7684\u5927\u5c0f\u6b63\u786e\u5730\u6295\u5f71\u5230\u5c4f\u5e55\u4e0a\uff08\u6709\u76f8\u540c\u7684\u5c4f\u5e55X\u548cY\u5750\u6807\uff0c\u4f46Z\u5750\u6807\u4e0d\u540c\uff09\u3002OpenGL\u53ea\u4f7f\u7528\u6b63\u5728\u4f20\u9012\u7684\u5750\u6807\uff0c\u6240\u4ee5\u6211\u4eec\u5fc5\u987b\u5904\u7406\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u9700\u8981\u6b63\u786e\u5730\u6295\u5f71\u5750\u6807\u3002 \u65e2\u7136\u5df2\u7ecf\u786e\u8bca\u4e86\u8fd9\u4e2a\u95ee\u9898\uff0c\u8be5\u600e\u4e48\u89e3\u51b3\u5462\uff1f\u7b54\u6848\u662f\u4f7f\u7528\u6295\u5f71\u77e9\u9635\uff08Projection Matrix\uff09\u6216\u622a\u9525\u4f53\uff08Frustum\uff09\u3002\u6295\u5f71\u77e9\u9635\u5c06\u5904\u7406\u7ed8\u5236\u533a\u57df\u7684\u5bbd\u9ad8\u6bd4\uff08\u5927\u5c0f\u4e0e\u9ad8\u5ea6\u4e4b\u95f4\u7684\u5173\u7cfb\uff09\uff0c\u8fd9\u6837\u7269\u4f53\u5c31\u4e0d\u4f1a\u53d8\u5f62\u3002\u5b83\u8fd8\u53ef\u4ee5\u5904\u7406\u8ddd\u79bb\uff0c\u6240\u4ee5\u8f83\u8fdc\u7684\u7269\u4f53\u5c06\u4f1a\u88ab\u7ed8\u5236\u5f97\u66f4\u5c0f\u3002\u6295\u5f71\u77e9\u9635\u8fd8\u5c06\u8003\u8651\u6211\u4eec\u7684\u89c6\u91ce\u548c\u5e94\u8be5\u663e\u793a\u7684\u8ddd\u79bb\u6709\u591a\u8fdc\u3002 \u5bf9\u4e8e\u4e0d\u719f\u6089\u77e9\u9635\u7684\u4eba\uff0c\u77e9\u9635\uff08Matrix\uff09\u662f\u4ee5\u884c\u548c\u5217\u6392\u5217\u7684\u4e8c\u7ef4\u6570\u7ec4\u3002\u77e9\u9635\u4e2d\u7684\u6bcf\u4e2a\u6570\u5b57\u88ab\u79f0\u4e3a\u5143\u7d20\u3002\u77e9\u9635\u9636\u6b21\u662f\u884c\u548c\u5217\u7684\u6570\u91cf\u3002\u4f8b\u5982\uff0c\u6b64\u5904\u662f\u4e00\u4e2a2x2\u77e9\u9635\uff08\u67092\u884c2\u5217\uff09\u3002 \u77e9\u9635\u6709\u8bb8\u591a\u53ef\u4ee5\u5e94\u7528\u4e8e\u5b83\u4eec\u7684\u57fa\u672c\u8fd0\u7b97\uff08\u5982\u52a0\u6cd5\u3001\u4e58\u6cd5\u7b49\uff09\uff0c\u4f60\u53ef\u4ee5\u5728\u6570\u5b66\u4e66\u4e2d\u67e5\u9605\uff0c\u5176\u4e2d\u4e0e\u4e09\u7ef4\u56fe\u5f62\u76f8\u5173\u7684\u77e9\u9635\u5bf9\u7a7a\u95f4\u4e2d\u70b9\u7684\u53d8\u6362\u975e\u5e38\u6709\u7528\u3002 \u4f60\u53ef\u4ee5\u628a\u6295\u5f71\u77e9\u9635\u60f3\u8c61\u6210\u4e00\u4e2a\u6444\u50cf\u673a\uff0c\u5b83\u6709\u4e00\u4e2a\u89c6\u91ce\u548c\u6700\u5c0f\u548c\u6700\u5927\u8ddd\u79bb\u3002\u8be5\u6444\u50cf\u673a\u7684\u53ef\u89c6\u533a\u57df\u662f\u4e00\u4e2a\u622a\u65ad\u7684\u91d1\u5b57\u5854\uff0c\u4e0b\u56fe\u4e3a\u8be5\u533a\u57df\u7684\u4fef\u89c6\u56fe\u3002 \u6295\u5f71\u77e9\u9635\u5c06\u6b63\u786e\u5730\u6295\u5f71\u4e09\u7ef4\u5750\u6807\uff0c\u4ee5\u4fbf\u5b83\u4eec\u80fd\u591f\u5728\u4e8c\u7ef4\u5c4f\u5e55\u4e0a\u6b63\u786e\u5730\u663e\u793a\u3002\u8be5\u77e9\u9635\u7684\u6570\u5b66\u8868\u793a\u5982\u4e0b\uff08\u4e0d\u8981\u5bb3\u6015\uff09\uff1a \u5176\u4e2d\u5c4f\u5e55\u5bbd\u9ad8\u6bd4\uff08Aspect Ratio\uff09\u6307\u7684\u662f\u5c4f\u5e55\u5bbd\u5ea6\u4e0e\u5c4f\u5e55\u9ad8\u5ea6\u7684\u5173\u7cfb\uff08 \u5c4f\u5e55\u5bbd\u9ad8\u6bd4=\u5bbd\u5ea6/\u9ad8\u5ea6 \uff09\u3002\u4e3a\u4e86\u83b7\u5f97\u7ed9\u5b9a\u70b9\u7684\u6295\u5f71\u5750\u6807\uff0c\u53ea\u9700\u8981\u5c06\u6295\u5f71\u77e9\u9635\u4e58\u4ee5\u539f\u59cb\u5750\u6807\uff0c\u7ed3\u679c\u662f\u6295\u5f71\u540e\u7684\u53e6\u4e00\u4e2a\u5411\u91cf\u3002 \u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u5904\u7406\u4e00\u7ec4\u6570\u5b66\u5b9e\u4f53\uff0c\u5982\u5411\u91cf\u3001\u77e9\u9635\uff0c\u5e76\u5305\u62ec\u53ef\u4ee5\u5bf9\u5b83\u4eec\u8fdb\u884c\u7684\u8fd0\u7b97\u3002\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u4ece\u5934\u5f00\u59cb\u7f16\u5199\u6240\u6709\u7684\u4ee3\u7801\uff0c\u6216\u8005\u4f7f\u7528\u5df2\u5b9e\u73b0\u7684\u5e93\u3002\u5f53\u7136\u6211\u4eec\u4f1a\u9009\u62e9\u5bb9\u6613\u7684\u65b9\u6cd5\uff0c\u4f7f\u7528JOML\uff08Java OpenGL Math Library\uff0cJava OpenGL \u6570\u5b66\u5e93\uff09\u5904\u7406LWJGL\u5185\u7684\u6570\u5b66\u8fd0\u7b97\u3002\u4e3a\u4e86\u4f7f\u7528\u8be5\u5e93\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5728 pom.xml \u6587\u4ef6\u6dfb\u52a0\u53e6\u4e00\u4e2a\u4f9d\u8d56\u9879\u3002 <dependency> <groupId>org.joml</groupId> <artifactId>joml</artifactId> <version>${joml.version}</version> </dependency> \u7136\u540e\u8bbe\u7f6e\u8981\u4f7f\u7528\u7684\u5e93\u7248\u672c\u3002 <properties> [...] <joml.version>1.9.6</joml.version> [...] </properties> \u73b0\u5728\u4e00\u5207\u90fd\u51c6\u5907\u597d\u4e86\uff0c\u6765\u5b9a\u4e49\u6211\u4eec\u7684\u6295\u5f71\u77e9\u9635\u3002\u5728 Renderer \u7c7b\u4e2d\u521b\u5efa Matrix4f \u7c7b\uff08\u7531JOML\u5e93\u63d0\u4f9b\uff09\u7684\u5b9e\u4f8b\u3002 Matrix4f \u7c7b\u63d0\u4f9b\u4e86\u4e00\u4e2a perspective \u65b9\u6cd5\u6765\u521b\u5efa\u6295\u5f71\u77e9\u9635\uff0c\u8be5\u65b9\u6cd5\u9700\u8981\u4ee5\u4e0b\u53c2\u6570\uff1a \u89c6\u91ce\uff1a\u53ef\u89c6\u533a\u57df\u89d2\u7684\u5f27\u5ea6\u5927\u5c0f\uff0c\u6211\u4eec\u5c06\u5b9a\u4e49\u4e00\u4e2a\u50a8\u5b58\u8be5\u503c\u7684\u5e38\u6570\u3002 \u5c4f\u5e55\u5bbd\u9ad8\u6bd4\u3002 \u6700\u8fd1\u89c6\u8ddd\uff08z-near\uff09\u3002 \u6700\u8fdc\u89c6\u8ddd\uff08z-far\uff09\u3002 \u6211\u4eec\u5c06\u5728 init \u65b9\u6cd5\u4e2d\u5b9e\u4f8b\u5316\u8be5\u77e9\u9635\uff0c\u56e0\u6b64\u9700\u8981\u4f20\u9012\u5bf9 Window \u5b9e\u4f8b\u7684\u9634\u5f71\u4ee5\u83b7\u53d6\u7a97\u53e3\u5927\u5c0f\uff08\u4f60\u53ef\u4ee5\u67e5\u770b\u6e90\u4ee3\u7801\uff09\u3002\u4ee3\u7801\u5982\u4e0b\uff1a /** * \u89c6\u91ce\u5f27\u5ea6 */ private static final float FOV = (float) Math.toRadians(60.0f); private static final float Z_NEAR = 0.01f; private static final float Z_FAR = 1000.f; private Matrix4f projectionMatrix; \u6295\u5f71\u77e9\u9635\u7684\u521b\u5efa\u5982\u4e0b\u6240\u793a\uff1a float aspectRatio = (float) window.getWidth() / window.getHeight(); projectionMatrix = new Matrix4f().perspective(FOV, aspectRatio, Z_NEAR, Z_FAR); \u73b0\u5728\u6211\u4eec\u7701\u7565\u5bbd\u9ad8\u6bd4\u53ef\u53d8\u7684\u60c5\u51b5\uff08\u901a\u8fc7\u8c03\u6574\u7a97\u53e3\u5927\u5c0f\uff09\uff0c\u8fd9\u53ef\u4ee5\u5728 render \u65b9\u6cd5\u4e2d\u68c0\u67e5\u5e76\u76f8\u5e94\u5730\u6539\u53d8\u6295\u5f71\u77e9\u9635\u3002 \u73b0\u5728\u6709\u4e86\u77e9\u9635\uff0c\u8be5\u5982\u4f55\u4f7f\u7528\u5b83\u5462\uff1f\u6211\u4eec\u9700\u8981\u5728\u7740\u8272\u5668\u4e2d\u4f7f\u7528\u5b83\uff0c\u5e76\u4e14\u5b83\u5e94\u8be5\u88ab\u5e94\u7528\u5230\u6240\u6709\u9876\u70b9\u4e0a\u3002\u9996\u5148\uff0c\u4f60\u53ef\u80fd\u4f1a\u60f3\u5230\u628a\u5b83\u6346\u7ed1\u5728\u9876\u70b9\u8f93\u5165\u4e2d\uff08\u5c31\u50cf\u5750\u6807\u548c\u989c\u8272\u90a3\u6837\uff09\u3002\u4f46\u8fd9\u6837\uff0c\u6211\u4eec\u4f1a\u6d6a\u8d39\u5f88\u591a\u7a7a\u95f4\uff0c\u56e0\u4e3a\u6295\u5f71\u77e9\u9635\u5728\u51e0\u6b21\u6e32\u67d3\u671f\u95f4\u90fd\u4e0d\u4f1a\u53d1\u751f\u6539\u53d8\u3002\u4f60\u53ef\u80fd\u8fd8\u60f3\u5728Java\u4ee3\u7801\u4e2d\u7528\u77e9\u9635\u5904\u7406\u6240\u6709\u9876\u70b9\uff0c\u4f46\u8fd9\u6837\u6211\u4eec\u8f93\u5165\u7684VBO\u5c31\u662f\u6ca1\u7528\u7684\u4e86\uff0c\u8fd9\u6837\u5c31\u4e0d\u80fd\u4f7f\u7528\u663e\u5361\u4e2d\u7684\u5904\u7406\u5668\u8d44\u6e90\u4e86\u3002 \u7b54\u6848\u662f\u4f7f\u7528\u201c uniform \u201d\u3002Uniform\u662f\u7740\u8272\u5668\u53ef\u4ee5\u4f7f\u7528\u7684\u5168\u5c40\u7684GLSL\u53d8\u91cf\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u5b83\u4e0e\u7740\u8272\u5668\u4ea4\u6d41\u3002 \u6240\u4ee5\u6211\u4eec\u9700\u8981\u4fee\u6539\u9876\u70b9\u7740\u8272\u5668\u7684\u4ee3\u7801\uff0c\u5e76\u58f0\u660e\u4e00\u4e2a\u65b0\u7684\u540d\u4e3a projectionMatrix \u7684Uniform\uff0c\u5e76\u7528\u5b83\u6765\u8ba1\u7b97\u6295\u5f71\u540e\u7684\u4f4d\u7f6e\u3002 #version 330 layout (location=0) in vec3 position; layout (location=1) in vec3 inColour; out vec3 exColour; uniform mat4 projectionMatrix; void main() { gl_Position = projectionMatrix * vec4(position, 1.0); exColour = inColour; } \u5982\u4e0a\u6240\u8ff0\uff0c\u6211\u4eec\u628a projectionMatrix \u5b9a\u4e49\u4e3a\u4e00\u4e2a4x4\u7684\u77e9\u9635\uff0c\u65b0\u7684\u5750\u6807\u662f\u901a\u8fc7\u628a\u5b83\u4e0e\u539f\u59cb\u5750\u6807\u76f8\u4e58\u5f97\u5230\u7684\u3002\u73b0\u5728\u6211\u4eec\u9700\u8981\u628a\u6295\u5f71\u77e9\u9635\u7684\u503c\u4f20\u9012\u7ed9\u7740\u8272\u5668\uff0c\u9996\u5148\u9700\u8981\u786e\u5b9aUniform\u7684\u4f4d\u7f6e\u3002 \u8fd9\u662f\u901a\u8fc7\u8c03\u7528\u65b9\u6cd5 glGetUniformLocation \u5b9e\u73b0\u7684\uff0c\u5b83\u6709\u4e24\u4e2a\u53c2\u6570\uff1a \u7740\u8272\u5668\u7a0b\u5e8f\u7684ID Uniform\u540d\uff08\u5b83\u5e94\u8be5\u4e0e\u7740\u8272\u5668\u91cc\u5b9a\u4e49\u7684\u540d\u79f0\u76f8\u540c\uff09 \u6b64\u65b9\u6cd5\u8fd4\u56de\u50a8\u5b58Uniform\u4f4d\u7f6e\u7684ID\u3002\u7531\u4e8e\u53ef\u80fd\u6709\u4e00\u4e2a\u4ee5\u4e0a\u7684Uniform\uff0c\u6211\u4eec\u5c06\u628a\u8fd9\u4e9bID\u50a8\u5b58\u5728\u7531\u53d8\u91cf\u540d\u4f5c\u4e3a\u7d22\u5f15\u7684Map\u4e2d\uff08\u6b64\u540e\u6211\u4eec\u9700\u8981\u90a3\u4e2aID\uff09\u3002\u56e0\u6b64\uff0c\u5728 ShaderProgram \u9700\u8981\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5b57\u6bb5\u6765\u4fdd\u5b58\u8fd9\u4e9bID\uff1a private final Map<String, Integer> uniforms; \u7136\u540e\u7531\u6784\u9020\u65b9\u6cd5\u521d\u59cb\u5316\u5b83\uff1a uniforms = new HashMap<>(); \u6700\u540e\uff0c\u6211\u4eec\u521b\u5efa\u4e86\u4e00\u4e2a\u65b9\u6cd5\u6765\u521b\u5efa\u65b0\u7684Uniform\u548c\u50a8\u5b58\u83b7\u5f97\u7684\u4f4d\u7f6e\u3002 public void createUniform(String uniformName) throws Exception { int uniformLocation = glGetUniformLocation(programId, uniformName); if (uniformLocation < 0) { throw new Exception(\"Could not find uniform:\" + uniformName); } uniforms.put(uniformName, uniformLocation); } \u73b0\u5728\uff0c\u5728\u7740\u8272\u5668\u7a0b\u5e8f\u7f16\u8bd1\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5728 Renderer \u7c7b\u4e2d\u8c03\u7528 createUniform \u65b9\u6cd5\uff08\u672c\u4f8b\u4e2d\uff0c\u6211\u4eec\u5c06\u5728\u6295\u5f71\u77e9\u9635\u5b9e\u4f8b\u5316\u540e\u8c03\u7528\u5b83\uff09\u3002 shaderProgram.createUniform(\"projectionMatrix\"); \u6b64\u65f6\uff0c\u6211\u4eec\u5df2\u7ecf\u51c6\u5907\u597d\u4e00\u4e2a\u53ef\u4ee5\u50a8\u5b58\u6295\u5f71\u77e9\u9635\u6570\u636e\u7684\u50a8\u5b58\u5668\u3002\u7531\u4e8e\u6295\u5f71\u77e9\u9635\u5728\u6e32\u67d3\u671f\u95f4\u4e0d\u4f1a\u53d8\u5316\uff0c\u6240\u4ee5\u53ef\u4ee5\u5728\u521b\u5efaUniform\u540e\u76f4\u63a5\u8bbe\u7f6e\u503c\uff0c\u4f46\u6211\u4eec\u5c06\u5728 render \u65b9\u6cd5\u4e2d\u505a\u6b64\u4e8b\u3002\u7a0d\u540e\u4f60\u53ef\u4ee5\u770b\u5230\uff0c\u6211\u4eec\u53ef\u4ee5\u91cd\u7528\u8be5Uniform\u6765\u6267\u884c\u6bcf\u6b21\u6e32\u67d3\u8c03\u7528\u4e2d\u9700\u8981\u6267\u884c\u7684\u5176\u4ed6\u64cd\u4f5c\u3002 \u6211\u4eec\u5c06\u5728 ShaderProgram \u7c7b\u4e2d\u521b\u5efa\u53e6\u4e00\u4e2a\u540d\u4e3a setUniform \u7684\u65b9\u6cd5\u6765\u8bbe\u7f6e\u6570\u636e\uff0c\u901a\u8fc7\u4f7f\u7528JOML\u5e93\u63d0\u4f9b\u7684\u5b9e\u7528\u65b9\u6cd5\u5c06\u77e9\u9635\u8f6c\u6362\u4e3a4x4\u7684 FloatBuffer \u5bf9\u8c61\uff0c\u5e76\u5c06\u5b83\u4eec\u53d1\u9001\u5230Uniform\u4e2d\u3002 public void setUniform(String uniformName, Matrix4f value) { // \u8f6c\u50a8\u77e9\u9635\u5230FloatBuffer try (MemoryStack stack = MemoryStack.stackPush()) { FloatBuffer fb = stack.mallocFloat(16); value.get(fb); glUniformMatrix4fv(uniforms.get(uniformName), false, fb); } } \u5982\u4f60\u6240\u89c1\uff0c\u6211\u4eec\u7528\u4e0e\u6b64\u524d\u4e0d\u540c\u7684\u65b9\u5f0f\u521b\u5efa\u7f13\u51b2\u533a\u3002\u6211\u4eec\u4f7f\u7528\u7684\u662f\u81ea\u52a8\u7ba1\u7406\u7684\u7f13\u51b2\u533a\uff0c\u5e76\u5c06\u5b83\u4eec\u5206\u914d\u5230\u5806\u6808\u4e0a\u3002\u8fd9\u662f\u56e0\u4e3a\u8fd9\u4e2a\u7f13\u51b2\u533a\u7684\u5927\u5c0f\u5f88\u5c0f\uff0c\u5e76\u4e14\u5728\u8be5\u65b9\u6cd5\u4e4b\u5916\u4e0d\u4f1a\u4f7f\u7528\u5b83\u3002\u56e0\u6b64\u6211\u4eec\u4f7f\u7528 MemoryStack \u7c7b\u3002 \u73b0\u5728\uff0c\u5728\u7740\u8272\u5668\u7ed1\u5b9a\u4e4b\u540e\uff0c\u53ef\u4ee5\u5728 Renderer \u7c7b\u7684 render \u65b9\u6cd5\u4e2d\u8c03\u7528\u8be5\u65b9\u6cd5\uff1a shaderProgram.setUniform(\"projectionMatrix\", projectionMatrix); \u6211\u4eec\u5c31\u8981\u5b8c\u6210\u4e86\uff0c\u73b0\u5728\u53ef\u4ee5\u6b63\u786e\u5730\u6e32\u67d3\u56db\u8fb9\u5f62\uff0c\u6240\u4ee5\u73b0\u5728\u53ef\u4ee5\u542f\u52a8\u7a0b\u5e8f\uff0c\u7136\u540e\u5f97\u5230\u4e00\u4e2a...\u9ed1\u8272\u80cc\u666f\uff0c\u6ca1\u6709\u4efb\u4f55\u5f69\u8272\u56db\u8fb9\u5f62\u3002\u53d1\u751f\u4e86\u4ec0\u4e48\uff1f\u6211\u4eec\u628a\u4ec0\u4e48\u5f04\u574f\u4e86\u5417\uff1f\u5b9e\u9645\u4e0a\u6ca1\u6709\u4efb\u4f55\u95ee\u9898\u3002\u8bb0\u4f4f\u6211\u4eec\u6b63\u5728\u6a21\u62df\u6444\u50cf\u673a\u89c2\u5bdf\u573a\u666f\u7684\u6548\u679c\u3002\u6211\u4eec\u63d0\u4f9b\u4e86\u4e24\u4e2a\u8ddd\u79bb\uff0c\u4e00\u4e2a\u662f\u6700\u8fdc\u89c6\u8ddd\uff081000f\uff09\u548c\u4e00\u4e2a\u6700\u8fd1\u89c6\u8ddd\uff080.01f\uff09\u3002\u800c\u6211\u4eec\u7684\u5750\u6807\u662f\uff1a float[] positions = new float[]{ -0.5f, 0.5f, 0.0f, -0.5f, -0.5f, 0.0f, 0.5f, -0.5f, 0.0f, 0.5f, 0.5f, 0.0f, }; \u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u5750\u6807\u4e2d\u7684Z\u5750\u6807\u4f4d\u4e8e\u53ef\u89c6\u533a\u57df\u4e4b\u5916\u3002\u5c06\u5b83\u4eec\u8d4b\u503c\u4e3a-0.05f\uff0c\u73b0\u5728\u4f60\u4f1a\u770b\u5230\u50cf\u8fd9\u6837\u7684\u4e00\u4e2a\u5de8\u5927\u7684\u7eff\u8272\u6b63\u65b9\u5f62\uff1a \u8fd9\u662f\u56e0\u4e3a\uff0c\u6211\u4eec\u6b63\u7ed8\u5236\u51fa\u79bb\u6444\u50cf\u673a\u592a\u8fd1\u7684\u6b63\u65b9\u5f62\uff0c\u5b9e\u9645\u4e0a\u662f\u5728\u653e\u5927\u5b83\u3002\u5982\u679c\u73b0\u5728\u628a\u4e00\u4e2a -1.05f \u7684\u503c\u8d4b\u503c\u7ed9Z\u5750\u6807\uff0c\u5c31\u53ef\u4ee5\u770b\u5230\u5f69\u8272\u6b63\u65b9\u5f62\u4e86\u3002 \u5982\u679c\u7ee7\u7eed\u5411\u540e\u79fb\u52a8\u56db\u8fb9\u5f62\uff0c\u6211\u4eec\u4f1a\u770b\u5230\u5b83\u53d8\u5c0f\u4e86\u3002\u8fd8\u8981\u6ce8\u610f\u5230\u56db\u8fb9\u5f62\u4e0d\u518d\u50cf\u77e9\u5f62\u4e86\u3002 \u4f7f\u7528\u53d8\u6362 \u56de\u60f3\u4e00\u4e0b\u5230\u76ee\u524d\u4e3a\u6b62\u6211\u4eec\u90fd\u505a\u4e86\u4ec0\u4e48\u3002\u6211\u4eec\u5df2\u7ecf\u5b66\u4f1a\u4e86\u5982\u4f55\u5c06\u6570\u636e\u4ee5\u6709\u6548\u7684\u683c\u5f0f\u4f20\u9012\u7ed9\u663e\u5361\uff0c\u4ee5\u53ca\u5982\u4f55\u4f7f\u7528\u9876\u70b9\u548c\u7247\u5143\u7740\u8272\u5668\u6765\u6295\u5f71\u8fd9\u4e9b\u9876\u70b9\u5e76\u8bbe\u7f6e\u5b83\u4eec\u7684\u989c\u8272\u3002\u73b0\u5728\u5e94\u8be5\u5f00\u59cb\u5728\u4e09\u7ef4\u7a7a\u95f4\u4e2d\u7ed8\u5236\u66f4\u590d\u6742\u7684\u6a21\u578b\u4e86\uff0c\u4f46\u4e3a\u4e86\u505a\u5230\u5b83\uff0c\u6211\u4eec\u5fc5\u987b\u80fd\u591f\u52a0\u8f7d\u6a21\u578b\uff0c\u5e76\u5728\u6307\u5b9a\u7684\u4f4d\u7f6e\u4ee5\u9002\u5f53\u7684\u5927\u5c0f\u548c\u6240\u9700\u7684\u65cb\u8f6c\u5c06\u5b83\u6e32\u67d3\u5728\u4e09\u7ef4\u7a7a\u95f4\u4e2d\u3002 \u73b0\u5728\u4e3a\u4e86\u5b9e\u73b0\u8fd9\u6837\u7684\u6e32\u67d3\uff0c\u6211\u4eec\u9700\u8981\u63d0\u4f9b\u4e00\u4e9b\u57fa\u672c\u64cd\u4f5c\u6765\u64cd\u4f5c\u6a21\u578b\uff1a \u4f4d\u79fb\uff08Translation\uff09: \u5728\u4e09\u4e2a\u8f74\u4e2d\u7684\u4efb\u610f\u4e00\u4e2a\u8f74\u4e0a\u79fb\u52a8\u4e00\u4e2a\u7269\u4f53\u3002 \u65cb\u8f6c\uff08Rotation\uff09: \u6309\u4efb\u610f\u4e00\u4e2a\u8f74\u65cb\u8f6c\u7269\u4f53\u4efb\u610f\u89d2\u5ea6\u3002 \u7f29\u653e\uff08Scale\uff09: \u8c03\u6574\u7269\u4f53\u7684\u5927\u5c0f\u3002 \u4e0a\u9762\u7684\u64cd\u4f5c\u7edf\u79f0\u4e3a\u53d8\u6362\uff08Transformation\uff09\u3002\u4f60\u53ef\u80fd\u731c\u5230\u8981\u5b9e\u73b0\u8fd9\u4e00\u70b9\u7684\u65b9\u6cd5\u662f\u628a\u5750\u6807\u4e58\u4ee5\u4e00\u7ec4\u77e9\u9635\uff08\u4e00\u4e2a\u7528\u4e8e\u79fb\u52a8\uff0c\u4e00\u4e2a\u7528\u4e8e\u65cb\u8f6c\uff0c\u4e00\u4e2a\u7528\u4e8e\u7f29\u653e\uff09\u3002\u8fd9\u4e09\u4e2a\u77e9\u9635\u5c06\u88ab\u7ec4\u5408\u6210\u4e00\u4e2a\u79f0\u4e3a\u201c\u4e16\u754c\u77e9\u9635\u201d\u7684\u77e9\u9635\uff0c\u5e76\u4f5c\u4e3a\u4e00\u4e2aUniform\u4f20\u9012\u7ed9\u9876\u70b9\u7740\u8272\u5668\u3002 \u4e4b\u6240\u4ee5\u88ab\u79f0\u4e3a\u4e16\u754c\u77e9\u9635\uff0c\u662f\u56e0\u4e3a\u6211\u4eec\u6b63\u5728\u5c06\u6a21\u578b\u5750\u6807\u8f6c\u6362\u4e3a\u4e16\u754c\u5750\u6807\u3002\u5f53\u5b66\u4e60\u52a0\u8f7d3D\u6a21\u578b\u65f6\uff0c\u4f60\u4f1a\u53d1\u73b0\u8fd9\u4e9b\u6a21\u578b\u662f\u5728\u5b83\u4eec\u81ea\u5df1\u7684\u5750\u6807\u7cfb\u4e2d\u5b9a\u4e49\u7684\uff0c\u5b83\u4eec\u4e0d\u77e5\u9053\u4f60\u7684\u4e09\u7ef4\u7a7a\u95f4\u7684\u5927\u5c0f\uff0c\u4f46\u5b83\u4eec\u9700\u8981\u5728\u91cc\u9762\u6e32\u67d3\u3002\u56e0\u6b64\uff0c\u5f53\u6211\u4eec\u7528\u77e9\u9635\u4e58\u4ee5\u5750\u6807\u65f6\uff0c\u5b9e\u9645\u4e0a\u505a\u7684\u662f\u4ece\u4e00\u4e2a\u5750\u6807\u7cfb\uff08\u6a21\u578b\u5750\u6807\u7cfb\uff09\u8f6c\u6362\u5230\u53e6\u4e00\u4e2a\u5750\u6807\u7cfb\uff08\u4e09\u7ef4\u4e16\u754c\u5750\u6807\u7cfb\uff09\u3002 \u4e16\u754c\u77e9\u9635\u5e94\u8be5\u8fd9\u6837\u8ba1\u7b97\uff08\u987a\u5e8f\u5f88\u91cd\u8981\uff0c\u56e0\u4e3a\u4e58\u6cd5\u4ea4\u6362\u5f8b\u4e0d\u9002\u7528\u4e8e\u77e9\u9635\uff09: \u4e16\u754c\u77e9\u9635=\\left[\u4f4d\u79fb\u77e9\u9635\\right]\\left[\u65cb\u8f6c\u77e9\u9635\\right]\\left[\u7f29\u653e\u77e9\u9635\\right] \u5982\u679c\u628a\u6295\u5f71\u77e9\u9635\u5305\u542b\u5728\u53d8\u6362\u77e9\u9635\u4e2d\uff0c\u5b83\u4f1a\u662f\u8fd9\u6837\u7684\uff1a \\begin{array}{lcl} Transf & = & \\left[\u6295\u5f71\u77e9\u9635\\right]\\left[\u4f4d\u79fb\u77e9\u9635\\right]\\left[\u65cb\u8f6c\u77e9\u9635\\right]\\left[\u7f29\u653e\u77e9\u9635\\right] \\\\ & = & \\left[\u6295\u5f71\u77e9\u9635\\right]\\left[\u4e16\u754c\u77e9\u9635\\right] \\end{array} \u4f4d\u79fb\u77e9\u9635\u662f\u8fd9\u6837\u5b9a\u4e49\u7684\uff1a \\begin{bmatrix} 1 & 0 & 0 & dx \\\\ 0 & 1 & 0 & dy \\\\ 0 & 0 & 1 & dz \\\\ 0 & 0 & 0 & 1 \\end{bmatrix} \u4f4d\u79fb\u77e9\u9635\u7684\u53c2\u6570\u5982\u4e0b\uff1a dx: \u6cbfX\u8f74\u4f4d\u79fb\u3002 dy: \u6cbfY\u8f74\u4f4d\u79fb\u3002 dz: \u6cbfZ\u8f74\u4f4d\u79fb\u3002 \u7f29\u653e\u77e9\u9635\u662f\u8fd9\u6837\u5b9a\u4e49\u7684\uff1b \\begin{bmatrix} sx & 0 & 0 & 0 \\\\ 0 & sy & 0 & 0 \\\\ 0 & 0 & sz & 0 \\\\ 0 & 0 & 0 & 1 \\end{bmatrix} \u7f29\u653e\u77e9\u9635\u7684\u53c2\u6570\u5982\u4e0b\uff1a sx: \u6cbf\u7740X\u8f74\u7f29\u653e\u3002 sy: \u6cbf\u7740Y\u8f74\u7f29\u653e\u3002 sz: \u6cbf\u7740Z\u8f74\u7f29\u653e\u3002 \u65cb\u8f6c\u77e9\u9635\u8981\u590d\u6742\u5f97\u591a\uff0c\u4f46\u8bf7\u8bb0\u4f4f\uff0c\u5b83\u53ef\u4ee5\u7531\u6bcf\u4e2a\u7ed5\u5355\u72ec\u7684\u8f74\u65cb\u8f6c\u7684\u65cb\u8f6c\u77e9\u9635\u76f8\u4e58\u5f97\u5230\u3002 \u73b0\u5728\uff0c\u4e3a\u4e86\u5b9e\u8df5\u8fd9\u4e9b\u7406\u8bba\uff0c\u6211\u4eec\u9700\u8981\u91cd\u6784\u4ee3\u7801\u4e00\u70b9\u70b9\u3002\u5728\u6e38\u620f\u4e2d\uff0c\u6211\u4eec\u5c06\u52a0\u8f7d\u4e00\u7ec4\u6a21\u578b\uff0c\u7528\u6765\u6839\u636e\u6e38\u620f\u903b\u8f91\u5728\u4e0d\u540c\u7684\u4f4d\u7f6e\u6e32\u67d3\u8bb8\u591a\u7269\u4f53\uff08\u60f3\u8c61\u4e00\u4e2aFPS\u6e38\u620f\uff0c\u5b83\u8f7d\u5165\u4e86\u4e09\u4e2a\u4e0d\u540c\u654c\u4eba\u7684\u6a21\u578b\u3002\u786e\u5b9e\u53ea\u6709\u4e09\u4e2a\u6a21\u578b\uff0c\u4f46\u4f7f\u7528\u8fd9\u4e9b\u6a21\u578b\uff0c\u6211\u4eec\u53ef\u4ee5\u6e32\u67d3\u60f3\u8981\u7684\u4efb\u610f\u6570\u91cf\u7684\u654c\u4eba\uff09\u3002\u6211\u4eec\u9700\u8981\u4e3a\u6bcf\u4e2a\u5bf9\u8c61\u521b\u5efa\u4e00\u4e2aVAO\u548c\u4e00\u7ec4VBO\u5417\uff1f\u7b54\u6848\u662f\u4e0d\u9700\u8981\uff0c\u53ea\u9700\u8981\u6bcf\u4e2a\u6a21\u578b\u52a0\u8f7d\u4e00\u6b21\u5c31\u884c\u3002\u6211\u4eec\u9700\u8981\u505a\u7684\u662f\u6839\u636e\u5b83\u7684\u4f4d\u7f6e\uff0c\u5927\u5c0f\u548c\u65cb\u8f6c\u6765\u72ec\u7acb\u5730\u7ed8\u5236\u5b83\u3002\u5f53\u6e32\u67d3\u8fd9\u4e9b\u6a21\u578b\u65f6\uff0c\u6211\u4eec\u9700\u8981\u5bf9\u5b83\u4eec\u8fdb\u884c\u53d8\u6362\u3002 \u56e0\u6b64\uff0c\u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a GameItem \u7684\u65b0\u7c7b\uff0c\u8be5\u7c7b\u5c06\u6a21\u578b\u52a0\u8f7d\u5230 Mesh \u5b9e\u4f8b\u4e2d\u3002\u4e00\u4e2a GameItem \u5b9e\u4f8b\u5c06\u7531\u53d8\u91cf\u50a8\u5b58\u5b83\u7684\u4f4d\u7f6e\u3001\u65cb\u8f6c\u72b6\u6001\u548c\u7f29\u653e\u3002\u5982\u4e0b\u662f\u8be5\u7c7b\u7684\u5b9a\u4e49\u3002 package org.lwjglb.engine; import org.joml.Vector3f; import org.lwjglb.engine.graph.Mesh; public class GameItem { private final Mesh mesh; private final Vector3f position; private float scale; private final Vector3f rotation; public GameItem(Mesh mesh) { this.mesh = mesh; position = new Vector3f(0, 0, 0); scale = 1; rotation = new Vector3f(0, 0, 0); } public Vector3f getPosition() { return position; } public void setPosition(float x, float y, float z) { this.position.x = x; this.position.y = y; this.position.z = z; } public float getScale() { return scale; } public void setScale(float scale) { this.scale = scale; } public Vector3f getRotation() { return rotation; } public void setRotation(float x, float y, float z) { this.rotation.x = x; this.rotation.y = y; this.rotation.z = z; } public Mesh getMesh() { return mesh; } } \u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a Transformation \u7684\u7c7b\uff0c\u8ba9\u5b83\u6765\u5904\u7406\u53d8\u6362\u3002 package org.lwjglb.engine.graph; import org.joml.Matrix4f; import org.joml.Vector3f; public class Transformation { private final Matrix4f projectionMatrix; private final Matrix4f worldMatrix; public Transformation() { worldMatrix = new Matrix4f(); projectionMatrix = new Matrix4f(); } public final Matrix4f getProjectionMatrix(float fov, float width, float height, float zNear, float zFar) { float aspectRatio = width / height; projectionMatrix.identity(); projectionMatrix.perspective(fov, aspectRatio, zNear, zFar); return projectionMatrix; } public Matrix4f getWorldMatrix(Vector3f offset, Vector3f rotation, float scale) { worldMatrix.identity().translate(offset). rotateX((float)Math.toRadians(rotation.x)). rotateY((float)Math.toRadians(rotation.y)). rotateZ((float)Math.toRadians(rotation.z)). scale(scale); return worldMatrix; } } \u5982\u4f60\u6240\u89c1\uff0c\u8fd9\u4e2a\u7c7b\u628a\u6295\u5f71\u77e9\u9635\u548c\u4e16\u754c\u77e9\u9635\u7ec4\u5408\u8d77\u6765\u3002\u7ed9\u5b9a\u4e00\u7ec4\u53c2\u6570\u6765\u8fdb\u884c\u4f4d\u79fb\u3001\u65cb\u8f6c\u548c\u7f29\u653e\uff0c\u7136\u540e\u8fd4\u56de\u4e16\u754c\u77e9\u9635\u3002 getWorldMatrix \u8fd4\u56de\u7684\u7ed3\u679c\u5c06\u4e3a\u6bcf\u4e2a GameItem \u5b9e\u4f8b\u53d8\u6362\u5750\u6807\u3002\u8be5\u7c7b\u8fd8\u63d0\u4f9b\u4e86\u83b7\u5f97\u6295\u5f71\u77e9\u9635\u7684\u65b9\u6cd5\u3002 \u9700\u8981\u6ce8\u610f\u7684\u4e00\u4ef6\u4e8b\u662f\uff0c Matrix4f \u7c7b\u7684 mul \u65b9\u6cd5\u4fee\u6539\u4e86\u8be5\u5b9e\u4f8b\u7684\u5185\u5bb9\u3002\u56e0\u6b64\uff0c\u5982\u679c\u76f4\u63a5\u5c06\u6295\u5f71\u77e9\u9635\u4e0e\u53d8\u6362\u77e9\u9635\u76f8\u4e58\uff0c\u6211\u4eec\u4f1a\u4fee\u6539\u6295\u5f71\u77e9\u9635\u672c\u8eab\uff0c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u603b\u662f\u5728\u6bcf\u6b21\u8c03\u7528\u65f6\u5c06\u6bcf\u4e2a\u77e9\u9635\u521d\u59cb\u5316\u4e3a\u5355\u4f4d\u77e9\u9635\u3002 \u5728 Renderer \u7c7b\u7684\u6784\u9020\u65b9\u6cd5\u4e2d\uff0c\u6211\u4eec\u4ec5\u5b9e\u4f8b\u5316\u4e86\u6ca1\u6709\u4efb\u4f55\u53c2\u6570\u7684 Transformation \u7c7b\uff0c\u800c\u5728 init \u65b9\u6cd5\u4e2d\uff0c\u6211\u4eec\u53ea\u521b\u5efa\u4e86Uniform\u3002 public Renderer() { transformation = new Transformation(); } public void init(Window window) throws Exception { // ... \u6b64\u524d\u7684\u4e00\u4e9b\u4ee3\u7801 ... // \u4e3a\u4e16\u754c\u77e9\u9635\u548c\u6295\u5f71\u77e9\u9635\u521b\u5efaUniform shaderProgram.createUniform(\"projectionMatrix\"); shaderProgram.createUniform(\"worldMatrix\"); window.setClearColor(0.0f, 0.0f, 0.0f, 0.0f); } \u5728 Renderer \u7c7b\u7684\u6e32\u67d3\u65b9\u6cd5\u4e2d\uff0c\u73b0\u5728\u53ef\u4ee5\u63a5\u6536\u5230\u4e00\u4e2a GameItem \u7684\u6570\u7ec4\uff1a public void render(Window window, GameItem[] gameItems) { clear(); if ( window.isResized() ) { glViewport(0, 0, window.getWidth(), window.getHeight()); window.setResized(false); } shaderProgram.bind(); // \u66f4\u65b0\u6295\u5f71\u77e9\u9635 Matrix4f projectionMatrix = transformation.getProjectionMatrix(FOV, window.getWidth(), window.getHeight(), Z_NEAR, Z_FAR); shaderProgram.setUniform(\"projectionMatrix\", projectionMatrix); // \u6e32\u67d3\u6bcf\u4e00\u4e2a\u6e38\u620f\u9879 for(GameItem gameItem : gameItems) { // \u4e3a\u8be5\u9879\u8bbe\u7f6e\u4e16\u754c\u77e9\u9635 Matrix4f worldMatrix = transformation.getWorldMatrix( gameItem.getPosition(), gameItem.getRotation(), gameItem.getScale()); shaderProgram.setUniform(\"worldMatrix\", worldMatrix); // \u4e3a\u8be5\u6e38\u620f\u9879\u6e32\u67d3\u7f51\u683c gameItem.getMesh().render(); } shaderProgram.unbind(); } \u6bcf\u6b21\u8c03\u7528 render \u65f6\u5c31\u66f4\u65b0\u6295\u5f71\u77e9\u9635\u4e00\u6b21\uff0c\u8fd9\u6837\u6211\u4eec\u53ef\u4ee5\u5904\u7406\u7a97\u53e3\u5927\u5c0f\u7684\u8c03\u6574\u64cd\u4f5c\u3002\u7136\u540e\u6211\u4eec\u904d\u5386 GameItem \u6570\u7ec4\uff0c\u5e76\u6839\u636e\u5b83\u4eec\u5404\u81ea\u7684\u4f4d\u7f6e\u3001\u65cb\u8f6c\u548c\u7f29\u653e\u521b\u5efa\u53d8\u6362\u77e9\u9635\uff0c\u8be5\u77e9\u9635\u5c06\u88ab\u4f20\u9012\u5230\u7740\u8272\u5668\u5e76\u7ed8\u5236 Mesh \u3002\u6295\u5f71\u77e9\u9635\u5bf9\u4e8e\u6240\u6709\u8981\u6e32\u67d3\u7684\u9879\u76ee\u90fd\u662f\u76f8\u540c\u7684\uff0c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u5b83\u5728 Transformation \u7c7b\u4e2d\u662f\u5355\u72ec\u4e00\u4e2a\u53d8\u91cf\u7684\u539f\u56e0\u3002 \u6211\u4eec\u5c06\u6e32\u67d3\u4ee3\u7801\u79fb\u52a8\u5230 Mesh \u7c7b\u4e2d\uff1a public void render() { // \u7ed8\u5236Mesh glBindVertexArray(getVaoId()); glDrawElements(GL_TRIANGLES, getVertexCount(), GL_UNSIGNED_INT, 0); // \u91cd\u7f6e\u72b6\u6001 glBindVertexArray(0); } \u9876\u70b9\u7740\u8272\u5668\u53ea\u9700\u7b80\u5355\u5730\u6dfb\u52a0\u4e00\u4e2a\u65b0\u7684 worldMatrix \u77e9\u9635\uff0c\u7136\u540e\u7528\u5b83\u4e0e projectionMatrix \u4e00\u540c\u8ba1\u7b97\u5750\u6807\uff1a #version 330 layout (location=0) in vec3 position; layout (location=1) in vec3 inColour; out vec3 exColour; uniform mat4 worldMatrix; uniform mat4 projectionMatrix; void main() { gl_Position = projectionMatrix * worldMatrix * vec4(position, 1.0); exColour = inColour; } \u5982\u4f60\u6240\u89c1\uff0c\u4ee3\u7801\u5b8c\u5168\u4e00\u81f4\u3002\u6211\u4eec\u4f7f\u7528Uniform\u6765\u6b63\u786e\u5730\u6295\u5f71\u5750\u6807\uff0c\u5e76\u4e14\u8003\u8651\u622a\u9525\u3001\u4f4d\u7f6e\u3001\u7f29\u653e\u548c\u65cb\u8f6c\u7b49\u3002 \u53e6\u5916\u4e00\u4e2a\u91cd\u8981\u7684\u95ee\u9898\u662f\uff0c\u4e3a\u4ec0\u4e48\u4e0d\u76f4\u63a5\u4f7f\u7528\u4f4d\u79fb\u3001\u65cb\u8f6c\u548c\u7f29\u653e\u77e9\u9635\uff0c\u800c\u662f\u628a\u5b83\u4eec\u7ec4\u5408\u6210\u4e00\u4e2a\u4e16\u754c\u77e9\u9635\u5462\uff1f\u539f\u56e0\u662f\u6211\u4eec\u5e94\u8be5\u5c3d\u91cf\u51cf\u5c11\u5728\u7740\u8272\u5668\u4e2d\u4f7f\u7528\u7684\u77e9\u9635\u3002\u8fd8\u8981\u8bb0\u4f4f\uff0c\u5728\u7740\u8272\u5668\u4e2d\u6240\u505a\u7684\u77e9\u9635\u4e58\u6cd5\u662f\u6bcf\u4e2a\u9876\u70b9\u4e00\u6b21\uff0c\u6295\u5f71\u77e9\u9635\u5728\u6e32\u67d3\u8c03\u7528\u671f\u95f4\u4e0d\u4f1a\u6539\u53d8\uff0c\u800c\u6bcf\u4e00\u4e2a GameItem \u5b9e\u4f8b\u7684\u4e16\u754c\u77e9\u9635\u4e5f\u4e0d\u4f1a\u6539\u53d8\u3002\u5982\u679c\u72ec\u7acb\u4f4d\u79fb\u3001\u65cb\u8f6c\u548c\u7f29\u653e\u77e9\u9635\uff0c\u6211\u4eec\u8981\u505a\u66f4\u591a\u7684\u77e9\u9635\u4e58\u6cd5\u8fd0\u7b97\u3002\u5728\u4e00\u4e2a\u6709\u8d85\u591a\u9876\u70b9\u7684\u6a21\u578b\u4e2d\uff0c\u8fd9\u662f\u5f88\u591a\u4f59\u7684\u64cd\u4f5c\u3002 \u4f46\u4f60\u73b0\u5728\u53ef\u80fd\u4f1a\u60f3\uff0c\u5982\u679c\u6bcf\u4e2a GameItem \u4e2d\u7684\u4e16\u754c\u77e9\u9635\u90fd\u4e0d\u4f1a\u53d1\u751f\u53d8\u5316\uff0c\u4e3a\u4ec0\u4e48\u4e0d\u5728Java\u7c7b\u4e2d\u505a\u77e9\u9635\u4e58\u6cd5\uff1f\u6211\u4eec\u5c06\u6295\u5f71\u77e9\u9635\u548c\u4e16\u754c\u77e9\u9635\u4e0e\u6bcf\u4e2a GameItem \u76f8\u4e58\uff0c\u628a\u5b83\u4eec\u4f5c\u4e3a\u4e00\u4e2aUniform\uff0c\u5728\u6b64\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u786e\u5b9e\u80fd\u7701\u4e0b\u66f4\u591a\u7684\u64cd\u4f5c\u3002\u4f46\u5f53\u6211\u4eec\u5411\u6e38\u620f\u5f15\u64ce\u4e2d\u6dfb\u52a0\u66f4\u591a\u7684\u7279\u6027\u65f6\uff0c\u6211\u4eec\u9700\u8981\u5728\u7740\u8272\u5668\u4e2d\u4f7f\u7528\u4e16\u754c\u5750\u6807\uff0c\u6240\u4ee5\u6700\u597d\u72ec\u7acb\u5730\u5904\u7406\u8fd9\u4e24\u4e2a\u77e9\u9635\u3002 \u6700\u540e\u53ea\u9700\u8981\u4fee\u6539 DummyGame \u7c7b\uff0c\u521b\u5efa\u4e00\u4e2a GameItem \u5b9e\u4f8b\uff0c\u8ba9\u5176\u4e0e Mesh \u5173\u8054\uff0c\u5e76\u6dfb\u52a0\u4e00\u4e9b\u903b\u8f91\u6765\u4f4d\u79fb\u3001\u65cb\u8f6c\u548c\u7f29\u653e\u56db\u8fb9\u5f62\u3002\u56e0\u4e3a\u8fd9\u53ea\u662f\u4e2a\u6d4b\u8bd5\u793a\u4f8b\uff0c\u6ca1\u6709\u6dfb\u52a0\u592a\u591a\u5185\u5bb9\uff0c\u6240\u4ee5\u4f60\u53ef\u4ee5\u5728\u672c\u4e66\u7684\u6e90\u4ee3\u7801\u4e2d\u627e\u5230\u76f8\u5173\u4ee3\u7801\u3002","title":"\u53d8\u6362"},{"location":"06-transformations/#transformations","text":"","title":"\u53d8\u6362\uff08Transformations\uff09"},{"location":"06-transformations/#_1","text":"\u8ba9\u6211\u4eec\u56de\u770b\u5728\u524d\u4e00\u7ae0\u4e2d\u521b\u5efa\u7684\u8272\u5f69\u9c9c\u8273\u7684\u6b63\u65b9\u5f62\u3002\u5982\u679c\u4ed4\u7ec6\u770b\uff0c\u5b83\u66f4\u50cf\u4e00\u4e2a\u77e9\u5f62\uff0c\u4f60\u751a\u81f3\u53ef\u4ee5\u5c06\u7a97\u53e3\u7684\u5bbd\u5ea6\u4ece600\u50cf\u7d20\u6539\u4e3a900\u50cf\u7d20\uff0c\u5931\u771f\u5c31\u4f1a\u66f4\u52a0\u660e\u663e\u3002\u8fd9\u53d1\u751f\u4e86\u4ec0\u4e48\u5462\uff1f \u5982\u679c\u4f60\u67e5\u770b\u9876\u70b9\u7740\u8272\u5668\u7684\u4ee3\u7801\uff0c\u6211\u4eec\u53ea\u662f\u76f4\u63a5\u5730\u4f20\u9012\u5750\u6807\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5f53\u4e00\u4e2a\u9876\u70b9\u7684X\u5750\u6807\u4e3a0.5\u65f6\uff0c\u6211\u4eec\u8ba9OpenGL\u5728\u5c4f\u5e55\u7684X\u5750\u6807\u4e3a0.5\u7684\u4f4d\u7f6e\u7ed8\u5236\u5b83\u3002\u4e0b\u56fe\u5c55\u793a\u4e86OpenGL\u5750\u6807\u7cfb\uff08\u4ec5\u542bX\u548cY\u8f74\uff09\u3002 \u5c06\u8fd9\u4e9b\u5750\u6807\u6295\u5f71\u5230\u7a97\u53e3\u5750\u6807\u7cfb\uff08\u5176\u539f\u70b9\u4f4d\u4e8e\u4e0a\u56fe\u7684\u5de6\u4e0a\u89d2\uff09\uff0c\u9700\u8981\u8003\u8651\u5230\u7a97\u53e3\u7684\u5927\u5c0f\u3002\u56e0\u6b64\uff0c\u5982\u679c\u6211\u4eec\u7684\u7a97\u53e3\u5927\u5c0f\u4e3a900x480\uff0cOpenGL\u5750\u6807(1, 0)\u5c06\u88ab\u6295\u5f71\u5230\u7a97\u53e3\u5750\u6807(900, 0)\uff0c\u6700\u7ec8\u521b\u5efa\u4e00\u4e2a\u77e9\u5f62\u800c\u4e0d\u662f\u4e00\u4e2a\u6b63\u65b9\u5f62\u3002 \u4f46\u662f\uff0c\u95ee\u9898\u8fdc\u6bd4\u8fd9\u66f4\u4e25\u91cd\u3002\u5c06\u56db\u8fb9\u5f62\u7684Z\u5750\u6807\u4ece0.0\u4fee\u6539\u4e3a1.0\u548c-1.0\uff0c\u4f60\u53d1\u73b0\u4e86\u4ec0\u4e48\uff1f\u56db\u8fb9\u5f62\u5b8c\u5168\u662f\u7ed8\u5236\u5728\u540c\u4e00\u4e2a\u5730\u65b9\uff0c\u4e0d\u7ba1\u5b83\u662f\u5426\u6cbf\u7740Z\u8f74\u4f4d\u79fb\u3002\u4e3a\u4ec0\u4e48\u4f1a\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\uff1f\u8fdc\u5904\u7684\u7269\u4f53\u5e94\u8be5\u6bd4\u8fd1\u5904\u7684\u7269\u4f53\u7ed8\u5236\u5f97\u66f4\u5c0f\uff0c\u4f46\u662f\u6211\u4eec\u4f7f\u7528\u76f8\u540c\u7684X\u548cY\u5750\u6807\u7ed8\u5236\u5b83\u4eec\u3002 \u4f46\u7a0d\u7b49\u4e00\u4e0b\uff0c\u8fd9\u4e0d\u5e94\u8be5\u7531Z\u5750\u6807\u6765\u5904\u7406\u5417\uff1f\u8fd9\u534a\u5bf9\u534a\u9519\u3002Z\u5750\u6807\u544a\u8bc9OpenGL\u4e00\u4e2a\u7269\u4f53\u7684\u8fdc\u8fd1\uff0c\u4f46\u662fOpenGL\u5bf9\u4f60\u7684\u7269\u4f53\u7684\u5927\u5c0f\u4e00\u65e0\u6240\u77e5\u3002\u4f60\u53ef\u4ee5\u6709\u4e24\u4e2a\u4e0d\u540c\u5927\u5c0f\u7684\u7269\u4f53\uff0c\u4e00\u4e2a\u66f4\u8fd1\u66f4\u5c0f\uff0c\u4e00\u4e2a\u66f4\u8fdc\u66f4\u5927\uff0c\u800c\u4e14\u53ef\u4ee5\u4ee5\u76f8\u540c\u7684\u5927\u5c0f\u6b63\u786e\u5730\u6295\u5f71\u5230\u5c4f\u5e55\u4e0a\uff08\u6709\u76f8\u540c\u7684\u5c4f\u5e55X\u548cY\u5750\u6807\uff0c\u4f46Z\u5750\u6807\u4e0d\u540c\uff09\u3002OpenGL\u53ea\u4f7f\u7528\u6b63\u5728\u4f20\u9012\u7684\u5750\u6807\uff0c\u6240\u4ee5\u6211\u4eec\u5fc5\u987b\u5904\u7406\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u9700\u8981\u6b63\u786e\u5730\u6295\u5f71\u5750\u6807\u3002 \u65e2\u7136\u5df2\u7ecf\u786e\u8bca\u4e86\u8fd9\u4e2a\u95ee\u9898\uff0c\u8be5\u600e\u4e48\u89e3\u51b3\u5462\uff1f\u7b54\u6848\u662f\u4f7f\u7528\u6295\u5f71\u77e9\u9635\uff08Projection Matrix\uff09\u6216\u622a\u9525\u4f53\uff08Frustum\uff09\u3002\u6295\u5f71\u77e9\u9635\u5c06\u5904\u7406\u7ed8\u5236\u533a\u57df\u7684\u5bbd\u9ad8\u6bd4\uff08\u5927\u5c0f\u4e0e\u9ad8\u5ea6\u4e4b\u95f4\u7684\u5173\u7cfb\uff09\uff0c\u8fd9\u6837\u7269\u4f53\u5c31\u4e0d\u4f1a\u53d8\u5f62\u3002\u5b83\u8fd8\u53ef\u4ee5\u5904\u7406\u8ddd\u79bb\uff0c\u6240\u4ee5\u8f83\u8fdc\u7684\u7269\u4f53\u5c06\u4f1a\u88ab\u7ed8\u5236\u5f97\u66f4\u5c0f\u3002\u6295\u5f71\u77e9\u9635\u8fd8\u5c06\u8003\u8651\u6211\u4eec\u7684\u89c6\u91ce\u548c\u5e94\u8be5\u663e\u793a\u7684\u8ddd\u79bb\u6709\u591a\u8fdc\u3002 \u5bf9\u4e8e\u4e0d\u719f\u6089\u77e9\u9635\u7684\u4eba\uff0c\u77e9\u9635\uff08Matrix\uff09\u662f\u4ee5\u884c\u548c\u5217\u6392\u5217\u7684\u4e8c\u7ef4\u6570\u7ec4\u3002\u77e9\u9635\u4e2d\u7684\u6bcf\u4e2a\u6570\u5b57\u88ab\u79f0\u4e3a\u5143\u7d20\u3002\u77e9\u9635\u9636\u6b21\u662f\u884c\u548c\u5217\u7684\u6570\u91cf\u3002\u4f8b\u5982\uff0c\u6b64\u5904\u662f\u4e00\u4e2a2x2\u77e9\u9635\uff08\u67092\u884c2\u5217\uff09\u3002 \u77e9\u9635\u6709\u8bb8\u591a\u53ef\u4ee5\u5e94\u7528\u4e8e\u5b83\u4eec\u7684\u57fa\u672c\u8fd0\u7b97\uff08\u5982\u52a0\u6cd5\u3001\u4e58\u6cd5\u7b49\uff09\uff0c\u4f60\u53ef\u4ee5\u5728\u6570\u5b66\u4e66\u4e2d\u67e5\u9605\uff0c\u5176\u4e2d\u4e0e\u4e09\u7ef4\u56fe\u5f62\u76f8\u5173\u7684\u77e9\u9635\u5bf9\u7a7a\u95f4\u4e2d\u70b9\u7684\u53d8\u6362\u975e\u5e38\u6709\u7528\u3002 \u4f60\u53ef\u4ee5\u628a\u6295\u5f71\u77e9\u9635\u60f3\u8c61\u6210\u4e00\u4e2a\u6444\u50cf\u673a\uff0c\u5b83\u6709\u4e00\u4e2a\u89c6\u91ce\u548c\u6700\u5c0f\u548c\u6700\u5927\u8ddd\u79bb\u3002\u8be5\u6444\u50cf\u673a\u7684\u53ef\u89c6\u533a\u57df\u662f\u4e00\u4e2a\u622a\u65ad\u7684\u91d1\u5b57\u5854\uff0c\u4e0b\u56fe\u4e3a\u8be5\u533a\u57df\u7684\u4fef\u89c6\u56fe\u3002 \u6295\u5f71\u77e9\u9635\u5c06\u6b63\u786e\u5730\u6295\u5f71\u4e09\u7ef4\u5750\u6807\uff0c\u4ee5\u4fbf\u5b83\u4eec\u80fd\u591f\u5728\u4e8c\u7ef4\u5c4f\u5e55\u4e0a\u6b63\u786e\u5730\u663e\u793a\u3002\u8be5\u77e9\u9635\u7684\u6570\u5b66\u8868\u793a\u5982\u4e0b\uff08\u4e0d\u8981\u5bb3\u6015\uff09\uff1a \u5176\u4e2d\u5c4f\u5e55\u5bbd\u9ad8\u6bd4\uff08Aspect Ratio\uff09\u6307\u7684\u662f\u5c4f\u5e55\u5bbd\u5ea6\u4e0e\u5c4f\u5e55\u9ad8\u5ea6\u7684\u5173\u7cfb\uff08 \u5c4f\u5e55\u5bbd\u9ad8\u6bd4=\u5bbd\u5ea6/\u9ad8\u5ea6 \uff09\u3002\u4e3a\u4e86\u83b7\u5f97\u7ed9\u5b9a\u70b9\u7684\u6295\u5f71\u5750\u6807\uff0c\u53ea\u9700\u8981\u5c06\u6295\u5f71\u77e9\u9635\u4e58\u4ee5\u539f\u59cb\u5750\u6807\uff0c\u7ed3\u679c\u662f\u6295\u5f71\u540e\u7684\u53e6\u4e00\u4e2a\u5411\u91cf\u3002 \u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u5904\u7406\u4e00\u7ec4\u6570\u5b66\u5b9e\u4f53\uff0c\u5982\u5411\u91cf\u3001\u77e9\u9635\uff0c\u5e76\u5305\u62ec\u53ef\u4ee5\u5bf9\u5b83\u4eec\u8fdb\u884c\u7684\u8fd0\u7b97\u3002\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u4ece\u5934\u5f00\u59cb\u7f16\u5199\u6240\u6709\u7684\u4ee3\u7801\uff0c\u6216\u8005\u4f7f\u7528\u5df2\u5b9e\u73b0\u7684\u5e93\u3002\u5f53\u7136\u6211\u4eec\u4f1a\u9009\u62e9\u5bb9\u6613\u7684\u65b9\u6cd5\uff0c\u4f7f\u7528JOML\uff08Java OpenGL Math Library\uff0cJava OpenGL \u6570\u5b66\u5e93\uff09\u5904\u7406LWJGL\u5185\u7684\u6570\u5b66\u8fd0\u7b97\u3002\u4e3a\u4e86\u4f7f\u7528\u8be5\u5e93\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5728 pom.xml \u6587\u4ef6\u6dfb\u52a0\u53e6\u4e00\u4e2a\u4f9d\u8d56\u9879\u3002 <dependency> <groupId>org.joml</groupId> <artifactId>joml</artifactId> <version>${joml.version}</version> </dependency> \u7136\u540e\u8bbe\u7f6e\u8981\u4f7f\u7528\u7684\u5e93\u7248\u672c\u3002 <properties> [...] <joml.version>1.9.6</joml.version> [...] </properties> \u73b0\u5728\u4e00\u5207\u90fd\u51c6\u5907\u597d\u4e86\uff0c\u6765\u5b9a\u4e49\u6211\u4eec\u7684\u6295\u5f71\u77e9\u9635\u3002\u5728 Renderer \u7c7b\u4e2d\u521b\u5efa Matrix4f \u7c7b\uff08\u7531JOML\u5e93\u63d0\u4f9b\uff09\u7684\u5b9e\u4f8b\u3002 Matrix4f \u7c7b\u63d0\u4f9b\u4e86\u4e00\u4e2a perspective \u65b9\u6cd5\u6765\u521b\u5efa\u6295\u5f71\u77e9\u9635\uff0c\u8be5\u65b9\u6cd5\u9700\u8981\u4ee5\u4e0b\u53c2\u6570\uff1a \u89c6\u91ce\uff1a\u53ef\u89c6\u533a\u57df\u89d2\u7684\u5f27\u5ea6\u5927\u5c0f\uff0c\u6211\u4eec\u5c06\u5b9a\u4e49\u4e00\u4e2a\u50a8\u5b58\u8be5\u503c\u7684\u5e38\u6570\u3002 \u5c4f\u5e55\u5bbd\u9ad8\u6bd4\u3002 \u6700\u8fd1\u89c6\u8ddd\uff08z-near\uff09\u3002 \u6700\u8fdc\u89c6\u8ddd\uff08z-far\uff09\u3002 \u6211\u4eec\u5c06\u5728 init \u65b9\u6cd5\u4e2d\u5b9e\u4f8b\u5316\u8be5\u77e9\u9635\uff0c\u56e0\u6b64\u9700\u8981\u4f20\u9012\u5bf9 Window \u5b9e\u4f8b\u7684\u9634\u5f71\u4ee5\u83b7\u53d6\u7a97\u53e3\u5927\u5c0f\uff08\u4f60\u53ef\u4ee5\u67e5\u770b\u6e90\u4ee3\u7801\uff09\u3002\u4ee3\u7801\u5982\u4e0b\uff1a /** * \u89c6\u91ce\u5f27\u5ea6 */ private static final float FOV = (float) Math.toRadians(60.0f); private static final float Z_NEAR = 0.01f; private static final float Z_FAR = 1000.f; private Matrix4f projectionMatrix; \u6295\u5f71\u77e9\u9635\u7684\u521b\u5efa\u5982\u4e0b\u6240\u793a\uff1a float aspectRatio = (float) window.getWidth() / window.getHeight(); projectionMatrix = new Matrix4f().perspective(FOV, aspectRatio, Z_NEAR, Z_FAR); \u73b0\u5728\u6211\u4eec\u7701\u7565\u5bbd\u9ad8\u6bd4\u53ef\u53d8\u7684\u60c5\u51b5\uff08\u901a\u8fc7\u8c03\u6574\u7a97\u53e3\u5927\u5c0f\uff09\uff0c\u8fd9\u53ef\u4ee5\u5728 render \u65b9\u6cd5\u4e2d\u68c0\u67e5\u5e76\u76f8\u5e94\u5730\u6539\u53d8\u6295\u5f71\u77e9\u9635\u3002 \u73b0\u5728\u6709\u4e86\u77e9\u9635\uff0c\u8be5\u5982\u4f55\u4f7f\u7528\u5b83\u5462\uff1f\u6211\u4eec\u9700\u8981\u5728\u7740\u8272\u5668\u4e2d\u4f7f\u7528\u5b83\uff0c\u5e76\u4e14\u5b83\u5e94\u8be5\u88ab\u5e94\u7528\u5230\u6240\u6709\u9876\u70b9\u4e0a\u3002\u9996\u5148\uff0c\u4f60\u53ef\u80fd\u4f1a\u60f3\u5230\u628a\u5b83\u6346\u7ed1\u5728\u9876\u70b9\u8f93\u5165\u4e2d\uff08\u5c31\u50cf\u5750\u6807\u548c\u989c\u8272\u90a3\u6837\uff09\u3002\u4f46\u8fd9\u6837\uff0c\u6211\u4eec\u4f1a\u6d6a\u8d39\u5f88\u591a\u7a7a\u95f4\uff0c\u56e0\u4e3a\u6295\u5f71\u77e9\u9635\u5728\u51e0\u6b21\u6e32\u67d3\u671f\u95f4\u90fd\u4e0d\u4f1a\u53d1\u751f\u6539\u53d8\u3002\u4f60\u53ef\u80fd\u8fd8\u60f3\u5728Java\u4ee3\u7801\u4e2d\u7528\u77e9\u9635\u5904\u7406\u6240\u6709\u9876\u70b9\uff0c\u4f46\u8fd9\u6837\u6211\u4eec\u8f93\u5165\u7684VBO\u5c31\u662f\u6ca1\u7528\u7684\u4e86\uff0c\u8fd9\u6837\u5c31\u4e0d\u80fd\u4f7f\u7528\u663e\u5361\u4e2d\u7684\u5904\u7406\u5668\u8d44\u6e90\u4e86\u3002 \u7b54\u6848\u662f\u4f7f\u7528\u201c uniform \u201d\u3002Uniform\u662f\u7740\u8272\u5668\u53ef\u4ee5\u4f7f\u7528\u7684\u5168\u5c40\u7684GLSL\u53d8\u91cf\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u5b83\u4e0e\u7740\u8272\u5668\u4ea4\u6d41\u3002 \u6240\u4ee5\u6211\u4eec\u9700\u8981\u4fee\u6539\u9876\u70b9\u7740\u8272\u5668\u7684\u4ee3\u7801\uff0c\u5e76\u58f0\u660e\u4e00\u4e2a\u65b0\u7684\u540d\u4e3a projectionMatrix \u7684Uniform\uff0c\u5e76\u7528\u5b83\u6765\u8ba1\u7b97\u6295\u5f71\u540e\u7684\u4f4d\u7f6e\u3002 #version 330 layout (location=0) in vec3 position; layout (location=1) in vec3 inColour; out vec3 exColour; uniform mat4 projectionMatrix; void main() { gl_Position = projectionMatrix * vec4(position, 1.0); exColour = inColour; } \u5982\u4e0a\u6240\u8ff0\uff0c\u6211\u4eec\u628a projectionMatrix \u5b9a\u4e49\u4e3a\u4e00\u4e2a4x4\u7684\u77e9\u9635\uff0c\u65b0\u7684\u5750\u6807\u662f\u901a\u8fc7\u628a\u5b83\u4e0e\u539f\u59cb\u5750\u6807\u76f8\u4e58\u5f97\u5230\u7684\u3002\u73b0\u5728\u6211\u4eec\u9700\u8981\u628a\u6295\u5f71\u77e9\u9635\u7684\u503c\u4f20\u9012\u7ed9\u7740\u8272\u5668\uff0c\u9996\u5148\u9700\u8981\u786e\u5b9aUniform\u7684\u4f4d\u7f6e\u3002 \u8fd9\u662f\u901a\u8fc7\u8c03\u7528\u65b9\u6cd5 glGetUniformLocation \u5b9e\u73b0\u7684\uff0c\u5b83\u6709\u4e24\u4e2a\u53c2\u6570\uff1a \u7740\u8272\u5668\u7a0b\u5e8f\u7684ID Uniform\u540d\uff08\u5b83\u5e94\u8be5\u4e0e\u7740\u8272\u5668\u91cc\u5b9a\u4e49\u7684\u540d\u79f0\u76f8\u540c\uff09 \u6b64\u65b9\u6cd5\u8fd4\u56de\u50a8\u5b58Uniform\u4f4d\u7f6e\u7684ID\u3002\u7531\u4e8e\u53ef\u80fd\u6709\u4e00\u4e2a\u4ee5\u4e0a\u7684Uniform\uff0c\u6211\u4eec\u5c06\u628a\u8fd9\u4e9bID\u50a8\u5b58\u5728\u7531\u53d8\u91cf\u540d\u4f5c\u4e3a\u7d22\u5f15\u7684Map\u4e2d\uff08\u6b64\u540e\u6211\u4eec\u9700\u8981\u90a3\u4e2aID\uff09\u3002\u56e0\u6b64\uff0c\u5728 ShaderProgram \u9700\u8981\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5b57\u6bb5\u6765\u4fdd\u5b58\u8fd9\u4e9bID\uff1a private final Map<String, Integer> uniforms; \u7136\u540e\u7531\u6784\u9020\u65b9\u6cd5\u521d\u59cb\u5316\u5b83\uff1a uniforms = new HashMap<>(); \u6700\u540e\uff0c\u6211\u4eec\u521b\u5efa\u4e86\u4e00\u4e2a\u65b9\u6cd5\u6765\u521b\u5efa\u65b0\u7684Uniform\u548c\u50a8\u5b58\u83b7\u5f97\u7684\u4f4d\u7f6e\u3002 public void createUniform(String uniformName) throws Exception { int uniformLocation = glGetUniformLocation(programId, uniformName); if (uniformLocation < 0) { throw new Exception(\"Could not find uniform:\" + uniformName); } uniforms.put(uniformName, uniformLocation); } \u73b0\u5728\uff0c\u5728\u7740\u8272\u5668\u7a0b\u5e8f\u7f16\u8bd1\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5728 Renderer \u7c7b\u4e2d\u8c03\u7528 createUniform \u65b9\u6cd5\uff08\u672c\u4f8b\u4e2d\uff0c\u6211\u4eec\u5c06\u5728\u6295\u5f71\u77e9\u9635\u5b9e\u4f8b\u5316\u540e\u8c03\u7528\u5b83\uff09\u3002 shaderProgram.createUniform(\"projectionMatrix\"); \u6b64\u65f6\uff0c\u6211\u4eec\u5df2\u7ecf\u51c6\u5907\u597d\u4e00\u4e2a\u53ef\u4ee5\u50a8\u5b58\u6295\u5f71\u77e9\u9635\u6570\u636e\u7684\u50a8\u5b58\u5668\u3002\u7531\u4e8e\u6295\u5f71\u77e9\u9635\u5728\u6e32\u67d3\u671f\u95f4\u4e0d\u4f1a\u53d8\u5316\uff0c\u6240\u4ee5\u53ef\u4ee5\u5728\u521b\u5efaUniform\u540e\u76f4\u63a5\u8bbe\u7f6e\u503c\uff0c\u4f46\u6211\u4eec\u5c06\u5728 render \u65b9\u6cd5\u4e2d\u505a\u6b64\u4e8b\u3002\u7a0d\u540e\u4f60\u53ef\u4ee5\u770b\u5230\uff0c\u6211\u4eec\u53ef\u4ee5\u91cd\u7528\u8be5Uniform\u6765\u6267\u884c\u6bcf\u6b21\u6e32\u67d3\u8c03\u7528\u4e2d\u9700\u8981\u6267\u884c\u7684\u5176\u4ed6\u64cd\u4f5c\u3002 \u6211\u4eec\u5c06\u5728 ShaderProgram \u7c7b\u4e2d\u521b\u5efa\u53e6\u4e00\u4e2a\u540d\u4e3a setUniform \u7684\u65b9\u6cd5\u6765\u8bbe\u7f6e\u6570\u636e\uff0c\u901a\u8fc7\u4f7f\u7528JOML\u5e93\u63d0\u4f9b\u7684\u5b9e\u7528\u65b9\u6cd5\u5c06\u77e9\u9635\u8f6c\u6362\u4e3a4x4\u7684 FloatBuffer \u5bf9\u8c61\uff0c\u5e76\u5c06\u5b83\u4eec\u53d1\u9001\u5230Uniform\u4e2d\u3002 public void setUniform(String uniformName, Matrix4f value) { // \u8f6c\u50a8\u77e9\u9635\u5230FloatBuffer try (MemoryStack stack = MemoryStack.stackPush()) { FloatBuffer fb = stack.mallocFloat(16); value.get(fb); glUniformMatrix4fv(uniforms.get(uniformName), false, fb); } } \u5982\u4f60\u6240\u89c1\uff0c\u6211\u4eec\u7528\u4e0e\u6b64\u524d\u4e0d\u540c\u7684\u65b9\u5f0f\u521b\u5efa\u7f13\u51b2\u533a\u3002\u6211\u4eec\u4f7f\u7528\u7684\u662f\u81ea\u52a8\u7ba1\u7406\u7684\u7f13\u51b2\u533a\uff0c\u5e76\u5c06\u5b83\u4eec\u5206\u914d\u5230\u5806\u6808\u4e0a\u3002\u8fd9\u662f\u56e0\u4e3a\u8fd9\u4e2a\u7f13\u51b2\u533a\u7684\u5927\u5c0f\u5f88\u5c0f\uff0c\u5e76\u4e14\u5728\u8be5\u65b9\u6cd5\u4e4b\u5916\u4e0d\u4f1a\u4f7f\u7528\u5b83\u3002\u56e0\u6b64\u6211\u4eec\u4f7f\u7528 MemoryStack \u7c7b\u3002 \u73b0\u5728\uff0c\u5728\u7740\u8272\u5668\u7ed1\u5b9a\u4e4b\u540e\uff0c\u53ef\u4ee5\u5728 Renderer \u7c7b\u7684 render \u65b9\u6cd5\u4e2d\u8c03\u7528\u8be5\u65b9\u6cd5\uff1a shaderProgram.setUniform(\"projectionMatrix\", projectionMatrix); \u6211\u4eec\u5c31\u8981\u5b8c\u6210\u4e86\uff0c\u73b0\u5728\u53ef\u4ee5\u6b63\u786e\u5730\u6e32\u67d3\u56db\u8fb9\u5f62\uff0c\u6240\u4ee5\u73b0\u5728\u53ef\u4ee5\u542f\u52a8\u7a0b\u5e8f\uff0c\u7136\u540e\u5f97\u5230\u4e00\u4e2a...\u9ed1\u8272\u80cc\u666f\uff0c\u6ca1\u6709\u4efb\u4f55\u5f69\u8272\u56db\u8fb9\u5f62\u3002\u53d1\u751f\u4e86\u4ec0\u4e48\uff1f\u6211\u4eec\u628a\u4ec0\u4e48\u5f04\u574f\u4e86\u5417\uff1f\u5b9e\u9645\u4e0a\u6ca1\u6709\u4efb\u4f55\u95ee\u9898\u3002\u8bb0\u4f4f\u6211\u4eec\u6b63\u5728\u6a21\u62df\u6444\u50cf\u673a\u89c2\u5bdf\u573a\u666f\u7684\u6548\u679c\u3002\u6211\u4eec\u63d0\u4f9b\u4e86\u4e24\u4e2a\u8ddd\u79bb\uff0c\u4e00\u4e2a\u662f\u6700\u8fdc\u89c6\u8ddd\uff081000f\uff09\u548c\u4e00\u4e2a\u6700\u8fd1\u89c6\u8ddd\uff080.01f\uff09\u3002\u800c\u6211\u4eec\u7684\u5750\u6807\u662f\uff1a float[] positions = new float[]{ -0.5f, 0.5f, 0.0f, -0.5f, -0.5f, 0.0f, 0.5f, -0.5f, 0.0f, 0.5f, 0.5f, 0.0f, }; \u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u5750\u6807\u4e2d\u7684Z\u5750\u6807\u4f4d\u4e8e\u53ef\u89c6\u533a\u57df\u4e4b\u5916\u3002\u5c06\u5b83\u4eec\u8d4b\u503c\u4e3a-0.05f\uff0c\u73b0\u5728\u4f60\u4f1a\u770b\u5230\u50cf\u8fd9\u6837\u7684\u4e00\u4e2a\u5de8\u5927\u7684\u7eff\u8272\u6b63\u65b9\u5f62\uff1a \u8fd9\u662f\u56e0\u4e3a\uff0c\u6211\u4eec\u6b63\u7ed8\u5236\u51fa\u79bb\u6444\u50cf\u673a\u592a\u8fd1\u7684\u6b63\u65b9\u5f62\uff0c\u5b9e\u9645\u4e0a\u662f\u5728\u653e\u5927\u5b83\u3002\u5982\u679c\u73b0\u5728\u628a\u4e00\u4e2a -1.05f \u7684\u503c\u8d4b\u503c\u7ed9Z\u5750\u6807\uff0c\u5c31\u53ef\u4ee5\u770b\u5230\u5f69\u8272\u6b63\u65b9\u5f62\u4e86\u3002 \u5982\u679c\u7ee7\u7eed\u5411\u540e\u79fb\u52a8\u56db\u8fb9\u5f62\uff0c\u6211\u4eec\u4f1a\u770b\u5230\u5b83\u53d8\u5c0f\u4e86\u3002\u8fd8\u8981\u6ce8\u610f\u5230\u56db\u8fb9\u5f62\u4e0d\u518d\u50cf\u77e9\u5f62\u4e86\u3002","title":"\u6295\u5f71"},{"location":"06-transformations/#_2","text":"\u56de\u60f3\u4e00\u4e0b\u5230\u76ee\u524d\u4e3a\u6b62\u6211\u4eec\u90fd\u505a\u4e86\u4ec0\u4e48\u3002\u6211\u4eec\u5df2\u7ecf\u5b66\u4f1a\u4e86\u5982\u4f55\u5c06\u6570\u636e\u4ee5\u6709\u6548\u7684\u683c\u5f0f\u4f20\u9012\u7ed9\u663e\u5361\uff0c\u4ee5\u53ca\u5982\u4f55\u4f7f\u7528\u9876\u70b9\u548c\u7247\u5143\u7740\u8272\u5668\u6765\u6295\u5f71\u8fd9\u4e9b\u9876\u70b9\u5e76\u8bbe\u7f6e\u5b83\u4eec\u7684\u989c\u8272\u3002\u73b0\u5728\u5e94\u8be5\u5f00\u59cb\u5728\u4e09\u7ef4\u7a7a\u95f4\u4e2d\u7ed8\u5236\u66f4\u590d\u6742\u7684\u6a21\u578b\u4e86\uff0c\u4f46\u4e3a\u4e86\u505a\u5230\u5b83\uff0c\u6211\u4eec\u5fc5\u987b\u80fd\u591f\u52a0\u8f7d\u6a21\u578b\uff0c\u5e76\u5728\u6307\u5b9a\u7684\u4f4d\u7f6e\u4ee5\u9002\u5f53\u7684\u5927\u5c0f\u548c\u6240\u9700\u7684\u65cb\u8f6c\u5c06\u5b83\u6e32\u67d3\u5728\u4e09\u7ef4\u7a7a\u95f4\u4e2d\u3002 \u73b0\u5728\u4e3a\u4e86\u5b9e\u73b0\u8fd9\u6837\u7684\u6e32\u67d3\uff0c\u6211\u4eec\u9700\u8981\u63d0\u4f9b\u4e00\u4e9b\u57fa\u672c\u64cd\u4f5c\u6765\u64cd\u4f5c\u6a21\u578b\uff1a \u4f4d\u79fb\uff08Translation\uff09: \u5728\u4e09\u4e2a\u8f74\u4e2d\u7684\u4efb\u610f\u4e00\u4e2a\u8f74\u4e0a\u79fb\u52a8\u4e00\u4e2a\u7269\u4f53\u3002 \u65cb\u8f6c\uff08Rotation\uff09: \u6309\u4efb\u610f\u4e00\u4e2a\u8f74\u65cb\u8f6c\u7269\u4f53\u4efb\u610f\u89d2\u5ea6\u3002 \u7f29\u653e\uff08Scale\uff09: \u8c03\u6574\u7269\u4f53\u7684\u5927\u5c0f\u3002 \u4e0a\u9762\u7684\u64cd\u4f5c\u7edf\u79f0\u4e3a\u53d8\u6362\uff08Transformation\uff09\u3002\u4f60\u53ef\u80fd\u731c\u5230\u8981\u5b9e\u73b0\u8fd9\u4e00\u70b9\u7684\u65b9\u6cd5\u662f\u628a\u5750\u6807\u4e58\u4ee5\u4e00\u7ec4\u77e9\u9635\uff08\u4e00\u4e2a\u7528\u4e8e\u79fb\u52a8\uff0c\u4e00\u4e2a\u7528\u4e8e\u65cb\u8f6c\uff0c\u4e00\u4e2a\u7528\u4e8e\u7f29\u653e\uff09\u3002\u8fd9\u4e09\u4e2a\u77e9\u9635\u5c06\u88ab\u7ec4\u5408\u6210\u4e00\u4e2a\u79f0\u4e3a\u201c\u4e16\u754c\u77e9\u9635\u201d\u7684\u77e9\u9635\uff0c\u5e76\u4f5c\u4e3a\u4e00\u4e2aUniform\u4f20\u9012\u7ed9\u9876\u70b9\u7740\u8272\u5668\u3002 \u4e4b\u6240\u4ee5\u88ab\u79f0\u4e3a\u4e16\u754c\u77e9\u9635\uff0c\u662f\u56e0\u4e3a\u6211\u4eec\u6b63\u5728\u5c06\u6a21\u578b\u5750\u6807\u8f6c\u6362\u4e3a\u4e16\u754c\u5750\u6807\u3002\u5f53\u5b66\u4e60\u52a0\u8f7d3D\u6a21\u578b\u65f6\uff0c\u4f60\u4f1a\u53d1\u73b0\u8fd9\u4e9b\u6a21\u578b\u662f\u5728\u5b83\u4eec\u81ea\u5df1\u7684\u5750\u6807\u7cfb\u4e2d\u5b9a\u4e49\u7684\uff0c\u5b83\u4eec\u4e0d\u77e5\u9053\u4f60\u7684\u4e09\u7ef4\u7a7a\u95f4\u7684\u5927\u5c0f\uff0c\u4f46\u5b83\u4eec\u9700\u8981\u5728\u91cc\u9762\u6e32\u67d3\u3002\u56e0\u6b64\uff0c\u5f53\u6211\u4eec\u7528\u77e9\u9635\u4e58\u4ee5\u5750\u6807\u65f6\uff0c\u5b9e\u9645\u4e0a\u505a\u7684\u662f\u4ece\u4e00\u4e2a\u5750\u6807\u7cfb\uff08\u6a21\u578b\u5750\u6807\u7cfb\uff09\u8f6c\u6362\u5230\u53e6\u4e00\u4e2a\u5750\u6807\u7cfb\uff08\u4e09\u7ef4\u4e16\u754c\u5750\u6807\u7cfb\uff09\u3002 \u4e16\u754c\u77e9\u9635\u5e94\u8be5\u8fd9\u6837\u8ba1\u7b97\uff08\u987a\u5e8f\u5f88\u91cd\u8981\uff0c\u56e0\u4e3a\u4e58\u6cd5\u4ea4\u6362\u5f8b\u4e0d\u9002\u7528\u4e8e\u77e9\u9635\uff09: \u4e16\u754c\u77e9\u9635=\\left[\u4f4d\u79fb\u77e9\u9635\\right]\\left[\u65cb\u8f6c\u77e9\u9635\\right]\\left[\u7f29\u653e\u77e9\u9635\\right] \u5982\u679c\u628a\u6295\u5f71\u77e9\u9635\u5305\u542b\u5728\u53d8\u6362\u77e9\u9635\u4e2d\uff0c\u5b83\u4f1a\u662f\u8fd9\u6837\u7684\uff1a \\begin{array}{lcl} Transf & = & \\left[\u6295\u5f71\u77e9\u9635\\right]\\left[\u4f4d\u79fb\u77e9\u9635\\right]\\left[\u65cb\u8f6c\u77e9\u9635\\right]\\left[\u7f29\u653e\u77e9\u9635\\right] \\\\ & = & \\left[\u6295\u5f71\u77e9\u9635\\right]\\left[\u4e16\u754c\u77e9\u9635\\right] \\end{array} \u4f4d\u79fb\u77e9\u9635\u662f\u8fd9\u6837\u5b9a\u4e49\u7684\uff1a \\begin{bmatrix} 1 & 0 & 0 & dx \\\\ 0 & 1 & 0 & dy \\\\ 0 & 0 & 1 & dz \\\\ 0 & 0 & 0 & 1 \\end{bmatrix} \u4f4d\u79fb\u77e9\u9635\u7684\u53c2\u6570\u5982\u4e0b\uff1a dx: \u6cbfX\u8f74\u4f4d\u79fb\u3002 dy: \u6cbfY\u8f74\u4f4d\u79fb\u3002 dz: \u6cbfZ\u8f74\u4f4d\u79fb\u3002 \u7f29\u653e\u77e9\u9635\u662f\u8fd9\u6837\u5b9a\u4e49\u7684\uff1b \\begin{bmatrix} sx & 0 & 0 & 0 \\\\ 0 & sy & 0 & 0 \\\\ 0 & 0 & sz & 0 \\\\ 0 & 0 & 0 & 1 \\end{bmatrix} \u7f29\u653e\u77e9\u9635\u7684\u53c2\u6570\u5982\u4e0b\uff1a sx: \u6cbf\u7740X\u8f74\u7f29\u653e\u3002 sy: \u6cbf\u7740Y\u8f74\u7f29\u653e\u3002 sz: \u6cbf\u7740Z\u8f74\u7f29\u653e\u3002 \u65cb\u8f6c\u77e9\u9635\u8981\u590d\u6742\u5f97\u591a\uff0c\u4f46\u8bf7\u8bb0\u4f4f\uff0c\u5b83\u53ef\u4ee5\u7531\u6bcf\u4e2a\u7ed5\u5355\u72ec\u7684\u8f74\u65cb\u8f6c\u7684\u65cb\u8f6c\u77e9\u9635\u76f8\u4e58\u5f97\u5230\u3002 \u73b0\u5728\uff0c\u4e3a\u4e86\u5b9e\u8df5\u8fd9\u4e9b\u7406\u8bba\uff0c\u6211\u4eec\u9700\u8981\u91cd\u6784\u4ee3\u7801\u4e00\u70b9\u70b9\u3002\u5728\u6e38\u620f\u4e2d\uff0c\u6211\u4eec\u5c06\u52a0\u8f7d\u4e00\u7ec4\u6a21\u578b\uff0c\u7528\u6765\u6839\u636e\u6e38\u620f\u903b\u8f91\u5728\u4e0d\u540c\u7684\u4f4d\u7f6e\u6e32\u67d3\u8bb8\u591a\u7269\u4f53\uff08\u60f3\u8c61\u4e00\u4e2aFPS\u6e38\u620f\uff0c\u5b83\u8f7d\u5165\u4e86\u4e09\u4e2a\u4e0d\u540c\u654c\u4eba\u7684\u6a21\u578b\u3002\u786e\u5b9e\u53ea\u6709\u4e09\u4e2a\u6a21\u578b\uff0c\u4f46\u4f7f\u7528\u8fd9\u4e9b\u6a21\u578b\uff0c\u6211\u4eec\u53ef\u4ee5\u6e32\u67d3\u60f3\u8981\u7684\u4efb\u610f\u6570\u91cf\u7684\u654c\u4eba\uff09\u3002\u6211\u4eec\u9700\u8981\u4e3a\u6bcf\u4e2a\u5bf9\u8c61\u521b\u5efa\u4e00\u4e2aVAO\u548c\u4e00\u7ec4VBO\u5417\uff1f\u7b54\u6848\u662f\u4e0d\u9700\u8981\uff0c\u53ea\u9700\u8981\u6bcf\u4e2a\u6a21\u578b\u52a0\u8f7d\u4e00\u6b21\u5c31\u884c\u3002\u6211\u4eec\u9700\u8981\u505a\u7684\u662f\u6839\u636e\u5b83\u7684\u4f4d\u7f6e\uff0c\u5927\u5c0f\u548c\u65cb\u8f6c\u6765\u72ec\u7acb\u5730\u7ed8\u5236\u5b83\u3002\u5f53\u6e32\u67d3\u8fd9\u4e9b\u6a21\u578b\u65f6\uff0c\u6211\u4eec\u9700\u8981\u5bf9\u5b83\u4eec\u8fdb\u884c\u53d8\u6362\u3002 \u56e0\u6b64\uff0c\u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a GameItem \u7684\u65b0\u7c7b\uff0c\u8be5\u7c7b\u5c06\u6a21\u578b\u52a0\u8f7d\u5230 Mesh \u5b9e\u4f8b\u4e2d\u3002\u4e00\u4e2a GameItem \u5b9e\u4f8b\u5c06\u7531\u53d8\u91cf\u50a8\u5b58\u5b83\u7684\u4f4d\u7f6e\u3001\u65cb\u8f6c\u72b6\u6001\u548c\u7f29\u653e\u3002\u5982\u4e0b\u662f\u8be5\u7c7b\u7684\u5b9a\u4e49\u3002 package org.lwjglb.engine; import org.joml.Vector3f; import org.lwjglb.engine.graph.Mesh; public class GameItem { private final Mesh mesh; private final Vector3f position; private float scale; private final Vector3f rotation; public GameItem(Mesh mesh) { this.mesh = mesh; position = new Vector3f(0, 0, 0); scale = 1; rotation = new Vector3f(0, 0, 0); } public Vector3f getPosition() { return position; } public void setPosition(float x, float y, float z) { this.position.x = x; this.position.y = y; this.position.z = z; } public float getScale() { return scale; } public void setScale(float scale) { this.scale = scale; } public Vector3f getRotation() { return rotation; } public void setRotation(float x, float y, float z) { this.rotation.x = x; this.rotation.y = y; this.rotation.z = z; } public Mesh getMesh() { return mesh; } } \u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a Transformation \u7684\u7c7b\uff0c\u8ba9\u5b83\u6765\u5904\u7406\u53d8\u6362\u3002 package org.lwjglb.engine.graph; import org.joml.Matrix4f; import org.joml.Vector3f; public class Transformation { private final Matrix4f projectionMatrix; private final Matrix4f worldMatrix; public Transformation() { worldMatrix = new Matrix4f(); projectionMatrix = new Matrix4f(); } public final Matrix4f getProjectionMatrix(float fov, float width, float height, float zNear, float zFar) { float aspectRatio = width / height; projectionMatrix.identity(); projectionMatrix.perspective(fov, aspectRatio, zNear, zFar); return projectionMatrix; } public Matrix4f getWorldMatrix(Vector3f offset, Vector3f rotation, float scale) { worldMatrix.identity().translate(offset). rotateX((float)Math.toRadians(rotation.x)). rotateY((float)Math.toRadians(rotation.y)). rotateZ((float)Math.toRadians(rotation.z)). scale(scale); return worldMatrix; } } \u5982\u4f60\u6240\u89c1\uff0c\u8fd9\u4e2a\u7c7b\u628a\u6295\u5f71\u77e9\u9635\u548c\u4e16\u754c\u77e9\u9635\u7ec4\u5408\u8d77\u6765\u3002\u7ed9\u5b9a\u4e00\u7ec4\u53c2\u6570\u6765\u8fdb\u884c\u4f4d\u79fb\u3001\u65cb\u8f6c\u548c\u7f29\u653e\uff0c\u7136\u540e\u8fd4\u56de\u4e16\u754c\u77e9\u9635\u3002 getWorldMatrix \u8fd4\u56de\u7684\u7ed3\u679c\u5c06\u4e3a\u6bcf\u4e2a GameItem \u5b9e\u4f8b\u53d8\u6362\u5750\u6807\u3002\u8be5\u7c7b\u8fd8\u63d0\u4f9b\u4e86\u83b7\u5f97\u6295\u5f71\u77e9\u9635\u7684\u65b9\u6cd5\u3002 \u9700\u8981\u6ce8\u610f\u7684\u4e00\u4ef6\u4e8b\u662f\uff0c Matrix4f \u7c7b\u7684 mul \u65b9\u6cd5\u4fee\u6539\u4e86\u8be5\u5b9e\u4f8b\u7684\u5185\u5bb9\u3002\u56e0\u6b64\uff0c\u5982\u679c\u76f4\u63a5\u5c06\u6295\u5f71\u77e9\u9635\u4e0e\u53d8\u6362\u77e9\u9635\u76f8\u4e58\uff0c\u6211\u4eec\u4f1a\u4fee\u6539\u6295\u5f71\u77e9\u9635\u672c\u8eab\uff0c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u603b\u662f\u5728\u6bcf\u6b21\u8c03\u7528\u65f6\u5c06\u6bcf\u4e2a\u77e9\u9635\u521d\u59cb\u5316\u4e3a\u5355\u4f4d\u77e9\u9635\u3002 \u5728 Renderer \u7c7b\u7684\u6784\u9020\u65b9\u6cd5\u4e2d\uff0c\u6211\u4eec\u4ec5\u5b9e\u4f8b\u5316\u4e86\u6ca1\u6709\u4efb\u4f55\u53c2\u6570\u7684 Transformation \u7c7b\uff0c\u800c\u5728 init \u65b9\u6cd5\u4e2d\uff0c\u6211\u4eec\u53ea\u521b\u5efa\u4e86Uniform\u3002 public Renderer() { transformation = new Transformation(); } public void init(Window window) throws Exception { // ... \u6b64\u524d\u7684\u4e00\u4e9b\u4ee3\u7801 ... // \u4e3a\u4e16\u754c\u77e9\u9635\u548c\u6295\u5f71\u77e9\u9635\u521b\u5efaUniform shaderProgram.createUniform(\"projectionMatrix\"); shaderProgram.createUniform(\"worldMatrix\"); window.setClearColor(0.0f, 0.0f, 0.0f, 0.0f); } \u5728 Renderer \u7c7b\u7684\u6e32\u67d3\u65b9\u6cd5\u4e2d\uff0c\u73b0\u5728\u53ef\u4ee5\u63a5\u6536\u5230\u4e00\u4e2a GameItem \u7684\u6570\u7ec4\uff1a public void render(Window window, GameItem[] gameItems) { clear(); if ( window.isResized() ) { glViewport(0, 0, window.getWidth(), window.getHeight()); window.setResized(false); } shaderProgram.bind(); // \u66f4\u65b0\u6295\u5f71\u77e9\u9635 Matrix4f projectionMatrix = transformation.getProjectionMatrix(FOV, window.getWidth(), window.getHeight(), Z_NEAR, Z_FAR); shaderProgram.setUniform(\"projectionMatrix\", projectionMatrix); // \u6e32\u67d3\u6bcf\u4e00\u4e2a\u6e38\u620f\u9879 for(GameItem gameItem : gameItems) { // \u4e3a\u8be5\u9879\u8bbe\u7f6e\u4e16\u754c\u77e9\u9635 Matrix4f worldMatrix = transformation.getWorldMatrix( gameItem.getPosition(), gameItem.getRotation(), gameItem.getScale()); shaderProgram.setUniform(\"worldMatrix\", worldMatrix); // \u4e3a\u8be5\u6e38\u620f\u9879\u6e32\u67d3\u7f51\u683c gameItem.getMesh().render(); } shaderProgram.unbind(); } \u6bcf\u6b21\u8c03\u7528 render \u65f6\u5c31\u66f4\u65b0\u6295\u5f71\u77e9\u9635\u4e00\u6b21\uff0c\u8fd9\u6837\u6211\u4eec\u53ef\u4ee5\u5904\u7406\u7a97\u53e3\u5927\u5c0f\u7684\u8c03\u6574\u64cd\u4f5c\u3002\u7136\u540e\u6211\u4eec\u904d\u5386 GameItem \u6570\u7ec4\uff0c\u5e76\u6839\u636e\u5b83\u4eec\u5404\u81ea\u7684\u4f4d\u7f6e\u3001\u65cb\u8f6c\u548c\u7f29\u653e\u521b\u5efa\u53d8\u6362\u77e9\u9635\uff0c\u8be5\u77e9\u9635\u5c06\u88ab\u4f20\u9012\u5230\u7740\u8272\u5668\u5e76\u7ed8\u5236 Mesh \u3002\u6295\u5f71\u77e9\u9635\u5bf9\u4e8e\u6240\u6709\u8981\u6e32\u67d3\u7684\u9879\u76ee\u90fd\u662f\u76f8\u540c\u7684\uff0c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u5b83\u5728 Transformation \u7c7b\u4e2d\u662f\u5355\u72ec\u4e00\u4e2a\u53d8\u91cf\u7684\u539f\u56e0\u3002 \u6211\u4eec\u5c06\u6e32\u67d3\u4ee3\u7801\u79fb\u52a8\u5230 Mesh \u7c7b\u4e2d\uff1a public void render() { // \u7ed8\u5236Mesh glBindVertexArray(getVaoId()); glDrawElements(GL_TRIANGLES, getVertexCount(), GL_UNSIGNED_INT, 0); // \u91cd\u7f6e\u72b6\u6001 glBindVertexArray(0); } \u9876\u70b9\u7740\u8272\u5668\u53ea\u9700\u7b80\u5355\u5730\u6dfb\u52a0\u4e00\u4e2a\u65b0\u7684 worldMatrix \u77e9\u9635\uff0c\u7136\u540e\u7528\u5b83\u4e0e projectionMatrix \u4e00\u540c\u8ba1\u7b97\u5750\u6807\uff1a #version 330 layout (location=0) in vec3 position; layout (location=1) in vec3 inColour; out vec3 exColour; uniform mat4 worldMatrix; uniform mat4 projectionMatrix; void main() { gl_Position = projectionMatrix * worldMatrix * vec4(position, 1.0); exColour = inColour; } \u5982\u4f60\u6240\u89c1\uff0c\u4ee3\u7801\u5b8c\u5168\u4e00\u81f4\u3002\u6211\u4eec\u4f7f\u7528Uniform\u6765\u6b63\u786e\u5730\u6295\u5f71\u5750\u6807\uff0c\u5e76\u4e14\u8003\u8651\u622a\u9525\u3001\u4f4d\u7f6e\u3001\u7f29\u653e\u548c\u65cb\u8f6c\u7b49\u3002 \u53e6\u5916\u4e00\u4e2a\u91cd\u8981\u7684\u95ee\u9898\u662f\uff0c\u4e3a\u4ec0\u4e48\u4e0d\u76f4\u63a5\u4f7f\u7528\u4f4d\u79fb\u3001\u65cb\u8f6c\u548c\u7f29\u653e\u77e9\u9635\uff0c\u800c\u662f\u628a\u5b83\u4eec\u7ec4\u5408\u6210\u4e00\u4e2a\u4e16\u754c\u77e9\u9635\u5462\uff1f\u539f\u56e0\u662f\u6211\u4eec\u5e94\u8be5\u5c3d\u91cf\u51cf\u5c11\u5728\u7740\u8272\u5668\u4e2d\u4f7f\u7528\u7684\u77e9\u9635\u3002\u8fd8\u8981\u8bb0\u4f4f\uff0c\u5728\u7740\u8272\u5668\u4e2d\u6240\u505a\u7684\u77e9\u9635\u4e58\u6cd5\u662f\u6bcf\u4e2a\u9876\u70b9\u4e00\u6b21\uff0c\u6295\u5f71\u77e9\u9635\u5728\u6e32\u67d3\u8c03\u7528\u671f\u95f4\u4e0d\u4f1a\u6539\u53d8\uff0c\u800c\u6bcf\u4e00\u4e2a GameItem \u5b9e\u4f8b\u7684\u4e16\u754c\u77e9\u9635\u4e5f\u4e0d\u4f1a\u6539\u53d8\u3002\u5982\u679c\u72ec\u7acb\u4f4d\u79fb\u3001\u65cb\u8f6c\u548c\u7f29\u653e\u77e9\u9635\uff0c\u6211\u4eec\u8981\u505a\u66f4\u591a\u7684\u77e9\u9635\u4e58\u6cd5\u8fd0\u7b97\u3002\u5728\u4e00\u4e2a\u6709\u8d85\u591a\u9876\u70b9\u7684\u6a21\u578b\u4e2d\uff0c\u8fd9\u662f\u5f88\u591a\u4f59\u7684\u64cd\u4f5c\u3002 \u4f46\u4f60\u73b0\u5728\u53ef\u80fd\u4f1a\u60f3\uff0c\u5982\u679c\u6bcf\u4e2a GameItem \u4e2d\u7684\u4e16\u754c\u77e9\u9635\u90fd\u4e0d\u4f1a\u53d1\u751f\u53d8\u5316\uff0c\u4e3a\u4ec0\u4e48\u4e0d\u5728Java\u7c7b\u4e2d\u505a\u77e9\u9635\u4e58\u6cd5\uff1f\u6211\u4eec\u5c06\u6295\u5f71\u77e9\u9635\u548c\u4e16\u754c\u77e9\u9635\u4e0e\u6bcf\u4e2a GameItem \u76f8\u4e58\uff0c\u628a\u5b83\u4eec\u4f5c\u4e3a\u4e00\u4e2aUniform\uff0c\u5728\u6b64\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u786e\u5b9e\u80fd\u7701\u4e0b\u66f4\u591a\u7684\u64cd\u4f5c\u3002\u4f46\u5f53\u6211\u4eec\u5411\u6e38\u620f\u5f15\u64ce\u4e2d\u6dfb\u52a0\u66f4\u591a\u7684\u7279\u6027\u65f6\uff0c\u6211\u4eec\u9700\u8981\u5728\u7740\u8272\u5668\u4e2d\u4f7f\u7528\u4e16\u754c\u5750\u6807\uff0c\u6240\u4ee5\u6700\u597d\u72ec\u7acb\u5730\u5904\u7406\u8fd9\u4e24\u4e2a\u77e9\u9635\u3002 \u6700\u540e\u53ea\u9700\u8981\u4fee\u6539 DummyGame \u7c7b\uff0c\u521b\u5efa\u4e00\u4e2a GameItem \u5b9e\u4f8b\uff0c\u8ba9\u5176\u4e0e Mesh \u5173\u8054\uff0c\u5e76\u6dfb\u52a0\u4e00\u4e9b\u903b\u8f91\u6765\u4f4d\u79fb\u3001\u65cb\u8f6c\u548c\u7f29\u653e\u56db\u8fb9\u5f62\u3002\u56e0\u4e3a\u8fd9\u53ea\u662f\u4e2a\u6d4b\u8bd5\u793a\u4f8b\uff0c\u6ca1\u6709\u6dfb\u52a0\u592a\u591a\u5185\u5bb9\uff0c\u6240\u4ee5\u4f60\u53ef\u4ee5\u5728\u672c\u4e66\u7684\u6e90\u4ee3\u7801\u4e2d\u627e\u5230\u76f8\u5173\u4ee3\u7801\u3002","title":"\u4f7f\u7528\u53d8\u6362"},{"location":"07-textures/","text":"\u7eb9\u7406\uff08Textures\uff09 \u521b\u5efa\u4e00\u4e2a\u4e09\u7ef4\u7acb\u65b9\u4f53 \u5728\u672c\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u5b66\u4e60\u5982\u4f55\u5728\u6e32\u67d3\u4e2d\u52a0\u8f7d\u7eb9\u7406\u5e76\u4f7f\u7528\u5b83\u4eec\u3002\u4e3a\u4e86\u8bb2\u89e3\u4e0e\u7eb9\u7406\u76f8\u5173\u7684\u6240\u6709\u6982\u5ff5\uff0c\u6211\u4eec\u5c06\u628a\u6b64\u524d\u7ae0\u8282\u4e2d\u4f7f\u7528\u7684\u6b63\u65b9\u5f62\u66f4\u6539\u4e3a\u4e09\u7ef4\u7acb\u65b9\u4f53\u3002\u4e3a\u4e86\u7ed8\u5236\u4e00\u4e2a\u7acb\u65b9\u4f53\uff0c\u6211\u4eec\u53ea\u9700\u8981\u6b63\u786e\u5730\u5b9a\u4e49\u4e00\u4e2a\u7acb\u65b9\u4f53\u7684\u5750\u6807\uff0c\u5c31\u80fd\u4f7f\u7528\u73b0\u6709\u4ee3\u7801\u6b63\u786e\u5730\u7ed8\u5236\u5b83\u3002 \u4e3a\u4e86\u7ed8\u5236\u7acb\u65b9\u4f53\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5b9a\u4e49\u516b\u4e2a\u9876\u70b9\u3002 \u56e0\u6b64\uff0c\u5b83\u7684\u5750\u6807\u6570\u7ec4\u5c06\u662f\u8fd9\u6837\u7684\uff1a float[] positions = new float[] { // VO -0.5f, 0.5f, 0.5f, // V1 -0.5f, -0.5f, 0.5f, // V2 0.5f, -0.5f, 0.5f, // V3 0.5f, 0.5f, 0.5f, // V4 -0.5f, 0.5f, -0.5f, // V5 0.5f, 0.5f, -0.5f, // V6 -0.5f, -0.5f, -0.5f, // V7 0.5f, -0.5f, -0.5f, }; \u5f53\u7136\uff0c\u7531\u4e8e\u6211\u4eec\u591a\u4e864\u4e2a\u9876\u70b9\uff0c\u6211\u4eec\u9700\u8981\u66f4\u6539\u989c\u8272\u6570\u7ec4\uff0c\u76ee\u524d\u4ec5\u91cd\u590d\u524d\u56db\u9879\u7684\u503c\u3002 float[] colours = new float[]{ 0.5f, 0.0f, 0.0f, 0.0f, 0.5f, 0.0f, 0.0f, 0.0f, 0.5f, 0.0f, 0.5f, 0.5f, 0.5f, 0.0f, 0.0f, 0.0f, 0.5f, 0.0f, 0.0f, 0.0f, 0.5f, 0.0f, 0.5f, 0.5f, }; \u6700\u540e\uff0c\u7531\u4e8e\u7acb\u65b9\u4f53\u662f\u7531\u516d\u4e2a\u9762\u6784\u6210\u7684\uff0c\u9700\u8981\u7ed8\u5236\u5341\u4e8c\u4e2a\u4e09\u89d2\u5f62\uff08\u6bcf\u4e2a\u9762\u4e24\u4e2a\uff09\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u4fee\u6539\u7d22\u5f15\u6570\u7ec4\u3002\u8bb0\u4f4f\u4e09\u89d2\u5f62\u5fc5\u987b\u6309\u9006\u65f6\u9488\u987a\u5e8f\u5b9a\u4e49\uff0c\u5982\u679c\u4f60\u76f4\u63a5\u53bb\u5b9a\u4e49\u4e09\u89d2\u5f62\uff0c\u5f88\u5bb9\u6613\u72af\u9519\u3002\u4e00\u5b9a\u8981\u5c06\u4f60\u60f3\u5b9a\u4e49\u7684\u9762\u6446\u5728\u4f60\u7684\u9762\u524d\uff0c\u786e\u8ba4\u9876\u70b9\u5e76\u4ee5\u9006\u65f6\u9488\u987a\u5e8f\u7ed8\u5236\u4e09\u89d2\u5f62\u3002 int[] indices = new int[] { // \u524d\u9762 0, 1, 3, 3, 1, 2, // \u4e0a\u9762 4, 0, 3, 5, 4, 3, // \u53f3\u9762 3, 2, 7, 5, 3, 7, // \u5de6\u9762 6, 1, 0, 6, 0, 4, // \u4e0b\u9762 2, 1, 6, 2, 6, 7, // \u540e\u9762 7, 6, 4, 7, 4, 5, }; \u4e3a\u4e86\u66f4\u597d\u89c2\u5bdf\u7acb\u65b9\u4f53\uff0c\u6211\u4eec\u5c06\u4fee\u6539 DummyGame \u7c7b\u4e2d\u65cb\u8f6c\u6a21\u578b\u7684\u4ee3\u7801\uff0c\u4f7f\u6a21\u578b\u6cbf\u7740\u4e09\u4e2a\u8f74\u65cb\u8f6c\u3002 // \u66f4\u65b0\u65cb\u8f6c\u89d2 float rotation = gameItem.getRotation().x + 1.5f; if ( rotation > 360 ) { rotation = 0; } gameItem.setRotation(rotation, rotation, rotation); \u8fd9\u5c31\u5b8c\u4e86\uff0c\u73b0\u5728\u80fd\u591f\u663e\u793a\u4e00\u4e2a\u65cb\u8f6c\u7684\u4e09\u7ef4\u7acb\u65b9\u4f53\u4e86\uff0c\u4f60\u53ef\u4ee5\u7f16\u8bd1\u548c\u8fd0\u884c\u793a\u4f8b\u4ee3\u7801\uff0c\u4f1a\u5f97\u5230\u5982\u4e0b\u6240\u793a\u7684\u4e1c\u897f\u3002 \u8fd9\u4e2a\u7acb\u65b9\u4f53\u6709\u4e9b\u5947\u602a\uff0c\u6709\u4e9b\u9762\u6ca1\u88ab\u6b63\u786e\u5730\u7ed8\u5236\uff0c\u8fd9\u53d1\u751f\u4e86\u4ec0\u4e48\uff1f\u7acb\u65b9\u4f53\u4e4b\u6240\u4ee5\u51fa\u73b0\u8fd9\u4e2a\u73b0\u8c61\uff0c\u662f\u56e0\u4e3a\u7ec4\u6210\u7acb\u65b9\u4f53\u7684\u4e09\u89d2\u5f62\u662f\u4ee5\u4e00\u79cd\u968f\u673a\u987a\u5e8f\u7ed8\u5236\u7684\u3002\u4e8b\u5b9e\u4e0a\u8ddd\u79bb\u8f83\u8fdc\u7684\u50cf\u7d20\u5e94\u8be5\u5728\u8ddd\u79bb\u8f83\u8fd1\u7684\u50cf\u7d20\u4e4b\u524d\u7ed8\u5236\uff0c\u800c\u4e0d\u662f\u73b0\u5728\u8fd9\u6837\u3002\u4e3a\u4e86\u4fee\u590d\u5b83\uff0c\u6211\u4eec\u5fc5\u987b\u542f\u7528\u6df1\u5ea6\u6d4b\u8bd5\uff08Depth Test\uff09\u3002 \u8fd9\u5c06\u5728 Window \u7c7b\u7684 init \u65b9\u6cd5\u4e2d\u53bb\u505a\uff1a glEnable(GL_DEPTH_TEST); \u73b0\u5728\u7acb\u65b9\u4f53\u88ab\u6b63\u786e\u5730\u6e32\u67d3\u4e86\uff01 \u5982\u679c\u4f60\u770b\u4e86\u672c\u7ae0\u8be5\u5c0f\u8282\u7684\u4ee3\u7801\uff0c\u4f60\u53ef\u80fd\u4f1a\u770b\u5230 Mesh \u7c7b\u505a\u4e86\u4e00\u4e0b\u5c0f\u89c4\u6a21\u7684\u8c03\u6574\uff0cVBO\u7684ID\u73b0\u5728\u88ab\u50a8\u5b58\u5728\u4e00\u4e2aList\u4e2d\uff0c\u4ee5\u4fbf\u4e8e\u8fed\u4ee3\u5b83\u4eec\u3002 \u4e3a\u7acb\u65b9\u4f53\u6dfb\u52a0\u7eb9\u7406 \u73b0\u5728\u6211\u4eec\u5c06\u628a\u7eb9\u7406\u5e94\u7528\u5230\u7acb\u65b9\u4f53\u4e0a\u3002\u7eb9\u7406\uff08Texture\uff09\u662f\u7528\u6765\u7ed8\u5236\u67d0\u4e2a\u6a21\u578b\u7684\u50cf\u7d20\u989c\u8272\u7684\u56fe\u50cf\uff0c\u53ef\u4ee5\u8ba4\u4e3a\u7eb9\u7406\u662f\u5305\u5728\u4e09\u7ef4\u6a21\u578b\u4e0a\u7684\u76ae\u80a4\u3002\u4f60\u8981\u505a\u7684\u662f\u5c06\u7eb9\u7406\u56fe\u50cf\u4e2d\u7684\u70b9\u5206\u914d\u7ed9\u6a21\u578b\u4e2d\u7684\u9876\u70b9\uff0c\u8fd9\u6837\u505aOpenGL\u5c31\u80fd\u6839\u636e\u7eb9\u7406\u56fe\u50cf\u8ba1\u7b97\u5176\u4ed6\u50cf\u7d20\u7684\u989c\u8272\u3002 \u7eb9\u7406\u56fe\u50cf\u4e0d\u5fc5\u4e0e\u6a21\u578b\u540c\u6837\u5927\u5c0f\uff0c\u5b83\u53ef\u4ee5\u53d8\u5927\u6216\u53d8\u5c0f\u3002\u5982\u679c\u8981\u5904\u7406\u7684\u50cf\u7d20\u4e0d\u80fd\u6620\u5c04\u5230\u7eb9\u7406\u4e2d\u7684\u6307\u5b9a\u70b9\uff0cOpenGL\u5c06\u63a8\u65ad\u989c\u8272\u3002\u53ef\u5728\u521b\u5efa\u7eb9\u7406\u65f6\u63a7\u5236\u5982\u4f55\u8fdb\u884c\u989c\u8272\u63a8\u65ad\u3002 \u56e0\u6b64\uff0c\u4e3a\u4e86\u5c06\u7eb9\u7406\u5e94\u7528\u5230\u6a21\u578b\u4e0a\uff0c\u6211\u4eec\u5fc5\u987b\u505a\u7684\u662f\u5c06\u7eb9\u7406\u5750\u6807\u5206\u914d\u7ed9\u6bcf\u4e2a\u9876\u70b9\u3002\u7eb9\u7406\u5750\u6807\u7cfb\u6709\u4e9b\u4e0d\u540c\u4e8e\u6a21\u578b\u5750\u6807\u7cfb\u3002\u9996\u5148\uff0c\u6211\u4eec\u7684\u7eb9\u7406\u662f\u4e8c\u7ef4\u7eb9\u7406\uff0c\u6240\u4ee5\u5750\u6807\u53ea\u6709X\u548cY\u4e24\u4e2a\u91cf\u3002\u6b64\u5916\uff0c\u539f\u70b9\u662f\u56fe\u50cf\u7684\u5de6\u4e0a\u89d2\uff0cX\u6216Y\u7684\u6700\u5927\u503c\u90fd\u662f1\u3002 \u6211\u4eec\u5982\u4f55\u5c06\u7eb9\u7406\u5750\u6807\u4e0e\u4f4d\u7f6e\u5750\u6807\u8054\u7cfb\u8d77\u6765\u5462\uff1f\u7b54\u6848\u5f88\u7b80\u5355\uff0c\u5c31\u50cf\u4f20\u9012\u989c\u8272\u4fe1\u606f\uff0c\u6211\u4eec\u521b\u5efa\u4e86\u4e00\u4e2aVBO\uff0c\u4e3a\u6bcf\u4e2a\u9876\u70b9\u50a8\u5b58\u5176\u7eb9\u7406\u5750\u6807\u3002 \u8ba9\u6211\u4eec\u5f00\u59cb\u4fee\u6539\u4ee3\u7801\uff0c\u4ee5\u4fbf\u5728\u4e09\u7ef4\u7acb\u65b9\u4f53\u4e0a\u4f7f\u7528\u7eb9\u7406\u5427\u3002\u9996\u5148\u662f\u52a0\u8f7d\u5c06\u88ab\u7528\u4f5c\u7eb9\u7406\u7684\u56fe\u50cf\u3002\u5bf9\u6b64\u5728LWJGL\u7684\u65e9\u671f\u7248\u672c\u4e2d\uff0c\u901a\u5e38\u4f7f\u7528Slick2D\u5e93\u3002\u5728\u64b0\u5199\u672c\u6587\u65f6\uff0c\u8be5\u5e93\u4f3c\u4e4e\u4e0eLWJGL 3\u4e0d\u517c\u5bb9\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u4f7f\u7528\u53e6\u4e00\u79cd\u65b9\u6cd5\u3002\u6211\u4eec\u5c06\u4f7f\u7528LWJGL\u4e3a stb \u5e93\u63d0\u4f9b\u7684\u5c01\u88c5\u3002\u4e3a\u4e86\u4f7f\u7528\u5b83\uff0c\u9996\u5148\u9700\u8981\u5728\u672c\u5730\u7684 pom.xml \u6587\u4ef6\u4e2d\u58f0\u660e\u4f9d\u8d56\u3002 <dependency> <groupId>org.lwjgl</groupId> <artifactId>lwjgl-stb</artifactId> <version>${lwjgl.version}</version> </dependency> [...] <dependency> <groupId>org.lwjgl</groupId> <artifactId>lwjgl-stb</artifactId> <version>${lwjgl.version}</version> <classifier>${native.target}</classifier> <scope>runtime</scope> </dependency> \u5728\u4e00\u4e9b\u6559\u7a0b\u4e2d\uff0c\u4f60\u53ef\u80fd\u770b\u5230\u9996\u5148\u8981\u505a\u7684\u4e8b\u662f\u8c03\u7528 glEnable(GL_TEXTURE_2D) \u6765\u542f\u7528OpenGL\u73af\u5883\u4e2d\u7684\u7eb9\u7406\u3002\u5982\u679c\u4f7f\u7528\u56fa\u5b9a\u7ba1\u7ebf\u8fd9\u662f\u5bf9\u7684\uff0c\u4f46\u6211\u4eec\u4f7f\u7528GLSL\u7740\u8272\u5668\uff0c\u56e0\u6b64\u4e0d\u518d\u9700\u8981\u4e86\u3002 \u73b0\u5728\u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a\u65b0\u7684 Texture \u7c7b\uff0c\u5b83\u5c06\u6267\u884c\u52a0\u8f7d\u7eb9\u7406\u6240\u5fc5\u987b\u7684\u6b65\u9aa4\u3002\u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u5c06\u56fe\u50cf\u8f7d\u5165\u5230 ByteBuffer \u4e2d\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a private static int loadTexture(String fileName) throws Exception { int width; int height; ByteBuffer buf; // \u52a0\u8f7d\u7eb9\u7406\u6587\u4ef6 try (MemoryStack stack = MemoryStack.stackPush()) { IntBuffer w = stack.mallocInt(1); IntBuffer h = stack.mallocInt(1); IntBuffer channels = stack.mallocInt(1); buf = stbi_load(fileName, w, h, channels, 4); if (buf == null) { throw new Exception(\"Image file [\" + fileName + \"] not loaded: \" + stbi_failure_reason()); } /* \u83b7\u5f97\u56fe\u50cf\u7684\u9ad8\u5ea6\u4e0e\u5bbd\u5ea6 */ width = w.get(); height = h.get(); } [... \u63a5\u4e0b\u6765\u8fd8\u6709\u66f4\u591a\u4ee3\u7801 ...] \u9996\u5148\u6211\u4eec\u8981\u4e3a\u5e93\u5206\u914d IntBuffer \uff0c\u4ee5\u8fd4\u56de\u56fe\u50cf\u5927\u5c0f\u4e0e\u901a\u9053\u6570\u3002\u7136\u540e\uff0c\u6211\u4eec\u8c03\u7528 stbi_load \u65b9\u6cd5\u5c06\u56fe\u50cf\u52a0\u8f7d\u5230 ByteBuffer \u4e2d\uff0c\u8be5\u65b9\u6cd5\u9700\u8981\u5982\u4e0b\u53c2\u6570\uff1a filePath \uff1a\u6587\u4ef6\u7684\u7edd\u5bf9\u8def\u5f84\u3002stb\u5e93\u662f\u672c\u5730\u7684\uff0c\u4e0d\u77e5\u9053\u5173\u4e8e CLASSPATH \u7684\u4efb\u4f55\u5185\u5bb9\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u5e38\u89c4\u7684\u6587\u4ef6\u7cfb\u7edf\u8def\u5f84\u3002 width \uff1a\u56fe\u50cf\u5bbd\u5ea6\uff0c\u83b7\u53d6\u7684\u56fe\u50cf\u5bbd\u5ea6\u5c06\u88ab\u5199\u5165\u5176\u4e2d\u3002 height \uff1a\u56fe\u50cf\u9ad8\u5ea6\uff0c\u83b7\u53d6\u7684\u56fe\u50cf\u9ad8\u5ea6\u5c06\u88ab\u5199\u5165\u5176\u4e2d\u3002 channels \uff1a\u56fe\u50cf\u901a\u9053\u3002 desired_channels \uff1a\u6240\u9700\u7684\u56fe\u50cf\u901a\u9053\uff0c\u6211\u4eec\u4f20\u51654\uff08RGBA\uff09\u3002 \u4e00\u4ef6\u5173\u4e8eOpenGL\u7684\u91cd\u8981\u4e8b\u9879\uff0c\u7531\u4e8e\u5386\u53f2\u539f\u56e0\uff0c\u8981\u6c42\u7eb9\u7406\u56fe\u50cf\u7684\u5927\u5c0f\uff08\u6bcf\u4e2a\u8f74\u7684\u50cf\u7d20\u6570\uff09\u5fc5\u987b\u662f\u4e8c\u7684\u6307\u6570\uff082, 4, 8, 16, ....\uff09\u3002\u4e00\u4e9b\u9a71\u52a8\u89e3\u9664\u4e86\u8fd9\u79cd\u9650\u5236\uff0c\u4f46\u6700\u597d\u8fd8\u662f\u4fdd\u6301\u4ee5\u514d\u51fa\u73b0\u95ee\u9898\u3002 \u4e0b\u4e00\u6b65\u662f\u5c06\u7eb9\u7406\u4e0a\u4f20\u5230\u663e\u5b58\u4e2d\u3002\u9996\u5148\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u7eb9\u7406ID\uff0c\u4e0e\u8be5\u7eb9\u7406\u76f8\u5173\u7684\u64cd\u4f5c\u90fd\u8981\u4f7f\u7528\u8be5ID\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u7ed1\u5b9a\u5b83\u3002 // \u521b\u5efa\u4e00\u4e2a\u65b0\u7684OpenGL\u7eb9\u7406 int textureId = glGenTextures(); // \u7ed1\u5b9a\u7eb9\u7406 glBindTexture(GL_TEXTURE_2D, textureId); \u7136\u540e\u9700\u8981\u544a\u8bc9OpenGL\u5982\u4f55\u89e3\u5305RGBA\u5b57\u8282\uff0c\u7531\u4e8e\u6bcf\u4e2a\u5206\u91cf\u53ea\u6709\u4e00\u4e2a\u5b57\u8282\u5927\u5c0f\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u6dfb\u52a0\u4ee5\u4e0b\u4ee3\u7801\uff1a glPixelStorei(GL_UNPACK_ALIGNMENT, 1); \u6700\u540e\u6211\u4eec\u53ef\u4ee5\u4e0a\u4f20\u7eb9\u7406\u6570\u636e\uff1a glTexImage2D(GL_TEXTURE_2D, 0, GL_RGBA, width, height, 0, GL_RGBA, GL_UNSIGNED_BYTE, buf); glTexImage2D \u7684\u53c2\u6570\u5982\u4e0b\u6240\u793a\uff1a target : \u6307\u5b9a\u76ee\u6807\u7eb9\u7406\uff08\u7eb9\u7406\u7c7b\u578b\uff09\uff0c\u672c\u4f8b\u4e2d\u662f GL_TEXTURE_2D \u3002 level : \u6307\u5b9a\u7eb9\u7406\u7ec6\u8282\u7684\u7b49\u7ea7\u30020\u7ea7\u662f\u57fa\u672c\u56fe\u50cf\u7b49\u7ea7\uff0c\u7b2cn\u7ea7\u662f\u7b2cn\u4e2a\u591a\u7ea7\u6e10\u8fdc\u7eb9\u7406\u7684\u56fe\u50cf\uff0c\u4e4b\u540e\u518d\u8c08\u8bba\u8fd9\u4e2a\u95ee\u9898\u3002 internal format : \u6307\u5b9a\u7eb9\u7406\u4e2d\u989c\u8272\u5206\u91cf\u7684\u6570\u91cf\u3002 width : \u6307\u5b9a\u7eb9\u7406\u56fe\u50cf\u7684\u5bbd\u5ea6\u3002 height : \u6307\u5b9a\u7eb9\u7406\u56fe\u50cf\u7684\u9ad8\u5ea6\u3002 border : \u6b64\u503c\u5fc5\u987b\u4e3a0\u3002 format : \u6307\u5b9a\u50cf\u7d20\u6570\u636e\u7684\u683c\u5f0f\uff0c\u73b0\u5728\u4e3aRGBA\u3002 type : \u6307\u5b9a\u50cf\u7d20\u6570\u636e\u7684\u7c7b\u578b\u3002\u73b0\u5728\uff0c\u6211\u4eec\u4f7f\u7528\u7684\u662f\u65e0\u7b26\u53f7\u5b57\u8282\u3002 data : \u50a8\u5b58\u6570\u636e\u7684\u7f13\u51b2\u533a\u3002 \u5728\u4e00\u4e9b\u4ee3\u7801\u4e2d\uff0c\u4f60\u53ef\u80fd\u4f1a\u53d1\u73b0\u5728\u8c03\u7528 glTexImage2D \u65b9\u6cd5\u524d\u8bbe\u7f6e\u4e86\u4e00\u4e9b\u8fc7\u6ee4\u53c2\u6570\u3002\u8fc7\u6ee4\u662f\u6307\u5728\u7f29\u653e\u65f6\u5982\u4f55\u7ed8\u5236\u56fe\u50cf\uff0c\u4ee5\u53ca\u5982\u4f55\u63d2\u503c\u50cf\u7d20\u3002\u5982\u679c\u672a\u8bbe\u7f6e\u8fd9\u4e9b\u53c2\u6570\uff0c\u7eb9\u7406\u5c06\u4e0d\u4f1a\u663e\u793a\u3002\u56e0\u6b64\uff0c\u5728 glTexImage2D \u65b9\u6cd5\u8c03\u7528\u4e4b\u524d\uff0c\u4f1a\u770b\u5230\u4ee5\u4e0b\u4ee3\u7801\uff1a glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST); \u8fd9\u4e9b\u53c2\u6570\u57fa\u672c\u4e0a\u5728\u8bf4\uff0c\u5f53\u7ed8\u5236\u4e00\u4e2a\u50cf\u7d20\u65f6\uff0c\u5982\u679c\u6ca1\u6709\u76f4\u63a5\u4e00\u5bf9\u4e00\u5730\u5173\u8054\u5230\u7eb9\u7406\u5750\u6807\uff0c\u5b83\u5c06\u9009\u62e9\u6700\u8fd1\u7684\u7eb9\u7406\u5750\u6807\u70b9\u3002 \u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u4e0d\u4f1a\u8bbe\u7f6e\u8fd9\u4e9b\u53c2\u6570\u3002\u76f8\u53cd\uff0c\u6211\u4eec\u5c06\u751f\u6210\u4e00\u4e2a\u591a\u7ea7\u6e10\u8fdc\u7eb9\u7406\uff08Mipmap\uff09\u3002\u591a\u7ea7\u6e10\u8fdc\u7eb9\u7406\u662f\u7531\u9ad8\u7ec6\u8282\u7eb9\u7406\u751f\u6210\u7684\u9010\u7ea7\u964d\u4f4e\u5206\u8fa8\u7387\u7684\u7eb9\u7406\u96c6\u5408\u3002\u5f53\u6211\u4eec\u7684\u7269\u4f53\u7f29\u653e\u65f6\uff0c\u5c31\u5c06\u81ea\u52a8\u4f7f\u7528\u4f4e\u5206\u8fa8\u7387\u7684\u56fe\u50cf\u3002 \u4e3a\u4e86\u751f\u6210\u591a\u7ea7\u6e10\u8fdc\u7eb9\u7406\uff0c\u53ea\u9700\u8981\u7f16\u5199\u4ee5\u4e0b\u4ee3\u7801\uff08\u76ee\u524d\u6211\u4eec\u628a\u5b83\u653e\u5728 glTextImage2D \u65b9\u6cd5\u8c03\u7528\u4e4b\u540e\uff09\uff1a glGenerateMipmap(GL_TEXTURE_2D); \u6700\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u91ca\u653e\u539f\u59cb\u56fe\u50cf\u6570\u636e\u672c\u8eab\u7684\u5185\u5b58\uff1a stbi_image_free(buf); \u5c31\u8fd9\u6837\uff0c\u6211\u4eec\u5df2\u7ecf\u6210\u529f\u5730\u52a0\u8f7d\u4e86\u7eb9\u7406\uff0c\u73b0\u5728\u9700\u8981\u4f7f\u7528\u5b83\u3002\u6b63\u5982\u6b64\u524d\u6240\u8bf4\uff0c\u6211\u4eec\u9700\u8981\u628a\u7eb9\u7406\u5750\u6807\u4f5c\u4e3a\u53e6\u4e00\u4e2aVBO\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u8981\u4fee\u6539 Mesh \u7c7b\u4ee5\u63a5\u6536\u50a8\u5b58\u7eb9\u7406\u5750\u6807\u7684\u6d6e\u70b9\u6570\u7ec4\uff0c\u800c\u4e0d\u662f\u989c\u8272\uff08\u6211\u4eec\u53ef\u4ee5\u540c\u65f6\u6709\u989c\u8272\u548c\u7eb9\u7406\uff0c\u4f46\u4e3a\u4e86\u7b80\u5316\u5b83\uff0c\u6211\u4eec\u5c06\u5220\u9664\u989c\u8272\uff09\uff0c\u6784\u9020\u51fd\u6570\u73b0\u5728\u5982\u4e0b\u6240\u793a\uff1a public Mesh(float[] positions, float[] textCoords, int[] indices, Texture texture) \u7eb9\u7406\u5750\u6807VBO\u4e0e\u989c\u8272VBO\u521b\u5efa\u7684\u65b9\u5f0f\u76f8\u540c\u3002\u552f\u4e00\u7684\u533a\u522b\u662f\u5b83\u6bcf\u4e2a\u9876\u70b9\u5c5e\u6027\u53ea\u6709\u4e24\u4e2a\u5206\u91cf\u800c\u4e0d\u662f\u4e09\u4e2a\uff1a vboId = glGenBuffers(); vboIdList.add(vboId); textCoordsBuffer = MemoryUtil.memAllocFloat(textCoords.length); textCoordsBuffer.put(textCoords).flip(); glBindBuffer(GL_ARRAY_BUFFER, vboId); glBufferData(GL_ARRAY_BUFFER, textCoordsBuffer, GL_STATIC_DRAW); glEnableVertexAttribArray(1); glVertexAttribPointer(1, 2, GL_FLOAT, false, 0, 0); \u73b0\u5728\u6211\u4eec\u9700\u8981\u5728\u7740\u8272\u5668\u4e2d\u4f7f\u7528\u7eb9\u7406\u3002\u5728\u9876\u70b9\u7740\u8272\u5668\u4e2d\uff0c\u6211\u4eec\u4fee\u6539\u4e86\u7b2c\u4e8c\u4e2a\u8f93\u5165\u53c2\u6570\uff0c\u56e0\u4e3a\u73b0\u5728\u5b83\u662f\u4e00\u4e2a vec2 \uff08\u4e5f\u987a\u4fbf\u66f4\u6539\u4e86\u540d\u79f0\uff09\u3002\u9876\u70b9\u7740\u8272\u5668\u5c31\u50cf\u6b64\u524d\u4e00\u6837\uff0c\u4ec5\u5c06\u7eb9\u7406\u5750\u6807\u4f20\u7ed9\u7247\u5143\u7740\u8272\u5668\u3002 #version 330 layout (location=0) in vec3 position; layout (location=1) in vec2 texCoord; out vec2 outTexCoord; uniform mat4 worldMatrix; uniform mat4 projectionMatrix; void main() { gl_Position = projectionMatrix * worldMatrix * vec4(position, 1.0); outTexCoord = texCoord; } \u5728\u7247\u5143\u7740\u8272\u5668\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u90a3\u4e9b\u7eb9\u7406\u5750\u6807\u6765\u8bbe\u7f6e\u50cf\u7d20\u989c\u8272\uff1a #version 330 in vec2 outTexCoord; out vec4 fragColor; uniform sampler2D texture_sampler; void main() { fragColor = texture(texture_sampler, outTexCoord); } \u5728\u5206\u6790\u4ee3\u7801\u4e4b\u524d\uff0c\u6211\u4eec\u5148\u7406\u6e05\u4e00\u4e9b\u6982\u5ff5\u3002\u663e\u5361\u6709\u51e0\u4e2a\u7a7a\u95f4\u6216\u69fd\u6765\u50a8\u5b58\u7eb9\u7406\uff0c\u6bcf\u4e00\u4e2a\u7a7a\u95f4\u88ab\u79f0\u4e3a\u7eb9\u7406\u5355\u5143\uff08Texture Unit\uff09\u3002\u5f53\u4f7f\u7528\u7eb9\u7406\u65f6\uff0c\u6211\u4eec\u5fc5\u987b\u8bbe\u7f6e\u60f3\u7528\u7684\u7eb9\u7406\u3002\u5982\u4f60\u6240\u89c1\uff0c\u6211\u4eec\u6709\u4e00\u4e2a\u540d\u4e3a texture_sampler \u7684\u65b0Uniform\uff0c\u8be5Uniform\u7684\u7c7b\u578b\u662f sampler2D \uff0c\u5e76\u50a8\u5b58\u6709\u6211\u4eec\u5e0c\u671b\u4f7f\u7528\u7684\u7eb9\u7406\u5355\u5143\u7684\u503c\u3002 \u5728 main \u51fd\u6570\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u540d\u4e3a texture \u7684\u7eb9\u7406\u91c7\u6837\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u6709\u4e24\u4e2a\u53c2\u6570\uff1a\u53d6\u6837\u5668\uff08Sampler\uff09\u548c\u7eb9\u7406\u5750\u6807\uff0c\u5e76\u8fd4\u56de\u6b63\u786e\u7684\u989c\u8272\u3002\u53d6\u6837\u5668Uniform\u5141\u8bb8\u4f7f\u7528\u591a\u91cd\u7eb9\u7406\uff08Multi-texture\uff09\uff0c\u4e0d\u8fc7\u73b0\u5728\u4e0d\u662f\u8ba8\u8bba\u8fd9\u4e2a\u8bdd\u9898\u7684\u65f6\u5019\uff0c\u4f46\u662f\u6211\u4eec\u4f1a\u5728\u7a0d\u540e\u518d\u5c1d\u8bd5\u6dfb\u52a0\u3002 \u56e0\u6b64\uff0c\u5728 ShaderProgram \u7c7b\u4e2d\uff0c\u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u65b9\u6cd5\uff0c\u5141\u8bb8\u4e3a\u6574\u6570\u578bUniform\u8bbe\u7f6e\u503c\uff1a public void setUniform(String uniformName, int value) { glUniform1i(uniforms.get(uniformName), value); } \u5728 Renderer \u7c7b\u7684 init \u65b9\u6cd5\u4e2d\uff0c\u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a\u65b0\u7684Uniform\uff1a shaderProgram.createUniform(\"texture_sampler\"); \u6b64\u5916\uff0c\u5728 Renderer \u7c7b\u7684 render \u65b9\u6cd5\u4e2d\uff0c\u6211\u4eec\u5c06Uniform\u7684\u503c\u8bbe\u7f6e\u4e3a0\uff08\u6211\u4eec\u73b0\u5728\u4e0d\u4f7f\u7528\u591a\u4e2a\u7eb9\u7406\uff0c\u6240\u4ee5\u53ea\u4f7f\u7528\u5355\u51430\uff09\u3002 shaderProgram.setUniform(\"texture_sampler\", 0); \u6700\u597d\uff0c\u6211\u4eec\u53ea\u9700\u4fee\u6539 Mesh \u7c7b\u7684 render \u65b9\u6cd5\u5c31\u53ef\u4ee5\u4f7f\u7528\u7eb9\u7406\u3002\u5728\u65b9\u6cd5\u8d77\u59cb\u5904\uff0c\u6dfb\u52a0\u4ee5\u4e0b\u51e0\u884c\u4ee3\u7801\uff1a // \u6fc0\u6d3b\u7b2c\u4e00\u4e2a\u7eb9\u7406\u5355\u5143 glActiveTexture(GL_TEXTURE0); // \u7ed1\u5b9a\u7eb9\u7406 glBindTexture(GL_TEXTURE_2D, texture.getId()); \u6211\u4eec\u5df2\u7ecf\u5c06 texture.getId() \u6240\u83b7\u5f97\u7684\u7eb9\u7406ID\u7ed1\u5b9a\u5230\u7eb9\u7406\u5355\u51430\u4e0a\u3002 \u6211\u4eec\u521a\u521a\u4fee\u6539\u4e86\u4ee3\u7801\u6765\u652f\u6301\u7eb9\u7406\uff0c\u73b0\u5728\u9700\u8981\u4e3a\u4e09\u7ef4\u7acb\u65b9\u4f53\u8bbe\u7f6e\u7eb9\u7406\u5750\u6807\uff0c\u7eb9\u7406\u56fe\u50cf\u6587\u4ef6\u662f\u8fd9\u6837\u7684\uff1a \u5728\u6211\u4eec\u7684\u4e09\u7ef4\u6a21\u578b\u4e2d\uff0c\u5171\u6709\u516b\u4e2a\u9876\u70b9\u3002\u6211\u4eec\u9996\u5148\u5b9a\u4e49\u6b63\u9762\u6bcf\u4e2a\u9876\u70b9\u7684\u7eb9\u7406\u5750\u6807\u3002 \u9876\u70b9 \u7eb9\u7406\u5750\u6807 V0 0.0, 0.0 V1 0.0, 0.5 V2 0.5, 0.5 V3 0.5, 0.0 \u7136\u540e\uff0c\u5b9a\u4e49\u9876\u9762\u7684\u7eb9\u7406\u6620\u5c04\u3002 \u9876\u70b9 \u7eb9\u7406\u5750\u6807 V4 0.0, 0.5 V5 0.5, 0.5 V0 0.0, 1.0 V3 0.5, 1.0 \u5982\u4f60\u6240\u89c1\uff0c\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u9700\u8981\u4e3a\u540c\u4e00\u4e2a\u9876\u70b9\uff08V0\u548cV3\uff09\u8bbe\u7f6e\u4e0d\u540c\u7684\u7eb9\u7406\u5750\u6807\u3002\u600e\u4e48\u6837\u624d\u80fd\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u5462\uff1f\u89e3\u51b3\u8fd9\u4e00\u95ee\u9898\u7684\u552f\u4e00\u65b9\u6cd5\u662f\u91cd\u590d\u4e00\u4e9b\u9876\u70b9\u5e76\u5173\u8054\u4e0d\u540c\u7684\u7eb9\u7406\u5750\u6807\u3002\u5bf9\u4e8e\u9876\u9762\uff0c\u6211\u4eec\u9700\u8981\u91cd\u590d\u56db\u4e2a\u9876\u70b9\u5e76\u4e3a\u5b83\u4eec\u5206\u914d\u6b63\u786e\u7684\u7eb9\u7406\u5750\u6807\u3002 \u56e0\u4e3a\u524d\u9762\u3001\u540e\u9762\u548c\u4fa7\u9762\u90fd\u4f7f\u7528\u76f8\u540c\u7684\u7eb9\u7406\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u9700\u8981\u91cd\u590d\u8fd9\u4e9b\u9876\u70b9\u3002\u5728\u6e90\u7801\u4e2d\u6709\u5b8c\u6574\u7684\u5b9a\u4e49\uff0c\u4f46\u662f\u6211\u4eec\u9700\u8981\u4ece8\u4e2a\u70b9\u4e0a\u5347\u523020\u4e2a\u70b9\u4e86\u3002\u6700\u7ec8\u7684\u7ed3\u679c\u5c31\u50cf\u8fd9\u6837\u3002 \u5728\u63a5\u4e0b\u6765\u7684\u7ae0\u8282\u4e2d\uff0c\u6211\u4eec\u5c06\u5b66\u4e60\u5982\u4f55\u52a0\u8f7d\u75313D\u5efa\u6a21\u5de5\u5177\u751f\u6210\u7684\u6a21\u578b\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u4e0d\u9700\u8981\u624b\u52a8\u5b9a\u4e49\u9876\u70b9\u548c\u7eb9\u7406\u5750\u6807\u4e86\uff08\u987a\u4fbf\u4e00\u63d0\uff0c\u5bf9\u4e8e\u66f4\u590d\u6742\u7684\u6a21\u578b\uff0c\u624b\u52a8\u5b9a\u4e49\u662f\u4e0d\u5b58\u5728\u7684\uff09\u3002 \u900f\u660e\u7eb9\u7406\u7b80\u4ecb \u5982\u4f60\u6240\u89c1\uff0c\u5f53\u52a0\u8f7d\u56fe\u50cf\u65f6\uff0c\u6211\u4eec\u68c0\u7d22\u4e86\u56db\u4e2aRGBA\u7ec4\u4ef6\uff0c\u5305\u62ec\u900f\u660e\u5ea6\u7b49\u7ea7\u3002\u4f46\u5982\u679c\u52a0\u8f7d\u4e00\u4e2a\u900f\u660e\u7684\u7eb9\u7406\uff0c\u53ef\u80fd\u770b\u4e0d\u5230\u4efb\u4f55\u4e1c\u897f\u3002\u4e3a\u4e86\u652f\u6301\u900f\u660e\u5ea6\uff0c\u6211\u4eec\u9700\u8981\u901a\u8fc7\u4ee5\u4e0b\u4ee3\u7801\u542f\u7528\u6df7\u5408\uff08Blend\uff09\uff1a glEnable(GL_BLEND); \u4f46\u4ec5\u542f\u7528\u6df7\u5408\uff0c\u900f\u660e\u6548\u679c\u4ecd\u7136\u4e0d\u4f1a\u663e\u793a\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u6307\u793aOpenGL\u5982\u4f55\u8fdb\u884c\u6df7\u5408\u3002\u8fd9\u662f\u901a\u8fc7\u8c03\u7528 glBlendFunc \u65b9\u6cd5\u5b8c\u6210\u7684\uff1a glBlendFunc(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA); \u4f60\u53ef\u4ee5\u67e5\u770b \u6b64\u5904 \u6709\u5173\u53ef\u4f7f\u7528\u7684\u4e0d\u540c\u529f\u80fd\u7684\u8be6\u7ec6\u8bf4\u660e\u3002 \u5373\u4f7f\u542f\u7528\u4e86\u6df7\u5408\u5e76\u8bbe\u7f6e\u4e86\u529f\u80fd\uff0c\u4e5f\u53ef\u80fd\u770b\u4e0d\u5230\u6b63\u786e\u7684\u900f\u660e\u6548\u679c\u3002\u5176\u539f\u56e0\u662f\u6df1\u5ea6\u6d4b\u8bd5\uff0c\u5f53\u4f7f\u7528\u6df1\u5ea6\u503c\u4e22\u5f03\u7247\u5143\u65f6\uff0c\u6211\u4eec\u53ef\u80fd\u5c06\u5177\u6709\u900f\u660e\u5ea6\u7684\u7247\u5143\u4e0e\u80cc\u666f\u6df7\u5408\uff0c\u800c\u4e0d\u662f\u4e0e\u5b83\u4eec\u540e\u9762\u7684\u7247\u5143\u6df7\u5408\uff0c\u8fd9\u5c06\u5f97\u5230\u9519\u8bef\u7684\u6e32\u67d3\u7ed3\u679c\u3002\u4e3a\u4e86\u89e3\u51b3\u8be5\u95ee\u9898\uff0c\u6211\u4eec\u9700\u8981\u5148\u7ed8\u5236\u4e0d\u900f\u660e\u7269\u4f53\uff0c\u7136\u540e\u6309\u6df1\u5ea6\u9012\u51cf\u987a\u5e8f\u7ed8\u5236\u5177\u6709\u900f\u660e\u5ea6\u7684\u7269\u4f53\uff08\u5e94\u5148\u7ed8\u5236\u8f83\u8fdc\u7269\u4f53\uff09\u3002","title":"\u7eb9\u7406"},{"location":"07-textures/#textures","text":"","title":"\u7eb9\u7406\uff08Textures\uff09"},{"location":"07-textures/#_1","text":"\u5728\u672c\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u5b66\u4e60\u5982\u4f55\u5728\u6e32\u67d3\u4e2d\u52a0\u8f7d\u7eb9\u7406\u5e76\u4f7f\u7528\u5b83\u4eec\u3002\u4e3a\u4e86\u8bb2\u89e3\u4e0e\u7eb9\u7406\u76f8\u5173\u7684\u6240\u6709\u6982\u5ff5\uff0c\u6211\u4eec\u5c06\u628a\u6b64\u524d\u7ae0\u8282\u4e2d\u4f7f\u7528\u7684\u6b63\u65b9\u5f62\u66f4\u6539\u4e3a\u4e09\u7ef4\u7acb\u65b9\u4f53\u3002\u4e3a\u4e86\u7ed8\u5236\u4e00\u4e2a\u7acb\u65b9\u4f53\uff0c\u6211\u4eec\u53ea\u9700\u8981\u6b63\u786e\u5730\u5b9a\u4e49\u4e00\u4e2a\u7acb\u65b9\u4f53\u7684\u5750\u6807\uff0c\u5c31\u80fd\u4f7f\u7528\u73b0\u6709\u4ee3\u7801\u6b63\u786e\u5730\u7ed8\u5236\u5b83\u3002 \u4e3a\u4e86\u7ed8\u5236\u7acb\u65b9\u4f53\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5b9a\u4e49\u516b\u4e2a\u9876\u70b9\u3002 \u56e0\u6b64\uff0c\u5b83\u7684\u5750\u6807\u6570\u7ec4\u5c06\u662f\u8fd9\u6837\u7684\uff1a float[] positions = new float[] { // VO -0.5f, 0.5f, 0.5f, // V1 -0.5f, -0.5f, 0.5f, // V2 0.5f, -0.5f, 0.5f, // V3 0.5f, 0.5f, 0.5f, // V4 -0.5f, 0.5f, -0.5f, // V5 0.5f, 0.5f, -0.5f, // V6 -0.5f, -0.5f, -0.5f, // V7 0.5f, -0.5f, -0.5f, }; \u5f53\u7136\uff0c\u7531\u4e8e\u6211\u4eec\u591a\u4e864\u4e2a\u9876\u70b9\uff0c\u6211\u4eec\u9700\u8981\u66f4\u6539\u989c\u8272\u6570\u7ec4\uff0c\u76ee\u524d\u4ec5\u91cd\u590d\u524d\u56db\u9879\u7684\u503c\u3002 float[] colours = new float[]{ 0.5f, 0.0f, 0.0f, 0.0f, 0.5f, 0.0f, 0.0f, 0.0f, 0.5f, 0.0f, 0.5f, 0.5f, 0.5f, 0.0f, 0.0f, 0.0f, 0.5f, 0.0f, 0.0f, 0.0f, 0.5f, 0.0f, 0.5f, 0.5f, }; \u6700\u540e\uff0c\u7531\u4e8e\u7acb\u65b9\u4f53\u662f\u7531\u516d\u4e2a\u9762\u6784\u6210\u7684\uff0c\u9700\u8981\u7ed8\u5236\u5341\u4e8c\u4e2a\u4e09\u89d2\u5f62\uff08\u6bcf\u4e2a\u9762\u4e24\u4e2a\uff09\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u4fee\u6539\u7d22\u5f15\u6570\u7ec4\u3002\u8bb0\u4f4f\u4e09\u89d2\u5f62\u5fc5\u987b\u6309\u9006\u65f6\u9488\u987a\u5e8f\u5b9a\u4e49\uff0c\u5982\u679c\u4f60\u76f4\u63a5\u53bb\u5b9a\u4e49\u4e09\u89d2\u5f62\uff0c\u5f88\u5bb9\u6613\u72af\u9519\u3002\u4e00\u5b9a\u8981\u5c06\u4f60\u60f3\u5b9a\u4e49\u7684\u9762\u6446\u5728\u4f60\u7684\u9762\u524d\uff0c\u786e\u8ba4\u9876\u70b9\u5e76\u4ee5\u9006\u65f6\u9488\u987a\u5e8f\u7ed8\u5236\u4e09\u89d2\u5f62\u3002 int[] indices = new int[] { // \u524d\u9762 0, 1, 3, 3, 1, 2, // \u4e0a\u9762 4, 0, 3, 5, 4, 3, // \u53f3\u9762 3, 2, 7, 5, 3, 7, // \u5de6\u9762 6, 1, 0, 6, 0, 4, // \u4e0b\u9762 2, 1, 6, 2, 6, 7, // \u540e\u9762 7, 6, 4, 7, 4, 5, }; \u4e3a\u4e86\u66f4\u597d\u89c2\u5bdf\u7acb\u65b9\u4f53\uff0c\u6211\u4eec\u5c06\u4fee\u6539 DummyGame \u7c7b\u4e2d\u65cb\u8f6c\u6a21\u578b\u7684\u4ee3\u7801\uff0c\u4f7f\u6a21\u578b\u6cbf\u7740\u4e09\u4e2a\u8f74\u65cb\u8f6c\u3002 // \u66f4\u65b0\u65cb\u8f6c\u89d2 float rotation = gameItem.getRotation().x + 1.5f; if ( rotation > 360 ) { rotation = 0; } gameItem.setRotation(rotation, rotation, rotation); \u8fd9\u5c31\u5b8c\u4e86\uff0c\u73b0\u5728\u80fd\u591f\u663e\u793a\u4e00\u4e2a\u65cb\u8f6c\u7684\u4e09\u7ef4\u7acb\u65b9\u4f53\u4e86\uff0c\u4f60\u53ef\u4ee5\u7f16\u8bd1\u548c\u8fd0\u884c\u793a\u4f8b\u4ee3\u7801\uff0c\u4f1a\u5f97\u5230\u5982\u4e0b\u6240\u793a\u7684\u4e1c\u897f\u3002 \u8fd9\u4e2a\u7acb\u65b9\u4f53\u6709\u4e9b\u5947\u602a\uff0c\u6709\u4e9b\u9762\u6ca1\u88ab\u6b63\u786e\u5730\u7ed8\u5236\uff0c\u8fd9\u53d1\u751f\u4e86\u4ec0\u4e48\uff1f\u7acb\u65b9\u4f53\u4e4b\u6240\u4ee5\u51fa\u73b0\u8fd9\u4e2a\u73b0\u8c61\uff0c\u662f\u56e0\u4e3a\u7ec4\u6210\u7acb\u65b9\u4f53\u7684\u4e09\u89d2\u5f62\u662f\u4ee5\u4e00\u79cd\u968f\u673a\u987a\u5e8f\u7ed8\u5236\u7684\u3002\u4e8b\u5b9e\u4e0a\u8ddd\u79bb\u8f83\u8fdc\u7684\u50cf\u7d20\u5e94\u8be5\u5728\u8ddd\u79bb\u8f83\u8fd1\u7684\u50cf\u7d20\u4e4b\u524d\u7ed8\u5236\uff0c\u800c\u4e0d\u662f\u73b0\u5728\u8fd9\u6837\u3002\u4e3a\u4e86\u4fee\u590d\u5b83\uff0c\u6211\u4eec\u5fc5\u987b\u542f\u7528\u6df1\u5ea6\u6d4b\u8bd5\uff08Depth Test\uff09\u3002 \u8fd9\u5c06\u5728 Window \u7c7b\u7684 init \u65b9\u6cd5\u4e2d\u53bb\u505a\uff1a glEnable(GL_DEPTH_TEST); \u73b0\u5728\u7acb\u65b9\u4f53\u88ab\u6b63\u786e\u5730\u6e32\u67d3\u4e86\uff01 \u5982\u679c\u4f60\u770b\u4e86\u672c\u7ae0\u8be5\u5c0f\u8282\u7684\u4ee3\u7801\uff0c\u4f60\u53ef\u80fd\u4f1a\u770b\u5230 Mesh \u7c7b\u505a\u4e86\u4e00\u4e0b\u5c0f\u89c4\u6a21\u7684\u8c03\u6574\uff0cVBO\u7684ID\u73b0\u5728\u88ab\u50a8\u5b58\u5728\u4e00\u4e2aList\u4e2d\uff0c\u4ee5\u4fbf\u4e8e\u8fed\u4ee3\u5b83\u4eec\u3002","title":"\u521b\u5efa\u4e00\u4e2a\u4e09\u7ef4\u7acb\u65b9\u4f53"},{"location":"07-textures/#_2","text":"\u73b0\u5728\u6211\u4eec\u5c06\u628a\u7eb9\u7406\u5e94\u7528\u5230\u7acb\u65b9\u4f53\u4e0a\u3002\u7eb9\u7406\uff08Texture\uff09\u662f\u7528\u6765\u7ed8\u5236\u67d0\u4e2a\u6a21\u578b\u7684\u50cf\u7d20\u989c\u8272\u7684\u56fe\u50cf\uff0c\u53ef\u4ee5\u8ba4\u4e3a\u7eb9\u7406\u662f\u5305\u5728\u4e09\u7ef4\u6a21\u578b\u4e0a\u7684\u76ae\u80a4\u3002\u4f60\u8981\u505a\u7684\u662f\u5c06\u7eb9\u7406\u56fe\u50cf\u4e2d\u7684\u70b9\u5206\u914d\u7ed9\u6a21\u578b\u4e2d\u7684\u9876\u70b9\uff0c\u8fd9\u6837\u505aOpenGL\u5c31\u80fd\u6839\u636e\u7eb9\u7406\u56fe\u50cf\u8ba1\u7b97\u5176\u4ed6\u50cf\u7d20\u7684\u989c\u8272\u3002 \u7eb9\u7406\u56fe\u50cf\u4e0d\u5fc5\u4e0e\u6a21\u578b\u540c\u6837\u5927\u5c0f\uff0c\u5b83\u53ef\u4ee5\u53d8\u5927\u6216\u53d8\u5c0f\u3002\u5982\u679c\u8981\u5904\u7406\u7684\u50cf\u7d20\u4e0d\u80fd\u6620\u5c04\u5230\u7eb9\u7406\u4e2d\u7684\u6307\u5b9a\u70b9\uff0cOpenGL\u5c06\u63a8\u65ad\u989c\u8272\u3002\u53ef\u5728\u521b\u5efa\u7eb9\u7406\u65f6\u63a7\u5236\u5982\u4f55\u8fdb\u884c\u989c\u8272\u63a8\u65ad\u3002 \u56e0\u6b64\uff0c\u4e3a\u4e86\u5c06\u7eb9\u7406\u5e94\u7528\u5230\u6a21\u578b\u4e0a\uff0c\u6211\u4eec\u5fc5\u987b\u505a\u7684\u662f\u5c06\u7eb9\u7406\u5750\u6807\u5206\u914d\u7ed9\u6bcf\u4e2a\u9876\u70b9\u3002\u7eb9\u7406\u5750\u6807\u7cfb\u6709\u4e9b\u4e0d\u540c\u4e8e\u6a21\u578b\u5750\u6807\u7cfb\u3002\u9996\u5148\uff0c\u6211\u4eec\u7684\u7eb9\u7406\u662f\u4e8c\u7ef4\u7eb9\u7406\uff0c\u6240\u4ee5\u5750\u6807\u53ea\u6709X\u548cY\u4e24\u4e2a\u91cf\u3002\u6b64\u5916\uff0c\u539f\u70b9\u662f\u56fe\u50cf\u7684\u5de6\u4e0a\u89d2\uff0cX\u6216Y\u7684\u6700\u5927\u503c\u90fd\u662f1\u3002 \u6211\u4eec\u5982\u4f55\u5c06\u7eb9\u7406\u5750\u6807\u4e0e\u4f4d\u7f6e\u5750\u6807\u8054\u7cfb\u8d77\u6765\u5462\uff1f\u7b54\u6848\u5f88\u7b80\u5355\uff0c\u5c31\u50cf\u4f20\u9012\u989c\u8272\u4fe1\u606f\uff0c\u6211\u4eec\u521b\u5efa\u4e86\u4e00\u4e2aVBO\uff0c\u4e3a\u6bcf\u4e2a\u9876\u70b9\u50a8\u5b58\u5176\u7eb9\u7406\u5750\u6807\u3002 \u8ba9\u6211\u4eec\u5f00\u59cb\u4fee\u6539\u4ee3\u7801\uff0c\u4ee5\u4fbf\u5728\u4e09\u7ef4\u7acb\u65b9\u4f53\u4e0a\u4f7f\u7528\u7eb9\u7406\u5427\u3002\u9996\u5148\u662f\u52a0\u8f7d\u5c06\u88ab\u7528\u4f5c\u7eb9\u7406\u7684\u56fe\u50cf\u3002\u5bf9\u6b64\u5728LWJGL\u7684\u65e9\u671f\u7248\u672c\u4e2d\uff0c\u901a\u5e38\u4f7f\u7528Slick2D\u5e93\u3002\u5728\u64b0\u5199\u672c\u6587\u65f6\uff0c\u8be5\u5e93\u4f3c\u4e4e\u4e0eLWJGL 3\u4e0d\u517c\u5bb9\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u4f7f\u7528\u53e6\u4e00\u79cd\u65b9\u6cd5\u3002\u6211\u4eec\u5c06\u4f7f\u7528LWJGL\u4e3a stb \u5e93\u63d0\u4f9b\u7684\u5c01\u88c5\u3002\u4e3a\u4e86\u4f7f\u7528\u5b83\uff0c\u9996\u5148\u9700\u8981\u5728\u672c\u5730\u7684 pom.xml \u6587\u4ef6\u4e2d\u58f0\u660e\u4f9d\u8d56\u3002 <dependency> <groupId>org.lwjgl</groupId> <artifactId>lwjgl-stb</artifactId> <version>${lwjgl.version}</version> </dependency> [...] <dependency> <groupId>org.lwjgl</groupId> <artifactId>lwjgl-stb</artifactId> <version>${lwjgl.version}</version> <classifier>${native.target}</classifier> <scope>runtime</scope> </dependency> \u5728\u4e00\u4e9b\u6559\u7a0b\u4e2d\uff0c\u4f60\u53ef\u80fd\u770b\u5230\u9996\u5148\u8981\u505a\u7684\u4e8b\u662f\u8c03\u7528 glEnable(GL_TEXTURE_2D) \u6765\u542f\u7528OpenGL\u73af\u5883\u4e2d\u7684\u7eb9\u7406\u3002\u5982\u679c\u4f7f\u7528\u56fa\u5b9a\u7ba1\u7ebf\u8fd9\u662f\u5bf9\u7684\uff0c\u4f46\u6211\u4eec\u4f7f\u7528GLSL\u7740\u8272\u5668\uff0c\u56e0\u6b64\u4e0d\u518d\u9700\u8981\u4e86\u3002 \u73b0\u5728\u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a\u65b0\u7684 Texture \u7c7b\uff0c\u5b83\u5c06\u6267\u884c\u52a0\u8f7d\u7eb9\u7406\u6240\u5fc5\u987b\u7684\u6b65\u9aa4\u3002\u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u5c06\u56fe\u50cf\u8f7d\u5165\u5230 ByteBuffer \u4e2d\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a private static int loadTexture(String fileName) throws Exception { int width; int height; ByteBuffer buf; // \u52a0\u8f7d\u7eb9\u7406\u6587\u4ef6 try (MemoryStack stack = MemoryStack.stackPush()) { IntBuffer w = stack.mallocInt(1); IntBuffer h = stack.mallocInt(1); IntBuffer channels = stack.mallocInt(1); buf = stbi_load(fileName, w, h, channels, 4); if (buf == null) { throw new Exception(\"Image file [\" + fileName + \"] not loaded: \" + stbi_failure_reason()); } /* \u83b7\u5f97\u56fe\u50cf\u7684\u9ad8\u5ea6\u4e0e\u5bbd\u5ea6 */ width = w.get(); height = h.get(); } [... \u63a5\u4e0b\u6765\u8fd8\u6709\u66f4\u591a\u4ee3\u7801 ...] \u9996\u5148\u6211\u4eec\u8981\u4e3a\u5e93\u5206\u914d IntBuffer \uff0c\u4ee5\u8fd4\u56de\u56fe\u50cf\u5927\u5c0f\u4e0e\u901a\u9053\u6570\u3002\u7136\u540e\uff0c\u6211\u4eec\u8c03\u7528 stbi_load \u65b9\u6cd5\u5c06\u56fe\u50cf\u52a0\u8f7d\u5230 ByteBuffer \u4e2d\uff0c\u8be5\u65b9\u6cd5\u9700\u8981\u5982\u4e0b\u53c2\u6570\uff1a filePath \uff1a\u6587\u4ef6\u7684\u7edd\u5bf9\u8def\u5f84\u3002stb\u5e93\u662f\u672c\u5730\u7684\uff0c\u4e0d\u77e5\u9053\u5173\u4e8e CLASSPATH \u7684\u4efb\u4f55\u5185\u5bb9\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u5e38\u89c4\u7684\u6587\u4ef6\u7cfb\u7edf\u8def\u5f84\u3002 width \uff1a\u56fe\u50cf\u5bbd\u5ea6\uff0c\u83b7\u53d6\u7684\u56fe\u50cf\u5bbd\u5ea6\u5c06\u88ab\u5199\u5165\u5176\u4e2d\u3002 height \uff1a\u56fe\u50cf\u9ad8\u5ea6\uff0c\u83b7\u53d6\u7684\u56fe\u50cf\u9ad8\u5ea6\u5c06\u88ab\u5199\u5165\u5176\u4e2d\u3002 channels \uff1a\u56fe\u50cf\u901a\u9053\u3002 desired_channels \uff1a\u6240\u9700\u7684\u56fe\u50cf\u901a\u9053\uff0c\u6211\u4eec\u4f20\u51654\uff08RGBA\uff09\u3002 \u4e00\u4ef6\u5173\u4e8eOpenGL\u7684\u91cd\u8981\u4e8b\u9879\uff0c\u7531\u4e8e\u5386\u53f2\u539f\u56e0\uff0c\u8981\u6c42\u7eb9\u7406\u56fe\u50cf\u7684\u5927\u5c0f\uff08\u6bcf\u4e2a\u8f74\u7684\u50cf\u7d20\u6570\uff09\u5fc5\u987b\u662f\u4e8c\u7684\u6307\u6570\uff082, 4, 8, 16, ....\uff09\u3002\u4e00\u4e9b\u9a71\u52a8\u89e3\u9664\u4e86\u8fd9\u79cd\u9650\u5236\uff0c\u4f46\u6700\u597d\u8fd8\u662f\u4fdd\u6301\u4ee5\u514d\u51fa\u73b0\u95ee\u9898\u3002 \u4e0b\u4e00\u6b65\u662f\u5c06\u7eb9\u7406\u4e0a\u4f20\u5230\u663e\u5b58\u4e2d\u3002\u9996\u5148\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u7eb9\u7406ID\uff0c\u4e0e\u8be5\u7eb9\u7406\u76f8\u5173\u7684\u64cd\u4f5c\u90fd\u8981\u4f7f\u7528\u8be5ID\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u7ed1\u5b9a\u5b83\u3002 // \u521b\u5efa\u4e00\u4e2a\u65b0\u7684OpenGL\u7eb9\u7406 int textureId = glGenTextures(); // \u7ed1\u5b9a\u7eb9\u7406 glBindTexture(GL_TEXTURE_2D, textureId); \u7136\u540e\u9700\u8981\u544a\u8bc9OpenGL\u5982\u4f55\u89e3\u5305RGBA\u5b57\u8282\uff0c\u7531\u4e8e\u6bcf\u4e2a\u5206\u91cf\u53ea\u6709\u4e00\u4e2a\u5b57\u8282\u5927\u5c0f\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u6dfb\u52a0\u4ee5\u4e0b\u4ee3\u7801\uff1a glPixelStorei(GL_UNPACK_ALIGNMENT, 1); \u6700\u540e\u6211\u4eec\u53ef\u4ee5\u4e0a\u4f20\u7eb9\u7406\u6570\u636e\uff1a glTexImage2D(GL_TEXTURE_2D, 0, GL_RGBA, width, height, 0, GL_RGBA, GL_UNSIGNED_BYTE, buf); glTexImage2D \u7684\u53c2\u6570\u5982\u4e0b\u6240\u793a\uff1a target : \u6307\u5b9a\u76ee\u6807\u7eb9\u7406\uff08\u7eb9\u7406\u7c7b\u578b\uff09\uff0c\u672c\u4f8b\u4e2d\u662f GL_TEXTURE_2D \u3002 level : \u6307\u5b9a\u7eb9\u7406\u7ec6\u8282\u7684\u7b49\u7ea7\u30020\u7ea7\u662f\u57fa\u672c\u56fe\u50cf\u7b49\u7ea7\uff0c\u7b2cn\u7ea7\u662f\u7b2cn\u4e2a\u591a\u7ea7\u6e10\u8fdc\u7eb9\u7406\u7684\u56fe\u50cf\uff0c\u4e4b\u540e\u518d\u8c08\u8bba\u8fd9\u4e2a\u95ee\u9898\u3002 internal format : \u6307\u5b9a\u7eb9\u7406\u4e2d\u989c\u8272\u5206\u91cf\u7684\u6570\u91cf\u3002 width : \u6307\u5b9a\u7eb9\u7406\u56fe\u50cf\u7684\u5bbd\u5ea6\u3002 height : \u6307\u5b9a\u7eb9\u7406\u56fe\u50cf\u7684\u9ad8\u5ea6\u3002 border : \u6b64\u503c\u5fc5\u987b\u4e3a0\u3002 format : \u6307\u5b9a\u50cf\u7d20\u6570\u636e\u7684\u683c\u5f0f\uff0c\u73b0\u5728\u4e3aRGBA\u3002 type : \u6307\u5b9a\u50cf\u7d20\u6570\u636e\u7684\u7c7b\u578b\u3002\u73b0\u5728\uff0c\u6211\u4eec\u4f7f\u7528\u7684\u662f\u65e0\u7b26\u53f7\u5b57\u8282\u3002 data : \u50a8\u5b58\u6570\u636e\u7684\u7f13\u51b2\u533a\u3002 \u5728\u4e00\u4e9b\u4ee3\u7801\u4e2d\uff0c\u4f60\u53ef\u80fd\u4f1a\u53d1\u73b0\u5728\u8c03\u7528 glTexImage2D \u65b9\u6cd5\u524d\u8bbe\u7f6e\u4e86\u4e00\u4e9b\u8fc7\u6ee4\u53c2\u6570\u3002\u8fc7\u6ee4\u662f\u6307\u5728\u7f29\u653e\u65f6\u5982\u4f55\u7ed8\u5236\u56fe\u50cf\uff0c\u4ee5\u53ca\u5982\u4f55\u63d2\u503c\u50cf\u7d20\u3002\u5982\u679c\u672a\u8bbe\u7f6e\u8fd9\u4e9b\u53c2\u6570\uff0c\u7eb9\u7406\u5c06\u4e0d\u4f1a\u663e\u793a\u3002\u56e0\u6b64\uff0c\u5728 glTexImage2D \u65b9\u6cd5\u8c03\u7528\u4e4b\u524d\uff0c\u4f1a\u770b\u5230\u4ee5\u4e0b\u4ee3\u7801\uff1a glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST); \u8fd9\u4e9b\u53c2\u6570\u57fa\u672c\u4e0a\u5728\u8bf4\uff0c\u5f53\u7ed8\u5236\u4e00\u4e2a\u50cf\u7d20\u65f6\uff0c\u5982\u679c\u6ca1\u6709\u76f4\u63a5\u4e00\u5bf9\u4e00\u5730\u5173\u8054\u5230\u7eb9\u7406\u5750\u6807\uff0c\u5b83\u5c06\u9009\u62e9\u6700\u8fd1\u7684\u7eb9\u7406\u5750\u6807\u70b9\u3002 \u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u4e0d\u4f1a\u8bbe\u7f6e\u8fd9\u4e9b\u53c2\u6570\u3002\u76f8\u53cd\uff0c\u6211\u4eec\u5c06\u751f\u6210\u4e00\u4e2a\u591a\u7ea7\u6e10\u8fdc\u7eb9\u7406\uff08Mipmap\uff09\u3002\u591a\u7ea7\u6e10\u8fdc\u7eb9\u7406\u662f\u7531\u9ad8\u7ec6\u8282\u7eb9\u7406\u751f\u6210\u7684\u9010\u7ea7\u964d\u4f4e\u5206\u8fa8\u7387\u7684\u7eb9\u7406\u96c6\u5408\u3002\u5f53\u6211\u4eec\u7684\u7269\u4f53\u7f29\u653e\u65f6\uff0c\u5c31\u5c06\u81ea\u52a8\u4f7f\u7528\u4f4e\u5206\u8fa8\u7387\u7684\u56fe\u50cf\u3002 \u4e3a\u4e86\u751f\u6210\u591a\u7ea7\u6e10\u8fdc\u7eb9\u7406\uff0c\u53ea\u9700\u8981\u7f16\u5199\u4ee5\u4e0b\u4ee3\u7801\uff08\u76ee\u524d\u6211\u4eec\u628a\u5b83\u653e\u5728 glTextImage2D \u65b9\u6cd5\u8c03\u7528\u4e4b\u540e\uff09\uff1a glGenerateMipmap(GL_TEXTURE_2D); \u6700\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u91ca\u653e\u539f\u59cb\u56fe\u50cf\u6570\u636e\u672c\u8eab\u7684\u5185\u5b58\uff1a stbi_image_free(buf); \u5c31\u8fd9\u6837\uff0c\u6211\u4eec\u5df2\u7ecf\u6210\u529f\u5730\u52a0\u8f7d\u4e86\u7eb9\u7406\uff0c\u73b0\u5728\u9700\u8981\u4f7f\u7528\u5b83\u3002\u6b63\u5982\u6b64\u524d\u6240\u8bf4\uff0c\u6211\u4eec\u9700\u8981\u628a\u7eb9\u7406\u5750\u6807\u4f5c\u4e3a\u53e6\u4e00\u4e2aVBO\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u8981\u4fee\u6539 Mesh \u7c7b\u4ee5\u63a5\u6536\u50a8\u5b58\u7eb9\u7406\u5750\u6807\u7684\u6d6e\u70b9\u6570\u7ec4\uff0c\u800c\u4e0d\u662f\u989c\u8272\uff08\u6211\u4eec\u53ef\u4ee5\u540c\u65f6\u6709\u989c\u8272\u548c\u7eb9\u7406\uff0c\u4f46\u4e3a\u4e86\u7b80\u5316\u5b83\uff0c\u6211\u4eec\u5c06\u5220\u9664\u989c\u8272\uff09\uff0c\u6784\u9020\u51fd\u6570\u73b0\u5728\u5982\u4e0b\u6240\u793a\uff1a public Mesh(float[] positions, float[] textCoords, int[] indices, Texture texture) \u7eb9\u7406\u5750\u6807VBO\u4e0e\u989c\u8272VBO\u521b\u5efa\u7684\u65b9\u5f0f\u76f8\u540c\u3002\u552f\u4e00\u7684\u533a\u522b\u662f\u5b83\u6bcf\u4e2a\u9876\u70b9\u5c5e\u6027\u53ea\u6709\u4e24\u4e2a\u5206\u91cf\u800c\u4e0d\u662f\u4e09\u4e2a\uff1a vboId = glGenBuffers(); vboIdList.add(vboId); textCoordsBuffer = MemoryUtil.memAllocFloat(textCoords.length); textCoordsBuffer.put(textCoords).flip(); glBindBuffer(GL_ARRAY_BUFFER, vboId); glBufferData(GL_ARRAY_BUFFER, textCoordsBuffer, GL_STATIC_DRAW); glEnableVertexAttribArray(1); glVertexAttribPointer(1, 2, GL_FLOAT, false, 0, 0); \u73b0\u5728\u6211\u4eec\u9700\u8981\u5728\u7740\u8272\u5668\u4e2d\u4f7f\u7528\u7eb9\u7406\u3002\u5728\u9876\u70b9\u7740\u8272\u5668\u4e2d\uff0c\u6211\u4eec\u4fee\u6539\u4e86\u7b2c\u4e8c\u4e2a\u8f93\u5165\u53c2\u6570\uff0c\u56e0\u4e3a\u73b0\u5728\u5b83\u662f\u4e00\u4e2a vec2 \uff08\u4e5f\u987a\u4fbf\u66f4\u6539\u4e86\u540d\u79f0\uff09\u3002\u9876\u70b9\u7740\u8272\u5668\u5c31\u50cf\u6b64\u524d\u4e00\u6837\uff0c\u4ec5\u5c06\u7eb9\u7406\u5750\u6807\u4f20\u7ed9\u7247\u5143\u7740\u8272\u5668\u3002 #version 330 layout (location=0) in vec3 position; layout (location=1) in vec2 texCoord; out vec2 outTexCoord; uniform mat4 worldMatrix; uniform mat4 projectionMatrix; void main() { gl_Position = projectionMatrix * worldMatrix * vec4(position, 1.0); outTexCoord = texCoord; } \u5728\u7247\u5143\u7740\u8272\u5668\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u90a3\u4e9b\u7eb9\u7406\u5750\u6807\u6765\u8bbe\u7f6e\u50cf\u7d20\u989c\u8272\uff1a #version 330 in vec2 outTexCoord; out vec4 fragColor; uniform sampler2D texture_sampler; void main() { fragColor = texture(texture_sampler, outTexCoord); } \u5728\u5206\u6790\u4ee3\u7801\u4e4b\u524d\uff0c\u6211\u4eec\u5148\u7406\u6e05\u4e00\u4e9b\u6982\u5ff5\u3002\u663e\u5361\u6709\u51e0\u4e2a\u7a7a\u95f4\u6216\u69fd\u6765\u50a8\u5b58\u7eb9\u7406\uff0c\u6bcf\u4e00\u4e2a\u7a7a\u95f4\u88ab\u79f0\u4e3a\u7eb9\u7406\u5355\u5143\uff08Texture Unit\uff09\u3002\u5f53\u4f7f\u7528\u7eb9\u7406\u65f6\uff0c\u6211\u4eec\u5fc5\u987b\u8bbe\u7f6e\u60f3\u7528\u7684\u7eb9\u7406\u3002\u5982\u4f60\u6240\u89c1\uff0c\u6211\u4eec\u6709\u4e00\u4e2a\u540d\u4e3a texture_sampler \u7684\u65b0Uniform\uff0c\u8be5Uniform\u7684\u7c7b\u578b\u662f sampler2D \uff0c\u5e76\u50a8\u5b58\u6709\u6211\u4eec\u5e0c\u671b\u4f7f\u7528\u7684\u7eb9\u7406\u5355\u5143\u7684\u503c\u3002 \u5728 main \u51fd\u6570\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u540d\u4e3a texture \u7684\u7eb9\u7406\u91c7\u6837\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u6709\u4e24\u4e2a\u53c2\u6570\uff1a\u53d6\u6837\u5668\uff08Sampler\uff09\u548c\u7eb9\u7406\u5750\u6807\uff0c\u5e76\u8fd4\u56de\u6b63\u786e\u7684\u989c\u8272\u3002\u53d6\u6837\u5668Uniform\u5141\u8bb8\u4f7f\u7528\u591a\u91cd\u7eb9\u7406\uff08Multi-texture\uff09\uff0c\u4e0d\u8fc7\u73b0\u5728\u4e0d\u662f\u8ba8\u8bba\u8fd9\u4e2a\u8bdd\u9898\u7684\u65f6\u5019\uff0c\u4f46\u662f\u6211\u4eec\u4f1a\u5728\u7a0d\u540e\u518d\u5c1d\u8bd5\u6dfb\u52a0\u3002 \u56e0\u6b64\uff0c\u5728 ShaderProgram \u7c7b\u4e2d\uff0c\u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u65b9\u6cd5\uff0c\u5141\u8bb8\u4e3a\u6574\u6570\u578bUniform\u8bbe\u7f6e\u503c\uff1a public void setUniform(String uniformName, int value) { glUniform1i(uniforms.get(uniformName), value); } \u5728 Renderer \u7c7b\u7684 init \u65b9\u6cd5\u4e2d\uff0c\u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a\u65b0\u7684Uniform\uff1a shaderProgram.createUniform(\"texture_sampler\"); \u6b64\u5916\uff0c\u5728 Renderer \u7c7b\u7684 render \u65b9\u6cd5\u4e2d\uff0c\u6211\u4eec\u5c06Uniform\u7684\u503c\u8bbe\u7f6e\u4e3a0\uff08\u6211\u4eec\u73b0\u5728\u4e0d\u4f7f\u7528\u591a\u4e2a\u7eb9\u7406\uff0c\u6240\u4ee5\u53ea\u4f7f\u7528\u5355\u51430\uff09\u3002 shaderProgram.setUniform(\"texture_sampler\", 0); \u6700\u597d\uff0c\u6211\u4eec\u53ea\u9700\u4fee\u6539 Mesh \u7c7b\u7684 render \u65b9\u6cd5\u5c31\u53ef\u4ee5\u4f7f\u7528\u7eb9\u7406\u3002\u5728\u65b9\u6cd5\u8d77\u59cb\u5904\uff0c\u6dfb\u52a0\u4ee5\u4e0b\u51e0\u884c\u4ee3\u7801\uff1a // \u6fc0\u6d3b\u7b2c\u4e00\u4e2a\u7eb9\u7406\u5355\u5143 glActiveTexture(GL_TEXTURE0); // \u7ed1\u5b9a\u7eb9\u7406 glBindTexture(GL_TEXTURE_2D, texture.getId()); \u6211\u4eec\u5df2\u7ecf\u5c06 texture.getId() \u6240\u83b7\u5f97\u7684\u7eb9\u7406ID\u7ed1\u5b9a\u5230\u7eb9\u7406\u5355\u51430\u4e0a\u3002 \u6211\u4eec\u521a\u521a\u4fee\u6539\u4e86\u4ee3\u7801\u6765\u652f\u6301\u7eb9\u7406\uff0c\u73b0\u5728\u9700\u8981\u4e3a\u4e09\u7ef4\u7acb\u65b9\u4f53\u8bbe\u7f6e\u7eb9\u7406\u5750\u6807\uff0c\u7eb9\u7406\u56fe\u50cf\u6587\u4ef6\u662f\u8fd9\u6837\u7684\uff1a \u5728\u6211\u4eec\u7684\u4e09\u7ef4\u6a21\u578b\u4e2d\uff0c\u5171\u6709\u516b\u4e2a\u9876\u70b9\u3002\u6211\u4eec\u9996\u5148\u5b9a\u4e49\u6b63\u9762\u6bcf\u4e2a\u9876\u70b9\u7684\u7eb9\u7406\u5750\u6807\u3002 \u9876\u70b9 \u7eb9\u7406\u5750\u6807 V0 0.0, 0.0 V1 0.0, 0.5 V2 0.5, 0.5 V3 0.5, 0.0 \u7136\u540e\uff0c\u5b9a\u4e49\u9876\u9762\u7684\u7eb9\u7406\u6620\u5c04\u3002 \u9876\u70b9 \u7eb9\u7406\u5750\u6807 V4 0.0, 0.5 V5 0.5, 0.5 V0 0.0, 1.0 V3 0.5, 1.0 \u5982\u4f60\u6240\u89c1\uff0c\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u9700\u8981\u4e3a\u540c\u4e00\u4e2a\u9876\u70b9\uff08V0\u548cV3\uff09\u8bbe\u7f6e\u4e0d\u540c\u7684\u7eb9\u7406\u5750\u6807\u3002\u600e\u4e48\u6837\u624d\u80fd\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u5462\uff1f\u89e3\u51b3\u8fd9\u4e00\u95ee\u9898\u7684\u552f\u4e00\u65b9\u6cd5\u662f\u91cd\u590d\u4e00\u4e9b\u9876\u70b9\u5e76\u5173\u8054\u4e0d\u540c\u7684\u7eb9\u7406\u5750\u6807\u3002\u5bf9\u4e8e\u9876\u9762\uff0c\u6211\u4eec\u9700\u8981\u91cd\u590d\u56db\u4e2a\u9876\u70b9\u5e76\u4e3a\u5b83\u4eec\u5206\u914d\u6b63\u786e\u7684\u7eb9\u7406\u5750\u6807\u3002 \u56e0\u4e3a\u524d\u9762\u3001\u540e\u9762\u548c\u4fa7\u9762\u90fd\u4f7f\u7528\u76f8\u540c\u7684\u7eb9\u7406\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u9700\u8981\u91cd\u590d\u8fd9\u4e9b\u9876\u70b9\u3002\u5728\u6e90\u7801\u4e2d\u6709\u5b8c\u6574\u7684\u5b9a\u4e49\uff0c\u4f46\u662f\u6211\u4eec\u9700\u8981\u4ece8\u4e2a\u70b9\u4e0a\u5347\u523020\u4e2a\u70b9\u4e86\u3002\u6700\u7ec8\u7684\u7ed3\u679c\u5c31\u50cf\u8fd9\u6837\u3002 \u5728\u63a5\u4e0b\u6765\u7684\u7ae0\u8282\u4e2d\uff0c\u6211\u4eec\u5c06\u5b66\u4e60\u5982\u4f55\u52a0\u8f7d\u75313D\u5efa\u6a21\u5de5\u5177\u751f\u6210\u7684\u6a21\u578b\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u4e0d\u9700\u8981\u624b\u52a8\u5b9a\u4e49\u9876\u70b9\u548c\u7eb9\u7406\u5750\u6807\u4e86\uff08\u987a\u4fbf\u4e00\u63d0\uff0c\u5bf9\u4e8e\u66f4\u590d\u6742\u7684\u6a21\u578b\uff0c\u624b\u52a8\u5b9a\u4e49\u662f\u4e0d\u5b58\u5728\u7684\uff09\u3002","title":"\u4e3a\u7acb\u65b9\u4f53\u6dfb\u52a0\u7eb9\u7406"},{"location":"07-textures/#_3","text":"\u5982\u4f60\u6240\u89c1\uff0c\u5f53\u52a0\u8f7d\u56fe\u50cf\u65f6\uff0c\u6211\u4eec\u68c0\u7d22\u4e86\u56db\u4e2aRGBA\u7ec4\u4ef6\uff0c\u5305\u62ec\u900f\u660e\u5ea6\u7b49\u7ea7\u3002\u4f46\u5982\u679c\u52a0\u8f7d\u4e00\u4e2a\u900f\u660e\u7684\u7eb9\u7406\uff0c\u53ef\u80fd\u770b\u4e0d\u5230\u4efb\u4f55\u4e1c\u897f\u3002\u4e3a\u4e86\u652f\u6301\u900f\u660e\u5ea6\uff0c\u6211\u4eec\u9700\u8981\u901a\u8fc7\u4ee5\u4e0b\u4ee3\u7801\u542f\u7528\u6df7\u5408\uff08Blend\uff09\uff1a glEnable(GL_BLEND); \u4f46\u4ec5\u542f\u7528\u6df7\u5408\uff0c\u900f\u660e\u6548\u679c\u4ecd\u7136\u4e0d\u4f1a\u663e\u793a\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u6307\u793aOpenGL\u5982\u4f55\u8fdb\u884c\u6df7\u5408\u3002\u8fd9\u662f\u901a\u8fc7\u8c03\u7528 glBlendFunc \u65b9\u6cd5\u5b8c\u6210\u7684\uff1a glBlendFunc(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA); \u4f60\u53ef\u4ee5\u67e5\u770b \u6b64\u5904 \u6709\u5173\u53ef\u4f7f\u7528\u7684\u4e0d\u540c\u529f\u80fd\u7684\u8be6\u7ec6\u8bf4\u660e\u3002 \u5373\u4f7f\u542f\u7528\u4e86\u6df7\u5408\u5e76\u8bbe\u7f6e\u4e86\u529f\u80fd\uff0c\u4e5f\u53ef\u80fd\u770b\u4e0d\u5230\u6b63\u786e\u7684\u900f\u660e\u6548\u679c\u3002\u5176\u539f\u56e0\u662f\u6df1\u5ea6\u6d4b\u8bd5\uff0c\u5f53\u4f7f\u7528\u6df1\u5ea6\u503c\u4e22\u5f03\u7247\u5143\u65f6\uff0c\u6211\u4eec\u53ef\u80fd\u5c06\u5177\u6709\u900f\u660e\u5ea6\u7684\u7247\u5143\u4e0e\u80cc\u666f\u6df7\u5408\uff0c\u800c\u4e0d\u662f\u4e0e\u5b83\u4eec\u540e\u9762\u7684\u7247\u5143\u6df7\u5408\uff0c\u8fd9\u5c06\u5f97\u5230\u9519\u8bef\u7684\u6e32\u67d3\u7ed3\u679c\u3002\u4e3a\u4e86\u89e3\u51b3\u8be5\u95ee\u9898\uff0c\u6211\u4eec\u9700\u8981\u5148\u7ed8\u5236\u4e0d\u900f\u660e\u7269\u4f53\uff0c\u7136\u540e\u6309\u6df1\u5ea6\u9012\u51cf\u987a\u5e8f\u7ed8\u5236\u5177\u6709\u900f\u660e\u5ea6\u7684\u7269\u4f53\uff08\u5e94\u5148\u7ed8\u5236\u8f83\u8fdc\u7269\u4f53\uff09\u3002","title":"\u900f\u660e\u7eb9\u7406\u7b80\u4ecb"},{"location":"08-camera/","text":"\u6444\u50cf\u673a\uff08Camera\uff09 \u672c\u7ae0\u4e2d\u6211\u4eec\u5c06\u5b66\u4e60\u5982\u4f55\u5728\u6e32\u67d3\u7684\u4e09\u7ef4\u573a\u666f\u4e2d\u79fb\u52a8\u3002\u8be5\u529f\u80fd\u5c31\u50cf\u662f\u6709\u4e00\u53f0\u53ef\u4ee5\u5728\u4e09\u7ef4\u4e16\u754c\u4e2d\u8fd0\u52a8\u7684\u6444\u50cf\u673a\uff0c\u7136\u800c\u4e8b\u5b9e\u4e0a\u6444\u50cf\u673a\u5c31\u662f\u63cf\u8ff0\u8be5\u529f\u80fd\u7684\u672f\u8bed\u3002 \u4f46\u5982\u679c\u4f60\u5c1d\u8bd5\u5728OpenGL\u5bfb\u627e\u6444\u50cf\u673a\u529f\u80fd\uff0c\u4f60\u4f1a\u53d1\u73b0\u6ca1\u6709\u6444\u50cf\u673a\u8fd9\u4e2a\u6982\u5ff5\uff0c\u6362\u53e5\u8bdd\u8bf4\uff0c\u6444\u50cf\u673a\u4e00\u76f4\u662f\u56fa\u5b9a\u5728\u5c4f\u5e55\u4e2d\u5fc3\u7684\u4ee5(0, 0, 0)\u4e3a\u4e2d\u5fc3\u70b9\u7684\u4f4d\u7f6e\u3002 \u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u6a21\u62df\u51fa\u4e00\u4e2a\u53ef\u4ee5\u5728\u4e09\u7ef4\u7a7a\u95f4\u4e2d\u79fb\u52a8\u7684\u6444\u50cf\u3002\u4f46\u8981\u600e\u4e48\u505a\u5462\uff1f\u6444\u50cf\u673a\u662f\u4e0d\u80fd\u79fb\u52a8\u7684\uff0c\u56e0\u6b64\u6211\u4eec\u5fc5\u987b\u8981\u79fb\u52a8\u4e16\u754c\u4e2d\u7684\u5168\u90e8\u7269\u4f53\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5982\u679c\u79fb\u52a8\u4e0d\u4e86\u6444\u50cf\u673a\u5c31\u79fb\u52a8\u6574\u4e2a\u4e16\u754c\u3002 \u5047\u8bbe\u6444\u50cf\u673a\u4ece(Cx, Cy, Cz)\u6cbf\u7740Z\u8f74\u79fb\u52a8\u5230(Cx, Cy, Cz+dz)\uff0c\u4ece\u800c\u9760\u8fd1\u5728(Ox, Oy, Oz)\u653e\u7f6e\u7684\u7269\u4f53\u3002 \u6211\u4eec\u5b9e\u9645\u4e0a\u505a\u7684\u662f\u5c06\u7269\u4f53\uff08\u5728\u4e09\u7ef4\u7a7a\u95f4\u4e2d\u7684\u6240\u6709\u7269\u4f53\uff09\u6309\u6444\u50cf\u673a\u5e94\u79fb\u52a8\u7684\u76f8\u53cd\u65b9\u5411\u79fb\u52a8\u3002\u5176\u5b9e\u7269\u4f53\u5c31\u50cf\u662f\u653e\u5728\u8dd1\u6b65\u673a\u4e0a\u4e00\u6837\u5411\u540e\u9000\u3002 \u6444\u50cf\u673a\u53ef\u4ee5\u6cbf\u7740\u4e09\u4e2a\u8f74\uff08X\u3001Y\u548cZ\uff09\u79fb\u52a8\uff0c\u4e5f\u53ef\u4ee5\u7ed5\u7740\u5b83\u4eec\u65cb\u8f6c\uff08\u7ffb\u6eda\uff08Roll\uff09\u3001\u4fef\u4ef0\uff08Pitch\uff09\u548c\u504f\u822a\uff08Yaw\uff09\uff09\u3002 \u57fa\u672c\u4e0a\u8981\u505a\u7684\u5c31\u662f\u8ba9\u79fb\u52a8\u548c\u65cb\u8f6c\u5e94\u7528\u4e8e\u4e09\u7ef4\u4e16\u754c\u5168\u90e8\u7269\u4f53\u3002\u90a3\u8981\u600e\u4e48\u505a\u5462\uff1f\u7b54\u6848\u662f\u5e94\u7528\u53e6\u4e00\u79cd\u53d8\u6362\uff0c\u8be5\u53d8\u6362\u5c06\u6240\u6709\u7269\u4f53\u7684\u6240\u6709\u9876\u70b9\u6309\u6444\u50cf\u673a\u79fb\u52a8\u7684\u76f8\u53cd\u65b9\u5411\u5e73\u79fb\uff0c\u518d\u6839\u636e\u6444\u50cf\u673a\u7684\u65cb\u8f6c\u6765\u65cb\u8f6c\u5b83\u4eec\u3002\u5f53\u7136\uff0c\u8fd9\u5c06\u7528\u5230\u53e6\u4e00\u4e2a\u77e9\u9635\uff0c\u5373\u6240\u8c13\u7684\u89c2\u5bdf\u77e9\u9635\uff08View Matrix\uff09\u6765\u5b8c\u6210\u3002\u8fd9\u4e2a\u77e9\u9635\u9996\u5148\u8fdb\u884c\u5e73\u79fb\uff0c\u7136\u540e\u6cbf\u7740\u8f74\u7ebf\u8fdb\u884c\u65cb\u8f6c\u3002 \u6765\u770b\u770b\u5982\u4f55\u6784\u9020\u8fd9\u4e2a\u77e9\u9635\u3002\u5982\u679c\u4f60\u60f3\u8d77\u53d8\u6362\u4e00\u7ae0\uff08\u7b2c6\u7ae0\uff09\uff0c\u5176\u4e2d\u7684\u53d8\u6362\u65b9\u7a0b\u5982\u4e0b\u6240\u793a\uff1a \\begin{array}{lcl} Transf & = & \\lbrack \u6295\u5f71\u77e9\u9635 \\rbrack \\cdot \\lbrack \u4f4d\u79fb\u77e9\u9635 \\rbrack \\cdot \\lbrack \u65cb\u8f6c\u77e9\u9635 \\rbrack \\cdot \\lbrack \u7f29\u653e\u77e9\u9635 \\rbrack \\\\ & = & \\lbrack \u6295\u5f71\u77e9\u9635 \\rbrack \\cdot \\lbrack \u4e16\u754c\u77e9\u9635 \\rbrack \\end{array} \u89c2\u5bdf\u77e9\u9635\u5e94\u5728\u5e94\u7528\u6295\u5f71\u77e9\u9635\u4e4b\u524d\u5e94\u7528\uff0c\u56e0\u6b64\u6211\u4eec\u7684\u65b9\u7a0b\u5e94\u5982\u4e0b\u6240\u793a\uff1a \\begin{array}{lcl} Transf & = & \\lbrack \u6295\u5f71\u77e9\u9635 \\rbrack \\cdot \\lbrack \u89c2\u5bdf\u77e9\u9635 \\rbrack \\cdot \\lbrack \u4f4d\u79fb\u77e9\u9635 \\rbrack \\cdot \\lbrack \u65cb\u8f6c\u77e9\u9635 \\rbrack \\cdot \\lbrack \u7f29\u653e\u77e9\u9635 \\rbrack \\\\ & = & \\lbrack \u6295\u5f71\u77e9\u9635 \\rbrack \\cdot \\lbrack \u89c2\u5bdf\u77e9\u9635 \\rbrack \\cdot \\lbrack \u4e16\u754c\u77e9\u9635 \\rbrack \\end{array} \u73b0\u5728\u6709\u4e09\u4e2a\u77e9\u9635\u4e86\uff0c\u6211\u4eec\u5e94\u7a0d\u5fae\u601d\u8003\u4e00\u4e0b\u8fd9\u4e9b\u77e9\u9635\u7684\u751f\u547d\u5468\u671f\u3002\u5728\u6e38\u620f\u8fd0\u884c\u65f6\uff0c\u6295\u5f71\u77e9\u9635\u5e94\u8be5\u4e0d\u4f1a\u6709\u592a\u591a\u7684\u53d8\u5316\uff0c\u6700\u574f\u7684\u60c5\u51b5\u4e0b\uff0c\u6bcf\u6b21\u6e32\u67d3\u53ef\u80fd\u6539\u53d8\u4e00\u6b21\u3002\u5982\u679c\u6444\u50cf\u673a\u79fb\u52a8\uff0c\u5219\u89c2\u5bdf\u77e9\u9635\u5728\u6bcf\u6b21\u6e32\u67d3\u65f6\u53ef\u80fd\u6539\u53d8\u4e00\u6b21\u3002\u6bcf\u6e32\u67d3\u4e00\u4e2a GameItem \u5b9e\u4f8b\u4e16\u754c\u77e9\u9635\u90fd\u4f1a\u6539\u53d8\u4e00\u6b21\uff0c\u4e00\u6b21\u6bcf\u6b21\u6e32\u67d3\u8c03\u7528\u90fd\u4f1a\u6539\u53d8\u591a\u6b21\u3002 \u56e0\u6b64\u6211\u4eec\u5e94\u8be5\u5c06\u591a\u5c11\u77e9\u9635\u4f20\u9012\u5230\u9876\u70b9\u7740\u8272\u5668\u5462\uff1f\u4f60\u53ef\u80fd\u4f1a\u770b\u5230\u4e00\u4e9b\u4ee3\u7801\uff0c\u4e3a\u4e09\u4e2a\u77e9\u9635\u5206\u522b\u5b9a\u4e49\u4e00\u4e2aUniform\uff0c\u4f46\u7406\u8bba\u4e0a\u6700\u6709\u6548\u7684\u65b9\u6cd5\u662f\u5c06\u6295\u5f71\u77e9\u9635\u548c\u89c2\u5bdf\u77e9\u9635\u7ec4\u5408\uff0c\u5c06\u5176\u79f0\u4e3a pv \u77e9\u9635\uff0c\u5e76\u4f20\u9012 world \u548c pv \u77e9\u9635\u5230\u7740\u8272\u5668\u3002\u8fd9\u6837\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e16\u754c\u5750\u6807\uff0c\u5e76\u53ef\u4ee5\u907f\u514d\u4e00\u4e9b\u989d\u5916\u7684\u8fd0\u7b97\u3002 \u4f46\u5b9e\u9645\u4e0a\uff0c\u6700\u65b9\u4fbf\u7684\u65b9\u6cd5\u662f\u5c06\u89c2\u5bdf\u77e9\u9635\u4e0e\u4e16\u754c\u77e9\u9635\u7ec4\u5408\u3002\u4e3a\u4ec0\u4e48\u8fd9\u6837\uff1f\u56e0\u4e3a\u8981\u8bb0\u4f4f\u6574\u4e2a\u6444\u50cf\u673a\u6982\u5ff5\u5c31\u662f\u4e2a\u9a97\u5c40\uff0c\u6211\u4eec\u6240\u505a\u7684\u662f\u79fb\u52a8\u6574\u4e2a\u4e16\u754c\u6765\u6a21\u62df\u6444\u50cf\u673a\u7684\u4f4d\u79fb\uff0c\u5e76\u4ec5\u663e\u793a\u4e00\u5c0f\u90e8\u5206\u7684\u4e09\u7ef4\u4e16\u754c\u3002\u56e0\u6b64\uff0c\u5982\u679c\u76f4\u63a5\u5904\u7406\u4e16\u754c\u5750\u6807\uff0c\u53ef\u80fd\u4f1a\u8ba9\u8fdc\u79bb\u539f\u70b9\u7684\u4e16\u754c\u5750\u6807\u9047\u5230\u4e00\u4e9b\u7cbe\u5ea6\u95ee\u9898\u3002\u5982\u679c\u5728\u6240\u8c13\u7684\u6444\u50cf\u673a\u7a7a\u95f4\u4e2d\u5904\u7406\uff0c\u6211\u4eec\u5c06\u5904\u7406\u7684\u70b9\u867d\u7136\u8fdc\u79bb\u4e16\u754c\u539f\u70b9\uff0c\u4f46\u4e5f\u9760\u8fd1\u6444\u50cf\u673a\u3002\u53ef\u4ee5\u5c06\u89c2\u5bdf\u77e9\u9635\u548c\u4e16\u754c\u77e9\u9635\u7ec4\u5408\u7684\u77e9\u9635\u79f0\u4e3a\u6a21\u578b\u89c2\u5bdf\u77e9\u9635\uff08Model View Matrix\uff09\u3002 \u8ba9\u6211\u4eec\u5f00\u59cb\u4fee\u6539\u4ee3\u7801\u4ee5\u652f\u6301\u6444\u50cf\u673a\u5427\u3002\u5148\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a Camera \u7684\u7c7b\uff0c\u5b83\u5c06\u50a8\u5b58\u6444\u50cf\u673a\u7684\u4f4d\u7f6e\u4e0e\u65cb\u8f6c\u72b6\u6001\u3002\u8be5\u7c7b\u5c06\u63d0\u4f9b\u8bbe\u7f6e\u4f4d\u7f6e\u6216\u65cb\u8f6c\u72b6\u6001\u7684\u65b9\u6cd5\uff08 setPosition \u6216 setRotation \uff09\uff0c\u6216\u5728\u5f53\u524d\u72b6\u6001\u4e0b\u7528\u504f\u79fb\u91cf\u66f4\u65b0\u8fd9\u4e9b\u503c\u7684\u65b9\u6cd5\uff08 movePosition \u6216 moveRotation \uff09\u3002 package org.lwjglb.engine.graph; import org.joml.Vector3f; public class Camera { private final Vector3f position; private final Vector3f rotation; public Camera() { position = new Vector3f(0, 0, 0); rotation = new Vector3f(0, 0, 0); } public Camera(Vector3f position, Vector3f rotation) { this.position = position; this.rotation = rotation; } public Vector3f getPosition() { return position; } public void setPosition(float x, float y, float z) { position.x = x; position.y = y; position.z = z; } public void movePosition(float offsetX, float offsetY, float offsetZ) { if ( offsetZ != 0 ) { position.x += (float)Math.sin(Math.toRadians(rotation.y)) * -1.0f * offsetZ; position.z += (float)Math.cos(Math.toRadians(rotation.y)) * offsetZ; } if ( offsetX != 0) { position.x += (float)Math.sin(Math.toRadians(rotation.y - 90)) * -1.0f * offsetX; position.z += (float)Math.cos(Math.toRadians(rotation.y - 90)) * offsetX; } position.y += offsetY; } public Vector3f getRotation() { return rotation; } public void setRotation(float x, float y, float z) { rotation.x = x; rotation.y = y; rotation.z = z; } public void moveRotation(float offsetX, float offsetY, float offsetZ) { rotation.x += offsetX; rotation.y += offsetY; rotation.z += offsetZ; } } \u63a5\u4e0b\u6765\u5728 Transformation \u4e2d\uff0c\u5c06\u5b9a\u4e49\u4e00\u4e2a\u65b0\u77e9\u9635\u6765\u50a8\u5b58\u89c2\u5bdf\u77e9\u9635\u3002 private final Matrix4f viewMatrix; \u6211\u4eec\u8981\u63d0\u4f9b\u4e00\u4e2a\u66f4\u65b0\u8fd9\u4e2a\u503c\u7684\u65b9\u6cd5\u3002\u4e0e\u6295\u5f71\u77e9\u9635\u76f8\u4f3c\uff0c\u8fd9\u4e2a\u77e9\u9635\u5bf9\u4e8e\u6e32\u67d3\u5468\u671f\u4e2d\u6e32\u67d3\u7684\u6240\u6709\u7269\u4f53\u90fd\u662f\u76f8\u540c\u7684\u3002 public Matrix4f getViewMatrix(Camera camera) { Vector3f cameraPos = camera.getPosition(); Vector3f rotation = camera.getRotation(); viewMatrix.identity(); // \u9996\u5148\u8fdb\u884c\u65cb\u8f6c\uff0c\u4f7f\u6444\u50cf\u673a\u5728\u5176\u4f4d\u7f6e\u4e0a\u65cb\u8f6c viewMatrix.rotate((float)Math.toRadians(rotation.x), new Vector3f(1, 0, 0)) .rotate((float)Math.toRadians(rotation.y), new Vector3f(0, 1, 0)); // \u7136\u540e\u505a\u4f4d\u79fb viewMatrix.translate(-cameraPos.x, -cameraPos.y, -cameraPos.z); return viewMatrix; } \u5982\u4f60\u6240\u89c1\uff0c\u6211\u4eec\u9996\u5148\u9700\u8981\u505a\u65cb\u8f6c\uff0c\u7136\u540e\u4f4d\u79fb\u3002\u5982\u679c\u64cd\u4f5c\u987a\u5e8f\u76f8\u53cd\uff0c\u6211\u4eec\u5c06\u4e0d\u4f1a\u6cbf\u7740\u6444\u50cf\u673a\u4f4d\u7f6e\u65cb\u8f6c\uff0c\u800c\u662f\u6cbf\u7740\u5750\u6807\u539f\u70b9\u65cb\u8f6c\u3002\u8bf7\u6ce8\u610f\uff0c\u5728 Camera \u7c7b\u7684 movePosition \u65b9\u6cd5\u4e2d\uff0c\u6211\u4eec\u4e0d\u53ea\u662f\u7b80\u5355\u5730\u589e\u52a0\u6444\u50cf\u673a\u4f4d\u7f6e\u7684\u504f\u79fb\u91cf\u3002\u6211\u4eec\u8fd8\u8003\u8651\u4e86\u6cbfY\u8f74\u7684\u65cb\u8f6c\uff0c\u4e5f\u5c31\u662f\u504f\u822a\uff0c\u4ee5\u4fbf\u8ba1\u7b97\u6700\u7ec8\u4f4d\u7f6e\u3002\u5982\u679c\u53ea\u662f\u901a\u8fc7\u504f\u79fb\u6765\u589e\u52a0\u6444\u50cf\u673a\u7684\u4f4d\u7f6e\uff0c\u6444\u50cf\u673a\u5c31\u4e0d\u4f1a\u671d\u7740\u5b83\u6240\u671d\u5411\u7684\u65b9\u5411\u79fb\u52a8\u3002 \u9664\u4e86\u4e0a\u8ff0\u6240\u8bf4\u7684\uff0c\u6211\u4eec\u73b0\u5728\u8fd8\u6ca1\u6709\u5f97\u5230\u4e00\u4e2a\u53ef\u4ee5\u5b8c\u5168\u81ea\u7531\u79fb\u52a8\u7684\u6444\u50cf\u673a\uff08\u4f8b\u5982\uff0c\u5982\u679c\u6211\u4eec\u6cbf\u7740X\u8f74\u65cb\u8f6c\uff0c\u5f53\u5411\u524d\u79fb\u52a8\u65f6\uff0c\u6444\u50cf\u673a\u4e0d\u4f1a\u5728\u7a7a\u95f4\u4e2d\u5411\u4e0a\u6216\u5411\u4e0b\u79fb\u52a8\uff09\uff0c\u8fd9\u5c06\u5728\u6b64\u540e\u7684\u7ae0\u8282\u4e2d\u5b8c\u6210\uff0c\u56e0\u4e3a\u8fd9\u6709\u70b9\u590d\u6742\u3002 \u6700\u540e\uff0c\u6211\u4eec\u5c06\u79fb\u9664\u4e4b\u524d\u7684 getWorldMatrix \u65b9\u6cd5\uff0c\u5e76\u6dfb\u52a0\u4e00\u4e2a\u540d\u4e3a getModelViewMatrix \u7684\u65b0\u65b9\u6cd5\u3002 public Matrix4f getModelViewMatrix(GameItem gameItem, Matrix4f viewMatrix) { Vector3f rotation = gameItem.getRotation(); modelViewMatrix.set(viewMatrix).translate(gameItem.getPosition()). rotateX((float)Math.toRadians(-rotation.x)). rotateY((float)Math.toRadians(-rotation.y)). rotateZ((float)Math.toRadians(-rotation.z)). scale(gameItem.getScale()); return modelViewMatrix; } \u6bcf\u4e2a GameItem \u5b9e\u4f8b\u90fd\u5c06\u8c03\u7528\u4e00\u6b21 getModelViewMatrix \u65b9\u6cd5\u3002 Renderer \u7c7b\u7684 render \u65b9\u6cd5\u4e2d\uff0c\u6211\u4eec\u53ea\u9700\u8981\u6839\u636e\u6444\u50cf\u673a\u7684\u503c\uff0c\u5728\u6295\u5f71\u77e9\u9635\u66f4\u65b0\u4e4b\u540e\u66f4\u65b0\u89c2\u5bdf\u77e9\u9635\u3002 // \u66f4\u65b0\u6295\u5f71\u77e9\u9635 Matrix4f projectionMatrix = transformation.getProjectionMatrix(FOV, window.getWidth(), window.getHeight(), Z_NEAR, Z_FAR); shaderProgram.setUniform(\"projectionMatrix\", projectionMatrix); // \u66f4\u65b0\u89c2\u5bdf\u77e9\u9635 Matrix4f viewMatrix = transformation.getViewMatrix(camera); shaderProgram.setUniform(\"texture_sampler\", 0); // \u6e32\u67d3\u6bcf\u4e2a\u6e38\u620f\u9879 for(GameItem gameItem : gameItems) { // \u4e3a\u8be5\u9879\u8bbe\u7f6e\u6a21\u578b\u89c2\u5bdf\u77e9\u9635 Matrix4f modelViewMatrix = transformation.getModelViewMatrix(gameItem, viewMatrix); shaderProgram.setUniform(\"modelViewMatrix\", modelViewMatrix); // \u6e32\u67d3\u8be5\u6e38\u620f\u9879\u7684\u7f51\u683c gameItem.getMesh().render(); } \u8fd9\u5c31\u662f\u5b9e\u73b0\u6444\u50cf\u673a\u6982\u5ff5\u7684\u57fa\u672c\u4ee3\u7801\uff0c\u73b0\u5728\u9700\u8981\u4f7f\u7528\u5b83\u3002\u6211\u4eec\u53ef\u4ee5\u4fee\u6539\u8f93\u5165\u5904\u7406\u548c\u66f4\u65b0\u6444\u50cf\u673a\u7684\u65b9\u5f0f\uff0c\u5c06\u8bbe\u7f6e\u5982\u4e0b\u6309\u952e\uff1a \u201cA\u201d\u548c\u201cD\u201d\u952e\u4f7f\u6444\u50cf\u673a\u5de6\u53f3\uff08X\u8f74\uff09\u79fb\u52a8\u3002 \u201cW\u201d\u548c\u201cS\u201d\u952e\u4f7f\u6444\u50cf\u673a\u524d\u540e\uff08Z\u8f74\uff09\u79fb\u52a8\u3002 \u201cZ\u201d\u548c\u201cX\u201d\u952e\u4f7f\u6444\u50cf\u673a\u4e0a\u4e0b\uff08Y\u8f74\uff09\u79fb\u52a8\u3002 \u5f53\u9f20\u6807\u6309\u4e0b\u53f3\u952e\u65f6\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u9f20\u6807\u4f4d\u7f6e\u6cbfX\u548cY\u8f74\u65cb\u8f6c\u6444\u50cf\u673a\u3002 \u5982\u4f60\u6240\u89c1\uff0c\u6211\u4eec\u5c06\u9996\u6b21\u4f7f\u7528\u9f20\u6807\uff0c\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a MouseInput \u7684\u65b0\u7c7b\uff0c\u8be5\u7c7b\u5c06\u5c01\u88c5\u9f20\u6807\u8bbf\u95ee\u3002\u8be5\u7c7b\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a package org.lwjglb.engine; import org.joml.Vector2d; import org.joml.Vector2f; import static org.lwjgl.glfw.GLFW.*; public class MouseInput { private final Vector2d previousPos; private final Vector2d currentPos; private final Vector2f displVec; private boolean inWindow = false; private boolean leftButtonPressed = false; private boolean rightButtonPressed = false; public MouseInput() { previousPos = new Vector2d(-1, -1); currentPos = new Vector2d(0, 0); displVec = new Vector2f(); } public void init(Window window) { glfwSetCursorPosCallback(window.getWindowHandle(), (windowHandle, xpos, ypos) -> { currentPos.x = xpos; currentPos.y = ypos; }); glfwSetCursorEnterCallback(window.getWindowHandle(), (windowHandle, entered) -> { inWindow = entered; }); glfwSetMouseButtonCallback(window.getWindowHandle(), (windowHandle, button, action, mode) -> { leftButtonPressed = button == GLFW_MOUSE_BUTTON_1 && action == GLFW_PRESS; rightButtonPressed = button == GLFW_MOUSE_BUTTON_2 && action == GLFW_PRESS; }); } public Vector2f getDisplVec() { return displVec; } public void input(Window window) { displVec.x = 0; displVec.y = 0; if (previousPos.x > 0 && previousPos.y > 0 && inWindow) { double deltax = currentPos.x - previousPos.x; double deltay = currentPos.y - previousPos.y; boolean rotateX = deltax != 0; boolean rotateY = deltay != 0; if (rotateX) { displVec.y = (float) deltax; } if (rotateY) { displVec.x = (float) deltay; } } previousPos.x = currentPos.x; previousPos.y = currentPos.y; } public boolean isLeftButtonPressed() { return leftButtonPressed; } public boolean isRightButtonPressed() { return rightButtonPressed; } } MouseInput \u7c7b\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5e94\u5728\u5728\u521d\u59cb\u5316\u9636\u6bb5\u8c03\u7528\u7684 init \u65b9\u6cd5\uff0c\u5e76\u6ce8\u518c\u4e00\u7ec4\u56de\u8c03\u4ee5\u5904\u7406\u9f20\u6807\u4e8b\u4ef6\uff1a glfwSetCursorPosCallback \uff1a\u6ce8\u518c\u4e00\u4e2a\u56de\u8c03\uff0c\u8be5\u56de\u8c03\u5c06\u5728\u9f20\u6807\u79fb\u52a8\u65f6\u88ab\u8c03\u7528\u3002 glfwSetCursorEnterCallback \uff1a\u6ce8\u518c\u4e00\u4e2a\u56de\u8c03\uff0c\u8be5\u56de\u8c03\u5c06\u5728\u9f20\u6807\u8fdb\u5165\u7a97\u53e3\u65f6\u88ab\u8c03\u7528\u3002\u5373\u4f7f\u9f20\u6807\u4e0d\u5728\u7a97\u53e3\u5185\uff0c\u6211\u4eec\u4e5f\u4f1a\u6536\u5230\u9f20\u6807\u4e8b\u4ef6\u3002\u6211\u4eec\u4f7f\u7528\u8fd9\u4e2a\u56de\u8c03\u6765\u786e\u8ba4\u9f20\u6807\u8fdb\u5165\u7a97\u53e3\u3002 glfwSetMouseButtonCallback \uff1a\u6ce8\u518c\u4e00\u4e2a\u56de\u8c03\uff0c\u8be5\u56de\u8c03\u5728\u6309\u4e0b\u9f20\u6807\u6309\u94ae\u65f6\u88ab\u8c03\u7528\u3002 MouseInput \u7c7b\u63d0\u4f9b\u4e86\u4e00\u4e2a input \u65b9\u6cd5\uff0c\u5728\u5904\u7406\u6e38\u620f\u8f93\u5165\u65f6\u5e94\u8c03\u7528\u8be5\u65b9\u6cd5\u3002\u8be5\u65b9\u6cd5\u8ba1\u7b97\u9f20\u6807\u4ece\u4e0a\u4e00\u4e2a\u4f4d\u7f6e\u7684\u4f4d\u79fb\uff0c\u5e76\u5c06\u5176\u5b58\u50a8\u5230 Vector2f \u7c7b\u578b\u7684 displVec \u53d8\u91cf\u4e2d\uff0c\u4ee5\u4fbf\u6e38\u620f\u4f7f\u7528\u5b83\u3002 MouseInput \u7c7b\u5c06\u5728 GameEngine \u7c7b\u4e2d\u5b9e\u4f8b\u5316\uff0c\u5e76\u4e14\u5c06\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9\u6e38\u620f\u5b9e\u73b0\u7684 init \u548c update \u65b9\u6cd5\uff08\u56e0\u6b64\u9700\u8981\u76f8\u5e94\u5730\u66f4\u6539 IGameLogic \u63a5\u53e3\uff09\u3002 void input(Window window, MouseInput mouseInput); void update(float interval, MouseInput mouseInput); \u9f20\u6807\u8f93\u5165\u5c06\u5728 GameEngine \u7c7b\u7684 input \u65b9\u6cd5\u4e2d\u88ab\u5904\u7406\uff0c\u800c\u6700\u7ec8\u7684\u63a7\u5236\u5c06\u4ea4\u7531\u6e38\u620f\u5b9e\u73b0\u3002 protected void input() { mouseInput.input(window); gameLogic.input(window, mouseInput); } \u73b0\u5728\u5df2\u7ecf\u51c6\u5907\u597d\u4fee\u6539 DummyGame \u7c7b\u6765\u5904\u7406\u952e\u76d8\u548c\u9f20\u6807\u8f93\u5165\u4e86\u3002\u8be5\u7c7b\u7684\u8f93\u5165\u65b9\u6cd5\u5982\u4e0b\u6240\u793a\uff1a @Override public void input(Window window, MouseInput mouseInput) { cameraInc.set(0, 0, 0); if (window.isKeyPressed(GLFW_KEY_W)) { cameraInc.z = -1; } else if (window.isKeyPressed(GLFW_KEY_S)) { cameraInc.z = 1; } if (window.isKeyPressed(GLFW_KEY_A)) { cameraInc.x = -1; } else if (window.isKeyPressed(GLFW_KEY_D)) { cameraInc.x = 1; } if (window.isKeyPressed(GLFW_KEY_Z)) { cameraInc.y = -1; } else if (window.isKeyPressed(GLFW_KEY_X)) { cameraInc.y = 1; } } \u8fd9\u53ea\u662f\u66f4\u65b0\u4e00\u4e2a\u540d\u4e3a cameraInc \u7684 Vector3f \u53d8\u91cf\uff0c\u5b83\u50a8\u5b58\u4e86\u6444\u50cf\u673a\u5e94\u7528\u7684\u4f4d\u79fb\u3002 DummyGame \u7c7b\u7684 update \u65b9\u6cd5\u5c06\u6839\u636e\u5904\u7406\u7684\u952e\u76d8\u548c\u9f20\u6807\u4e8b\u4ef6\uff0c\u4fee\u6539\u6444\u50cf\u673a\u7684\u4f4d\u7f6e\u548c\u65cb\u8f6c\u3002 @Override public void update(float interval, MouseInput mouseInput) { // \u66f4\u65b0\u6444\u50cf\u673a\u4f4d\u7f6e camera.movePosition(cameraInc.x * CAMERA_POS_STEP, cameraInc.y * CAMERA_POS_STEP, cameraInc.z * CAMERA_POS_STEP); // \u57fa\u4e8e\u9f20\u6807\u66f4\u65b0\u6444\u50cf\u673a if (mouseInput.isRightButtonPressed()) { Vector2f rotVec = mouseInput.getDisplVec(); camera.moveRotation(rotVec.x * MOUSE_SENSITIVITY, rotVec.y * MOUSE_SENSITIVITY, 0); } } \u73b0\u5728\u53ef\u4ee5\u6dfb\u52a0\u66f4\u591a\u7684\u7acb\u65b9\u4f53\u5230\u4e16\u754c\u4e2d\uff0c\u7f29\u653e\u5b83\u4eec\uff0c\u5c06\u5b83\u4eec\u8bbe\u7f6e\u5728\u7279\u5b9a\u4f4d\u7f6e\uff0c\u5e76\u4f7f\u7528\u65b0\u6444\u50cf\u673a\u6e38\u73a9\u3002\u5982\u4f60\u6240\u89c1\uff0c\u6240\u6709\u7684\u7acb\u65b9\u4f53\u5171\u4eab\u76f8\u540c\u7684\u7f51\u683c\u3002 GameItem gameItem1 = new GameItem(mesh); gameItem1.setScale(0.5f); gameItem1.setPosition(0, 0, -2); GameItem gameItem2 = new GameItem(mesh); gameItem2.setScale(0.5f); gameItem2.setPosition(0.5f, 0.5f, -2); GameItem gameItem3 = new GameItem(mesh); gameItem3.setScale(0.5f); gameItem3.setPosition(0, 0, -2.5f); GameItem gameItem4 = new GameItem(mesh); gameItem4.setScale(0.5f); gameItem4.setPosition(0.5f, 0, -2.5f); gameItems = new GameItem[]{gameItem1, gameItem2, gameItem3, gameItem4}; \u4f60\u4f1a\u5f97\u5230\u5982\u4e0b\u6240\u793a\u7684\u7ed3\u679c\u3002","title":"\u6444\u50cf\u673a"},{"location":"08-camera/#camera","text":"\u672c\u7ae0\u4e2d\u6211\u4eec\u5c06\u5b66\u4e60\u5982\u4f55\u5728\u6e32\u67d3\u7684\u4e09\u7ef4\u573a\u666f\u4e2d\u79fb\u52a8\u3002\u8be5\u529f\u80fd\u5c31\u50cf\u662f\u6709\u4e00\u53f0\u53ef\u4ee5\u5728\u4e09\u7ef4\u4e16\u754c\u4e2d\u8fd0\u52a8\u7684\u6444\u50cf\u673a\uff0c\u7136\u800c\u4e8b\u5b9e\u4e0a\u6444\u50cf\u673a\u5c31\u662f\u63cf\u8ff0\u8be5\u529f\u80fd\u7684\u672f\u8bed\u3002 \u4f46\u5982\u679c\u4f60\u5c1d\u8bd5\u5728OpenGL\u5bfb\u627e\u6444\u50cf\u673a\u529f\u80fd\uff0c\u4f60\u4f1a\u53d1\u73b0\u6ca1\u6709\u6444\u50cf\u673a\u8fd9\u4e2a\u6982\u5ff5\uff0c\u6362\u53e5\u8bdd\u8bf4\uff0c\u6444\u50cf\u673a\u4e00\u76f4\u662f\u56fa\u5b9a\u5728\u5c4f\u5e55\u4e2d\u5fc3\u7684\u4ee5(0, 0, 0)\u4e3a\u4e2d\u5fc3\u70b9\u7684\u4f4d\u7f6e\u3002 \u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u6a21\u62df\u51fa\u4e00\u4e2a\u53ef\u4ee5\u5728\u4e09\u7ef4\u7a7a\u95f4\u4e2d\u79fb\u52a8\u7684\u6444\u50cf\u3002\u4f46\u8981\u600e\u4e48\u505a\u5462\uff1f\u6444\u50cf\u673a\u662f\u4e0d\u80fd\u79fb\u52a8\u7684\uff0c\u56e0\u6b64\u6211\u4eec\u5fc5\u987b\u8981\u79fb\u52a8\u4e16\u754c\u4e2d\u7684\u5168\u90e8\u7269\u4f53\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5982\u679c\u79fb\u52a8\u4e0d\u4e86\u6444\u50cf\u673a\u5c31\u79fb\u52a8\u6574\u4e2a\u4e16\u754c\u3002 \u5047\u8bbe\u6444\u50cf\u673a\u4ece(Cx, Cy, Cz)\u6cbf\u7740Z\u8f74\u79fb\u52a8\u5230(Cx, Cy, Cz+dz)\uff0c\u4ece\u800c\u9760\u8fd1\u5728(Ox, Oy, Oz)\u653e\u7f6e\u7684\u7269\u4f53\u3002 \u6211\u4eec\u5b9e\u9645\u4e0a\u505a\u7684\u662f\u5c06\u7269\u4f53\uff08\u5728\u4e09\u7ef4\u7a7a\u95f4\u4e2d\u7684\u6240\u6709\u7269\u4f53\uff09\u6309\u6444\u50cf\u673a\u5e94\u79fb\u52a8\u7684\u76f8\u53cd\u65b9\u5411\u79fb\u52a8\u3002\u5176\u5b9e\u7269\u4f53\u5c31\u50cf\u662f\u653e\u5728\u8dd1\u6b65\u673a\u4e0a\u4e00\u6837\u5411\u540e\u9000\u3002 \u6444\u50cf\u673a\u53ef\u4ee5\u6cbf\u7740\u4e09\u4e2a\u8f74\uff08X\u3001Y\u548cZ\uff09\u79fb\u52a8\uff0c\u4e5f\u53ef\u4ee5\u7ed5\u7740\u5b83\u4eec\u65cb\u8f6c\uff08\u7ffb\u6eda\uff08Roll\uff09\u3001\u4fef\u4ef0\uff08Pitch\uff09\u548c\u504f\u822a\uff08Yaw\uff09\uff09\u3002 \u57fa\u672c\u4e0a\u8981\u505a\u7684\u5c31\u662f\u8ba9\u79fb\u52a8\u548c\u65cb\u8f6c\u5e94\u7528\u4e8e\u4e09\u7ef4\u4e16\u754c\u5168\u90e8\u7269\u4f53\u3002\u90a3\u8981\u600e\u4e48\u505a\u5462\uff1f\u7b54\u6848\u662f\u5e94\u7528\u53e6\u4e00\u79cd\u53d8\u6362\uff0c\u8be5\u53d8\u6362\u5c06\u6240\u6709\u7269\u4f53\u7684\u6240\u6709\u9876\u70b9\u6309\u6444\u50cf\u673a\u79fb\u52a8\u7684\u76f8\u53cd\u65b9\u5411\u5e73\u79fb\uff0c\u518d\u6839\u636e\u6444\u50cf\u673a\u7684\u65cb\u8f6c\u6765\u65cb\u8f6c\u5b83\u4eec\u3002\u5f53\u7136\uff0c\u8fd9\u5c06\u7528\u5230\u53e6\u4e00\u4e2a\u77e9\u9635\uff0c\u5373\u6240\u8c13\u7684\u89c2\u5bdf\u77e9\u9635\uff08View Matrix\uff09\u6765\u5b8c\u6210\u3002\u8fd9\u4e2a\u77e9\u9635\u9996\u5148\u8fdb\u884c\u5e73\u79fb\uff0c\u7136\u540e\u6cbf\u7740\u8f74\u7ebf\u8fdb\u884c\u65cb\u8f6c\u3002 \u6765\u770b\u770b\u5982\u4f55\u6784\u9020\u8fd9\u4e2a\u77e9\u9635\u3002\u5982\u679c\u4f60\u60f3\u8d77\u53d8\u6362\u4e00\u7ae0\uff08\u7b2c6\u7ae0\uff09\uff0c\u5176\u4e2d\u7684\u53d8\u6362\u65b9\u7a0b\u5982\u4e0b\u6240\u793a\uff1a \\begin{array}{lcl} Transf & = & \\lbrack \u6295\u5f71\u77e9\u9635 \\rbrack \\cdot \\lbrack \u4f4d\u79fb\u77e9\u9635 \\rbrack \\cdot \\lbrack \u65cb\u8f6c\u77e9\u9635 \\rbrack \\cdot \\lbrack \u7f29\u653e\u77e9\u9635 \\rbrack \\\\ & = & \\lbrack \u6295\u5f71\u77e9\u9635 \\rbrack \\cdot \\lbrack \u4e16\u754c\u77e9\u9635 \\rbrack \\end{array} \u89c2\u5bdf\u77e9\u9635\u5e94\u5728\u5e94\u7528\u6295\u5f71\u77e9\u9635\u4e4b\u524d\u5e94\u7528\uff0c\u56e0\u6b64\u6211\u4eec\u7684\u65b9\u7a0b\u5e94\u5982\u4e0b\u6240\u793a\uff1a \\begin{array}{lcl} Transf & = & \\lbrack \u6295\u5f71\u77e9\u9635 \\rbrack \\cdot \\lbrack \u89c2\u5bdf\u77e9\u9635 \\rbrack \\cdot \\lbrack \u4f4d\u79fb\u77e9\u9635 \\rbrack \\cdot \\lbrack \u65cb\u8f6c\u77e9\u9635 \\rbrack \\cdot \\lbrack \u7f29\u653e\u77e9\u9635 \\rbrack \\\\ & = & \\lbrack \u6295\u5f71\u77e9\u9635 \\rbrack \\cdot \\lbrack \u89c2\u5bdf\u77e9\u9635 \\rbrack \\cdot \\lbrack \u4e16\u754c\u77e9\u9635 \\rbrack \\end{array} \u73b0\u5728\u6709\u4e09\u4e2a\u77e9\u9635\u4e86\uff0c\u6211\u4eec\u5e94\u7a0d\u5fae\u601d\u8003\u4e00\u4e0b\u8fd9\u4e9b\u77e9\u9635\u7684\u751f\u547d\u5468\u671f\u3002\u5728\u6e38\u620f\u8fd0\u884c\u65f6\uff0c\u6295\u5f71\u77e9\u9635\u5e94\u8be5\u4e0d\u4f1a\u6709\u592a\u591a\u7684\u53d8\u5316\uff0c\u6700\u574f\u7684\u60c5\u51b5\u4e0b\uff0c\u6bcf\u6b21\u6e32\u67d3\u53ef\u80fd\u6539\u53d8\u4e00\u6b21\u3002\u5982\u679c\u6444\u50cf\u673a\u79fb\u52a8\uff0c\u5219\u89c2\u5bdf\u77e9\u9635\u5728\u6bcf\u6b21\u6e32\u67d3\u65f6\u53ef\u80fd\u6539\u53d8\u4e00\u6b21\u3002\u6bcf\u6e32\u67d3\u4e00\u4e2a GameItem \u5b9e\u4f8b\u4e16\u754c\u77e9\u9635\u90fd\u4f1a\u6539\u53d8\u4e00\u6b21\uff0c\u4e00\u6b21\u6bcf\u6b21\u6e32\u67d3\u8c03\u7528\u90fd\u4f1a\u6539\u53d8\u591a\u6b21\u3002 \u56e0\u6b64\u6211\u4eec\u5e94\u8be5\u5c06\u591a\u5c11\u77e9\u9635\u4f20\u9012\u5230\u9876\u70b9\u7740\u8272\u5668\u5462\uff1f\u4f60\u53ef\u80fd\u4f1a\u770b\u5230\u4e00\u4e9b\u4ee3\u7801\uff0c\u4e3a\u4e09\u4e2a\u77e9\u9635\u5206\u522b\u5b9a\u4e49\u4e00\u4e2aUniform\uff0c\u4f46\u7406\u8bba\u4e0a\u6700\u6709\u6548\u7684\u65b9\u6cd5\u662f\u5c06\u6295\u5f71\u77e9\u9635\u548c\u89c2\u5bdf\u77e9\u9635\u7ec4\u5408\uff0c\u5c06\u5176\u79f0\u4e3a pv \u77e9\u9635\uff0c\u5e76\u4f20\u9012 world \u548c pv \u77e9\u9635\u5230\u7740\u8272\u5668\u3002\u8fd9\u6837\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e16\u754c\u5750\u6807\uff0c\u5e76\u53ef\u4ee5\u907f\u514d\u4e00\u4e9b\u989d\u5916\u7684\u8fd0\u7b97\u3002 \u4f46\u5b9e\u9645\u4e0a\uff0c\u6700\u65b9\u4fbf\u7684\u65b9\u6cd5\u662f\u5c06\u89c2\u5bdf\u77e9\u9635\u4e0e\u4e16\u754c\u77e9\u9635\u7ec4\u5408\u3002\u4e3a\u4ec0\u4e48\u8fd9\u6837\uff1f\u56e0\u4e3a\u8981\u8bb0\u4f4f\u6574\u4e2a\u6444\u50cf\u673a\u6982\u5ff5\u5c31\u662f\u4e2a\u9a97\u5c40\uff0c\u6211\u4eec\u6240\u505a\u7684\u662f\u79fb\u52a8\u6574\u4e2a\u4e16\u754c\u6765\u6a21\u62df\u6444\u50cf\u673a\u7684\u4f4d\u79fb\uff0c\u5e76\u4ec5\u663e\u793a\u4e00\u5c0f\u90e8\u5206\u7684\u4e09\u7ef4\u4e16\u754c\u3002\u56e0\u6b64\uff0c\u5982\u679c\u76f4\u63a5\u5904\u7406\u4e16\u754c\u5750\u6807\uff0c\u53ef\u80fd\u4f1a\u8ba9\u8fdc\u79bb\u539f\u70b9\u7684\u4e16\u754c\u5750\u6807\u9047\u5230\u4e00\u4e9b\u7cbe\u5ea6\u95ee\u9898\u3002\u5982\u679c\u5728\u6240\u8c13\u7684\u6444\u50cf\u673a\u7a7a\u95f4\u4e2d\u5904\u7406\uff0c\u6211\u4eec\u5c06\u5904\u7406\u7684\u70b9\u867d\u7136\u8fdc\u79bb\u4e16\u754c\u539f\u70b9\uff0c\u4f46\u4e5f\u9760\u8fd1\u6444\u50cf\u673a\u3002\u53ef\u4ee5\u5c06\u89c2\u5bdf\u77e9\u9635\u548c\u4e16\u754c\u77e9\u9635\u7ec4\u5408\u7684\u77e9\u9635\u79f0\u4e3a\u6a21\u578b\u89c2\u5bdf\u77e9\u9635\uff08Model View Matrix\uff09\u3002 \u8ba9\u6211\u4eec\u5f00\u59cb\u4fee\u6539\u4ee3\u7801\u4ee5\u652f\u6301\u6444\u50cf\u673a\u5427\u3002\u5148\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a Camera \u7684\u7c7b\uff0c\u5b83\u5c06\u50a8\u5b58\u6444\u50cf\u673a\u7684\u4f4d\u7f6e\u4e0e\u65cb\u8f6c\u72b6\u6001\u3002\u8be5\u7c7b\u5c06\u63d0\u4f9b\u8bbe\u7f6e\u4f4d\u7f6e\u6216\u65cb\u8f6c\u72b6\u6001\u7684\u65b9\u6cd5\uff08 setPosition \u6216 setRotation \uff09\uff0c\u6216\u5728\u5f53\u524d\u72b6\u6001\u4e0b\u7528\u504f\u79fb\u91cf\u66f4\u65b0\u8fd9\u4e9b\u503c\u7684\u65b9\u6cd5\uff08 movePosition \u6216 moveRotation \uff09\u3002 package org.lwjglb.engine.graph; import org.joml.Vector3f; public class Camera { private final Vector3f position; private final Vector3f rotation; public Camera() { position = new Vector3f(0, 0, 0); rotation = new Vector3f(0, 0, 0); } public Camera(Vector3f position, Vector3f rotation) { this.position = position; this.rotation = rotation; } public Vector3f getPosition() { return position; } public void setPosition(float x, float y, float z) { position.x = x; position.y = y; position.z = z; } public void movePosition(float offsetX, float offsetY, float offsetZ) { if ( offsetZ != 0 ) { position.x += (float)Math.sin(Math.toRadians(rotation.y)) * -1.0f * offsetZ; position.z += (float)Math.cos(Math.toRadians(rotation.y)) * offsetZ; } if ( offsetX != 0) { position.x += (float)Math.sin(Math.toRadians(rotation.y - 90)) * -1.0f * offsetX; position.z += (float)Math.cos(Math.toRadians(rotation.y - 90)) * offsetX; } position.y += offsetY; } public Vector3f getRotation() { return rotation; } public void setRotation(float x, float y, float z) { rotation.x = x; rotation.y = y; rotation.z = z; } public void moveRotation(float offsetX, float offsetY, float offsetZ) { rotation.x += offsetX; rotation.y += offsetY; rotation.z += offsetZ; } } \u63a5\u4e0b\u6765\u5728 Transformation \u4e2d\uff0c\u5c06\u5b9a\u4e49\u4e00\u4e2a\u65b0\u77e9\u9635\u6765\u50a8\u5b58\u89c2\u5bdf\u77e9\u9635\u3002 private final Matrix4f viewMatrix; \u6211\u4eec\u8981\u63d0\u4f9b\u4e00\u4e2a\u66f4\u65b0\u8fd9\u4e2a\u503c\u7684\u65b9\u6cd5\u3002\u4e0e\u6295\u5f71\u77e9\u9635\u76f8\u4f3c\uff0c\u8fd9\u4e2a\u77e9\u9635\u5bf9\u4e8e\u6e32\u67d3\u5468\u671f\u4e2d\u6e32\u67d3\u7684\u6240\u6709\u7269\u4f53\u90fd\u662f\u76f8\u540c\u7684\u3002 public Matrix4f getViewMatrix(Camera camera) { Vector3f cameraPos = camera.getPosition(); Vector3f rotation = camera.getRotation(); viewMatrix.identity(); // \u9996\u5148\u8fdb\u884c\u65cb\u8f6c\uff0c\u4f7f\u6444\u50cf\u673a\u5728\u5176\u4f4d\u7f6e\u4e0a\u65cb\u8f6c viewMatrix.rotate((float)Math.toRadians(rotation.x), new Vector3f(1, 0, 0)) .rotate((float)Math.toRadians(rotation.y), new Vector3f(0, 1, 0)); // \u7136\u540e\u505a\u4f4d\u79fb viewMatrix.translate(-cameraPos.x, -cameraPos.y, -cameraPos.z); return viewMatrix; } \u5982\u4f60\u6240\u89c1\uff0c\u6211\u4eec\u9996\u5148\u9700\u8981\u505a\u65cb\u8f6c\uff0c\u7136\u540e\u4f4d\u79fb\u3002\u5982\u679c\u64cd\u4f5c\u987a\u5e8f\u76f8\u53cd\uff0c\u6211\u4eec\u5c06\u4e0d\u4f1a\u6cbf\u7740\u6444\u50cf\u673a\u4f4d\u7f6e\u65cb\u8f6c\uff0c\u800c\u662f\u6cbf\u7740\u5750\u6807\u539f\u70b9\u65cb\u8f6c\u3002\u8bf7\u6ce8\u610f\uff0c\u5728 Camera \u7c7b\u7684 movePosition \u65b9\u6cd5\u4e2d\uff0c\u6211\u4eec\u4e0d\u53ea\u662f\u7b80\u5355\u5730\u589e\u52a0\u6444\u50cf\u673a\u4f4d\u7f6e\u7684\u504f\u79fb\u91cf\u3002\u6211\u4eec\u8fd8\u8003\u8651\u4e86\u6cbfY\u8f74\u7684\u65cb\u8f6c\uff0c\u4e5f\u5c31\u662f\u504f\u822a\uff0c\u4ee5\u4fbf\u8ba1\u7b97\u6700\u7ec8\u4f4d\u7f6e\u3002\u5982\u679c\u53ea\u662f\u901a\u8fc7\u504f\u79fb\u6765\u589e\u52a0\u6444\u50cf\u673a\u7684\u4f4d\u7f6e\uff0c\u6444\u50cf\u673a\u5c31\u4e0d\u4f1a\u671d\u7740\u5b83\u6240\u671d\u5411\u7684\u65b9\u5411\u79fb\u52a8\u3002 \u9664\u4e86\u4e0a\u8ff0\u6240\u8bf4\u7684\uff0c\u6211\u4eec\u73b0\u5728\u8fd8\u6ca1\u6709\u5f97\u5230\u4e00\u4e2a\u53ef\u4ee5\u5b8c\u5168\u81ea\u7531\u79fb\u52a8\u7684\u6444\u50cf\u673a\uff08\u4f8b\u5982\uff0c\u5982\u679c\u6211\u4eec\u6cbf\u7740X\u8f74\u65cb\u8f6c\uff0c\u5f53\u5411\u524d\u79fb\u52a8\u65f6\uff0c\u6444\u50cf\u673a\u4e0d\u4f1a\u5728\u7a7a\u95f4\u4e2d\u5411\u4e0a\u6216\u5411\u4e0b\u79fb\u52a8\uff09\uff0c\u8fd9\u5c06\u5728\u6b64\u540e\u7684\u7ae0\u8282\u4e2d\u5b8c\u6210\uff0c\u56e0\u4e3a\u8fd9\u6709\u70b9\u590d\u6742\u3002 \u6700\u540e\uff0c\u6211\u4eec\u5c06\u79fb\u9664\u4e4b\u524d\u7684 getWorldMatrix \u65b9\u6cd5\uff0c\u5e76\u6dfb\u52a0\u4e00\u4e2a\u540d\u4e3a getModelViewMatrix \u7684\u65b0\u65b9\u6cd5\u3002 public Matrix4f getModelViewMatrix(GameItem gameItem, Matrix4f viewMatrix) { Vector3f rotation = gameItem.getRotation(); modelViewMatrix.set(viewMatrix).translate(gameItem.getPosition()). rotateX((float)Math.toRadians(-rotation.x)). rotateY((float)Math.toRadians(-rotation.y)). rotateZ((float)Math.toRadians(-rotation.z)). scale(gameItem.getScale()); return modelViewMatrix; } \u6bcf\u4e2a GameItem \u5b9e\u4f8b\u90fd\u5c06\u8c03\u7528\u4e00\u6b21 getModelViewMatrix \u65b9\u6cd5\u3002 Renderer \u7c7b\u7684 render \u65b9\u6cd5\u4e2d\uff0c\u6211\u4eec\u53ea\u9700\u8981\u6839\u636e\u6444\u50cf\u673a\u7684\u503c\uff0c\u5728\u6295\u5f71\u77e9\u9635\u66f4\u65b0\u4e4b\u540e\u66f4\u65b0\u89c2\u5bdf\u77e9\u9635\u3002 // \u66f4\u65b0\u6295\u5f71\u77e9\u9635 Matrix4f projectionMatrix = transformation.getProjectionMatrix(FOV, window.getWidth(), window.getHeight(), Z_NEAR, Z_FAR); shaderProgram.setUniform(\"projectionMatrix\", projectionMatrix); // \u66f4\u65b0\u89c2\u5bdf\u77e9\u9635 Matrix4f viewMatrix = transformation.getViewMatrix(camera); shaderProgram.setUniform(\"texture_sampler\", 0); // \u6e32\u67d3\u6bcf\u4e2a\u6e38\u620f\u9879 for(GameItem gameItem : gameItems) { // \u4e3a\u8be5\u9879\u8bbe\u7f6e\u6a21\u578b\u89c2\u5bdf\u77e9\u9635 Matrix4f modelViewMatrix = transformation.getModelViewMatrix(gameItem, viewMatrix); shaderProgram.setUniform(\"modelViewMatrix\", modelViewMatrix); // \u6e32\u67d3\u8be5\u6e38\u620f\u9879\u7684\u7f51\u683c gameItem.getMesh().render(); } \u8fd9\u5c31\u662f\u5b9e\u73b0\u6444\u50cf\u673a\u6982\u5ff5\u7684\u57fa\u672c\u4ee3\u7801\uff0c\u73b0\u5728\u9700\u8981\u4f7f\u7528\u5b83\u3002\u6211\u4eec\u53ef\u4ee5\u4fee\u6539\u8f93\u5165\u5904\u7406\u548c\u66f4\u65b0\u6444\u50cf\u673a\u7684\u65b9\u5f0f\uff0c\u5c06\u8bbe\u7f6e\u5982\u4e0b\u6309\u952e\uff1a \u201cA\u201d\u548c\u201cD\u201d\u952e\u4f7f\u6444\u50cf\u673a\u5de6\u53f3\uff08X\u8f74\uff09\u79fb\u52a8\u3002 \u201cW\u201d\u548c\u201cS\u201d\u952e\u4f7f\u6444\u50cf\u673a\u524d\u540e\uff08Z\u8f74\uff09\u79fb\u52a8\u3002 \u201cZ\u201d\u548c\u201cX\u201d\u952e\u4f7f\u6444\u50cf\u673a\u4e0a\u4e0b\uff08Y\u8f74\uff09\u79fb\u52a8\u3002 \u5f53\u9f20\u6807\u6309\u4e0b\u53f3\u952e\u65f6\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u9f20\u6807\u4f4d\u7f6e\u6cbfX\u548cY\u8f74\u65cb\u8f6c\u6444\u50cf\u673a\u3002 \u5982\u4f60\u6240\u89c1\uff0c\u6211\u4eec\u5c06\u9996\u6b21\u4f7f\u7528\u9f20\u6807\uff0c\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a MouseInput \u7684\u65b0\u7c7b\uff0c\u8be5\u7c7b\u5c06\u5c01\u88c5\u9f20\u6807\u8bbf\u95ee\u3002\u8be5\u7c7b\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a package org.lwjglb.engine; import org.joml.Vector2d; import org.joml.Vector2f; import static org.lwjgl.glfw.GLFW.*; public class MouseInput { private final Vector2d previousPos; private final Vector2d currentPos; private final Vector2f displVec; private boolean inWindow = false; private boolean leftButtonPressed = false; private boolean rightButtonPressed = false; public MouseInput() { previousPos = new Vector2d(-1, -1); currentPos = new Vector2d(0, 0); displVec = new Vector2f(); } public void init(Window window) { glfwSetCursorPosCallback(window.getWindowHandle(), (windowHandle, xpos, ypos) -> { currentPos.x = xpos; currentPos.y = ypos; }); glfwSetCursorEnterCallback(window.getWindowHandle(), (windowHandle, entered) -> { inWindow = entered; }); glfwSetMouseButtonCallback(window.getWindowHandle(), (windowHandle, button, action, mode) -> { leftButtonPressed = button == GLFW_MOUSE_BUTTON_1 && action == GLFW_PRESS; rightButtonPressed = button == GLFW_MOUSE_BUTTON_2 && action == GLFW_PRESS; }); } public Vector2f getDisplVec() { return displVec; } public void input(Window window) { displVec.x = 0; displVec.y = 0; if (previousPos.x > 0 && previousPos.y > 0 && inWindow) { double deltax = currentPos.x - previousPos.x; double deltay = currentPos.y - previousPos.y; boolean rotateX = deltax != 0; boolean rotateY = deltay != 0; if (rotateX) { displVec.y = (float) deltax; } if (rotateY) { displVec.x = (float) deltay; } } previousPos.x = currentPos.x; previousPos.y = currentPos.y; } public boolean isLeftButtonPressed() { return leftButtonPressed; } public boolean isRightButtonPressed() { return rightButtonPressed; } } MouseInput \u7c7b\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5e94\u5728\u5728\u521d\u59cb\u5316\u9636\u6bb5\u8c03\u7528\u7684 init \u65b9\u6cd5\uff0c\u5e76\u6ce8\u518c\u4e00\u7ec4\u56de\u8c03\u4ee5\u5904\u7406\u9f20\u6807\u4e8b\u4ef6\uff1a glfwSetCursorPosCallback \uff1a\u6ce8\u518c\u4e00\u4e2a\u56de\u8c03\uff0c\u8be5\u56de\u8c03\u5c06\u5728\u9f20\u6807\u79fb\u52a8\u65f6\u88ab\u8c03\u7528\u3002 glfwSetCursorEnterCallback \uff1a\u6ce8\u518c\u4e00\u4e2a\u56de\u8c03\uff0c\u8be5\u56de\u8c03\u5c06\u5728\u9f20\u6807\u8fdb\u5165\u7a97\u53e3\u65f6\u88ab\u8c03\u7528\u3002\u5373\u4f7f\u9f20\u6807\u4e0d\u5728\u7a97\u53e3\u5185\uff0c\u6211\u4eec\u4e5f\u4f1a\u6536\u5230\u9f20\u6807\u4e8b\u4ef6\u3002\u6211\u4eec\u4f7f\u7528\u8fd9\u4e2a\u56de\u8c03\u6765\u786e\u8ba4\u9f20\u6807\u8fdb\u5165\u7a97\u53e3\u3002 glfwSetMouseButtonCallback \uff1a\u6ce8\u518c\u4e00\u4e2a\u56de\u8c03\uff0c\u8be5\u56de\u8c03\u5728\u6309\u4e0b\u9f20\u6807\u6309\u94ae\u65f6\u88ab\u8c03\u7528\u3002 MouseInput \u7c7b\u63d0\u4f9b\u4e86\u4e00\u4e2a input \u65b9\u6cd5\uff0c\u5728\u5904\u7406\u6e38\u620f\u8f93\u5165\u65f6\u5e94\u8c03\u7528\u8be5\u65b9\u6cd5\u3002\u8be5\u65b9\u6cd5\u8ba1\u7b97\u9f20\u6807\u4ece\u4e0a\u4e00\u4e2a\u4f4d\u7f6e\u7684\u4f4d\u79fb\uff0c\u5e76\u5c06\u5176\u5b58\u50a8\u5230 Vector2f \u7c7b\u578b\u7684 displVec \u53d8\u91cf\u4e2d\uff0c\u4ee5\u4fbf\u6e38\u620f\u4f7f\u7528\u5b83\u3002 MouseInput \u7c7b\u5c06\u5728 GameEngine \u7c7b\u4e2d\u5b9e\u4f8b\u5316\uff0c\u5e76\u4e14\u5c06\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9\u6e38\u620f\u5b9e\u73b0\u7684 init \u548c update \u65b9\u6cd5\uff08\u56e0\u6b64\u9700\u8981\u76f8\u5e94\u5730\u66f4\u6539 IGameLogic \u63a5\u53e3\uff09\u3002 void input(Window window, MouseInput mouseInput); void update(float interval, MouseInput mouseInput); \u9f20\u6807\u8f93\u5165\u5c06\u5728 GameEngine \u7c7b\u7684 input \u65b9\u6cd5\u4e2d\u88ab\u5904\u7406\uff0c\u800c\u6700\u7ec8\u7684\u63a7\u5236\u5c06\u4ea4\u7531\u6e38\u620f\u5b9e\u73b0\u3002 protected void input() { mouseInput.input(window); gameLogic.input(window, mouseInput); } \u73b0\u5728\u5df2\u7ecf\u51c6\u5907\u597d\u4fee\u6539 DummyGame \u7c7b\u6765\u5904\u7406\u952e\u76d8\u548c\u9f20\u6807\u8f93\u5165\u4e86\u3002\u8be5\u7c7b\u7684\u8f93\u5165\u65b9\u6cd5\u5982\u4e0b\u6240\u793a\uff1a @Override public void input(Window window, MouseInput mouseInput) { cameraInc.set(0, 0, 0); if (window.isKeyPressed(GLFW_KEY_W)) { cameraInc.z = -1; } else if (window.isKeyPressed(GLFW_KEY_S)) { cameraInc.z = 1; } if (window.isKeyPressed(GLFW_KEY_A)) { cameraInc.x = -1; } else if (window.isKeyPressed(GLFW_KEY_D)) { cameraInc.x = 1; } if (window.isKeyPressed(GLFW_KEY_Z)) { cameraInc.y = -1; } else if (window.isKeyPressed(GLFW_KEY_X)) { cameraInc.y = 1; } } \u8fd9\u53ea\u662f\u66f4\u65b0\u4e00\u4e2a\u540d\u4e3a cameraInc \u7684 Vector3f \u53d8\u91cf\uff0c\u5b83\u50a8\u5b58\u4e86\u6444\u50cf\u673a\u5e94\u7528\u7684\u4f4d\u79fb\u3002 DummyGame \u7c7b\u7684 update \u65b9\u6cd5\u5c06\u6839\u636e\u5904\u7406\u7684\u952e\u76d8\u548c\u9f20\u6807\u4e8b\u4ef6\uff0c\u4fee\u6539\u6444\u50cf\u673a\u7684\u4f4d\u7f6e\u548c\u65cb\u8f6c\u3002 @Override public void update(float interval, MouseInput mouseInput) { // \u66f4\u65b0\u6444\u50cf\u673a\u4f4d\u7f6e camera.movePosition(cameraInc.x * CAMERA_POS_STEP, cameraInc.y * CAMERA_POS_STEP, cameraInc.z * CAMERA_POS_STEP); // \u57fa\u4e8e\u9f20\u6807\u66f4\u65b0\u6444\u50cf\u673a if (mouseInput.isRightButtonPressed()) { Vector2f rotVec = mouseInput.getDisplVec(); camera.moveRotation(rotVec.x * MOUSE_SENSITIVITY, rotVec.y * MOUSE_SENSITIVITY, 0); } } \u73b0\u5728\u53ef\u4ee5\u6dfb\u52a0\u66f4\u591a\u7684\u7acb\u65b9\u4f53\u5230\u4e16\u754c\u4e2d\uff0c\u7f29\u653e\u5b83\u4eec\uff0c\u5c06\u5b83\u4eec\u8bbe\u7f6e\u5728\u7279\u5b9a\u4f4d\u7f6e\uff0c\u5e76\u4f7f\u7528\u65b0\u6444\u50cf\u673a\u6e38\u73a9\u3002\u5982\u4f60\u6240\u89c1\uff0c\u6240\u6709\u7684\u7acb\u65b9\u4f53\u5171\u4eab\u76f8\u540c\u7684\u7f51\u683c\u3002 GameItem gameItem1 = new GameItem(mesh); gameItem1.setScale(0.5f); gameItem1.setPosition(0, 0, -2); GameItem gameItem2 = new GameItem(mesh); gameItem2.setScale(0.5f); gameItem2.setPosition(0.5f, 0.5f, -2); GameItem gameItem3 = new GameItem(mesh); gameItem3.setScale(0.5f); gameItem3.setPosition(0, 0, -2.5f); GameItem gameItem4 = new GameItem(mesh); gameItem4.setScale(0.5f); gameItem4.setPosition(0.5f, 0, -2.5f); gameItems = new GameItem[]{gameItem1, gameItem2, gameItem3, gameItem4}; \u4f60\u4f1a\u5f97\u5230\u5982\u4e0b\u6240\u793a\u7684\u7ed3\u679c\u3002","title":"\u6444\u50cf\u673a\uff08Camera\uff09"},{"location":"09-loading-more-complex-models/","text":"\u52a0\u8f7d\u66f4\u590d\u6742\u7684\u6a21\u578b\uff08Loading more complex models\uff09 \u672c\u7ae0\u4e2d\u6211\u4eec\u5c06\u5b66\u4e60\u52a0\u8f7d\u5728\u5916\u90e8\u6587\u4ef6\u4e2d\u5b9a\u4e49\u7684\u590d\u6742\u6a21\u578b\u3002\u8fd9\u4e9b\u6a21\u578b\u5c06\u4f7f\u75283D\u5efa\u6a21\u5de5\u5177(\u4f8b\u5982 Blender )\u521b\u5efa\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u5df2\u7ecf\u901a\u8fc7\u76f4\u63a5\u7f16\u7801\u5b9a\u4e49\u5176\u51e0\u4f55\u56fe\u5f62\u7684\u6570\u7ec4\u6765\u521b\u5efa\u6a21\u578b\u3002\u4f46\u5728\u672c\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u5b66\u4e60\u5982\u4f55\u52a0\u8f7d\u4ee5OBJ\u683c\u5f0f\u5b9a\u4e49\u7684\u6a21\u578b\u3002 OBJ\uff08\u6216.obj\uff09\u662fWavefront Technologies\u5f00\u53d1\u7684\u4e00\u79cd\u51e0\u4f55\u5b9a\u4e49\u5f00\u653e\u6587\u4ef6\u683c\u5f0f\uff0c\u73b0\u5df2\u88ab\u5e7f\u6cdb\u91c7\u7528\u3002OBJ\u6587\u4ef6\u5b9a\u4e49\u6784\u6210\u4e09\u7ef4\u6a21\u578b\u7684\u9876\u70b9\u3001\u7eb9\u7406\u5750\u6807\u548c\u591a\u8fb9\u5f62\u3002\u8fd9\u662f\u4e00\u79cd\u76f8\u5bf9\u5bb9\u6613\u89e3\u6790\u7684\u683c\u5f0f\uff0c\u56e0\u4e3a\u5b83\u57fa\u4e8e\u6587\u672c\uff0c\u6bcf\u4e00\u884c\u5b9a\u4e49\u4e00\u4e2a\u5143\u7d20\uff08\u9876\u70b9\u3001\u7eb9\u7406\u5750\u6807\u7b49\uff09\u3002 \u5728.obj\u6587\u4ef6\u4e2d\uff0c\u6bcf\u884c\u4ee5\u4e00\u4e2a\u6807\u8bb0\u5143\u7d20\u7c7b\u578b\u7684\u6807\u8bc6\u7b26\u5f00\u5934\uff1a \u4ee5\"#\"\u5f00\u59cb\u7684\u884c\u662f\u6ce8\u91ca\u3002 \u4ee5\"v\"\u5f00\u59cb\u7684\u884c\u7528\u5750\u6807(x, y, z, w)\u5b9a\u4e49\u4e00\u4e2a\u51e0\u4f55\u9876\u70b9\u3002\u4f8b\u5982\uff1a v 0.155 0.211 0.32 1.0 \u3002 \u4ee5\"vn\"\u5f00\u59cb\u7684\u884c\u662f\u7528\u5750\u6807(x, y, z)\u5b9a\u4e49\u9876\u70b9\u6cd5\u7ebf\uff08Normals\uff09\u3002\u4f8b\u5982\uff1a vn 0.71 0.21 0.82 \u3002\u4e4b\u540e\u518d\u8ba8\u8bba\u8fd9\u4e2a\u4e1c\u897f\u3002 \u4ee5\"vt\"\u5f00\u59cb\u7684\u884c\u5b9a\u4e49\u7eb9\u7406\u5750\u6807\u3002\u4f8b\u5982\uff1a vt 0.500 1 \u3002 \u4ee5\"f\"\u5f00\u59cb\u7684\u884c\u5b9a\u4e49\u4e86\u4e00\u4e2a\u9762\u3002\u5229\u7528\u8be5\u884c\u4e2d\u7684\u6570\u636e\u53ef\u4ee5\u6784\u9020\u7d22\u5f15\u6570\u7ec4\u3002\u6211\u4eec\u53ea\u5904\u7406\u9762\u5bfc\u51fa\u4e3a\u4e09\u89d2\u5f62\u7684\u60c5\u51b5\u3002\u5b83\u53ef\u4ee5\u6709\u51e0\u79cd\u5b9a\u4e49\u65b9\u5f0f\uff1a \u5b83\u53ef\u4ee5\u5b9a\u4e49\u9876\u70b9\u4f4d\u7f6e\uff08 f v1 v2 v3 \uff09\u3002\u4f8b\u5982\uff1a f 6 3 1 \u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u8fd9\u4e2a\u4e09\u89d2\u5f62\u662f\u7531\u4f4d\u7f6e\u4e3a6\u30013\u548c1\u7684\u51e0\u4f55\u9876\u70b9\u5b9a\u4e49\u7684\uff08\u9876\u70b9\u7d22\u5f15\u603b\u662f\u4ece1\u5f00\u59cb\uff09\u3002 \u5b83\u53ef\u4ee5\u5b9a\u4e49\u9876\u70b9\u4f4d\u7f6e\u3001\u7eb9\u7406\u5750\u6807\u548c\u6cd5\u7ebf\uff08 f v1/t1/n1 v2/t2/n2 v3/t3/n3 \uff09\u3002\u4f8b\u5982\uff1a f 6/4/1 3/5/3 7/6/5 \u3002\u7b2c\u4e00\u90e8\u5206\u662f v1/t1/n1 \uff0c\u5176\u5b9a\u4e49\u4e86\u5750\u6807\u3001\u7eb9\u7406\u5750\u6807\u548c\u9876\u70b9\u6cd5\u7ebf\u3002\u770b\u5230\u8be5\u90e8\u5206\u53ef\u4ee5\u8bf4\u51fa\uff1a\u9009\u62e9\u51e0\u4f55\u9876\u70b96\u3001\u7eb9\u7406\u5750\u68074\u548c\u9876\u70b9\u6cd5\u7ebf1\u3002 OBJ\u683c\u5f0f\u6709\u66f4\u591a\u7684\u5143\u7d20\u7c7b\u578b\uff08\u5982\u4e00\u7ec4\u591a\u8fb9\u5f62\u3001\u5b9a\u4e49\u6750\u8d28\u7b49\uff09\u3002\u73b0\u5728\u6211\u4eec\u4ec5\u5b9e\u73b0\u4e0a\u8ff0\u5b50\u96c6\uff0c\u6211\u4eec\u7684OBJ\u52a0\u8f7d\u5668\u5c06\u5ffd\u7565\u5176\u4ed6\u5143\u7d20\u7c7b\u578b\u3002 \u4f46\u662f\u4ec0\u4e48\u662f\u6cd5\u7ebf\u5462\uff1f\u8ba9\u6211\u4eec\u5148\u5b9a\u4e49\u5b83\u3002\u4e00\u4e2a\u5e73\u9762\u7684\u6cd5\u7ebf\u662f\u4e00\u4e2a\u5782\u76f4\u4e8e\u8be5\u5e73\u9762\u7684\u957f\u5ea6\u4e3a1\u7684\u5411\u91cf\u3002 \u5982\u4e0a\u6240\u89c1\uff0c\u4e00\u4e2a\u5e73\u9762\u53ef\u4ee5\u6709\u4e24\u6761\u6cd5\u7ebf\uff0c\u6211\u4eec\u5e94\u8be5\u7528\u54ea\u4e00\u4e2a\u5462\uff1f\u4e09\u7ef4\u56fe\u5f62\u4e2d\u7684\u6cd5\u7ebf\u662f\u7528\u4e8e\u5149\u7167\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u5e94\u8be5\u9009\u62e9\u9762\u5411\u5149\u6e90\u7684\u6cd5\u7ebf\u3002\u6362\u8a00\u4e4b\uff0c\u6211\u4eec\u5e94\u8be5\u9009\u62e9\u6307\u5411\u6a21\u578b\u5916\u7684\u6cd5\u7ebf\u3002 \u6211\u4eec\u6709\u4e00\u4e2a\u7531\u591a\u8fb9\u5f62\u548c\u4e09\u89d2\u5f62\u7ec4\u6210\u76843D\u6a21\u578b\uff0c\u6bcf\u4e2a\u4e09\u89d2\u5f62\u7531\u4e09\u4e2a\u9876\u70b9\u7ec4\u6210\uff0c\u4e09\u89d2\u5f62\u7684\u6cd5\u7ebf\u5411\u91cf\u662f\u5782\u76f4\u4e8e\u4e09\u89d2\u5f62\u8868\u9762\u7684\u957f\u5ea6\u4e3a1\u7684\u5411\u91cf\u3002 \u9876\u70b9\u6cd5\u7ebf\u4e0e\u7279\u5b9a\u9876\u70b9\u76f8\u5173\u8054\uff0c\u5e76\u4e14\u662f\u5468\u56f4\u4e09\u89d2\u5f62\u7684\u6cd5\u7ebf\u7684\u7ec4\u5408\uff08\u5f53\u7136\u5b83\u7684\u957f\u5ea6\u7b49\u4e8e1\uff09\u3002\u5728\u8fd9\u91cc\u4f60\u53ef\u4ee5\u770b\u5230\u4e00\u4e2a3D\u7f51\u683c\u7684\u9876\u70b9\u6a21\u578b\uff08\u53d6\u81ea \u7ef4\u57fa\u767e\u79d1 \uff09 \u73b0\u5728\u6211\u4eec\u5f00\u59cb\u521b\u5efaOBJ\u52a0\u8f7d\u5668\u3002\u9996\u5148\uff0c\u6211\u4eec\u5c06\u4fee\u6539 Mesh \u7c7b\uff0c\u56e0\u4e3a\u73b0\u5728\u5fc5\u987b\u4f7f\u7528\u7eb9\u7406\u3002\u6211\u4eec\u53ef\u80fd\u52a0\u8f7d\u4e00\u4e9b\u6ca1\u6709\u5b9a\u4e49\u7eb9\u7406\u5750\u6807\u7684OBJ\u6587\u4ef6\uff0c\u56e0\u6b64\u5fc5\u987b\u80fd\u591f\u4f7f\u7528\u989c\u8272\u800c\u4e0d\u662f\u4f7f\u7528\u7eb9\u7406\u6e32\u67d3\u5b83\u4eec\u3002\u5728\u6b64\u60c5\u51b5\u4e0b\uff0c\u9762\u7684\u5b9a\u4e49\u683c\u5f0f\u4e3a\uff1a f v/n \u3002 Mesh \u7c7b\u73b0\u5728\u6709\u4e00\u4e2a\u540d\u4e3a colour \u7684\u65b0\u5c5e\u6027\u3002 private Vector3f colour; \u5e76\u4e14\u6784\u9020\u51fd\u6570\u4e0d\u518d\u9700\u8981 Texture \u3002\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\uff0c\u6211\u4eec\u5c06\u4e3a\u7eb9\u7406\u548c\u989c\u8272\u5c5e\u6027\u63d0\u4f9b get \u548c set \u65b9\u6cd5\u3002 public Mesh(float[] positions, float[] textCoords, float[] normals, int[] indices) { \u5f53\u7136\uff0c\u5728 render \u548c clear \u65b9\u6cd5\u4e2d\uff0c\u5728\u4f7f\u7528\u7eb9\u7406\u4e4b\u524d\uff0c\u5fc5\u987b\u68c0\u67e5\u7eb9\u7406\u662f\u5426\u4e3a null \u3002\u6b63\u5982\u4f60\u5728\u6784\u9020\u51fd\u6570\u4e2d\u770b\u5230\u7684\uff0c\u73b0\u5728\u9700\u8981\u4f20\u9012\u4e00\u4e2a\u540d\u4e3a normals \u7684\u65b0\u6d6e\u70b9\u6570\u7ec4\u3002\u5982\u4f55\u4f7f\u7528\u6cd5\u7ebf\u6e32\u67d3\uff1f\u7b54\u6848\u5f88\u7b80\u5355\uff0c\u5b83\u53ea\u662fVAO\u4e2d\u7684\u53e6\u4e00\u4e2aVBO\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u6dfb\u52a0\u5982\u4e0b\u4ee3\u7801\uff1a // \u9876\u70b9\u6cd5\u7ebfVBO vboId = glGenBuffers(); vboIdList.add(vboId); vecNormalsBuffer = MemoryUtil.memAllocFloat(normals.length); vecNormalsBuffer.put(normals).flip(); glBindBuffer(GL_ARRAY_BUFFER, vboId); glBufferData(GL_ARRAY_BUFFER, vecNormalsBuffer, GL_STATIC_DRAW); glEnableVertexAttribArray(2); glVertexAttribPointer(2, 3, GL_FLOAT, false, 0, 0); \u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u5b8c\u6210\u4e86\u5bf9 Mesh \u7c7b\u7684\u4fee\u6539\uff0c\u53ef\u4ee5\u4fee\u6539\u4ee3\u7801\u6765\u4f7f\u7528\u7eb9\u7406\u5750\u6807\u6216\u56fa\u5b9a\u7684\u989c\u8272\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u50cf\u8fd9\u6837\u4fee\u6539\u7247\u5143\u7740\u8272\u5668\uff1a #version 330 in vec2 outTexCoord; out vec4 fragColor; uniform sampler2D texture_sampler; uniform vec3 colour; uniform int useColour; void main() { if ( useColour == 1 ) { fragColor = vec4(colour, 1); } else { fragColor = texture(texture_sampler, outTexCoord); } } \u5982\u4f60\u6240\u89c1\uff0c\u6211\u4eec\u521b\u5efa\u4e86\u4e24\u4e2a\u65b0Uniform\uff1a colour : \u5c06\u50a8\u5b58\u57fa\u672c\u989c\u8272\u3002 useColour : \u8fd9\u662f\u4e2a\u6807\u5fd7\uff0c\u5f53\u4f60\u4e0d\u60f3\u4f7f\u7528\u7eb9\u7406\u65f6\uff0c\u5b83\u5c06\u88ab\u8bbe\u7f6e\u4e3a1\u3002 \u5728 Renderer \u7c7b\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u521b\u5efa\u8fd9\u4e24\u4e2aUniform\u3002 // \u4e3a\u9ed8\u8ba4\u989c\u8272\u4e0e\u63a7\u5236\u5b83\u7684\u6807\u5fd7\u521b\u5efaUniform shaderProgram.createUniform(\"colour\"); shaderProgram.createUniform(\"useColour\"); \u548c\u5176\u4ed6Uniform\u4e00\u6837\uff0c\u5728 Renderer \u7c7b\u7684 render \u65b9\u6cd5\u4e2d\uff0c\u6211\u4eec\u4e5f\u9700\u8981\u4e3a\u6bcf\u4e2a GameItem \u8bbe\u7f6e\u8fd9\u4e9bUniform\u7684\u503c\u3002 for(GameItem gameItem : gameItems) { Mesh mesh = gameItem.getMesh(); // \u4e3a\u8be5\u6e38\u620f\u9879\u8bbe\u7f6e\u6a21\u578b\u89c2\u5bdf\u77e9\u9635 Matrix4f modelViewMatrix = transformation.getModelViewMatrix(gameItem, viewMatrix); shaderProgram.setUniform(\"modelViewMatrix\", modelViewMatrix); // \u4e3a\u8be5\u6e38\u620f\u9879\u6e32\u67d3\u7f51\u683c shaderProgram.setUniform(\"colour\", mesh.getColour()); shaderProgram.setUniform(\"useColour\", mesh.isTextured() ? 0 : 1); mesh.render(); } \u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a OBJLoader \u7684\u65b0\u7c7b\uff0c\u8be5\u7c7b\u89e3\u6790OBJ\u6587\u4ef6\uff0c\u5e76\u7528\u5176\u4e2d\u5305\u542b\u7684\u6570\u636e\u521b\u5efa\u4e00\u4e2a Mesh \u5b9e\u4f8b\u3002\u4f60\u53ef\u80fd\u4f1a\u5728\u7f51\u4e0a\u53d1\u73b0\u4e00\u4e9b\u5176\u4ed6\u5b9e\u73b0\u53ef\u80fd\u6bd4\u8fd9\u66f4\u6709\u6548\uff0c\u4f46\u6211\u8ba4\u4e3a\u8be5\u65b9\u6848\u66f4\u5bb9\u6613\u7406\u89e3\u3002\u8fd9\u662f\u4e00\u4e2a\u5de5\u5177\u7c7b\uff0c\u5b83\u5c06\u6709\u5982\u4e0b\u9759\u6001\u65b9\u6cd5\uff1a public static Mesh loadMesh(String fileName) throws Exception { \u53c2\u6570 fileName \u6307\u5b9aOBJ\u6a21\u578b\u7684\u6587\u4ef6\u540d\u79f0\uff0c\u8be5\u6587\u4ef6\u5fc5\u987b\u5305\u542b\u5728\u7c7b\u8def\u5f84\u4e2d\u3002 \u5728\u8be5\u65b9\u6cd5\u4e2d\u6211\u4eec\u9996\u5148\u8981\u505a\u7684\u662f\u8bfb\u53d6\u6587\u4ef6\u5185\u5bb9\u5e76\u5c06\u6240\u6709\u884c\u50a8\u5b58\u5230\u4e00\u4e2a\u6570\u7ec4\u4e2d\uff0c\u7136\u540e\u521b\u5efa\u51e0\u4e2a\u5217\u8868\u6765\u50a8\u5b58\u9876\u70b9\u3001\u7eb9\u7406\u5750\u6807\u3001\u6cd5\u7ebf\u548c\u9762\u3002 List<String> lines = Utils.readAllLines(fileName); List<Vector3f> vertices = new ArrayList<>(); List<Vector2f> textures = new ArrayList<>(); List<Vector3f> normals = new ArrayList<>(); List<Face> faces = new ArrayList<>(); \u7136\u540e\u89e3\u6790\u6bcf\u4e00\u884c\uff0c\u5e76\u6839\u636e\u5f00\u5934\u6807\u8bc6\u7b26\u5f97\u5230\u9876\u70b9\u4f4d\u7f6e\u3001\u7eb9\u7406\u5750\u6807\u3001\u9876\u70b9\u6cd5\u7ebf\u6216\u9762\u5b9a\u4e49\uff0c\u6700\u540e\u91cd\u65b0\u6392\u5217\u8fd9\u4e9b\u6570\u636e\u3002 for (String line : lines) { String[] tokens = line.split(\"\\\\s+\"); switch (tokens[0]) { case \"v\": // \u51e0\u4f55\u9876\u70b9 Vector3f vec3f = new Vector3f( Float.parseFloat(tokens[1]), Float.parseFloat(tokens[2]), Float.parseFloat(tokens[3])); vertices.add(vec3f); break; case \"vt\": // \u7eb9\u7406\u5750\u6807 Vector2f vec2f = new Vector2f( Float.parseFloat(tokens[1]), Float.parseFloat(tokens[2])); textures.add(vec2f); break; case \"vn\": // \u9876\u70b9\u6cd5\u7ebf Vector3f vec3fNorm = new Vector3f( Float.parseFloat(tokens[1]), Float.parseFloat(tokens[2]), Float.parseFloat(tokens[3])); normals.add(vec3fNorm); break; case \"f\": Face face = new Face(tokens[1], tokens[2], tokens[3]); faces.add(face); break; default: // \u5ffd\u7565\u5176\u4ed6\u884c break; } } return reorderLists(vertices, textures, normals, faces); \u5728\u8bb2\u89e3\u91cd\u65b0\u6392\u5e8f\u4e4b\u524d\uff0c\u8ba9\u6211\u4eec\u770b\u770b\u5982\u4f55\u89e3\u6790\u9762\u7684\u5b9a\u4e49\u3002\u6211\u4eec\u5df2\u521b\u5efa\u4e86\u4e00\u4e2a\u540d\u4e3a Face \u7684\u7c7b\uff0c\u5b83\u8d1f\u8d23\u89e3\u6790\u4e00\u4e2a\u9762\u7684\u5b9a\u4e49\u3002\u4e00\u4e2a Face \u662f\u7531\u4e00\u4e2a\u7d22\u5f15\u7ec4\u5217\u8868\u7ec4\u6210\u7684\uff0c\u5728\u672c\u4f8b\u4e2d\uff0c\u7531\u4e8e\u6211\u4eec\u5904\u7406\u7684\u662f\u4e09\u89d2\u5f62\uff0c\u6240\u4ee5\u6211\u4eec\u5c06\u6709\u4e09\u4e2a\u7d22\u5f15\u7ec4\u3002 \u6211\u4eec\u5c06\u521b\u5efa\u53e6\u4e00\u4e2a\u540d\u4e3a IndexGroup \u7684\u5185\u90e8\u7c7b\uff0c\u5b83\u5c06\u50a8\u5b58\u7d22\u5f15\u7ec4\u7684\u6570\u636e\u3002 protected static class IdxGroup { public static final int NO_VALUE = -1; public int idxPos; public int idxTextCoord; public int idxVecNormal; public IdxGroup() { idxPos = NO_VALUE; idxTextCoord = NO_VALUE; idxVecNormal = NO_VALUE; } } Face \u7c7b\u5982\u4e0b\u6240\u793a\uff1a protected static class Face { /** * \u9762\u4e09\u89d2\u5f62\u7684\u7d22\u5f15\u7ec4\u5217\u8868\uff08\u6bcf\u4e2a\u9762\u4e09\u4e2a\u9876\u70b9\uff09\u3002 */ private IdxGroup[] idxGroups = new IdxGroup[3]; public Face(String v1, String v2, String v3) { idxGroups = new IdxGroup[3]; // \u89e3\u6790\u884c idxGroups[0] = parseLine(v1); idxGroups[1] = parseLine(v2); idxGroups[2] = parseLine(v3); } private IdxGroup parseLine(String line) { IdxGroup idxGroup = new IdxGroup(); String[] lineTokens = line.split(\"/\"); int length = lineTokens.length; idxGroup.idxPos = Integer.parseInt(lineTokens[0]) - 1; if (length > 1) { // \u5982\u679cOBJ\u4e0d\u5b9a\u4e49\u7eb9\u7406\u5750\u6807\uff0c\u5219\u53ef\u4e3anull String textCoord = lineTokens[1]; idxGroup.idxTextCoord = textCoord.length() > 0 ? Integer.parseInt(textCoord) - 1 : IdxGroup.NO_VALUE; if (length > 2) { idxGroup.idxVecNormal = Integer.parseInt(lineTokens[2]) - 1; } } return idxGroup; } public IdxGroup[] getFaceVertexIndices() { return idxGroups; } } \u5f53\u89e3\u6790\u9762\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u6ca1\u6709\u7eb9\u7406\u4f46\u5e26\u6709\u77e2\u91cf\u6cd5\u7ebf\u7684\u5bf9\u8c61\u3002\u5728\u6b64\u60c5\u51b5\u4e0b\uff0c\u9762\u5b9a\u4e49\u53ef\u80fd\u50cf f 11//1 17//1 13//1 \u8fd9\u6837\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u68c0\u67e5\u8fd9\u4e9b\u60c5\u51b5\u3002 \u6700\u540e\uff0c\u6211\u4eec\u9700\u8981\u91cd\u65b0\u6392\u5217\u8fd9\u4e9b\u6570\u636e\u3002 Mesh \u7c7b\u9700\u8981\u56db\u4e2a\u6570\u7ec4\uff0c\u5206\u522b\u7528\u4e8e\u4f4d\u7f6e\u5750\u6807\u3001\u7eb9\u7406\u5750\u6807\u3001\u6cd5\u7ebf\u77e2\u91cf\u548c\u7d22\u5f15\u3002\u524d\u4e09\u4e2a\u6570\u7ec4\u5e94\u8be5\u5177\u6709\u76f8\u540c\u6570\u91cf\u7684\u5143\u7d20\uff0c\u56e0\u4e3a\u7d22\u5f15\u6570\u7ec4\u662f\u552f\u4e00\u7684\uff08\u6ce8\u610f\uff0c\u76f8\u540c\u6570\u91cf\u7684\u5143\u7d20\u5e76\u4e0d\u610f\u5473\u7740\u76f8\u540c\u7684\u957f\u5ea6\u3002\u9876\u70b9\u5750\u6807\u662f\u4e09\u7ef4\u7684\uff0c\u7531\u4e09\u4e2a\u6d6e\u70b9\u6570\u7ec4\u6210\u3002\u7eb9\u7406\u5750\u6807\u662f\u4e8c\u7ef4\u7684\uff0c\u7531\u4e24\u4e2a\u6d6e\u70b9\u6570\u7ec4\u6210\uff09\u3002OpenGL\u4e0d\u5141\u8bb8\u6211\u4eec\u5bf9\u6bcf\u4e2a\u5143\u7d20\u7c7b\u578b\u5b9a\u4e49\u4e0d\u540c\u7684\u7d22\u5f15\u6570\u7ec4\uff08\u5982\u679c\u53ef\u4ee5\u7684\u8bdd\uff0c\u6211\u4eec\u5c31\u4e0d\u9700\u8981\u5728\u5e94\u7528\u7eb9\u7406\u65f6\u91cd\u590d\u9876\u70b9\uff09\u3002 \u5f53\u4f60\u6253\u5f00\u4e00\u4e2aOBJ\u6587\u4ef6\u65f6\uff0c\u4f60\u9996\u5148\u53ef\u80fd\u4f1a\u770b\u5230\u50a8\u5b58\u9876\u70b9\u5750\u6807\u7684\u5217\u8868\uff0c\u6bd4\u50a8\u5b58\u7eb9\u7406\u5750\u6807\u548c\u9876\u70b9\u6570\u91cf\u7684\u5217\u8868\u7684\u5143\u7d20\u6570\u91cf\u66f4\u591a\u3002\u8fd9\u662f\u6211\u4eec\u9700\u8981\u89e3\u51b3\u7684\u95ee\u9898\u3002\u4e3e\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff0c\u5b9a\u4e49\u4e00\u4e2a\u5177\u6709\u50cf\u7d20\u9ad8\u5ea6\u7684\u6b63\u65b9\u5f62\uff08\u53ea\u662f\u4e3a\u4e86\u6f14\u793a\uff09\uff0c\u5176OBJ\u6587\u4ef6\u53ef\u80fd\u662f\u8fd9\u6837\u7684\uff08\u4e0d\u8981\u592a\u5173\u6ce8\u6cd5\u7ebf\u5750\u6807\uff0c\u56e0\u4e3a\u5b83\u53ea\u662f\u4e3a\u4e86\u6f14\u793a\uff09\u3002 v 0 0 0 v 1 0 0 v 1 1 0 v 0 1 0 vt 0 1 vt 1 1 vn 0 0 1 f 1/2/1 2/1/1 3/2/1 f 1/2/1 3/2/1 4/1/1 \u5f53\u5b8c\u6210\u5bf9\u6587\u4ef6\u7684\u89e3\u6790\u65f6\uff0c\u6211\u4eec\u5f97\u5230\u5982\u4e0b\u6240\u793a\u5217\u8868\uff08\u6bcf\u4e2a\u5143\u7d20\u7684\u6570\u5b57\u662f\u5b83\u5728\u6587\u4ef6\u4e2d\u7684\u4f4d\u7f6e\u987a\u5e8f\uff0c\u6309\u51fa\u73b0\u987a\u5e8f\u6392\u5217\uff09\uff1a \u73b0\u5728\u6211\u4eec\u5c06\u4f7f\u7528\u9762\u5b9a\u4e49\u6765\u521b\u5efa\u5305\u542b\u7d22\u5f15\u7684\u6700\u7ec8\u6570\u7ec4\u3002\u9700\u8981\u8003\u8651\u7684\u662f\uff0c\u7eb9\u7406\u5750\u6807\u4e0e\u6cd5\u7ebf\u5411\u91cf\u7684\u5b9a\u4e49\u987a\u5e8f\u4e0e\u9876\u70b9\u7684\u5b9a\u4e49\u987a\u5e8f\u4e0d\u5bf9\u5e94\u3002\u5982\u679c\u5217\u8868\u7684\u5927\u5c0f\u662f\u76f8\u540c\u7684\u5e76\u6709\u5e8f\u7684\uff0c\u90a3\u4e48\u9762\u5b9a\u4e49\u5c31\u53ea\u9700\u8981\u6bcf\u4e2a\u9876\u70b9\u4e00\u4e2a\u7d22\u5f15\u3002 \u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u6392\u5217\u6570\u636e\uff0c\u5e76\u6839\u636e\u9700\u8981\u8fdb\u884c\u76f8\u5e94\u7684\u8bbe\u7f6e\u3002\u9996\u5148\u8981\u505a\u7684\u662f\u521b\u5efa\u4e09\u4e2a\u6570\u7ec4\uff08\u7528\u4e8e\u9876\u70b9\u3001\u7eb9\u7406\u5750\u6807\u548c\u6cd5\u7ebf\uff09\u548c\u4e00\u4e2a\u7d22\u5f15\u5217\u8868\u3002\u5982\u4e0a\u6240\u8ff0\uff0c\u4e09\u4e2a\u6570\u7ec4\u5143\u7d20\u6570\u91cf\u76f8\u540c\uff08\u7b49\u4e8e\u9876\u70b9\u6570\uff09\uff0c\u9876\u70b9\u6570\u7ec4\u5c06\u662f\u9876\u70b9\u5217\u8868\u7684\u526f\u672c\u3002 \u73b0\u5728\u6211\u4eec\u5f00\u59cb\u5904\u7406\u8fd9\u4e9b\u9762\u3002\u7b2c\u4e00\u4e2a\u9762\u7684\u7b2c\u4e00\u4e2a\u7d22\u5f15\u7ec4\u662f1/2/1\u3002\u6211\u4eec\u4f7f\u7528\u7d22\u5f15\u7ec4\u4e2d\u7684\u7b2c\u4e00\u4e2a\u7d22\u5f15\uff08\u5b9a\u4e49\u51e0\u4f55\u9876\u70b9\u7684\u7d22\u5f15\uff09\u6765\u6784\u9020\u7d22\u5f15\u5217\u8868\uff0c\u79f0\u4e4b\u4e3a posIndex \u3002 \u9762\u6307\u5b9a\u6211\u4eec\u5e94\u8be5\u628a\u5360\u636e\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\u7684\u5143\u7d20\u7684\u7d22\u5f15\u6dfb\u52a0\u5230\u7d22\u5f15\u5217\u8868\u4e2d\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u5c06 posIndex \u51cf\u53bb1\u540e\u653e\u5230 indicesList \u4e2d\uff08\u5fc5\u987b\u51cf1\uff0c\u56e0\u4e3a\u6570\u7ec4\u7684\u8d77\u59cb\u662f0\uff0c\u800cOBJ\u6587\u4ef6\u683c\u5f0f\u4e2d\u8d77\u59cb\u662f1\uff09\u3002 \u7136\u540e\uff0c\u6211\u4eec\u4f7f\u7528\u7d22\u5f15\u7ec4\u7684\u5176\u4ed6\u7d22\u5f15\u6765\u8bbe\u7f6e texturesArray \u548c normalsArray \u3002\u7d22\u5f15\u7ec4\u4e2d\u7684\u7b2c\u4e8c\u4e2a\u7d22\u5f15\u662f2\uff0c\u6240\u4ee5\u6211\u4eec\u5fc5\u987b\u5c06\u7b2c\u4e8c\u4e2a\u7eb9\u7406\u5750\u6807\u653e\u5728\u4e0e\u6240\u5360\u9876\u70b9\u6307\u5b9a\u7684 posIndex \u4f4d\u7f6e\uff08V1\uff09\u76f8\u540c\u7684\u4f4d\u7f6e\u4e0a\u3002 \u7136\u540e\u6211\u4eec\u770b\u5230\u7b2c\u4e09\u4e2a\u7d22\u5f15\uff0c\u5b83\u4e3a1\uff0c\u6240\u4ee5\u8981\u505a\u7684\u662f\u5c06\u7b2c\u4e00\u4e2a\u6cd5\u7ebf\u5411\u91cf\u5750\u6807\u653e\u5728\u4e0e\u6240\u5360\u9876\u70b9\u6307\u5b9a\u7684 posIndex \u4f4d\u7f6e\uff08V1\uff09\u76f8\u540c\u7684\u4f4d\u7f6e\u4e0a\u3002 \u5728\u5904\u7406\u4e86\u7b2c\u4e00\u4e2a\u9762\u4e4b\u540e\uff0c\u6570\u7ec4\u548c\u5217\u8868\u5982\u4e0b\u6240\u793a\u3002 \u5728\u5904\u7406\u4e86\u7b2c\u4e8c\u4e2a\u9762\u4e4b\u540e\uff0c\u6570\u7ec4\u548c\u5217\u8868\u5982\u4e0b\u6240\u793a\u3002 \u7b2c\u4e8c\u4e2a\u9762\u4e5f\u5b9a\u4e49\u4e86\u5df2\u7ecf\u88ab\u8d4b\u503c\u7684\u9876\u70b9\uff0c\u4f46\u662f\u5b83\u4eec\u6709\u76f8\u540c\u7684\u503c\uff0c\u6240\u4ee5\u5904\u7406\u8fd9\u4e2a\u95ee\u9898\u4e0a\u5f88\u7b80\u5355\u3002\u6211\u89c9\u5f97\u8fd9\u4e2a\u8fc7\u7a0b\u5df2\u7ecf\u8bb2\u89e3\u5f97\u8db3\u591f\u6e05\u6670\u4e86\uff0c\u4e0d\u8fc7\u5728\u4f60\u660e\u767d\u4e4b\u524d\u53ef\u80fd\u4f1a\u6709\u4e9b\u68d8\u624b\u3002\u91cd\u65b0\u6392\u5217\u6570\u636e\u7684\u65b9\u6cd5\u5982\u4e0b\u6240\u793a\u3002\u8bf7\u8bb0\u4f4f\uff0c\u6211\u4eec\u8981\u7684\u662f\u6d6e\u70b9\u6570\u7ec4\uff0c\u6240\u4ee5\u5fc5\u987b\u628a\u9876\u70b9\u3001\u7eb9\u7406\u548c\u6cd5\u7ebf\u6570\u7ec4\u8f6c\u6362\u4e3a\u6d6e\u70b9\u6570\u7ec4\u3002\u56e0\u6b64\uff0c\u5bf9\u4e8e\u9876\u70b9\u548c\u6cd5\u7ebf\u6765\u8bf4\u6570\u7ec4\u7684\u957f\u5ea6\u662f\u9876\u70b9\u5217\u8868\u7684\u957f\u5ea6\u4e58\u4ee53\uff0c\u800c\u5bf9\u4e8e\u7eb9\u7406\u5750\u6807\u6765\u8bf4\u6570\u7ec4\u7684\u957f\u5ea6\u662f\u9876\u70b9\u5217\u8868\u7684\u957f\u5ea6\u4e58\u4ee52\u3002 private static Mesh reorderLists(List<Vector3f> posList, List<Vector2f> textCoordList, List<Vector3f> normList, List<Face> facesList) { List<Integer> indices = new ArrayList<>(); // \u6309\u58f0\u660e\u7684\u987a\u5e8f\u521b\u5efa\u4f4d\u7f6e\u6570\u7ec4 float[] posArr = new float[posList.size() * 3]; int i = 0; for (Vector3f pos : posList) { posArr[i * 3] = pos.x; posArr[i * 3 + 1] = pos.y; posArr[i * 3 + 2] = pos.z; i++; } float[] textCoordArr = new float[posList.size() * 2]; float[] normArr = new float[posList.size() * 3]; for (Face face : facesList) { IdxGroup[] faceVertexIndices = face.getFaceVertexIndices(); for (IdxGroup indValue : faceVertexIndices) { processFaceVertex(indValue, textCoordList, normList, indices, textCoordArr, normArr); } } int[] indicesArr = new int[indices.size()]; indicesArr = indices.stream().mapToInt((Integer v) -> v).toArray(); Mesh mesh = new Mesh(posArr, textCoordArr, normArr, indicesArr); return mesh; } private static void processFaceVertex(IdxGroup indices, List<Vector2f> textCoordList, List<Vector3f> normList, List<Integer> indicesList, float[] texCoordArr, float[] normArr) { // \u8bbe\u7f6e\u9876\u70b9\u5750\u6807\u7684\u7d22\u5f15 int posIndex = indices.idxPos; indicesList.add(posIndex); // \u5bf9\u7eb9\u7406\u5750\u6807\u91cd\u65b0\u6392\u5e8f if (indices.idxTextCoord >= 0) { Vector2f textCoord = textCoordList.get(indices.idxTextCoord); texCoordArr[posIndex * 2] = textCoord.x; texCoordArr[posIndex * 2 + 1] = 1 - textCoord.y; } if (indices.idxVecNormal >= 0) { // \u5bf9\u6cd5\u7ebf\u5411\u91cf\u91cd\u65b0\u6392\u5e8f Vector3f vecNorm = normList.get(indices.idxVecNormal); normArr[posIndex * 3] = vecNorm.x; normArr[posIndex * 3 + 1] = vecNorm.y; normArr[posIndex * 3 + 2] = vecNorm.z; } } \u6b64\u5916\u9700\u8981\u6ce8\u610f\u7684\u662f\u7eb9\u7406\u5750\u6807\u662fUV\u683c\u5f0f\uff0c\u6240\u4ee5Y\u5750\u6807\u4e3a\u7528\u4e00\u51cf\u53bb\u6587\u4ef6\u4e2d\u53d6\u5230\u7684\u503c\u3002 \u73b0\u5728\uff0c\u6211\u4eec\u7ec8\u4e8e\u53ef\u4ee5\u6e32\u67d3OBJ\u6a21\u578b\u3002\u6211\u51c6\u5907\u4e86\u4e00\u4e2aOBJ\u6587\u4ef6\uff0c\u5176\u4e2d\u662f\u6b64\u524d\u7ae0\u8282\u4e2d\u4f7f\u7528\u8fc7\u7684\u5177\u6709\u7eb9\u7406\u7684\u7acb\u65b9\u4f53\u3002\u4e3a\u4e86\u5728 DummyGame \u7c7b\u7684 init \u65b9\u6cd5\u4e2d\u4f7f\u7528\u5b83\uff0c\u6211\u4eec\u9700\u8981\u521b\u5efa\u4e00\u4e2a GameItem \u5b9e\u4f8b\u3002 Texture texture = new Texture(\"/textures/grassblock.png\"); mesh.setTexture(texture); GameItem gameItem = new GameItem(mesh); gameItem.setScale(0.5f); gameItem.setPosition(0, 0, -2); gameItems = new GameItem[]{gameItem}; \u7136\u540e\u5c06\u4f1a\u5f97\u5230\u4e00\u4e2a\u719f\u6089\u7684\u6709\u7eb9\u7406\u7684\u7acb\u65b9\u4f53\u3002 \u6211\u4eec\u53ef\u4ee5\u5c1d\u8bd5\u6e32\u67d3\u5176\u4ed6\u6a21\u578b\uff0c\u4f8b\u5982\u53ef\u4ee5\u4f7f\u7528\u8457\u540d\u7684Stanford Bunny\u6a21\u578b\uff08\u5b83\u53ef\u4ee5\u514d\u8d39\u4e0b\u8f7d\uff09\uff0c\u5b83\u653e\u5728resources\u6587\u4ef6\u5939\u4e2d\u3002\u8fd9\u4e2a\u6a21\u578b\u6ca1\u6709\u7eb9\u7406\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u505a\uff1a Mesh mesh = OBJLoader.loadMesh(\"/models/bunny.obj\"); GameItem gameItem = new GameItem(mesh); gameItem.setScale(1.5f); gameItem.setPosition(0, 0, -2); gameItems = new GameItem[]{gameItem}; \u8fd9\u4e2a\u6a21\u578b\u770b\u8d77\u6765\u6709\u70b9\u5947\u602a\uff0c\u56e0\u4e3a\u6ca1\u6709\u7eb9\u7406\u4e5f\u6ca1\u6709\u5149\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u80fd\u770b\u5230\u5b83\u7684\u4f53\u79ef\uff0c\u4f46\u662f\u4f60\u53ef\u4ee5\u68c0\u67e5\u6a21\u578b\u662f\u5426\u6b63\u786e\u5730\u52a0\u8f7d\u3002\u5728 Window \u7c7b\u4e2d\uff0c\u8bbe\u7f6eOpenGL\u53c2\u6570\u65f6\uff0c\u6dfb\u52a0\u8fd9\u4e00\u884c\u4ee3\u7801\u3002 glPolygonMode( GL_FRONT_AND_BACK, GL_LINE ); \u5f53\u4f60\u653e\u5927\u7684\u65f6\u5019\uff0c\u4f60\u4f1a\u770b\u5230\u5982\u4e0b\u6240\u793a\u7684\u4e1c\u897f\u3002 \u73b0\u5728\u4f60\u53ef\u4ee5\u770b\u5230\u6784\u6210\u6a21\u578b\u7684\u6240\u6709\u4e09\u89d2\u5f62\u3002 \u6709\u4e86\u8fd9\u4e2aOBJ\u8f7d\u5165\u7c7b\uff0c\u4f60\u73b0\u5728\u53ef\u4ee5\u4f7f\u7528Blender\u521b\u5efa\u6a21\u578b\u3002Blender\u662f\u4e00\u4e2a\u5f3a\u5927\u7684\u5de5\u5177\uff0c\u4f46\u521a\u5f00\u59cb\u4f7f\u7528\u5b83\u6709\u70b9\u56f0\u96be\uff0c\u5b83\u6709\u5f88\u591a\u9009\u9879\uff0c\u5f88\u591a\u5173\u8282\u7ec4\u5408\uff0c\u5728\u9996\u6b21\u4f7f\u7528\u5b83\u65f6\u4f60\u9700\u8981\u82b1\u65f6\u95f4\u505a\u5f88\u591a\u6700\u57fa\u672c\u7684\u4e8b\u60c5\u3002\u5f53\u4f7f\u7528Blender\u5bfc\u51fa\u6a21\u578b\u65f6\uff0c\u8bf7\u786e\u4fdd\u5305\u542b\u6cd5\u7ebf\u5e76\u5c06\u9762\u5bfc\u51fa\u4e3a\u4e09\u89d2\u5f62\u3002 \u5bfc\u51fa\u65f6\u8bf7\u8bb0\u5f97\u5206\u5272\u8fb9\uff0c\u56e0\u4e3a\u6211\u4eec\u4e0d\u80fd\u5c06\u591a\u4e2a\u7eb9\u7406\u5750\u6807\u6307\u5b9a\u7ed9\u540c\u4e00\u4e2a\u9876\u70b9\u3002\u6b64\u5916\uff0c\u6211\u4eec\u9700\u8981\u4e3a\u6bcf\u4e2a\u4e09\u89d2\u5f62\u5b9a\u4e49\u6cd5\u7ebf\uff0c\u800c\u4e0d\u662f\u6307\u5b9a\u7ed9\u9876\u70b9\u3002\u5982\u679c\u4f60\u5728\u67d0\u4e9b\u6a21\u578b\u4e2d\u9047\u5230\u4e86\u5149\u7167\u95ee\u9898\uff08\u5728\u4e0b\u4e00\u7ae0\u4e2d\uff09\uff0c\u4f60\u5e94\u8be5\u9a8c\u8bc1\u4e00\u4e0b\u6cd5\u7ebf\u3002\u4f60\u53ef\u4ee5\u5728Blender\u4e2d\u770b\u5230\u6cd5\u7ebf\u3002","title":"\u52a0\u8f7d\u66f4\u590d\u6742\u7684\u6a21\u578b"},{"location":"09-loading-more-complex-models/#loading-more-complex-models","text":"\u672c\u7ae0\u4e2d\u6211\u4eec\u5c06\u5b66\u4e60\u52a0\u8f7d\u5728\u5916\u90e8\u6587\u4ef6\u4e2d\u5b9a\u4e49\u7684\u590d\u6742\u6a21\u578b\u3002\u8fd9\u4e9b\u6a21\u578b\u5c06\u4f7f\u75283D\u5efa\u6a21\u5de5\u5177(\u4f8b\u5982 Blender )\u521b\u5efa\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u5df2\u7ecf\u901a\u8fc7\u76f4\u63a5\u7f16\u7801\u5b9a\u4e49\u5176\u51e0\u4f55\u56fe\u5f62\u7684\u6570\u7ec4\u6765\u521b\u5efa\u6a21\u578b\u3002\u4f46\u5728\u672c\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u5b66\u4e60\u5982\u4f55\u52a0\u8f7d\u4ee5OBJ\u683c\u5f0f\u5b9a\u4e49\u7684\u6a21\u578b\u3002 OBJ\uff08\u6216.obj\uff09\u662fWavefront Technologies\u5f00\u53d1\u7684\u4e00\u79cd\u51e0\u4f55\u5b9a\u4e49\u5f00\u653e\u6587\u4ef6\u683c\u5f0f\uff0c\u73b0\u5df2\u88ab\u5e7f\u6cdb\u91c7\u7528\u3002OBJ\u6587\u4ef6\u5b9a\u4e49\u6784\u6210\u4e09\u7ef4\u6a21\u578b\u7684\u9876\u70b9\u3001\u7eb9\u7406\u5750\u6807\u548c\u591a\u8fb9\u5f62\u3002\u8fd9\u662f\u4e00\u79cd\u76f8\u5bf9\u5bb9\u6613\u89e3\u6790\u7684\u683c\u5f0f\uff0c\u56e0\u4e3a\u5b83\u57fa\u4e8e\u6587\u672c\uff0c\u6bcf\u4e00\u884c\u5b9a\u4e49\u4e00\u4e2a\u5143\u7d20\uff08\u9876\u70b9\u3001\u7eb9\u7406\u5750\u6807\u7b49\uff09\u3002 \u5728.obj\u6587\u4ef6\u4e2d\uff0c\u6bcf\u884c\u4ee5\u4e00\u4e2a\u6807\u8bb0\u5143\u7d20\u7c7b\u578b\u7684\u6807\u8bc6\u7b26\u5f00\u5934\uff1a \u4ee5\"#\"\u5f00\u59cb\u7684\u884c\u662f\u6ce8\u91ca\u3002 \u4ee5\"v\"\u5f00\u59cb\u7684\u884c\u7528\u5750\u6807(x, y, z, w)\u5b9a\u4e49\u4e00\u4e2a\u51e0\u4f55\u9876\u70b9\u3002\u4f8b\u5982\uff1a v 0.155 0.211 0.32 1.0 \u3002 \u4ee5\"vn\"\u5f00\u59cb\u7684\u884c\u662f\u7528\u5750\u6807(x, y, z)\u5b9a\u4e49\u9876\u70b9\u6cd5\u7ebf\uff08Normals\uff09\u3002\u4f8b\u5982\uff1a vn 0.71 0.21 0.82 \u3002\u4e4b\u540e\u518d\u8ba8\u8bba\u8fd9\u4e2a\u4e1c\u897f\u3002 \u4ee5\"vt\"\u5f00\u59cb\u7684\u884c\u5b9a\u4e49\u7eb9\u7406\u5750\u6807\u3002\u4f8b\u5982\uff1a vt 0.500 1 \u3002 \u4ee5\"f\"\u5f00\u59cb\u7684\u884c\u5b9a\u4e49\u4e86\u4e00\u4e2a\u9762\u3002\u5229\u7528\u8be5\u884c\u4e2d\u7684\u6570\u636e\u53ef\u4ee5\u6784\u9020\u7d22\u5f15\u6570\u7ec4\u3002\u6211\u4eec\u53ea\u5904\u7406\u9762\u5bfc\u51fa\u4e3a\u4e09\u89d2\u5f62\u7684\u60c5\u51b5\u3002\u5b83\u53ef\u4ee5\u6709\u51e0\u79cd\u5b9a\u4e49\u65b9\u5f0f\uff1a \u5b83\u53ef\u4ee5\u5b9a\u4e49\u9876\u70b9\u4f4d\u7f6e\uff08 f v1 v2 v3 \uff09\u3002\u4f8b\u5982\uff1a f 6 3 1 \u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u8fd9\u4e2a\u4e09\u89d2\u5f62\u662f\u7531\u4f4d\u7f6e\u4e3a6\u30013\u548c1\u7684\u51e0\u4f55\u9876\u70b9\u5b9a\u4e49\u7684\uff08\u9876\u70b9\u7d22\u5f15\u603b\u662f\u4ece1\u5f00\u59cb\uff09\u3002 \u5b83\u53ef\u4ee5\u5b9a\u4e49\u9876\u70b9\u4f4d\u7f6e\u3001\u7eb9\u7406\u5750\u6807\u548c\u6cd5\u7ebf\uff08 f v1/t1/n1 v2/t2/n2 v3/t3/n3 \uff09\u3002\u4f8b\u5982\uff1a f 6/4/1 3/5/3 7/6/5 \u3002\u7b2c\u4e00\u90e8\u5206\u662f v1/t1/n1 \uff0c\u5176\u5b9a\u4e49\u4e86\u5750\u6807\u3001\u7eb9\u7406\u5750\u6807\u548c\u9876\u70b9\u6cd5\u7ebf\u3002\u770b\u5230\u8be5\u90e8\u5206\u53ef\u4ee5\u8bf4\u51fa\uff1a\u9009\u62e9\u51e0\u4f55\u9876\u70b96\u3001\u7eb9\u7406\u5750\u68074\u548c\u9876\u70b9\u6cd5\u7ebf1\u3002 OBJ\u683c\u5f0f\u6709\u66f4\u591a\u7684\u5143\u7d20\u7c7b\u578b\uff08\u5982\u4e00\u7ec4\u591a\u8fb9\u5f62\u3001\u5b9a\u4e49\u6750\u8d28\u7b49\uff09\u3002\u73b0\u5728\u6211\u4eec\u4ec5\u5b9e\u73b0\u4e0a\u8ff0\u5b50\u96c6\uff0c\u6211\u4eec\u7684OBJ\u52a0\u8f7d\u5668\u5c06\u5ffd\u7565\u5176\u4ed6\u5143\u7d20\u7c7b\u578b\u3002 \u4f46\u662f\u4ec0\u4e48\u662f\u6cd5\u7ebf\u5462\uff1f\u8ba9\u6211\u4eec\u5148\u5b9a\u4e49\u5b83\u3002\u4e00\u4e2a\u5e73\u9762\u7684\u6cd5\u7ebf\u662f\u4e00\u4e2a\u5782\u76f4\u4e8e\u8be5\u5e73\u9762\u7684\u957f\u5ea6\u4e3a1\u7684\u5411\u91cf\u3002 \u5982\u4e0a\u6240\u89c1\uff0c\u4e00\u4e2a\u5e73\u9762\u53ef\u4ee5\u6709\u4e24\u6761\u6cd5\u7ebf\uff0c\u6211\u4eec\u5e94\u8be5\u7528\u54ea\u4e00\u4e2a\u5462\uff1f\u4e09\u7ef4\u56fe\u5f62\u4e2d\u7684\u6cd5\u7ebf\u662f\u7528\u4e8e\u5149\u7167\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u5e94\u8be5\u9009\u62e9\u9762\u5411\u5149\u6e90\u7684\u6cd5\u7ebf\u3002\u6362\u8a00\u4e4b\uff0c\u6211\u4eec\u5e94\u8be5\u9009\u62e9\u6307\u5411\u6a21\u578b\u5916\u7684\u6cd5\u7ebf\u3002 \u6211\u4eec\u6709\u4e00\u4e2a\u7531\u591a\u8fb9\u5f62\u548c\u4e09\u89d2\u5f62\u7ec4\u6210\u76843D\u6a21\u578b\uff0c\u6bcf\u4e2a\u4e09\u89d2\u5f62\u7531\u4e09\u4e2a\u9876\u70b9\u7ec4\u6210\uff0c\u4e09\u89d2\u5f62\u7684\u6cd5\u7ebf\u5411\u91cf\u662f\u5782\u76f4\u4e8e\u4e09\u89d2\u5f62\u8868\u9762\u7684\u957f\u5ea6\u4e3a1\u7684\u5411\u91cf\u3002 \u9876\u70b9\u6cd5\u7ebf\u4e0e\u7279\u5b9a\u9876\u70b9\u76f8\u5173\u8054\uff0c\u5e76\u4e14\u662f\u5468\u56f4\u4e09\u89d2\u5f62\u7684\u6cd5\u7ebf\u7684\u7ec4\u5408\uff08\u5f53\u7136\u5b83\u7684\u957f\u5ea6\u7b49\u4e8e1\uff09\u3002\u5728\u8fd9\u91cc\u4f60\u53ef\u4ee5\u770b\u5230\u4e00\u4e2a3D\u7f51\u683c\u7684\u9876\u70b9\u6a21\u578b\uff08\u53d6\u81ea \u7ef4\u57fa\u767e\u79d1 \uff09 \u73b0\u5728\u6211\u4eec\u5f00\u59cb\u521b\u5efaOBJ\u52a0\u8f7d\u5668\u3002\u9996\u5148\uff0c\u6211\u4eec\u5c06\u4fee\u6539 Mesh \u7c7b\uff0c\u56e0\u4e3a\u73b0\u5728\u5fc5\u987b\u4f7f\u7528\u7eb9\u7406\u3002\u6211\u4eec\u53ef\u80fd\u52a0\u8f7d\u4e00\u4e9b\u6ca1\u6709\u5b9a\u4e49\u7eb9\u7406\u5750\u6807\u7684OBJ\u6587\u4ef6\uff0c\u56e0\u6b64\u5fc5\u987b\u80fd\u591f\u4f7f\u7528\u989c\u8272\u800c\u4e0d\u662f\u4f7f\u7528\u7eb9\u7406\u6e32\u67d3\u5b83\u4eec\u3002\u5728\u6b64\u60c5\u51b5\u4e0b\uff0c\u9762\u7684\u5b9a\u4e49\u683c\u5f0f\u4e3a\uff1a f v/n \u3002 Mesh \u7c7b\u73b0\u5728\u6709\u4e00\u4e2a\u540d\u4e3a colour \u7684\u65b0\u5c5e\u6027\u3002 private Vector3f colour; \u5e76\u4e14\u6784\u9020\u51fd\u6570\u4e0d\u518d\u9700\u8981 Texture \u3002\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\uff0c\u6211\u4eec\u5c06\u4e3a\u7eb9\u7406\u548c\u989c\u8272\u5c5e\u6027\u63d0\u4f9b get \u548c set \u65b9\u6cd5\u3002 public Mesh(float[] positions, float[] textCoords, float[] normals, int[] indices) { \u5f53\u7136\uff0c\u5728 render \u548c clear \u65b9\u6cd5\u4e2d\uff0c\u5728\u4f7f\u7528\u7eb9\u7406\u4e4b\u524d\uff0c\u5fc5\u987b\u68c0\u67e5\u7eb9\u7406\u662f\u5426\u4e3a null \u3002\u6b63\u5982\u4f60\u5728\u6784\u9020\u51fd\u6570\u4e2d\u770b\u5230\u7684\uff0c\u73b0\u5728\u9700\u8981\u4f20\u9012\u4e00\u4e2a\u540d\u4e3a normals \u7684\u65b0\u6d6e\u70b9\u6570\u7ec4\u3002\u5982\u4f55\u4f7f\u7528\u6cd5\u7ebf\u6e32\u67d3\uff1f\u7b54\u6848\u5f88\u7b80\u5355\uff0c\u5b83\u53ea\u662fVAO\u4e2d\u7684\u53e6\u4e00\u4e2aVBO\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u6dfb\u52a0\u5982\u4e0b\u4ee3\u7801\uff1a // \u9876\u70b9\u6cd5\u7ebfVBO vboId = glGenBuffers(); vboIdList.add(vboId); vecNormalsBuffer = MemoryUtil.memAllocFloat(normals.length); vecNormalsBuffer.put(normals).flip(); glBindBuffer(GL_ARRAY_BUFFER, vboId); glBufferData(GL_ARRAY_BUFFER, vecNormalsBuffer, GL_STATIC_DRAW); glEnableVertexAttribArray(2); glVertexAttribPointer(2, 3, GL_FLOAT, false, 0, 0); \u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u5b8c\u6210\u4e86\u5bf9 Mesh \u7c7b\u7684\u4fee\u6539\uff0c\u53ef\u4ee5\u4fee\u6539\u4ee3\u7801\u6765\u4f7f\u7528\u7eb9\u7406\u5750\u6807\u6216\u56fa\u5b9a\u7684\u989c\u8272\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u50cf\u8fd9\u6837\u4fee\u6539\u7247\u5143\u7740\u8272\u5668\uff1a #version 330 in vec2 outTexCoord; out vec4 fragColor; uniform sampler2D texture_sampler; uniform vec3 colour; uniform int useColour; void main() { if ( useColour == 1 ) { fragColor = vec4(colour, 1); } else { fragColor = texture(texture_sampler, outTexCoord); } } \u5982\u4f60\u6240\u89c1\uff0c\u6211\u4eec\u521b\u5efa\u4e86\u4e24\u4e2a\u65b0Uniform\uff1a colour : \u5c06\u50a8\u5b58\u57fa\u672c\u989c\u8272\u3002 useColour : \u8fd9\u662f\u4e2a\u6807\u5fd7\uff0c\u5f53\u4f60\u4e0d\u60f3\u4f7f\u7528\u7eb9\u7406\u65f6\uff0c\u5b83\u5c06\u88ab\u8bbe\u7f6e\u4e3a1\u3002 \u5728 Renderer \u7c7b\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u521b\u5efa\u8fd9\u4e24\u4e2aUniform\u3002 // \u4e3a\u9ed8\u8ba4\u989c\u8272\u4e0e\u63a7\u5236\u5b83\u7684\u6807\u5fd7\u521b\u5efaUniform shaderProgram.createUniform(\"colour\"); shaderProgram.createUniform(\"useColour\"); \u548c\u5176\u4ed6Uniform\u4e00\u6837\uff0c\u5728 Renderer \u7c7b\u7684 render \u65b9\u6cd5\u4e2d\uff0c\u6211\u4eec\u4e5f\u9700\u8981\u4e3a\u6bcf\u4e2a GameItem \u8bbe\u7f6e\u8fd9\u4e9bUniform\u7684\u503c\u3002 for(GameItem gameItem : gameItems) { Mesh mesh = gameItem.getMesh(); // \u4e3a\u8be5\u6e38\u620f\u9879\u8bbe\u7f6e\u6a21\u578b\u89c2\u5bdf\u77e9\u9635 Matrix4f modelViewMatrix = transformation.getModelViewMatrix(gameItem, viewMatrix); shaderProgram.setUniform(\"modelViewMatrix\", modelViewMatrix); // \u4e3a\u8be5\u6e38\u620f\u9879\u6e32\u67d3\u7f51\u683c shaderProgram.setUniform(\"colour\", mesh.getColour()); shaderProgram.setUniform(\"useColour\", mesh.isTextured() ? 0 : 1); mesh.render(); } \u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a OBJLoader \u7684\u65b0\u7c7b\uff0c\u8be5\u7c7b\u89e3\u6790OBJ\u6587\u4ef6\uff0c\u5e76\u7528\u5176\u4e2d\u5305\u542b\u7684\u6570\u636e\u521b\u5efa\u4e00\u4e2a Mesh \u5b9e\u4f8b\u3002\u4f60\u53ef\u80fd\u4f1a\u5728\u7f51\u4e0a\u53d1\u73b0\u4e00\u4e9b\u5176\u4ed6\u5b9e\u73b0\u53ef\u80fd\u6bd4\u8fd9\u66f4\u6709\u6548\uff0c\u4f46\u6211\u8ba4\u4e3a\u8be5\u65b9\u6848\u66f4\u5bb9\u6613\u7406\u89e3\u3002\u8fd9\u662f\u4e00\u4e2a\u5de5\u5177\u7c7b\uff0c\u5b83\u5c06\u6709\u5982\u4e0b\u9759\u6001\u65b9\u6cd5\uff1a public static Mesh loadMesh(String fileName) throws Exception { \u53c2\u6570 fileName \u6307\u5b9aOBJ\u6a21\u578b\u7684\u6587\u4ef6\u540d\u79f0\uff0c\u8be5\u6587\u4ef6\u5fc5\u987b\u5305\u542b\u5728\u7c7b\u8def\u5f84\u4e2d\u3002 \u5728\u8be5\u65b9\u6cd5\u4e2d\u6211\u4eec\u9996\u5148\u8981\u505a\u7684\u662f\u8bfb\u53d6\u6587\u4ef6\u5185\u5bb9\u5e76\u5c06\u6240\u6709\u884c\u50a8\u5b58\u5230\u4e00\u4e2a\u6570\u7ec4\u4e2d\uff0c\u7136\u540e\u521b\u5efa\u51e0\u4e2a\u5217\u8868\u6765\u50a8\u5b58\u9876\u70b9\u3001\u7eb9\u7406\u5750\u6807\u3001\u6cd5\u7ebf\u548c\u9762\u3002 List<String> lines = Utils.readAllLines(fileName); List<Vector3f> vertices = new ArrayList<>(); List<Vector2f> textures = new ArrayList<>(); List<Vector3f> normals = new ArrayList<>(); List<Face> faces = new ArrayList<>(); \u7136\u540e\u89e3\u6790\u6bcf\u4e00\u884c\uff0c\u5e76\u6839\u636e\u5f00\u5934\u6807\u8bc6\u7b26\u5f97\u5230\u9876\u70b9\u4f4d\u7f6e\u3001\u7eb9\u7406\u5750\u6807\u3001\u9876\u70b9\u6cd5\u7ebf\u6216\u9762\u5b9a\u4e49\uff0c\u6700\u540e\u91cd\u65b0\u6392\u5217\u8fd9\u4e9b\u6570\u636e\u3002 for (String line : lines) { String[] tokens = line.split(\"\\\\s+\"); switch (tokens[0]) { case \"v\": // \u51e0\u4f55\u9876\u70b9 Vector3f vec3f = new Vector3f( Float.parseFloat(tokens[1]), Float.parseFloat(tokens[2]), Float.parseFloat(tokens[3])); vertices.add(vec3f); break; case \"vt\": // \u7eb9\u7406\u5750\u6807 Vector2f vec2f = new Vector2f( Float.parseFloat(tokens[1]), Float.parseFloat(tokens[2])); textures.add(vec2f); break; case \"vn\": // \u9876\u70b9\u6cd5\u7ebf Vector3f vec3fNorm = new Vector3f( Float.parseFloat(tokens[1]), Float.parseFloat(tokens[2]), Float.parseFloat(tokens[3])); normals.add(vec3fNorm); break; case \"f\": Face face = new Face(tokens[1], tokens[2], tokens[3]); faces.add(face); break; default: // \u5ffd\u7565\u5176\u4ed6\u884c break; } } return reorderLists(vertices, textures, normals, faces); \u5728\u8bb2\u89e3\u91cd\u65b0\u6392\u5e8f\u4e4b\u524d\uff0c\u8ba9\u6211\u4eec\u770b\u770b\u5982\u4f55\u89e3\u6790\u9762\u7684\u5b9a\u4e49\u3002\u6211\u4eec\u5df2\u521b\u5efa\u4e86\u4e00\u4e2a\u540d\u4e3a Face \u7684\u7c7b\uff0c\u5b83\u8d1f\u8d23\u89e3\u6790\u4e00\u4e2a\u9762\u7684\u5b9a\u4e49\u3002\u4e00\u4e2a Face \u662f\u7531\u4e00\u4e2a\u7d22\u5f15\u7ec4\u5217\u8868\u7ec4\u6210\u7684\uff0c\u5728\u672c\u4f8b\u4e2d\uff0c\u7531\u4e8e\u6211\u4eec\u5904\u7406\u7684\u662f\u4e09\u89d2\u5f62\uff0c\u6240\u4ee5\u6211\u4eec\u5c06\u6709\u4e09\u4e2a\u7d22\u5f15\u7ec4\u3002 \u6211\u4eec\u5c06\u521b\u5efa\u53e6\u4e00\u4e2a\u540d\u4e3a IndexGroup \u7684\u5185\u90e8\u7c7b\uff0c\u5b83\u5c06\u50a8\u5b58\u7d22\u5f15\u7ec4\u7684\u6570\u636e\u3002 protected static class IdxGroup { public static final int NO_VALUE = -1; public int idxPos; public int idxTextCoord; public int idxVecNormal; public IdxGroup() { idxPos = NO_VALUE; idxTextCoord = NO_VALUE; idxVecNormal = NO_VALUE; } } Face \u7c7b\u5982\u4e0b\u6240\u793a\uff1a protected static class Face { /** * \u9762\u4e09\u89d2\u5f62\u7684\u7d22\u5f15\u7ec4\u5217\u8868\uff08\u6bcf\u4e2a\u9762\u4e09\u4e2a\u9876\u70b9\uff09\u3002 */ private IdxGroup[] idxGroups = new IdxGroup[3]; public Face(String v1, String v2, String v3) { idxGroups = new IdxGroup[3]; // \u89e3\u6790\u884c idxGroups[0] = parseLine(v1); idxGroups[1] = parseLine(v2); idxGroups[2] = parseLine(v3); } private IdxGroup parseLine(String line) { IdxGroup idxGroup = new IdxGroup(); String[] lineTokens = line.split(\"/\"); int length = lineTokens.length; idxGroup.idxPos = Integer.parseInt(lineTokens[0]) - 1; if (length > 1) { // \u5982\u679cOBJ\u4e0d\u5b9a\u4e49\u7eb9\u7406\u5750\u6807\uff0c\u5219\u53ef\u4e3anull String textCoord = lineTokens[1]; idxGroup.idxTextCoord = textCoord.length() > 0 ? Integer.parseInt(textCoord) - 1 : IdxGroup.NO_VALUE; if (length > 2) { idxGroup.idxVecNormal = Integer.parseInt(lineTokens[2]) - 1; } } return idxGroup; } public IdxGroup[] getFaceVertexIndices() { return idxGroups; } } \u5f53\u89e3\u6790\u9762\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u6ca1\u6709\u7eb9\u7406\u4f46\u5e26\u6709\u77e2\u91cf\u6cd5\u7ebf\u7684\u5bf9\u8c61\u3002\u5728\u6b64\u60c5\u51b5\u4e0b\uff0c\u9762\u5b9a\u4e49\u53ef\u80fd\u50cf f 11//1 17//1 13//1 \u8fd9\u6837\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u68c0\u67e5\u8fd9\u4e9b\u60c5\u51b5\u3002 \u6700\u540e\uff0c\u6211\u4eec\u9700\u8981\u91cd\u65b0\u6392\u5217\u8fd9\u4e9b\u6570\u636e\u3002 Mesh \u7c7b\u9700\u8981\u56db\u4e2a\u6570\u7ec4\uff0c\u5206\u522b\u7528\u4e8e\u4f4d\u7f6e\u5750\u6807\u3001\u7eb9\u7406\u5750\u6807\u3001\u6cd5\u7ebf\u77e2\u91cf\u548c\u7d22\u5f15\u3002\u524d\u4e09\u4e2a\u6570\u7ec4\u5e94\u8be5\u5177\u6709\u76f8\u540c\u6570\u91cf\u7684\u5143\u7d20\uff0c\u56e0\u4e3a\u7d22\u5f15\u6570\u7ec4\u662f\u552f\u4e00\u7684\uff08\u6ce8\u610f\uff0c\u76f8\u540c\u6570\u91cf\u7684\u5143\u7d20\u5e76\u4e0d\u610f\u5473\u7740\u76f8\u540c\u7684\u957f\u5ea6\u3002\u9876\u70b9\u5750\u6807\u662f\u4e09\u7ef4\u7684\uff0c\u7531\u4e09\u4e2a\u6d6e\u70b9\u6570\u7ec4\u6210\u3002\u7eb9\u7406\u5750\u6807\u662f\u4e8c\u7ef4\u7684\uff0c\u7531\u4e24\u4e2a\u6d6e\u70b9\u6570\u7ec4\u6210\uff09\u3002OpenGL\u4e0d\u5141\u8bb8\u6211\u4eec\u5bf9\u6bcf\u4e2a\u5143\u7d20\u7c7b\u578b\u5b9a\u4e49\u4e0d\u540c\u7684\u7d22\u5f15\u6570\u7ec4\uff08\u5982\u679c\u53ef\u4ee5\u7684\u8bdd\uff0c\u6211\u4eec\u5c31\u4e0d\u9700\u8981\u5728\u5e94\u7528\u7eb9\u7406\u65f6\u91cd\u590d\u9876\u70b9\uff09\u3002 \u5f53\u4f60\u6253\u5f00\u4e00\u4e2aOBJ\u6587\u4ef6\u65f6\uff0c\u4f60\u9996\u5148\u53ef\u80fd\u4f1a\u770b\u5230\u50a8\u5b58\u9876\u70b9\u5750\u6807\u7684\u5217\u8868\uff0c\u6bd4\u50a8\u5b58\u7eb9\u7406\u5750\u6807\u548c\u9876\u70b9\u6570\u91cf\u7684\u5217\u8868\u7684\u5143\u7d20\u6570\u91cf\u66f4\u591a\u3002\u8fd9\u662f\u6211\u4eec\u9700\u8981\u89e3\u51b3\u7684\u95ee\u9898\u3002\u4e3e\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff0c\u5b9a\u4e49\u4e00\u4e2a\u5177\u6709\u50cf\u7d20\u9ad8\u5ea6\u7684\u6b63\u65b9\u5f62\uff08\u53ea\u662f\u4e3a\u4e86\u6f14\u793a\uff09\uff0c\u5176OBJ\u6587\u4ef6\u53ef\u80fd\u662f\u8fd9\u6837\u7684\uff08\u4e0d\u8981\u592a\u5173\u6ce8\u6cd5\u7ebf\u5750\u6807\uff0c\u56e0\u4e3a\u5b83\u53ea\u662f\u4e3a\u4e86\u6f14\u793a\uff09\u3002 v 0 0 0 v 1 0 0 v 1 1 0 v 0 1 0 vt 0 1 vt 1 1 vn 0 0 1 f 1/2/1 2/1/1 3/2/1 f 1/2/1 3/2/1 4/1/1 \u5f53\u5b8c\u6210\u5bf9\u6587\u4ef6\u7684\u89e3\u6790\u65f6\uff0c\u6211\u4eec\u5f97\u5230\u5982\u4e0b\u6240\u793a\u5217\u8868\uff08\u6bcf\u4e2a\u5143\u7d20\u7684\u6570\u5b57\u662f\u5b83\u5728\u6587\u4ef6\u4e2d\u7684\u4f4d\u7f6e\u987a\u5e8f\uff0c\u6309\u51fa\u73b0\u987a\u5e8f\u6392\u5217\uff09\uff1a \u73b0\u5728\u6211\u4eec\u5c06\u4f7f\u7528\u9762\u5b9a\u4e49\u6765\u521b\u5efa\u5305\u542b\u7d22\u5f15\u7684\u6700\u7ec8\u6570\u7ec4\u3002\u9700\u8981\u8003\u8651\u7684\u662f\uff0c\u7eb9\u7406\u5750\u6807\u4e0e\u6cd5\u7ebf\u5411\u91cf\u7684\u5b9a\u4e49\u987a\u5e8f\u4e0e\u9876\u70b9\u7684\u5b9a\u4e49\u987a\u5e8f\u4e0d\u5bf9\u5e94\u3002\u5982\u679c\u5217\u8868\u7684\u5927\u5c0f\u662f\u76f8\u540c\u7684\u5e76\u6709\u5e8f\u7684\uff0c\u90a3\u4e48\u9762\u5b9a\u4e49\u5c31\u53ea\u9700\u8981\u6bcf\u4e2a\u9876\u70b9\u4e00\u4e2a\u7d22\u5f15\u3002 \u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u6392\u5217\u6570\u636e\uff0c\u5e76\u6839\u636e\u9700\u8981\u8fdb\u884c\u76f8\u5e94\u7684\u8bbe\u7f6e\u3002\u9996\u5148\u8981\u505a\u7684\u662f\u521b\u5efa\u4e09\u4e2a\u6570\u7ec4\uff08\u7528\u4e8e\u9876\u70b9\u3001\u7eb9\u7406\u5750\u6807\u548c\u6cd5\u7ebf\uff09\u548c\u4e00\u4e2a\u7d22\u5f15\u5217\u8868\u3002\u5982\u4e0a\u6240\u8ff0\uff0c\u4e09\u4e2a\u6570\u7ec4\u5143\u7d20\u6570\u91cf\u76f8\u540c\uff08\u7b49\u4e8e\u9876\u70b9\u6570\uff09\uff0c\u9876\u70b9\u6570\u7ec4\u5c06\u662f\u9876\u70b9\u5217\u8868\u7684\u526f\u672c\u3002 \u73b0\u5728\u6211\u4eec\u5f00\u59cb\u5904\u7406\u8fd9\u4e9b\u9762\u3002\u7b2c\u4e00\u4e2a\u9762\u7684\u7b2c\u4e00\u4e2a\u7d22\u5f15\u7ec4\u662f1/2/1\u3002\u6211\u4eec\u4f7f\u7528\u7d22\u5f15\u7ec4\u4e2d\u7684\u7b2c\u4e00\u4e2a\u7d22\u5f15\uff08\u5b9a\u4e49\u51e0\u4f55\u9876\u70b9\u7684\u7d22\u5f15\uff09\u6765\u6784\u9020\u7d22\u5f15\u5217\u8868\uff0c\u79f0\u4e4b\u4e3a posIndex \u3002 \u9762\u6307\u5b9a\u6211\u4eec\u5e94\u8be5\u628a\u5360\u636e\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\u7684\u5143\u7d20\u7684\u7d22\u5f15\u6dfb\u52a0\u5230\u7d22\u5f15\u5217\u8868\u4e2d\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u5c06 posIndex \u51cf\u53bb1\u540e\u653e\u5230 indicesList \u4e2d\uff08\u5fc5\u987b\u51cf1\uff0c\u56e0\u4e3a\u6570\u7ec4\u7684\u8d77\u59cb\u662f0\uff0c\u800cOBJ\u6587\u4ef6\u683c\u5f0f\u4e2d\u8d77\u59cb\u662f1\uff09\u3002 \u7136\u540e\uff0c\u6211\u4eec\u4f7f\u7528\u7d22\u5f15\u7ec4\u7684\u5176\u4ed6\u7d22\u5f15\u6765\u8bbe\u7f6e texturesArray \u548c normalsArray \u3002\u7d22\u5f15\u7ec4\u4e2d\u7684\u7b2c\u4e8c\u4e2a\u7d22\u5f15\u662f2\uff0c\u6240\u4ee5\u6211\u4eec\u5fc5\u987b\u5c06\u7b2c\u4e8c\u4e2a\u7eb9\u7406\u5750\u6807\u653e\u5728\u4e0e\u6240\u5360\u9876\u70b9\u6307\u5b9a\u7684 posIndex \u4f4d\u7f6e\uff08V1\uff09\u76f8\u540c\u7684\u4f4d\u7f6e\u4e0a\u3002 \u7136\u540e\u6211\u4eec\u770b\u5230\u7b2c\u4e09\u4e2a\u7d22\u5f15\uff0c\u5b83\u4e3a1\uff0c\u6240\u4ee5\u8981\u505a\u7684\u662f\u5c06\u7b2c\u4e00\u4e2a\u6cd5\u7ebf\u5411\u91cf\u5750\u6807\u653e\u5728\u4e0e\u6240\u5360\u9876\u70b9\u6307\u5b9a\u7684 posIndex \u4f4d\u7f6e\uff08V1\uff09\u76f8\u540c\u7684\u4f4d\u7f6e\u4e0a\u3002 \u5728\u5904\u7406\u4e86\u7b2c\u4e00\u4e2a\u9762\u4e4b\u540e\uff0c\u6570\u7ec4\u548c\u5217\u8868\u5982\u4e0b\u6240\u793a\u3002 \u5728\u5904\u7406\u4e86\u7b2c\u4e8c\u4e2a\u9762\u4e4b\u540e\uff0c\u6570\u7ec4\u548c\u5217\u8868\u5982\u4e0b\u6240\u793a\u3002 \u7b2c\u4e8c\u4e2a\u9762\u4e5f\u5b9a\u4e49\u4e86\u5df2\u7ecf\u88ab\u8d4b\u503c\u7684\u9876\u70b9\uff0c\u4f46\u662f\u5b83\u4eec\u6709\u76f8\u540c\u7684\u503c\uff0c\u6240\u4ee5\u5904\u7406\u8fd9\u4e2a\u95ee\u9898\u4e0a\u5f88\u7b80\u5355\u3002\u6211\u89c9\u5f97\u8fd9\u4e2a\u8fc7\u7a0b\u5df2\u7ecf\u8bb2\u89e3\u5f97\u8db3\u591f\u6e05\u6670\u4e86\uff0c\u4e0d\u8fc7\u5728\u4f60\u660e\u767d\u4e4b\u524d\u53ef\u80fd\u4f1a\u6709\u4e9b\u68d8\u624b\u3002\u91cd\u65b0\u6392\u5217\u6570\u636e\u7684\u65b9\u6cd5\u5982\u4e0b\u6240\u793a\u3002\u8bf7\u8bb0\u4f4f\uff0c\u6211\u4eec\u8981\u7684\u662f\u6d6e\u70b9\u6570\u7ec4\uff0c\u6240\u4ee5\u5fc5\u987b\u628a\u9876\u70b9\u3001\u7eb9\u7406\u548c\u6cd5\u7ebf\u6570\u7ec4\u8f6c\u6362\u4e3a\u6d6e\u70b9\u6570\u7ec4\u3002\u56e0\u6b64\uff0c\u5bf9\u4e8e\u9876\u70b9\u548c\u6cd5\u7ebf\u6765\u8bf4\u6570\u7ec4\u7684\u957f\u5ea6\u662f\u9876\u70b9\u5217\u8868\u7684\u957f\u5ea6\u4e58\u4ee53\uff0c\u800c\u5bf9\u4e8e\u7eb9\u7406\u5750\u6807\u6765\u8bf4\u6570\u7ec4\u7684\u957f\u5ea6\u662f\u9876\u70b9\u5217\u8868\u7684\u957f\u5ea6\u4e58\u4ee52\u3002 private static Mesh reorderLists(List<Vector3f> posList, List<Vector2f> textCoordList, List<Vector3f> normList, List<Face> facesList) { List<Integer> indices = new ArrayList<>(); // \u6309\u58f0\u660e\u7684\u987a\u5e8f\u521b\u5efa\u4f4d\u7f6e\u6570\u7ec4 float[] posArr = new float[posList.size() * 3]; int i = 0; for (Vector3f pos : posList) { posArr[i * 3] = pos.x; posArr[i * 3 + 1] = pos.y; posArr[i * 3 + 2] = pos.z; i++; } float[] textCoordArr = new float[posList.size() * 2]; float[] normArr = new float[posList.size() * 3]; for (Face face : facesList) { IdxGroup[] faceVertexIndices = face.getFaceVertexIndices(); for (IdxGroup indValue : faceVertexIndices) { processFaceVertex(indValue, textCoordList, normList, indices, textCoordArr, normArr); } } int[] indicesArr = new int[indices.size()]; indicesArr = indices.stream().mapToInt((Integer v) -> v).toArray(); Mesh mesh = new Mesh(posArr, textCoordArr, normArr, indicesArr); return mesh; } private static void processFaceVertex(IdxGroup indices, List<Vector2f> textCoordList, List<Vector3f> normList, List<Integer> indicesList, float[] texCoordArr, float[] normArr) { // \u8bbe\u7f6e\u9876\u70b9\u5750\u6807\u7684\u7d22\u5f15 int posIndex = indices.idxPos; indicesList.add(posIndex); // \u5bf9\u7eb9\u7406\u5750\u6807\u91cd\u65b0\u6392\u5e8f if (indices.idxTextCoord >= 0) { Vector2f textCoord = textCoordList.get(indices.idxTextCoord); texCoordArr[posIndex * 2] = textCoord.x; texCoordArr[posIndex * 2 + 1] = 1 - textCoord.y; } if (indices.idxVecNormal >= 0) { // \u5bf9\u6cd5\u7ebf\u5411\u91cf\u91cd\u65b0\u6392\u5e8f Vector3f vecNorm = normList.get(indices.idxVecNormal); normArr[posIndex * 3] = vecNorm.x; normArr[posIndex * 3 + 1] = vecNorm.y; normArr[posIndex * 3 + 2] = vecNorm.z; } } \u6b64\u5916\u9700\u8981\u6ce8\u610f\u7684\u662f\u7eb9\u7406\u5750\u6807\u662fUV\u683c\u5f0f\uff0c\u6240\u4ee5Y\u5750\u6807\u4e3a\u7528\u4e00\u51cf\u53bb\u6587\u4ef6\u4e2d\u53d6\u5230\u7684\u503c\u3002 \u73b0\u5728\uff0c\u6211\u4eec\u7ec8\u4e8e\u53ef\u4ee5\u6e32\u67d3OBJ\u6a21\u578b\u3002\u6211\u51c6\u5907\u4e86\u4e00\u4e2aOBJ\u6587\u4ef6\uff0c\u5176\u4e2d\u662f\u6b64\u524d\u7ae0\u8282\u4e2d\u4f7f\u7528\u8fc7\u7684\u5177\u6709\u7eb9\u7406\u7684\u7acb\u65b9\u4f53\u3002\u4e3a\u4e86\u5728 DummyGame \u7c7b\u7684 init \u65b9\u6cd5\u4e2d\u4f7f\u7528\u5b83\uff0c\u6211\u4eec\u9700\u8981\u521b\u5efa\u4e00\u4e2a GameItem \u5b9e\u4f8b\u3002 Texture texture = new Texture(\"/textures/grassblock.png\"); mesh.setTexture(texture); GameItem gameItem = new GameItem(mesh); gameItem.setScale(0.5f); gameItem.setPosition(0, 0, -2); gameItems = new GameItem[]{gameItem}; \u7136\u540e\u5c06\u4f1a\u5f97\u5230\u4e00\u4e2a\u719f\u6089\u7684\u6709\u7eb9\u7406\u7684\u7acb\u65b9\u4f53\u3002 \u6211\u4eec\u53ef\u4ee5\u5c1d\u8bd5\u6e32\u67d3\u5176\u4ed6\u6a21\u578b\uff0c\u4f8b\u5982\u53ef\u4ee5\u4f7f\u7528\u8457\u540d\u7684Stanford Bunny\u6a21\u578b\uff08\u5b83\u53ef\u4ee5\u514d\u8d39\u4e0b\u8f7d\uff09\uff0c\u5b83\u653e\u5728resources\u6587\u4ef6\u5939\u4e2d\u3002\u8fd9\u4e2a\u6a21\u578b\u6ca1\u6709\u7eb9\u7406\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u505a\uff1a Mesh mesh = OBJLoader.loadMesh(\"/models/bunny.obj\"); GameItem gameItem = new GameItem(mesh); gameItem.setScale(1.5f); gameItem.setPosition(0, 0, -2); gameItems = new GameItem[]{gameItem}; \u8fd9\u4e2a\u6a21\u578b\u770b\u8d77\u6765\u6709\u70b9\u5947\u602a\uff0c\u56e0\u4e3a\u6ca1\u6709\u7eb9\u7406\u4e5f\u6ca1\u6709\u5149\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u80fd\u770b\u5230\u5b83\u7684\u4f53\u79ef\uff0c\u4f46\u662f\u4f60\u53ef\u4ee5\u68c0\u67e5\u6a21\u578b\u662f\u5426\u6b63\u786e\u5730\u52a0\u8f7d\u3002\u5728 Window \u7c7b\u4e2d\uff0c\u8bbe\u7f6eOpenGL\u53c2\u6570\u65f6\uff0c\u6dfb\u52a0\u8fd9\u4e00\u884c\u4ee3\u7801\u3002 glPolygonMode( GL_FRONT_AND_BACK, GL_LINE ); \u5f53\u4f60\u653e\u5927\u7684\u65f6\u5019\uff0c\u4f60\u4f1a\u770b\u5230\u5982\u4e0b\u6240\u793a\u7684\u4e1c\u897f\u3002 \u73b0\u5728\u4f60\u53ef\u4ee5\u770b\u5230\u6784\u6210\u6a21\u578b\u7684\u6240\u6709\u4e09\u89d2\u5f62\u3002 \u6709\u4e86\u8fd9\u4e2aOBJ\u8f7d\u5165\u7c7b\uff0c\u4f60\u73b0\u5728\u53ef\u4ee5\u4f7f\u7528Blender\u521b\u5efa\u6a21\u578b\u3002Blender\u662f\u4e00\u4e2a\u5f3a\u5927\u7684\u5de5\u5177\uff0c\u4f46\u521a\u5f00\u59cb\u4f7f\u7528\u5b83\u6709\u70b9\u56f0\u96be\uff0c\u5b83\u6709\u5f88\u591a\u9009\u9879\uff0c\u5f88\u591a\u5173\u8282\u7ec4\u5408\uff0c\u5728\u9996\u6b21\u4f7f\u7528\u5b83\u65f6\u4f60\u9700\u8981\u82b1\u65f6\u95f4\u505a\u5f88\u591a\u6700\u57fa\u672c\u7684\u4e8b\u60c5\u3002\u5f53\u4f7f\u7528Blender\u5bfc\u51fa\u6a21\u578b\u65f6\uff0c\u8bf7\u786e\u4fdd\u5305\u542b\u6cd5\u7ebf\u5e76\u5c06\u9762\u5bfc\u51fa\u4e3a\u4e09\u89d2\u5f62\u3002 \u5bfc\u51fa\u65f6\u8bf7\u8bb0\u5f97\u5206\u5272\u8fb9\uff0c\u56e0\u4e3a\u6211\u4eec\u4e0d\u80fd\u5c06\u591a\u4e2a\u7eb9\u7406\u5750\u6807\u6307\u5b9a\u7ed9\u540c\u4e00\u4e2a\u9876\u70b9\u3002\u6b64\u5916\uff0c\u6211\u4eec\u9700\u8981\u4e3a\u6bcf\u4e2a\u4e09\u89d2\u5f62\u5b9a\u4e49\u6cd5\u7ebf\uff0c\u800c\u4e0d\u662f\u6307\u5b9a\u7ed9\u9876\u70b9\u3002\u5982\u679c\u4f60\u5728\u67d0\u4e9b\u6a21\u578b\u4e2d\u9047\u5230\u4e86\u5149\u7167\u95ee\u9898\uff08\u5728\u4e0b\u4e00\u7ae0\u4e2d\uff09\uff0c\u4f60\u5e94\u8be5\u9a8c\u8bc1\u4e00\u4e0b\u6cd5\u7ebf\u3002\u4f60\u53ef\u4ee5\u5728Blender\u4e2d\u770b\u5230\u6cd5\u7ebf\u3002","title":"\u52a0\u8f7d\u66f4\u590d\u6742\u7684\u6a21\u578b\uff08Loading more complex models\uff09"},{"location":"10-let-there-be-light/","text":"\u8981\u6709\u5149\uff08Let there be light\uff09 \u5728\u672c\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u5b66\u4e60\u5982\u4f55\u4e3a3D\u6e38\u620f\u5f15\u64ce\u6dfb\u52a0\u5149\u7167\u3002\u6211\u4eec\u4e0d\u4f1a\u53bb\u5b9e\u73b0\u4e00\u4e2a\u5b8c\u7f8e\u7684\u5149\u7167\u6a21\u578b\uff0c\u56e0\u4e3a\u629b\u5f00\u590d\u6742\u6027\u4e0d\u8c08\uff0c\u5b83\u8fd8\u9700\u8981\u6d88\u8017\u5927\u91cf\u7684\u8ba1\u7b97\u673a\u8d44\u6e90\uff0c\u76f8\u53cd\u6211\u4eec\u53ea\u9700\u8981\u4e00\u4e2a\u8fd1\u4f3c\u7684\u3001\u50cf\u6837\u7684\u5149\u7167\u6548\u679c\uff1a\u6211\u4eec\u5c06\u4f7f\u7528\u540d\u4e3a Phong \u7684\u7740\u8272\u7b97\u6cd5\uff08\u7531Bui Tuong Phong\u5f00\u53d1\uff09\u3002\u53e6\u4e00\u4e2a\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u6211\u4eec\u5c06\u53ea\u6a21\u62df\u5149\u7167\uff0c\u4f46\u4e0d\u4f1a\u6a21\u62df\u8fd9\u4e9b\u5149\u7167\u6240\u4ea7\u751f\u7684\u9634\u5f71\uff08\u8fd9\u5c06\u5728\u540e\u7eed\u7ae0\u8282\u4e2d\u5b9e\u73b0\uff09\u3002 \u5728\u5f00\u59cb\u4e4b\u524d\uff0c\u5148\u5b9a\u4e49\u51e0\u4e2a\u5149\u7167\u7c7b\u578b\uff1a \u70b9\u5149\u6e90\uff08Point Light\uff09 \uff1a\u8fd9\u79cd\u5149\u6a21\u62df\u7684\u662f\u4e00\u4e2a\u7531\u70b9\u5411\u7a7a\u95f4\u5404\u4e2a\u65b9\u5411\u5747\u5300\u53d1\u5c04\u7684\u5149\u6e90\u3002 \u805a\u5149\u6e90\uff08Spot Light\uff09 \uff1a\u8fd9\u79cd\u5149\u6a21\u62df\u4ece\u7a7a\u95f4\u4e2d\u7684\u70b9\u53d1\u5c04\u7684\u5149\u6e90\uff0c\u4f46\u4e0d\u662f\u5411\u6240\u6709\u65b9\u5411\u4e0a\u53d1\u5c04\uff0c\u800c\u662f\u9650\u5b9a\u5728\u4e86\u4e00\u4e2a\u9525\u5f62\u65b9\u5411\u4e0a\u3002 \u5e73\u884c\u5149\uff08Directional Light\uff09 \uff1a\u8fd9\u79cd\u5149\u6a21\u62df\u4e86\u592a\u9633\u5149\uff0c3D\u573a\u666f\u4e2d\u7684\u6240\u6709\u7269\u4f53\u90fd\u4f1a\u53d7\u5230\u6765\u81ea\u7279\u5b9a\u65b9\u5411\u7684\u5e73\u884c\u5149\u7ebf\u7684\u7167\u5c04\u3002\u65e0\u8bba\u7269\u4f53\u662f\u8fd1\u6291\u6216\u662f\u8fdc\uff0c\u5149\u7ebf\u603b\u662f\u4ee5\u76f8\u540c\u89d2\u5ea6\u7167\u5c04\u5728\u7269\u4f53\u4e0a\u3002 \u73af\u5883\u5149\uff08Ambient Light\uff09 \uff1a\u8fd9\u79cd\u5149\u6765\u81ea\u7a7a\u95f4\u7684\u4efb\u4f55\u65b9\u5411\uff0c\u5e76\u4ee5\u76f8\u540c\u7684\u5f3a\u5ea6\u7167\u4eae\u6240\u6709\u7269\u4f53\u3002 \u56e0\u6b64\uff0c\u4e3a\u4e86\u6a21\u62df\u5149\u7167\uff0c\u6211\u4eec\u9700\u8981\u8003\u8651\u5149\u7167\u7684\u7c7b\u578b\u3001\u4f4d\u7f6e\u548c\u5176\u4ed6\u4e00\u4e9b\u53c2\u6570\uff0c\u5982\u989c\u8272\u3002\u5f53\u7136\uff0c\u6211\u4eec\u8fd8\u5fc5\u987b\u8003\u8651\u7269\u4f53\u5982\u4f55\u53d7\u5149\u7167\u5f71\u54cd\u5438\u6536\u548c\u53cd\u5c04\u5149\u3002 Phong\u7740\u8272\u7b97\u6cd5\u5c06\u6a21\u62df\u5149\u7ebf\u5bf9\u6211\u4eec\u6a21\u578b\u4e2d\u6bcf\u4e2a\u70b9\u7684\u5f71\u54cd\uff0c\u5373\u5bf9\u6bcf\u4e2a\u9876\u70b9\u7684\u5f71\u54cd\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u5b83\u88ab\u79f0\u4e3a\u5c40\u90e8\u5149\u7167\u6a21\u578b\u7684\u539f\u56e0\uff0c\u8fd9\u4e5f\u662f\u8be5\u7b97\u6cd5\u4e0d\u80fd\u8ba1\u7b97\u9634\u5f71\u7684\u539f\u56e0\uff1a\u5b83\u53ea\u4f1a\u8ba1\u7b97\u5e94\u7528\u5230\u6bcf\u4e2a\u9876\u70b9\u7684\u5149\u7167\uff0c\u800c\u4e0d\u8003\u8651\u9876\u70b9\u662f\u5426\u4f4d\u4e8e\u906e\u5149\u7269\u4f53\u4e4b\u540e\u3002\u6211\u4eec\u5c06\u5728\u6b64\u540e\u7684\u7ae0\u8282\u4e2d\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\u4f46\u6b63\u56e0\u5982\u6b64\uff0c\u5b83\u662f\u4e00\u79cd\u975e\u5e38\u7b80\u5355\u5feb\u901f\u7684\u7b97\u6cd5\uff0c\u5e76\u4e14\u53ef\u4ee5\u63d0\u4f9b\u975e\u5e38\u597d\u7684\u6548\u679c\u3002\u6211\u4eec\u5c06\u5728\u6b64\u5b9e\u73b0\u4e00\u4e2a\u6ca1\u6709\u6df1\u5165\u8003\u8651\u6750\u8d28\u5f71\u54cd\u7684\u7b80\u5316\u7248\u672c\u3002 Phong\u7b97\u6cd5\u63d0\u4f9b\u4e86\u4e09\u79cd\u5149\u7167\u5206\u91cf\uff1a \u73af\u5883\u5149\uff08Ambient Light\uff09 \uff1a\u6a21\u62df\u6765\u81ea\u4efb\u4f55\u65b9\u5411\u7684\u5149\u7167\uff0c\u5b83\u5c06\u7167\u4eae\uff08\u9700\u8981\u5bf9\u5e94\u5f3a\u5ea6\u503c\uff09\u672a\u53d7\u4efb\u4f55\u5149\u7ebf\u7167\u5c04\u7684\u533a\u57df\uff0c\u5c31\u50cf\u80cc\u666f\u5149\u3002 \u6f2b\u53cd\u5c04\uff08Diffuse Reflectance\uff09 \uff1a\u8003\u8651\u5230\u9762\u5411\u5149\u6e90\u7684\u8868\u9762\u66f4\u4eae\u3002 \u955c\u9762\u53cd\u5c04\uff08Specular Reflectance\uff09 \uff1a\u6a21\u62df\u5149\u7ebf\u5728\u629b\u5149\u6216\u91d1\u5c5e\u8868\u9762\u4e0a\u7684\u53cd\u5c04\u3002 \u6700\u540e\uff0c\u6211\u4eec\u8981\u5f97\u5230\u4e00\u4e2a\u56e0\u6570\uff0c\u5c06\u5b83\u4e0e\u6307\u5b9a\u7247\u5143\u7684\u989c\u8272\u76f8\u4e58\uff0c\u6839\u636e\u5b83\u6240\u53d7\u7684\u5149\u7167\u5c06\u8be5\u989c\u8272\u53d8\u5f97\u66f4\u4eae\u6216\u66f4\u6697\u3002\u4ee4 A \u4e3a\u73af\u5883\u5149\u3001 D \u4e3a\u6f2b\u53cd\u5c04\u5149\u3001 S \u4e3a\u955c\u9762\u53cd\u5c04\u5149\uff0c\u76ee\u6807\u56e0\u6570\u5c06\u662f\u4e0a\u8ff0\u5206\u91cf\u7684\u603b\u548c\uff1a L = A + D + S \u8fd9\u4e9b\u5206\u91cf\u5176\u5b9e\u5c31\u662f\u989c\u8272\uff0c\u4e5f\u5c31\u662f\u6bcf\u4e2a\u5149\u7167\u5206\u91cf\u6240\u8d21\u732e\u7684\u989c\u8272\u5206\u91cf\u3002\u8fd9\u662f\u56e0\u4e3a\u5149\u7167\u5206\u91cf\u4e0d\u4ec5\u4f1a\u63d0\u4f9b\u4e00\u5b9a\u7a0b\u5ea6\u7684\u4eae\u5ea6\uff0c\u8fd8\u4f1a\u6539\u53d8\u6a21\u578b\u7684\u989c\u8272\u3002\u5728\u6211\u4eec\u7684\u7247\u5143\u7740\u8272\u5668\u4e2d\uff0c\u53ea\u9700\u5c06\u8be5\u5149\u7167\u7684\u989c\u8272\u4e0e\u539f\u59cb\u7247\u5143\u989c\u8272\uff08\u4ece\u7eb9\u7406\u6216\u57fa\u8272\u83b7\u5f97\u7684\uff09\u76f8\u4e58\u5373\u53ef\u3002 \u6211\u4eec\u8fd8\u53ef\u4ee5\u4e3a\u76f8\u540c\u7684\u6750\u8d28\u6307\u5b9a\u4e0d\u540c\u7684\u989c\u8272\uff0c\u8fd9\u4e9b\u989c\u8272\u5c06\u7528\u4e8e\u73af\u5883\u5149\u3001\u6f2b\u53cd\u5c04\u548c\u955c\u9762\u53cd\u5c04\u5206\u91cf\u3002\u56e0\u6b64\uff0c\u8fd9\u4e9b\u5206\u91cf\u5c06\u7531\u6750\u8d28\u5173\u8054\u7684\u989c\u8272\u8c03\u6574\u3002\u5982\u679c\u6750\u8d28\u6709\u7eb9\u7406\uff0c\u6211\u4eec\u53ea\u9700\u4e3a\u6bcf\u4e2a\u5206\u91cf\u4f7f\u7528\u4e00\u4e2a\u7eb9\u7406\u3002 \u6240\u4ee5\u5bf9\u4e8e\u65e0\u7eb9\u7406\u7684\u6750\u8d28\u7684\u6700\u7ec8\u989c\u8272\u5c06\u662f\uff1a L = A * \u73af\u5883\u5149\u7684\u989c\u8272 + D * \u6f2b\u53cd\u5c04\u7684\u989c\u8272 + S * \u955c\u9762\u53cd\u5c04\u7684\u989c\u8272 \u5bf9\u4e8e\u6709\u7eb9\u7406\u7684\u6750\u8d28\u7684\u6700\u7ec8\u989c\u8272\u5c06\u662f\uff1a L = A * \u7eb9\u7406\u989c\u8272 + D * \u7eb9\u7406\u989c\u8272 + S * \u7eb9\u7406\u989c\u8272 \u73af\u5883\u5149\u5206\u91cf \u8ba9\u6211\u4eec\u6765\u770b\u770b\u7b2c\u4e00\u4e2a\u5206\u91cf\uff0c\u5373\u73af\u5883\u5149\u5206\u91cf\uff0c\u5b83\u53ea\u662f\u4e00\u4e2a\u5e38\u91cf\uff0c\u4f1a\u4f7f\u6211\u4eec\u7684\u6240\u6709\u7269\u4f53\u53d8\u5f97\u66f4\u4eae\u6216\u66f4\u6697\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5b83\u6765\u6a21\u62df\u4e00\u5929\u4e2d\u7279\u5b9a\u65f6\u95f4\u6bb5\u5185\u7684\u5149\u7167\uff08\u9ece\u660e\u3001\u9ec4\u660f\u7b49\uff09\uff0c\u4e5f\u53ef\u4ee5\u7528\u5b83\u6765\u6dfb\u52a0\u4e00\u4e9b\u4e0d\u76f4\u63a5\u88ab\u5149\u7ebf\u7167\u5c04\u5230\uff0c\u4f46\u53ef\u4ee5\u4ee5\u7b80\u5355\u7684\u65b9\u5f0f\u88ab\u95f4\u63a5\u5149\u7ebf\u7167\u5c04\uff08\u6bd4\u5982\u53cd\u5c04\uff09\u5230\u7684\u70b9\u7684\u5149\u7167\u3002 \u73af\u5883\u5149\u662f\u6700\u5bb9\u6613\u8ba1\u7b97\u7684\u5206\u91cf\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4f20\u9012\u4e00\u79cd\u989c\u8272\uff0c\u5b83\u5c06\u4e0e\u57fa\u8272\u76f8\u4e58\uff0c\u4ee5\u8c03\u6574\u8be5\u57fa\u8272\u3002\u5047\u5982\u6211\u4eec\u5df2\u7ecf\u786e\u5b9a\u7247\u5143\u7684\u989c\u8272\u662f (1.0, 0.0, 0.0) \uff0c\u5373\u7ea2\u8272\u3002\u5982\u679c\u6ca1\u6709\u73af\u5883\u5149\u65f6\uff0c\u5b83\u5c06\u663e\u793a\u4e3a\u5b8c\u5168\u7ea2\u8272\u7684\u7247\u5143\u3002\u5982\u679c\u6211\u4eec\u5c06\u73af\u5883\u5149\u8bbe\u7f6e\u4e3a (0.5, 0.5, 0.5) \uff0c\u5219\u6700\u7ec8\u989c\u8272\u5c06\u4e3a (0.5, 0.0, 0.0) \uff0c\u5176\u5b9e\u5c31\u662f\u53d8\u6697\u7684\u7ea2\u8272\u3002\u8fd9\u79cd\u5149\u7167\u4f1a\u4ee5\u76f8\u540c\u7684\u65b9\u5f0f\u4f7f\u6240\u6709\u7247\u5143\u53d8\u6697\uff08\u79f0\u5176\u4e3a\u4f7f\u7269\u4f53\u53d8\u6697\u7684\u5149\u4f3c\u4e4e\u6709\u70b9\u5947\u602a\uff0c\u4e8b\u5b9e\u4e0a\u8fd9\u5c31\u662f\u6211\u4eec\u5f97\u5230\u7684\u6548\u679c\uff09\u3002\u6b64\u5916\uff0c\u5982\u679c\u5149\u8272\u7684RGB\u5206\u91cf\u4e0d\u76f8\u540c\uff0c\u5b83\u8fd8\u53ef\u4ee5\u4e3a\u7247\u5143\u6dfb\u52a0\u4e00\u4e9b\u989c\u8272\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u4e00\u4e2a\u77e2\u91cf\u6765\u8c03\u8282\u73af\u5883\u5149\u5f3a\u5ea6\u548c\u989c\u8272\u3002 \u6f2b\u53cd\u5c04 \u73b0\u5728\u6211\u4eec\u6765\u8c08\u8c08\u6f2b\u53cd\u5c04\uff0c\u5b83\u6a21\u62df\u4e86\u8fd9\u6837\u4e00\u4e2a\u73b0\u8c61\uff1a\u4e0e\u5149\u7ebf\u5782\u76f4\u7684\u9762\u770b\u8d77\u6765\u6bd4\u4ee5\u66f4\u63a5\u8fd1\u4e0e\u5149\u7ebf\u5e73\u884c\u7684\u89d2\u5ea6\u63a5\u6536\u5149\u7ebf\u7684\u9762\u66f4\u4eae\u3002\u4e00\u4e2a\u7269\u4f53\u63a5\u6536\u5230\u7684\u5149\u8d8a\u591a\uff0c\u5176\u5149\u5bc6\u5ea6\uff08\u5728\u6b64\u8fd9\u6837\u79f0\u547c\uff09\u5c31\u8d8a\u9ad8\u3002 \u4f46\u662f\uff0c\u6211\u4eec\u8be5\u5982\u4f55\u8ba1\u7b97\u5b83\uff1f\u4f60\u8fd8\u8bb0\u5f97\u4e0a\u4e00\u7ae0\u4e2d\u6211\u4eec\u4ecb\u7ecd\u8fc7\u7684\u6cd5\u7ebf\u7684\u6982\u5ff5\u5417\uff1f\u6cd5\u7ebf\u662f\u5782\u76f4\u4e8e\u5e73\u9762\u5e76\u4e14\u957f\u5ea6\u4e3a1\u7684\u5411\u91cf\u3002\u56e0\u6b64\uff0c\u8ba9\u6211\u4eec\u4e3a\u4e0a\u56fe\u4e2d\u7684\u4e09\u4e2a\u70b9\u7684\u7ed8\u5236\u6cd5\u7ebf\u3002\u5982\u4f60\u6240\u89c1\uff0c\u6bcf\u4e2a\u70b9\u7684\u6cd5\u7ebf\u5c06\u662f\u5782\u76f4\u4e8e\u6bcf\u4e2a\u70b9\u7684\u5207\u5e73\u9762\u7684\u5411\u91cf\u3002\u6211\u4eec\u4e0d\u7528\u7ed8\u5236\u6765\u81ea\u5149\u6e90\u7684\u5149\u7ebf\uff0c\u800c\u662f\u7ed8\u5236\u4ece\u6bcf\u4e2a\u70b9\u5230\u5149\u6e90\uff08\u5373\u76f8\u53cd\u7684\u65b9\u5411\uff09\u7684\u5411\u91cf\u3002 \u5982\u4f60\u6240\u89c1\uff0c P1 \u70b9\u7684\u6cd5\u7ebf N1 \u4e0e\u6307\u5411\u5149\u6e90\u7684\u5411\u91cf\u5e73\u884c\uff0c\u8be5\u6cd5\u7ebf\u7684\u65b9\u5411\u4e0e\u5149\u7ebf\u7684\u65b9\u5411\u76f8\u53cd\uff08 N1 \u5df2\u88ab\u79fb\u52a8\uff0c\u4ee5\u4fbf\u4f60\u53ef\u4ee5\u770b\u5230\u5b83\uff0c\u4f46\u8fd9\u5728\u6570\u5b66\u4e0a\u662f\u7b49\u4ef7\u7684\uff09\u3002 P1 \u4e0e\u6307\u5411\u5149\u6e90\u7684\u5411\u91cf\u6240\u6210\u7684\u5939\u89d2\u7b49\u4e8e 0 \u3002\u56e0\u4e3a\u5b83\u7684\u5207\u5e73\u9762\u5782\u76f4\u4e8e\u5149\u6e90\uff0c\u6240\u4ee5 P1 \u5c06\u662f\u6700\u4eae\u7684\u70b9\u3002 P2 \u70b9\u7684\u6cd5\u7ebf N2 \u4e0e\u6307\u5411\u5149\u6e90\u7684\u5411\u91cf\u6240\u6210\u7684\u5939\u89d2\u7ea6\u4e3a30\u5ea6\uff0c\u6240\u4ee5\u5b83\u5e94\u8be5\u6bd4 P1 \u66f4\u6697\u3002\u6700\u540e\uff0c P3 \u7684\u6cd5\u7ebf N3 \u4e5f\u4e0e\u6307\u5411\u5149\u6e90\u7684\u5411\u91cf\u5e73\u884c\uff0c\u4f46\u4e24\u4e2a\u5411\u91cf\u7684\u65b9\u5411\u76f8\u53cd\u3002 P3 \u4e0e\u6307\u5411\u5149\u6e90\u7684\u5411\u91cf\u7684\u89d2\u5ea6\u4e3a180\u5ea6\uff0c\u6240\u4ee5\u6839\u672c\u4e0d\u5e94\u8be5\u63a5\u6536\u5230\u4efb\u4f55\u5149\u7ebf\u3002 \u56e0\u6b64\uff0c\u6211\u4eec\u4f3c\u4e4e\u5f97\u5230\u4e86\u4e00\u4e2a\u8ba1\u7b97\u67d0\u70b9\u7684\u5149\u7167\u5f3a\u5ea6\u7684\u597d\u65b9\u6cd5\uff0c\u5149\u5f3a\u4e0e\u8be5\u70b9\u7684\u6cd5\u7ebf\u548c\u8be5\u70b9\u6307\u5411\u5149\u6e90\u7684\u5411\u91cf\u4e4b\u95f4\u7684\u5939\u89d2\u5927\u5c0f\u6709\u5173\u3002\u4f46\u6211\u4eec\u8981\u600e\u4e48\u8ba1\u7b97\u5b83\u5462\uff1f \u6709\u4e00\u4e2a\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u7684\u6570\u5b66\u8fd0\u7b97\u2014\u2014\u2014\u2014\u6570\u91cf\u79ef\uff08\u53c8\u79f0\u4e3a\u70b9\u79ef\uff09\u3002\u8be5\u8fd0\u7b97\u9700\u8981\u4e24\u4e2a\u5411\u91cf\u5e76\u5f97\u5230\u4e00\u4e2a\u6570\u5b57\uff08\u6807\u91cf\uff09\uff0c\u5982\u679c\u5b83\u4eec\u4e4b\u95f4\u7684\u89d2\u5ea6\u8f83\u5c0f\uff0c\u5219\u5f97\u5230\u4e00\u4e2a\u6b63\u6570\uff1b\u5982\u679c\u5b83\u4eec\u4e4b\u95f4\u7684\u89d2\u5ea6\u5f88\u5927\uff0c\u5219\u5f97\u5230\u4e00\u4e2a\u8d1f\u6570\u3002\u5982\u679c\u4e24\u4e2a\u5411\u91cf\u90fd\u88ab\u5f52\u4e00\u5316\uff0c\u5373\u4e24\u8005\u7684\u957f\u5ea6\u90fd\u7b49\u4e8e1\uff0c\u90a3\u4e48\u6570\u91cf\u79ef\u7684\u7ed3\u679c\u5c06\u4ecb\u4e8e -1 \u548c 1 \u4e4b\u95f4\u3002\u5982\u679c\u4e24\u4e2a\u5411\u91cf\u7684\u65b9\u5411\u76f8\u540c\uff08\u5373\u5939\u89d2\u4e3a 0 \uff09\uff0c\u5219\u6570\u91cf\u79ef\u4e3a1\uff1b\u5982\u679c\u4e24\u4e2a\u5411\u91cf\u5939\u89d2\u4e3a\u76f4\u89d2\uff0c\u5219\u5b83\u7684\u503c\u4e3a 0 \uff1b\u5982\u679c\u4e24\u4e2a\u5411\u91cf\u7684\u65b9\u5411\u76f8\u53cd\uff0c\u5219\u4e3a -1 \u3002 \u6211\u4eec\u5b9a\u4e49\u4e24\u4e2a\u5411\u91cf\uff0c v1 \u548c v2 \uff0c\u5e76\u4ee5 \u03b1 \u4f5c\u4e3a\u5b83\u4eec\u4e4b\u95f4\u7684\u5939\u89d2\u3002\u6570\u91cf\u79ef\u7684\u5b9a\u4e49\u5982\u4e0b\uff1a \u5982\u679c\u4e24\u4e2a\u5411\u91cf\u90fd\u5f52\u4e00\u5316\uff0c\u5373\u5b83\u4eec\u7684\u957f\u5ea6\uff0c\u6216\u5b83\u4eec\u7684\u6a21\u957f\u7b49\u4e8e1\uff0c\u5b83\u4eec\u7684\u6570\u91cf\u79ef\u5373\u4e3a\u5939\u89d2\u7684\u4f59\u5f26\u503c\u3002\u6211\u4eec\u5c06\u4f7f\u7528\u8be5\u8fd0\u7b97\u6765\u8ba1\u7b97\u6f2b\u53cd\u5c04\u5206\u91cf\u3002 \u6240\u4ee5\u6211\u4eec\u9700\u8981\u8ba1\u7b97\u6307\u5411\u5149\u6e90\u7684\u5411\u91cf\uff0c\u8be5\u600e\u4e48\u505a\u5462\uff1f\u5047\u5982\u6211\u4eec\u6709\u6bcf\u4e2a\u70b9\u7684\u4f4d\u7f6e\uff08\u5373\u9876\u70b9\u4f4d\u7f6e\uff09\u548c\u5149\u6e90\u7684\u4f4d\u7f6e\u3002\u9996\u5148\uff0c\u8fd9\u4e24\u4e2a\u5750\u6807\u5fc5\u987b\u4f4d\u4e8e\u540c\u4e00\u4e2a\u5750\u6807\u7a7a\u95f4\u4e2d\u3002\u4e3a\u4e86\u7b80\u5316\uff0c\u6211\u4eec\u5047\u8bbe\u5b83\u4eec\u90fd\u5904\u4e8e\u4e16\u754c\u5750\u6807\u7cfb\u4e2d\uff0c\u90a3\u4e48\u8fd9\u4e9b\u4f4d\u7f6e\u662f\u6307\u5411\u9876\u70b9\u4f4d\u7f6e\uff08 VP \uff09\u548c\u5149\u6e90\uff08 VS \uff09\u7684\u5411\u91cf\u7684\u5750\u6807\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u5982\u679c\u6211\u4eec\u4ece VP \u4e2d\u51cf\u53bb VS \uff0c\u5c31\u4f1a\u5f97\u5230\u6211\u4eec\u6240\u9700\u7684\u5411\u91cf\uff0c\u79f0\u4e3a L \u3002 \u73b0\u5728\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u6307\u5411\u5149\u6e90\u7684\u77e2\u91cf\u548c\u6cd5\u7ebf\u4e4b\u95f4\u505a\u6570\u91cf\u79ef\uff0c\u56e0\u4e3aJohann Lambert\u662f\u7b2c\u4e00\u4e2a\u63d0\u51fa\u8fd9\u79cd\u5173\u7cfb\u6765\u6a21\u62df\u5e73\u9762\u4eae\u5ea6\u7684\uff0c\u6240\u4ee5\u8be5\u4e58\u79ef\u88ab\u79f0\u4e3a\u5170\u4f2f\u7279\u9879\u3002 \u8ba9\u6211\u4eec\u603b\u7ed3\u4e00\u4e0b\uff0c\u5b9a\u4e49\u4ee5\u4e0b\u53d8\u91cf\uff1a vPos \uff1a\u6211\u4eec\u7684\u9876\u70b9\u5728\u6a21\u578b\u89c2\u5bdf\u7a7a\u95f4\u5750\u6807\u7cfb\u4e2d\u7684\u4f4d\u7f6e\u3002 lPos \uff1a\u89c2\u5bdf\u7a7a\u95f4\u5750\u6807\u7cfb\u4e2d\u7684\u5149\u6e90\u4f4d\u7f6e\u3002 intensity \uff1a\u5149\u7684\u5f3a\u5ea6\uff08\u4ece0\u52301\uff09\u3002 lCourour \uff1a\u5149\u7684\u989c\u8272\u3002 normal \uff1a\u9876\u70b9\u6cd5\u7ebf\u3002 \u9996\u5148\u6211\u4eec\u9700\u8981\u8ba1\u7b97\u4ece\u5f53\u524d\u4f4d\u7f6e\u6307\u5411\u5149\u6e90\u7684\u5411\u91cf\uff1a toLightDirection = lPos - vPos \uff0c\u8be5\u8fd0\u7b97\u7684\u7ed3\u679c\u9700\u8981\u5f52\u4e00\u5316\u3002 \u7136\u540e\u6211\u4eec\u9700\u8981\u8ba1\u7b97\u6f2b\u53cd\u5c04\u56e0\u6570\uff08\u6807\u91cf\uff09\uff1a diffuseFactor = normal \\cdot toLightDirection \u3002\u8ba1\u7b97\u4e24\u5411\u91cf\u4e4b\u95f4\u7684\u6570\u91cf\u79ef\uff0c\u6211\u4eec\u5e0c\u671b\u503c\u4ecb\u4e8e -1 \u548c 1 \u4e4b\u95f4\uff0c\u6240\u4ee5\u4e24\u4e2a\u5411\u91cf\u90fd\u9700\u8981\u5f52\u4e00\u5316\u3002\u989c\u8272\u9700\u8981\u4ecb\u4e8e 0 \u5230 1 \u4e4b\u95f4\uff0c\u6240\u4ee5\u5982\u679c\u503c\u4f4e\u4e8e 0 \uff0c\u6211\u4eec\u5c06\u5176\u8bbe\u4e3a 0 \u3002 \u6700\u540e\uff0c\u6211\u4eec\u53ea\u9700\u8981\u901a\u8fc7\u6f2b\u53cd\u5c04\u56e0\u6570\u548c\u5149\u7684\u5f3a\u5ea6\u6765\u8c03\u8282\u5149\u7684\u989c\u8272\uff1a color = diffuseColour * lColour * diffuseFactor * intensity \u955c\u9762\u53cd\u5c04 \u73b0\u5728\u770b\u5230\u955c\u9762\u53cd\u5c04\uff0c\u4f46\u9996\u5148\u6211\u4eec\u9700\u8981\u77e5\u9053\u5149\u7ebf\u662f\u5982\u4f55\u53cd\u5c04\u7684\u3002\u5f53\u5149\u7167\u5c04\u5230\u4e00\u4e2a\u8868\u9762\u65f6\uff0c\u5b83\u7684\u4e00\u90e8\u5206\u88ab\u5438\u6536\uff0c\u53e6\u4e00\u90e8\u5206\u88ab\u53cd\u5c04\uff0c\u5982\u679c\u4f60\u8fd8\u8bb0\u5f97\u4f60\u7684\u7269\u7406\u8bfe\u77e5\u8bc6\uff0c\u53cd\u5c04\u5c31\u662f\u5149\u4ece\u7269\u4f53\u53cd\u5f39\u56de\u6765\u3002 \u5f53\u7136\uff0c\u7269\u4f53\u8868\u9762\u4e0d\u662f\u5b8c\u5168\u629b\u5149\u7684\uff0c\u5982\u679c\u4f60\u4ed4\u7ec6\u89c2\u5bdf\uff0c\u4f60\u4f1a\u770b\u5230\u5f88\u591a\u4e0d\u5e73\u6574\u7684\u5730\u65b9\u3002\u6b64\u5916\u8fd8\u6709\u8bb8\u591a\u5149\u7ebf\uff08\u5b9e\u9645\u4e0a\u662f\u5149\u5b50\uff09\uff0c\u4f1a\u649e\u51fb\u8fd9\u4e2a\u8868\u9762\uff0c\u5e76\u4e14\u4f1a\u4ee5\u4e0d\u540c\u7684\u89d2\u5ea6\u8fdb\u884c\u53cd\u5c04\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u770b\u5230\u7684\u5c31\u50cf\u662f\u4e00\u675f\u5149\u7167\u5c04\u8868\u9762\u5e76\u6563\u5c04\u56de\u6765\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5149\u5728\u649e\u51fb\u8868\u9762\u65f6\u4f1a\u53d1\u6563\uff0c\u8fd9\u5c31\u662f\u6211\u4eec\u4e4b\u524d\u8ba8\u8bba\u8fc7\u7684\u6f2b\u53cd\u5c04\u5206\u91cf\u3002 \u4f46\u662f\uff0c\u5f53\u5149\u7ebf\u7167\u5c04\u629b\u5149\u8868\u9762\u65f6\uff0c\u4f8b\u5982\u91d1\u5c5e\uff0c\u5149\u7ebf\u4f1a\u53d7\u5230\u8f83\u4f4e\u7684\u6269\u6563\u5f71\u54cd\uff0c\u5e76\u4e14\u5728\u5b83\u649e\u5230\u8868\u9762\u65f6\uff0c\u5927\u90e8\u5206\u4f1a\u5411\u53cd\u65b9\u5411\u53cd\u5c04\u3002 \u8fd9\u5c31\u662f\u955c\u9762\u53cd\u5c04\u5206\u91cf\u7684\u6a21\u578b\uff0c\u5b83\u53d6\u51b3\u4e8e\u6750\u8d28\u5c5e\u6027\u3002\u5bf9\u4e8e\u955c\u9762\u53cd\u5c04\uff0c\u91cd\u8981\u7684\u662f\u53ea\u6709\u5f53\u6444\u50cf\u673a\u5904\u4e8e\u6070\u5f53\u7684\u4f4d\u7f6e\u65f6\uff0c\u5373\u53cd\u5c04\u5149\u7684\u53cd\u5c04\u533a\u57df\u5185\uff0c\u53cd\u5c04\u5149\u624d\u53ef\u89c1\u3002 \u65e2\u7136\u5df2\u7ecf\u89e3\u91ca\u4e86\u955c\u9762\u53cd\u5c04\u4e4b\u4e2d\u7684\u673a\u7406\uff0c\u6211\u4eec\u63a5\u4e0b\u6765\u51c6\u5907\u8ba1\u7b97\u8fd9\u4e2a\u5206\u91cf\u3002\u9996\u5148\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u4ece\u5149\u6e90\u6307\u5411\u9876\u70b9\u7684\u5411\u91cf\u3002\u5f53\u6211\u4eec\u8ba1\u7b97\u6f2b\u53cd\u5c04\u5206\u91cf\u65f6\uff0c\u6211\u4eec\u4f7f\u7528\u7684\u662f\u65b9\u5411\u4e0e\u4e4b\u76f8\u53cd\u7684\u5411\u91cf\uff0c\u5b83\u6307\u5411\u7684\u662f\u5149\u6e90\uff0c\u5373 toLightDirection \u3002\u6240\u4ee5\u8ba9\u6211\u4eec\u5c06\u5176\u8ba1\u7b97\u4e3a fromLightDirection = -(toLightDirection) \u3002 \u7136\u540e\u6211\u4eec\u9700\u8981\u8003\u8651\u5230\u8868\u9762\u7684\u6cd5\u7ebf\uff0c\u6765\u8ba1\u7b97\u7531 fromLightDirection \u5c04\u51fa\u7684\u5149\u7ebf\u649e\u51fb\u8868\u9762\u6240\u4ea7\u751f\u7684\u53cd\u5c04\u5149\u3002\u6709\u4e00\u4e2a\u540d\u4e3a reflect \u7684GLSL\u51fd\u6570\u5b9e\u73b0\u4e86\u8be5\u529f\u80fd\u3002\u6240\u4ee5\uff0c reflectLight = reflect(fromLightSource, normal) \u3002 \u6211\u4eec\u8fd8\u9700\u8981\u4e00\u4e2a\u6307\u5411\u6444\u50cf\u673a\u7684\u5411\u91cf\uff0c\u5e76\u5c06\u5176\u547d\u540d\u4e3a cameraDirection \uff0c\u7136\u540e\u8ba1\u7b97\u51fa\u6444\u50cf\u673a\u4f4d\u7f6e\u548c\u9876\u70b9\u4f4d\u7f6e\u4e4b\u95f4\u7684\u5dee\u503c\uff1a cameraDirection = cameraPos - vPos \u3002\u6444\u50cf\u673a\u4f4d\u7f6e\u5411\u91cf\u548c\u9876\u70b9\u4f4d\u7f6e\u9700\u8981\u5904\u4e8e\u76f8\u540c\u7684\u5750\u6807\u7cfb\u4e2d\uff0c\u5e76\u4e14\u5f97\u5230\u7684\u5411\u91cf\u9700\u8981\u5f52\u4e00\u5316\u3002\u4e0b\u56fe\u6982\u8ff0\u4e86\u6211\u4eec\u76ee\u524d\u8ba1\u7b97\u7684\u4e3b\u8981\u5206\u91cf\uff1a \u73b0\u5728\u6211\u4eec\u9700\u8981\u8ba1\u7b97\u5149\u5f3a\uff0c\u5373 specularFactor \u3002\u5982\u679c cameraDirection \u548c reflectLight \u5411\u91cf\u6307\u5411\u76f8\u540c\u7684\u65b9\u5411\uff0c\u8be5\u503c\u5c31\u8d8a\u9ad8\uff0c\u5982\u679c\u5b83\u4eec\u65b9\u5411\u76f8\u53cd\u5176\u503c\u5219\u8d8a\u4f4e\u3002\u4e3a\u4e86\u8ba1\u7b97\u8be5\u503c\u6211\u4eec\u5c06\u518d\u6b21\u8fd0\u7528\u6570\u91cf\u79ef\u3002 specularFactor = cameraDirection \\cdot reflectLight \u3002\u6211\u4eec\u53ea\u5e0c\u671b\u8be5\u503c\u4f4d\u4e8e 0 \u548c 1 \u4e4b\u95f4\uff0c\u6240\u4ee5\u5982\u679c\u5b83\u4f4e\u4e8e 0 \uff0c\u5c31\u5c06\u5b83\u8bbe\u4e3a0\u3002 \u6211\u4eec\u8fd8\u9700\u8981\u8003\u8651\u5230\uff0c\u5982\u679c\u6444\u50cf\u673a\u6307\u5411\u53cd\u5c04\u5149\u9525\uff0c\u5219\u8be5\u5149\u66f4\u5f3a\u70c8\u3002\u8fd9\u53ef\u4ee5\u901a\u8fc7\u8ba1\u7b97 specularFactor \u7684 specularPower \u6b21\u5e42\u6765\u5b9e\u73b0\uff0c\u5176\u4e2d specularPower \u4e3a\u7ed9\u5b9a\u7684\u53c2\u6570\uff1a specularFactor = specularFactor^{specularPower} \u6700\u540e\uff0c\u6211\u4eec\u9700\u8981\u5bf9\u6750\u8d28\u7684\u53cd\u5c04\u7387\u8fdb\u884c\u5efa\u6a21\uff0c\u5982\u679c\u5149\u7ebf\u53cd\u5c04\uff0c\u53cd\u5c04\u7387\u5c06\u8c03\u8282\u53cd\u5c04\u5149\u7684\u5f3a\u5ea6\uff0c\u8fd9\u5c06\u7528\u5230\u4e00\u4e2a\u540d\u4e3a reflectance \u7684\u53c2\u6570\u3002\u6240\u4ee5\u955c\u9762\u53cd\u5c04\u5206\u91cf\u7684\u989c\u8272\u4e3a\uff1a specularColour * lColour * reflectance * specularFactor * intensity \u8870\u51cf \u6211\u4eec\u73b0\u5728\u77e5\u9053\u5982\u4f55\u8ba1\u7b97\u8fd9\u4e09\u4e2a\u5206\u91cf\u4e86\uff0c\u8fd9\u4e9b\u5206\u91cf\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u7528\u73af\u5883\u5149\u6a21\u62df\u70b9\u5149\u6e90\u3002\u4f46\u662f\u6211\u4eec\u7684\u5149\u7167\u6a21\u578b\u8fd8\u4e0d\u5b8c\u6574\uff0c\u56e0\u4e3a\u7269\u4f53\u53cd\u5c04\u7684\u5149\u4e0e\u5149\u6e90\u7684\u8ddd\u79bb\u65e0\u5173\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u9700\u8981\u6a21\u62df\u5149\u7ebf\u8870\u51cf\u3002 \u8870\u51cf\u662f\u4e00\u4e2a\u4e0e\u8ddd\u79bb\u548c\u5149\u6709\u5173\u7684\u51fd\u6570\u3002\u5149\u7684\u5f3a\u5ea6\u4e0e\u8ddd\u79bb\u7684\u5e73\u65b9\u6210\u53cd\u6bd4\u3002\u8fd9\u5f88\u5bb9\u6613\u7406\u89e3\uff0c\u968f\u7740\u5149\u7ebf\u7684\u4f20\u64ad\uff0c\u5176\u80fd\u91cf\u6cbf\u7740\u7403\u4f53\u8868\u9762\u5206\u5e03\uff0c\u5176\u534a\u5f84\u7b49\u4e8e\u5149\u7ebf\u884c\u8fdb\u7684\u8ddd\u79bb\uff0c\u800c\u7403\u7684\u8868\u9762\u79ef\u4e0e\u5176\u534a\u5f84\u7684\u5e73\u65b9\u6210\u6b63\u6bd4\u3002\u6211\u4eec\u53ef\u4ee5\u7528\u4e0b\u5f0f\u6765\u8ba1\u7b97\u8870\u51cf\u56e0\u5b50\uff1a 1.0 /(atConstant + atLineardist + atExponentdist ^ {2}) \u3002 \u4e3a\u4e86\u6a21\u62df\u8870\u51cf\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5c06\u8870\u51cf\u56e0\u6570\u4e58\u4ee5\u6700\u7ec8\u989c\u8272\u5373\u53ef\u3002 \u5b9e\u73b0 \u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u5f00\u59cb\u7f16\u7a0b\u5b9e\u73b0\u4e0a\u8ff0\u7684\u6240\u6709\u6982\u5ff5\uff0c\u6211\u4eec\u5c06\u4ece\u7740\u8272\u5668\u5f00\u59cb\u3002\u5927\u90e8\u5206\u5de5\u4f5c\u5c06\u5728\u7247\u5143\u7740\u8272\u5668\u4e2d\u5b8c\u6210\uff0c\u4f46\u6211\u4eec\u8fd8\u9700\u8981\u5c06\u9876\u70b9\u7740\u8272\u5668\u4e2d\u7684\u4e00\u4e9b\u6570\u636e\u4f20\u9012\u7ed9\u5b83\u3002\u5728\u4e0a\u4e00\u7ae0\u4e2d\uff0c\u7247\u5143\u7740\u8272\u5668\u4ec5\u63a5\u6536\u7eb9\u7406\u5750\u6807\uff0c\u73b0\u5728\u6211\u4eec\u8fd8\u5c06\u4f20\u9012\u4e24\u4e2a\u53c2\u6570\uff1a \u5df2\u8f6c\u6362\u4e3a\u6a21\u578b\u89c2\u5bdf\u7a7a\u95f4\u5750\u6807\u7cfb\u5e76\u5df2\u5f52\u4e00\u5316\u7684\u9876\u70b9\u6cd5\u7ebf\u3002 \u5df2\u8f6c\u6362\u4e3a\u6a21\u578b\u89c2\u5bdf\u7a7a\u95f4\u5750\u6807\u7cfb\u7684\u9876\u70b9\u4f4d\u7f6e\u3002 \u9876\u70b9\u7740\u8272\u5668\u7684\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a #version 330 layout (location=0) in vec3 position; layout (location=1) in vec2 texCoord; layout (location=2) in vec3 vertexNormal; out vec2 outTexCoord; out vec3 mvVertexNormal; out vec3 mvVertexPos; uniform mat4 modelViewMatrix; uniform mat4 projectionMatrix; void main() { vec4 mvPos = modelViewMatrix * vec4(position, 1.0); gl_Position = projectionMatrix * mvPos; outTexCoord = texCoord; mvVertexNormal = normalize(modelViewMatrix * vec4(vertexNormal, 0.0)).xyz; mvVertexPos = mvPos.xyz; } \u5728\u6211\u4eec\u7ee7\u7eed\u8bb2\u89e3\u7247\u5143\u7740\u8272\u5668\u4e4b\u524d\uff0c\u5fc5\u987b\u5f3a\u8c03\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u6982\u5ff5\u3002\u4ece\u4e0a\u8ff0\u4ee3\u7801\u53ef\u4ee5\u770b\u5230\uff0c mvVertexNormal \uff0c\u8be5\u53d8\u91cf\u5305\u542b\u5df2\u8f6c\u6362\u4e3a\u6a21\u578b\u89c2\u5bdf\u7a7a\u95f4\u5750\u6807\u7684\u9876\u70b9\u6cd5\u7ebf\u3002\u8fd9\u662f\u901a\u8fc7\u5c06 vertexNormal \u4e58\u4e0a modelViewMatrix \u6765\u5b9e\u73b0\u7684\uff0c\u5c31\u50cf\u9876\u70b9\u4f4d\u7f6e\u4e00\u6837\u3002\u4f46\u6709\u4e00\u4e2a\u7ec6\u5fae\u7684\u533a\u522b\uff0c\u8be5\u9876\u70b9\u6cd5\u7ebf\u7684w\u5206\u91cf\u5728\u4e58\u4ee5\u77e9\u9635\u4e4b\u524d\u88ab\u8bbe\u7f6e\u4e3a0\uff1a vec4(vertexNormal, 0.0) \u3002\u6211\u4eec\u4e3a\u4ec0\u4e48\u8981\u8fd9\u6837\u505a\u5462?\u56e0\u4e3a\u6211\u4eec\u5e0c\u671b\u6cd5\u7ebf\u88ab\u65cb\u8f6c\u548c\u7f29\u653e\uff0c\u4f46\u6211\u4eec\u4e0d\u5e0c\u671b\u5b83\u88ab\u5e73\u79fb\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u5bf9\u5b83\u7684\u65b9\u5411\u611f\u5174\u8da3\uff0c\u800c\u4e0d\u662f\u5b83\u7684\u4f4d\u7f6e\u3002\u800c\u8fd9\u662f\u901a\u8fc7\u5c06w\u5206\u91cf\u8bbe\u7f6e\u4e3a0\u6765\u5b9e\u73b0\u7684\uff0c\u8fd9\u4e5f\u662f\u662f\u4f7f\u7528\u9f50\u6b21\u5750\u6807\u7684\u4f18\u70b9\u4e4b\u4e00\uff0c\u901a\u8fc7\u8bbe\u7f6ew\u5206\u91cf\uff0c\u6211\u4eec\u53ef\u4ee5\u63a7\u5236\u5e94\u7528\u7684\u53d8\u6362\u3002\u4f60\u53ef\u4ee5\u5728\u7eb8\u4e0a\u505a\u77e9\u9635\u4e58\u6cd5\uff0c\u770b\u770b\u4e3a\u4ec0\u4e48\u662f\u8fd9\u6837\u3002 \u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u5f00\u59cb\u5728\u7247\u5143\u7740\u8272\u5668\u4e2d\u5f00\u5de5\u4e86\uff0c\u9664\u4e86\u5c06\u6765\u81ea\u9876\u70b9\u7740\u8272\u5668\u7684\u503c\u58f0\u660e\u4e3a\u8f93\u5165\u53c2\u6570\u4e4b\u5916\uff0c\u6211\u4eec\u5c06\u5b9a\u4e49\u4e00\u4e9b\u6709\u7528\u7684\u7ed3\u6784\u4f53\u6765\u5efa\u6a21\u5149\u7167\u548c\u6750\u8d28\u5c5e\u6027\u3002\u9996\u5148\u6211\u4eec\u5b9a\u4e49\u7528\u4e8e\u5efa\u6a21\u5149\u7684\u7ed3\u6784\u4f53\u3002 struct Attenuation { float constant; float linear; float exponent; }; struct PointLight { vec3 colour; // \u5149\u6e90\u4f4d\u7f6e\u662f\u5728\u89c2\u5bdf\u5750\u6807\u7cfb\u4e2d\u7684 vec3 position; float intensity; Attenuation att; }; \u70b9\u5149\u6e90\u7531\u4e00\u4e2a\u989c\u8272\uff0c\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u4ee5\u53ca\u4e00\u4e2a\u4ecb\u4e8e 0 \u548c 1 \u4e4b\u95f4\u7684\u6570\u5b57\uff08\u7528\u4e8e\u6a21\u62df\u5149\u7167\u5f3a\u5ea6\uff09\u548c\u4e00\u7ec4\u7528\u4e8e\u6a21\u62df\u8870\u51cf\u65b9\u7a0b\u7684\u53c2\u6570\u5b9a\u4e49\u3002 \u5efa\u6a21\u6750\u8d28\u5c5e\u6027\u7684\u7ed3\u6784\u4f53\u5982\u4e0b\uff1a struct Material { vec4 ambient; vec4 diffuse; vec4 specular; int hasTexture; float reflectance; }; \u6750\u8d28\u7531\u4e00\u7ec4\u989c\u8272\u5b9a\u4e49\uff08\u5047\u5982\u6211\u4eec\u4e0d\u4f7f\u7528\u7eb9\u7406\u4e3a\u7247\u5143\u7740\u8272\uff09\uff1a \u7528\u4e8e\u73af\u5883\u5149\u5206\u91cf\u7684\u989c\u8272\u3002 \u7528\u4e8e\u6f2b\u53cd\u5c04\u5206\u91cf\u7684\u989c\u8272\u3002 \u7528\u4e8e\u955c\u9762\u53cd\u5c04\u5206\u91cf\u7684\u989c\u8272\u3002 \u6750\u8d28\u8fd8\u7531\u4e00\u4e2a\u6807\u5fd7\u63a7\u5236\u5b83\u662f\u5426\u62e5\u6709\u5173\u8054\u7684\u7eb9\u7406\u548c\u53cd\u5c04\u7387\u6307\u6570\u5b9a\u4e49\u3002\u6211\u4eec\u5c06\u5728\u7247\u5143\u7740\u8272\u5668\u4e2d\u4f7f\u7528\u4ee5\u4e0bUniform\u3002 uniform sampler2D texture_sampler; uniform vec3 ambientLight; uniform float specularPower; uniform Material material; uniform PointLight pointLight; uniform vec3 camera_pos; \u6211\u4eec\u7528\u65b0\u5efa\u7684Uniform\u8bbe\u7f6e\u4ee5\u4e0b\u53d8\u91cf\uff1a \u73af\u5883\u5149\uff1a\u50a8\u5b58\u989c\u8272\uff0c\u4ee5\u540c\u6837\u65b9\u5f0f\u5f71\u54cd\u6bcf\u4e2a\u7247\u5143\u3002 \u955c\u9762\u53cd\u5c04\u5f3a\u5ea6\uff08\u5728\u8ba8\u8bba\u955c\u9762\u53cd\u5c04\u5149\u65f6\u7ed9\u51fa\u7684\u65b9\u7a0b\u5f0f\u4e2d\u4f7f\u7528\u7684\u6307\u6570\uff09\u3002 \u4e00\u4e2a\u70b9\u5149\u6e90\u3002 \u6750\u8d28\u5c5e\u6027\u3002 \u6444\u50cf\u673a\u5728\u89c2\u5bdf\u7a7a\u95f4\u5750\u6807\u7cfb\u4e2d\u7684\u4f4d\u7f6e\u3002 \u6211\u4eec\u8fd8\u5c06\u5b9a\u4e49\u4e00\u4e9b\u5168\u5c40\u53d8\u91cf\uff0c\u5b83\u4eec\u5c06\u50a8\u5b58\u8981\u5728\u73af\u5883\u3001\u6f2b\u53cd\u5c04\u548c\u955c\u9762\u53cd\u5c04\u4e2d\u4f7f\u7528\u7684\u6750\u8d28\u989c\u8272\u5206\u91cf\u3002\u6211\u4eec\u4f7f\u7528\u8fd9\u4e9b\u53d8\u91cf\u662f\u56e0\u4e3a\u5982\u679c\u5206\u91cf\u5177\u6709\u7eb9\u7406\uff0c\u6211\u4eec\u5c06\u5bf9\u6240\u6709\u5206\u91cf\u4f7f\u7528\u76f8\u540c\u7684\u989c\u8272\uff0c\u5e76\u4e14\u6211\u4eec\u4e0d\u5e0c\u671b\u8fdb\u884c\u5197\u4f59\u7684\u7eb9\u7406\u67e5\u627e\u3002\u8fd9\u4e9b\u53d8\u91cf\u7684\u5b9a\u4e49\u5982\u4e0b\uff1a vec4 ambientC; vec4 diffuseC; vec4 speculrC; \u6211\u4eec\u73b0\u5728\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\uff0c\u6765\u6839\u636e\u6750\u8d28\u5c5e\u6027\u8bbe\u7f6e\u8fd9\u4e9b\u53d8\u91cf\uff1a void setupColours(Material material, vec2 textCoord) { if (material.hasTexture == 1) { ambientC = texture(texture_sampler, textCoord); diffuseC = ambientC; speculrC = ambientC; } else { ambientC = material.ambient; diffuseC = material.diffuse; speculrC = material.specular; } } \u73b0\u5728\u6211\u4eec\u8981\u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\uff0c\u5b83\u4ee5\u70b9\u5149\u6e90\u3001\u9876\u70b9\u4f4d\u7f6e\u53ca\u5176\u6cd5\u7ebf\u4e3a\u8f93\u5165\u5e76\u8fd4\u56de\u6b64\u524d\u63cf\u8ff0\u7684\u6f2b\u53cd\u5c04\u548c\u955c\u9762\u53cd\u5c04\u5206\u91cf\u8ba1\u7b97\u7684\u989c\u8272\u3002 vec4 calcPointLight(PointLight light, vec3 position, vec3 normal) { vec4 diffuseColour = vec4(0, 0, 0, 0); vec4 specColour = vec4(0, 0, 0, 0); // \u6f2b\u53cd\u5c04 vec3 light_direction = light.position - position; vec3 to_light_source = normalize(light_direction); float diffuseFactor = max(dot(normal, to_light_source ), 0.0); diffuseColour = diffuseC * vec4(light.colour, 1.0) * light.intensity * diffuseFactor; // \u955c\u9762\u53cd\u5c04 vec3 camera_direction = normalize(-position); vec3 from_light_source = -to_light_source; vec3 reflected_light = normalize(reflect(from_light_source, normal)); float specularFactor = max( dot(camera_direction, reflected_light), 0.0); specularFactor = pow(specularFactor, specularPower); specColour = speculrC * specularFactor * material.reflectance * vec4(light.colour, 1.0); // \u8870\u51cf float distance = length(light_direction); float attenuationInv = light.att.constant + light.att.linear * distance + light.att.exponent * distance * distance; return (diffuseColour + specColour) / attenuationInv; } \u4e0a\u8ff0\u4ee3\u7801\u76f8\u5bf9\u6bd4\u8f83\u76f4\u767d\u7b80\u5355\uff0c\u5b83\u53ea\u662f\u8ba1\u7b97\u4e86\u6f2b\u53cd\u5c04\u5206\u91cf\u7684\u989c\u8272\uff0c\u53e6\u4e00\u4e2a\u662f\u8ba1\u7b97\u955c\u9762\u53cd\u5c04\u7684\u989c\u8272\uff0c\u5e76\u901a\u8fc7\u5149\u7ebf\u5728\u5230\u8fbe\u6211\u4eec\u6b63\u5728\u5904\u7406\u7684\u9876\u70b9\u65f6\u53d7\u5230\u7684\u8870\u51cf\u6765\u8c03\u6574\u5b83\u4eec\u3002 \u8bf7\u6ce8\u610f\uff0c\u9876\u70b9\u5750\u6807\u662f\u4f4d\u4e8e\u89c2\u5bdf\u7a7a\u95f4\u4e2d\u7684\u3002\u5728\u8ba1\u7b97\u955c\u9762\u53cd\u5c04\u65f6\uff0c\u6211\u4eec\u5f97\u51fa\u5230\u89c2\u5bdf\u70b9\uff08\u5373\u6444\u50cf\u673a\u4f4d\u7f6e\uff09\u7684\u65b9\u5411\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a vec3 camera_direction = normalize(camera_pos - position); \u4f46\u662f\uff0c\u7531\u4e8e position \u4f4d\u4e8e\u89c2\u5bdf\u7a7a\u95f4\u4e2d\uff0c\u6444\u50cf\u673a\u4f4d\u7f6e\u59cb\u7ec8\u4f4d\u4e8e\u539f\u70b9\uff0c\u5373 (0, 0, 0) \uff0c\u6240\u4ee5\u6211\u4eec\u6309\u5982\u4e0b\u4ee3\u7801\u8ba1\u7b97\u5b83\uff1a vec3 camera_direction = normalize(vec3(0, 0, 0) - position); \u53ef\u4ee5\u7b80\u5316\u4e3a\uff1a vec3 camera_direction = normalize(-position); \u6709\u4e86\u4e0a\u8ff0\u51fd\u6570\uff0c\u9876\u70b9\u7740\u8272\u5668\u7684\u4e3b\u51fd\u6570\u5c31\u53d8\u5f97\u975e\u5e38\u7b80\u5355\u4e86\u3002 void main() { setupColours(material, outTexCoord); vec4 diffuseSpecularComp = calcPointLight(pointLight, mvVertexPos, mvVertexNormal); fragColor = ambientC * vec4(ambientLight, 1) + diffuseSpecularComp; } \u8c03\u7528 setupColours \u51fd\u6570\u5c06\u4f7f\u7528\u9002\u5f53\u7684\u989c\u8272\u6765\u8bbe\u7f6e\u53d8\u91cf ambientC \u3001 diffuseC \u548c speculrC \u3002\u7136\u540e\uff0c\u6211\u4eec\u8ba1\u7b97\u6f2b\u53cd\u5c04\u548c\u955c\u9762\u53cd\u5c04\u5206\u91cf\uff0c\u5e76\u8003\u8651\u5230\u8870\u51cf\u3002\u4e3a\u4e86\u65b9\u4fbf\u8d77\u89c1\uff0c\u6211\u4eec\u4f7f\u7528\u5355\u4e2a\u51fd\u6570\u8c03\u7528\u6765\u5b9e\u73b0\u6b64\u64cd\u4f5c\uff0c\u5982\u4e0a\u6240\u8ff0\u3002\u6700\u7ec8\u7684\u989c\u8272\u662f\u901a\u8fc7\u6dfb\u52a0\u73af\u5883\u5149\u5206\u91cf\u6765\u8ba1\u7b97\u7684\uff08\u5c06 ambientC \u4e58\u4ee5\u73af\u5883\u5149\uff09\u3002\u5982\u4f60\u6240\u89c1\uff0c\u73af\u5883\u5149\u4e0d\u53d7\u8870\u51cf\u7684\u5f71\u54cd\u3002 \u5728\u7740\u8272\u5668\u4e2d\u6211\u4eec\u5f15\u5165\u4e86\u4e00\u4e9b\u9700\u8981\u8fdb\u4e00\u6b65\u89e3\u91ca\u7684\u65b0\u6982\u5ff5\uff0c\u6211\u4eec\u6b63\u5728\u5b9a\u4e49\u7ed3\u6784\u4f53\u5e76\u5c06\u5b83\u4eec\u7528\u4f5cUniform\u3002\u4f46\u6211\u4eec\u8981\u600e\u4e48\u4f20\u9012\u8fd9\u4e9b\u7ed3\u6784\u4f53\uff1f\u9996\u5148\uff0c\u6211\u4eec\u5c06\u5b9a\u4e49\u4e24\u4e2a\u65b0\u7c7b\uff0c\u5b83\u4eec\u5efa\u6a21\u70b9\u5149\u6e90\u548c\u6750\u8d28\u5c5e\u6027\uff0c\u540d\u4e3a PointLight \u548c Material \u3002\u5b83\u4eec\u53ea\u662f\u666e\u901a\u7684Java\u5bf9\u8c61\uff0c\u6240\u4ee5\u4f60\u53ef\u4ee5\u5728\u672c\u4e66\u9644\u5e26\u7684\u6e90\u4ee3\u7801\u4e2d\u67e5\u770b\u5b83\u4eec\u3002\u7136\u540e\uff0c\u6211\u4eec\u9700\u8981\u5728 ShaderProgram \u7c7b\u4e2d\u521b\u5efa\u65b0\u65b9\u6cd5\uff0c\u9996\u5148\u8981\u80fd\u591f\u4e3a\u70b9\u5149\u6e90\u548c\u6750\u8d28\u7ed3\u6784\u4f53\u521b\u5efaUniform\u3002 public void createPointLightUniform(String uniformName) throws Exception { createUniform(uniformName + \".colour\"); createUniform(uniformName + \".position\"); createUniform(uniformName + \".intensity\"); createUniform(uniformName + \".att.constant\"); createUniform(uniformName + \".att.linear\"); createUniform(uniformName + \".att.exponent\"); } public void createMaterialUniform(String uniformName) throws Exception { createUniform(uniformName + \".ambient\"); createUniform(uniformName + \".diffuse\"); createUniform(uniformName + \".specular\"); createUniform(uniformName + \".hasTexture\"); createUniform(uniformName + \".reflectance\"); } \u5982\u4f60\u6240\u89c1\uff0c\u5b83\u975e\u5e38\u7b80\u5355\uff0c\u6211\u4eec\u53ea\u4e3a\u6784\u6210\u7ed3\u6784\u4f53\u7684\u6240\u6709\u5c5e\u6027\u521b\u5efa\u4e00\u4e2a\u5355\u72ec\u7684Uniform\u3002\u73b0\u5728\u6211\u4eec\u9700\u8981\u521b\u5efa\u53e6\u5916\u4e24\u4e2a\u65b9\u6cd5\u6765\u8bbe\u7f6e\u8fd9\u4e9bUniform\u7684\u503c\uff0c\u5e76\u5c06 PointLight \u548c Material \u7684\u5b9e\u4f8b\u4f5c\u4e3a\u53c2\u6570\u3002 public void setUniform(String uniformName, PointLight pointLight) { setUniform(uniformName + \".colour\", pointLight.getColor() ); setUniform(uniformName + \".position\", pointLight.getPosition()); setUniform(uniformName + \".intensity\", pointLight.getIntensity()); PointLight.Attenuation att = pointLight.getAttenuation(); setUniform(uniformName + \".att.constant\", att.getConstant()); setUniform(uniformName + \".att.linear\", att.getLinear()); setUniform(uniformName + \".att.exponent\", att.getExponent()); } public void setUniform(String uniformName, Material material) { setUniform(uniformName + \".ambient\", material.getAmbientColour()); setUniform(uniformName + \".diffuse\", material.getDiffuseColour()); setUniform(uniformName + \".specular\", material.getSpecularColour()); setUniform(uniformName + \".hasTexture\", material.isTextured() ? 1 : 0); setUniform(uniformName + \".reflectance\", material.getReflectance()); } \u5728\u672c\u7ae0\u6e90\u4ee3\u7801\u4e2d\uff0c\u4f60\u8fd8\u5c06\u770b\u5230\u6211\u4eec\u8fd8\u4fee\u6539\u4e86 Mesh \u7c7b\u6765\u50a8\u5b58\u6750\u8d28\u5b9e\u4f8b\uff0c\u5e76\u4e14\u521b\u5efa\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\uff0c\u5728\u5176\u4e2d\u521b\u5efa\u4e86\u4e00\u4e2a\u53ef\u7528\u201cN\u201d\u548c\u201cM\u201d\u952e\u63a7\u5236\u79fb\u52a8\u7684\u70b9\u5149\u6e90\uff0c\u4ee5\u663e\u793a\u70b9\u5149\u6e90\u805a\u7126\u5728\u53cd\u5c04\u7387\u503c\u9ad8\u4e8e0\u7684\u7f51\u683c\u4e0a\u65f6\u662f\u600e\u6837\u7684\u3002 \u8ba9\u6211\u4eec\u56de\u5230\u7247\u5143\u7740\u8272\u5668\uff0c\u5982\u4e0a\u6240\u8ff0\uff0c\u6211\u4eec\u9700\u8981\u53e6\u4e00\u4e2a\u50a8\u5b58\u6444\u50cf\u673a\u4f4d\u7f6e camera_pos \u7684Uniform\u3002\u8fd9\u4e9b\u5750\u6807\u5fc5\u987b\u4f4d\u4e8e\u89c2\u5bdf\u7a7a\u95f4\u4e2d\u3002\u901a\u5e38\u6211\u4eec\u5c06\u5728\u4e16\u754c\u7a7a\u95f4\u5750\u6807\u7cfb\u4e2d\u8bbe\u7f6e\u5149\u6e90\u5750\u6807\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u5c06\u5b83\u4eec\u4e58\u4ee5\u89c2\u5bdf\u77e9\u9635\uff0c\u4ee5\u4fbf\u80fd\u591f\u5728\u7740\u8272\u5668\u4e2d\u4f7f\u7528\u5b83\u4eec\uff0c\u6240\u4ee5\u9700\u8981\u5728 Transformation \u7c7b\u4e2d\u521b\u5efa\u4e00\u4e2a\u65b0\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u8fd4\u56de\u89c2\u5bdf\u77e9\u9635\u4ee5\u4fbf\u53d8\u6362\u5149\u6e90\u5750\u6807\u3002 // \u83b7\u5f97\u5149\u6e90\u5bf9\u8c61\u7684\u526f\u672c\u5e76\u5c06\u5b83\u7684\u5750\u6807\u53d8\u6362\u5230\u89c2\u5bdf\u7a7a\u95f4\u5750\u6807\u7cfb PointLight currPointLight = new PointLight(pointLight); Vector3f lightPos = currPointLight.getPosition(); Vector4f aux = new Vector4f(lightPos, 1); aux.mul(viewMatrix); lightPos.x = aux.x; lightPos.y = aux.y; lightPos.z = aux.z; shaderProgram.setUniform(\"pointLight\", currPointLight); \u6211\u4eec\u4e0d\u4f1a\u5199\u4e0a\u5b8c\u6574\u7684\u6e90\u4ee3\u7801\uff0c\u56e0\u4e3a\u5982\u679c\u8fd9\u6837\u8fd9\u4e00\u7ae0\u5c31\u592a\u957f\u4e86\uff0c\u4e14\u5bf9\u4e8e\u89e3\u91ca\u6e05\u695a\u6982\u5ff5\u6ca1\u6709\u592a\u591a\u7684\u5e2e\u52a9\uff0c\u4f60\u53ef\u4ee5\u5728\u672c\u4e66\u9644\u5e26\u7684\u6e90\u4ee3\u7801\u4e2d\u67e5\u9605\u6e90\u4ee3\u7801\u3002","title":"\u8981\u6709\u5149"},{"location":"10-let-there-be-light/#let-there-be-light","text":"\u5728\u672c\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u5b66\u4e60\u5982\u4f55\u4e3a3D\u6e38\u620f\u5f15\u64ce\u6dfb\u52a0\u5149\u7167\u3002\u6211\u4eec\u4e0d\u4f1a\u53bb\u5b9e\u73b0\u4e00\u4e2a\u5b8c\u7f8e\u7684\u5149\u7167\u6a21\u578b\uff0c\u56e0\u4e3a\u629b\u5f00\u590d\u6742\u6027\u4e0d\u8c08\uff0c\u5b83\u8fd8\u9700\u8981\u6d88\u8017\u5927\u91cf\u7684\u8ba1\u7b97\u673a\u8d44\u6e90\uff0c\u76f8\u53cd\u6211\u4eec\u53ea\u9700\u8981\u4e00\u4e2a\u8fd1\u4f3c\u7684\u3001\u50cf\u6837\u7684\u5149\u7167\u6548\u679c\uff1a\u6211\u4eec\u5c06\u4f7f\u7528\u540d\u4e3a Phong \u7684\u7740\u8272\u7b97\u6cd5\uff08\u7531Bui Tuong Phong\u5f00\u53d1\uff09\u3002\u53e6\u4e00\u4e2a\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u6211\u4eec\u5c06\u53ea\u6a21\u62df\u5149\u7167\uff0c\u4f46\u4e0d\u4f1a\u6a21\u62df\u8fd9\u4e9b\u5149\u7167\u6240\u4ea7\u751f\u7684\u9634\u5f71\uff08\u8fd9\u5c06\u5728\u540e\u7eed\u7ae0\u8282\u4e2d\u5b9e\u73b0\uff09\u3002 \u5728\u5f00\u59cb\u4e4b\u524d\uff0c\u5148\u5b9a\u4e49\u51e0\u4e2a\u5149\u7167\u7c7b\u578b\uff1a \u70b9\u5149\u6e90\uff08Point Light\uff09 \uff1a\u8fd9\u79cd\u5149\u6a21\u62df\u7684\u662f\u4e00\u4e2a\u7531\u70b9\u5411\u7a7a\u95f4\u5404\u4e2a\u65b9\u5411\u5747\u5300\u53d1\u5c04\u7684\u5149\u6e90\u3002 \u805a\u5149\u6e90\uff08Spot Light\uff09 \uff1a\u8fd9\u79cd\u5149\u6a21\u62df\u4ece\u7a7a\u95f4\u4e2d\u7684\u70b9\u53d1\u5c04\u7684\u5149\u6e90\uff0c\u4f46\u4e0d\u662f\u5411\u6240\u6709\u65b9\u5411\u4e0a\u53d1\u5c04\uff0c\u800c\u662f\u9650\u5b9a\u5728\u4e86\u4e00\u4e2a\u9525\u5f62\u65b9\u5411\u4e0a\u3002 \u5e73\u884c\u5149\uff08Directional Light\uff09 \uff1a\u8fd9\u79cd\u5149\u6a21\u62df\u4e86\u592a\u9633\u5149\uff0c3D\u573a\u666f\u4e2d\u7684\u6240\u6709\u7269\u4f53\u90fd\u4f1a\u53d7\u5230\u6765\u81ea\u7279\u5b9a\u65b9\u5411\u7684\u5e73\u884c\u5149\u7ebf\u7684\u7167\u5c04\u3002\u65e0\u8bba\u7269\u4f53\u662f\u8fd1\u6291\u6216\u662f\u8fdc\uff0c\u5149\u7ebf\u603b\u662f\u4ee5\u76f8\u540c\u89d2\u5ea6\u7167\u5c04\u5728\u7269\u4f53\u4e0a\u3002 \u73af\u5883\u5149\uff08Ambient Light\uff09 \uff1a\u8fd9\u79cd\u5149\u6765\u81ea\u7a7a\u95f4\u7684\u4efb\u4f55\u65b9\u5411\uff0c\u5e76\u4ee5\u76f8\u540c\u7684\u5f3a\u5ea6\u7167\u4eae\u6240\u6709\u7269\u4f53\u3002 \u56e0\u6b64\uff0c\u4e3a\u4e86\u6a21\u62df\u5149\u7167\uff0c\u6211\u4eec\u9700\u8981\u8003\u8651\u5149\u7167\u7684\u7c7b\u578b\u3001\u4f4d\u7f6e\u548c\u5176\u4ed6\u4e00\u4e9b\u53c2\u6570\uff0c\u5982\u989c\u8272\u3002\u5f53\u7136\uff0c\u6211\u4eec\u8fd8\u5fc5\u987b\u8003\u8651\u7269\u4f53\u5982\u4f55\u53d7\u5149\u7167\u5f71\u54cd\u5438\u6536\u548c\u53cd\u5c04\u5149\u3002 Phong\u7740\u8272\u7b97\u6cd5\u5c06\u6a21\u62df\u5149\u7ebf\u5bf9\u6211\u4eec\u6a21\u578b\u4e2d\u6bcf\u4e2a\u70b9\u7684\u5f71\u54cd\uff0c\u5373\u5bf9\u6bcf\u4e2a\u9876\u70b9\u7684\u5f71\u54cd\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u5b83\u88ab\u79f0\u4e3a\u5c40\u90e8\u5149\u7167\u6a21\u578b\u7684\u539f\u56e0\uff0c\u8fd9\u4e5f\u662f\u8be5\u7b97\u6cd5\u4e0d\u80fd\u8ba1\u7b97\u9634\u5f71\u7684\u539f\u56e0\uff1a\u5b83\u53ea\u4f1a\u8ba1\u7b97\u5e94\u7528\u5230\u6bcf\u4e2a\u9876\u70b9\u7684\u5149\u7167\uff0c\u800c\u4e0d\u8003\u8651\u9876\u70b9\u662f\u5426\u4f4d\u4e8e\u906e\u5149\u7269\u4f53\u4e4b\u540e\u3002\u6211\u4eec\u5c06\u5728\u6b64\u540e\u7684\u7ae0\u8282\u4e2d\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\u4f46\u6b63\u56e0\u5982\u6b64\uff0c\u5b83\u662f\u4e00\u79cd\u975e\u5e38\u7b80\u5355\u5feb\u901f\u7684\u7b97\u6cd5\uff0c\u5e76\u4e14\u53ef\u4ee5\u63d0\u4f9b\u975e\u5e38\u597d\u7684\u6548\u679c\u3002\u6211\u4eec\u5c06\u5728\u6b64\u5b9e\u73b0\u4e00\u4e2a\u6ca1\u6709\u6df1\u5165\u8003\u8651\u6750\u8d28\u5f71\u54cd\u7684\u7b80\u5316\u7248\u672c\u3002 Phong\u7b97\u6cd5\u63d0\u4f9b\u4e86\u4e09\u79cd\u5149\u7167\u5206\u91cf\uff1a \u73af\u5883\u5149\uff08Ambient Light\uff09 \uff1a\u6a21\u62df\u6765\u81ea\u4efb\u4f55\u65b9\u5411\u7684\u5149\u7167\uff0c\u5b83\u5c06\u7167\u4eae\uff08\u9700\u8981\u5bf9\u5e94\u5f3a\u5ea6\u503c\uff09\u672a\u53d7\u4efb\u4f55\u5149\u7ebf\u7167\u5c04\u7684\u533a\u57df\uff0c\u5c31\u50cf\u80cc\u666f\u5149\u3002 \u6f2b\u53cd\u5c04\uff08Diffuse Reflectance\uff09 \uff1a\u8003\u8651\u5230\u9762\u5411\u5149\u6e90\u7684\u8868\u9762\u66f4\u4eae\u3002 \u955c\u9762\u53cd\u5c04\uff08Specular Reflectance\uff09 \uff1a\u6a21\u62df\u5149\u7ebf\u5728\u629b\u5149\u6216\u91d1\u5c5e\u8868\u9762\u4e0a\u7684\u53cd\u5c04\u3002 \u6700\u540e\uff0c\u6211\u4eec\u8981\u5f97\u5230\u4e00\u4e2a\u56e0\u6570\uff0c\u5c06\u5b83\u4e0e\u6307\u5b9a\u7247\u5143\u7684\u989c\u8272\u76f8\u4e58\uff0c\u6839\u636e\u5b83\u6240\u53d7\u7684\u5149\u7167\u5c06\u8be5\u989c\u8272\u53d8\u5f97\u66f4\u4eae\u6216\u66f4\u6697\u3002\u4ee4 A \u4e3a\u73af\u5883\u5149\u3001 D \u4e3a\u6f2b\u53cd\u5c04\u5149\u3001 S \u4e3a\u955c\u9762\u53cd\u5c04\u5149\uff0c\u76ee\u6807\u56e0\u6570\u5c06\u662f\u4e0a\u8ff0\u5206\u91cf\u7684\u603b\u548c\uff1a L = A + D + S \u8fd9\u4e9b\u5206\u91cf\u5176\u5b9e\u5c31\u662f\u989c\u8272\uff0c\u4e5f\u5c31\u662f\u6bcf\u4e2a\u5149\u7167\u5206\u91cf\u6240\u8d21\u732e\u7684\u989c\u8272\u5206\u91cf\u3002\u8fd9\u662f\u56e0\u4e3a\u5149\u7167\u5206\u91cf\u4e0d\u4ec5\u4f1a\u63d0\u4f9b\u4e00\u5b9a\u7a0b\u5ea6\u7684\u4eae\u5ea6\uff0c\u8fd8\u4f1a\u6539\u53d8\u6a21\u578b\u7684\u989c\u8272\u3002\u5728\u6211\u4eec\u7684\u7247\u5143\u7740\u8272\u5668\u4e2d\uff0c\u53ea\u9700\u5c06\u8be5\u5149\u7167\u7684\u989c\u8272\u4e0e\u539f\u59cb\u7247\u5143\u989c\u8272\uff08\u4ece\u7eb9\u7406\u6216\u57fa\u8272\u83b7\u5f97\u7684\uff09\u76f8\u4e58\u5373\u53ef\u3002 \u6211\u4eec\u8fd8\u53ef\u4ee5\u4e3a\u76f8\u540c\u7684\u6750\u8d28\u6307\u5b9a\u4e0d\u540c\u7684\u989c\u8272\uff0c\u8fd9\u4e9b\u989c\u8272\u5c06\u7528\u4e8e\u73af\u5883\u5149\u3001\u6f2b\u53cd\u5c04\u548c\u955c\u9762\u53cd\u5c04\u5206\u91cf\u3002\u56e0\u6b64\uff0c\u8fd9\u4e9b\u5206\u91cf\u5c06\u7531\u6750\u8d28\u5173\u8054\u7684\u989c\u8272\u8c03\u6574\u3002\u5982\u679c\u6750\u8d28\u6709\u7eb9\u7406\uff0c\u6211\u4eec\u53ea\u9700\u4e3a\u6bcf\u4e2a\u5206\u91cf\u4f7f\u7528\u4e00\u4e2a\u7eb9\u7406\u3002 \u6240\u4ee5\u5bf9\u4e8e\u65e0\u7eb9\u7406\u7684\u6750\u8d28\u7684\u6700\u7ec8\u989c\u8272\u5c06\u662f\uff1a L = A * \u73af\u5883\u5149\u7684\u989c\u8272 + D * \u6f2b\u53cd\u5c04\u7684\u989c\u8272 + S * \u955c\u9762\u53cd\u5c04\u7684\u989c\u8272 \u5bf9\u4e8e\u6709\u7eb9\u7406\u7684\u6750\u8d28\u7684\u6700\u7ec8\u989c\u8272\u5c06\u662f\uff1a L = A * \u7eb9\u7406\u989c\u8272 + D * \u7eb9\u7406\u989c\u8272 + S * \u7eb9\u7406\u989c\u8272","title":"\u8981\u6709\u5149\uff08Let there be light\uff09"},{"location":"10-let-there-be-light/#_1","text":"\u8ba9\u6211\u4eec\u6765\u770b\u770b\u7b2c\u4e00\u4e2a\u5206\u91cf\uff0c\u5373\u73af\u5883\u5149\u5206\u91cf\uff0c\u5b83\u53ea\u662f\u4e00\u4e2a\u5e38\u91cf\uff0c\u4f1a\u4f7f\u6211\u4eec\u7684\u6240\u6709\u7269\u4f53\u53d8\u5f97\u66f4\u4eae\u6216\u66f4\u6697\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5b83\u6765\u6a21\u62df\u4e00\u5929\u4e2d\u7279\u5b9a\u65f6\u95f4\u6bb5\u5185\u7684\u5149\u7167\uff08\u9ece\u660e\u3001\u9ec4\u660f\u7b49\uff09\uff0c\u4e5f\u53ef\u4ee5\u7528\u5b83\u6765\u6dfb\u52a0\u4e00\u4e9b\u4e0d\u76f4\u63a5\u88ab\u5149\u7ebf\u7167\u5c04\u5230\uff0c\u4f46\u53ef\u4ee5\u4ee5\u7b80\u5355\u7684\u65b9\u5f0f\u88ab\u95f4\u63a5\u5149\u7ebf\u7167\u5c04\uff08\u6bd4\u5982\u53cd\u5c04\uff09\u5230\u7684\u70b9\u7684\u5149\u7167\u3002 \u73af\u5883\u5149\u662f\u6700\u5bb9\u6613\u8ba1\u7b97\u7684\u5206\u91cf\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4f20\u9012\u4e00\u79cd\u989c\u8272\uff0c\u5b83\u5c06\u4e0e\u57fa\u8272\u76f8\u4e58\uff0c\u4ee5\u8c03\u6574\u8be5\u57fa\u8272\u3002\u5047\u5982\u6211\u4eec\u5df2\u7ecf\u786e\u5b9a\u7247\u5143\u7684\u989c\u8272\u662f (1.0, 0.0, 0.0) \uff0c\u5373\u7ea2\u8272\u3002\u5982\u679c\u6ca1\u6709\u73af\u5883\u5149\u65f6\uff0c\u5b83\u5c06\u663e\u793a\u4e3a\u5b8c\u5168\u7ea2\u8272\u7684\u7247\u5143\u3002\u5982\u679c\u6211\u4eec\u5c06\u73af\u5883\u5149\u8bbe\u7f6e\u4e3a (0.5, 0.5, 0.5) \uff0c\u5219\u6700\u7ec8\u989c\u8272\u5c06\u4e3a (0.5, 0.0, 0.0) \uff0c\u5176\u5b9e\u5c31\u662f\u53d8\u6697\u7684\u7ea2\u8272\u3002\u8fd9\u79cd\u5149\u7167\u4f1a\u4ee5\u76f8\u540c\u7684\u65b9\u5f0f\u4f7f\u6240\u6709\u7247\u5143\u53d8\u6697\uff08\u79f0\u5176\u4e3a\u4f7f\u7269\u4f53\u53d8\u6697\u7684\u5149\u4f3c\u4e4e\u6709\u70b9\u5947\u602a\uff0c\u4e8b\u5b9e\u4e0a\u8fd9\u5c31\u662f\u6211\u4eec\u5f97\u5230\u7684\u6548\u679c\uff09\u3002\u6b64\u5916\uff0c\u5982\u679c\u5149\u8272\u7684RGB\u5206\u91cf\u4e0d\u76f8\u540c\uff0c\u5b83\u8fd8\u53ef\u4ee5\u4e3a\u7247\u5143\u6dfb\u52a0\u4e00\u4e9b\u989c\u8272\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u4e00\u4e2a\u77e2\u91cf\u6765\u8c03\u8282\u73af\u5883\u5149\u5f3a\u5ea6\u548c\u989c\u8272\u3002","title":"\u73af\u5883\u5149\u5206\u91cf"},{"location":"10-let-there-be-light/#_2","text":"\u73b0\u5728\u6211\u4eec\u6765\u8c08\u8c08\u6f2b\u53cd\u5c04\uff0c\u5b83\u6a21\u62df\u4e86\u8fd9\u6837\u4e00\u4e2a\u73b0\u8c61\uff1a\u4e0e\u5149\u7ebf\u5782\u76f4\u7684\u9762\u770b\u8d77\u6765\u6bd4\u4ee5\u66f4\u63a5\u8fd1\u4e0e\u5149\u7ebf\u5e73\u884c\u7684\u89d2\u5ea6\u63a5\u6536\u5149\u7ebf\u7684\u9762\u66f4\u4eae\u3002\u4e00\u4e2a\u7269\u4f53\u63a5\u6536\u5230\u7684\u5149\u8d8a\u591a\uff0c\u5176\u5149\u5bc6\u5ea6\uff08\u5728\u6b64\u8fd9\u6837\u79f0\u547c\uff09\u5c31\u8d8a\u9ad8\u3002 \u4f46\u662f\uff0c\u6211\u4eec\u8be5\u5982\u4f55\u8ba1\u7b97\u5b83\uff1f\u4f60\u8fd8\u8bb0\u5f97\u4e0a\u4e00\u7ae0\u4e2d\u6211\u4eec\u4ecb\u7ecd\u8fc7\u7684\u6cd5\u7ebf\u7684\u6982\u5ff5\u5417\uff1f\u6cd5\u7ebf\u662f\u5782\u76f4\u4e8e\u5e73\u9762\u5e76\u4e14\u957f\u5ea6\u4e3a1\u7684\u5411\u91cf\u3002\u56e0\u6b64\uff0c\u8ba9\u6211\u4eec\u4e3a\u4e0a\u56fe\u4e2d\u7684\u4e09\u4e2a\u70b9\u7684\u7ed8\u5236\u6cd5\u7ebf\u3002\u5982\u4f60\u6240\u89c1\uff0c\u6bcf\u4e2a\u70b9\u7684\u6cd5\u7ebf\u5c06\u662f\u5782\u76f4\u4e8e\u6bcf\u4e2a\u70b9\u7684\u5207\u5e73\u9762\u7684\u5411\u91cf\u3002\u6211\u4eec\u4e0d\u7528\u7ed8\u5236\u6765\u81ea\u5149\u6e90\u7684\u5149\u7ebf\uff0c\u800c\u662f\u7ed8\u5236\u4ece\u6bcf\u4e2a\u70b9\u5230\u5149\u6e90\uff08\u5373\u76f8\u53cd\u7684\u65b9\u5411\uff09\u7684\u5411\u91cf\u3002 \u5982\u4f60\u6240\u89c1\uff0c P1 \u70b9\u7684\u6cd5\u7ebf N1 \u4e0e\u6307\u5411\u5149\u6e90\u7684\u5411\u91cf\u5e73\u884c\uff0c\u8be5\u6cd5\u7ebf\u7684\u65b9\u5411\u4e0e\u5149\u7ebf\u7684\u65b9\u5411\u76f8\u53cd\uff08 N1 \u5df2\u88ab\u79fb\u52a8\uff0c\u4ee5\u4fbf\u4f60\u53ef\u4ee5\u770b\u5230\u5b83\uff0c\u4f46\u8fd9\u5728\u6570\u5b66\u4e0a\u662f\u7b49\u4ef7\u7684\uff09\u3002 P1 \u4e0e\u6307\u5411\u5149\u6e90\u7684\u5411\u91cf\u6240\u6210\u7684\u5939\u89d2\u7b49\u4e8e 0 \u3002\u56e0\u4e3a\u5b83\u7684\u5207\u5e73\u9762\u5782\u76f4\u4e8e\u5149\u6e90\uff0c\u6240\u4ee5 P1 \u5c06\u662f\u6700\u4eae\u7684\u70b9\u3002 P2 \u70b9\u7684\u6cd5\u7ebf N2 \u4e0e\u6307\u5411\u5149\u6e90\u7684\u5411\u91cf\u6240\u6210\u7684\u5939\u89d2\u7ea6\u4e3a30\u5ea6\uff0c\u6240\u4ee5\u5b83\u5e94\u8be5\u6bd4 P1 \u66f4\u6697\u3002\u6700\u540e\uff0c P3 \u7684\u6cd5\u7ebf N3 \u4e5f\u4e0e\u6307\u5411\u5149\u6e90\u7684\u5411\u91cf\u5e73\u884c\uff0c\u4f46\u4e24\u4e2a\u5411\u91cf\u7684\u65b9\u5411\u76f8\u53cd\u3002 P3 \u4e0e\u6307\u5411\u5149\u6e90\u7684\u5411\u91cf\u7684\u89d2\u5ea6\u4e3a180\u5ea6\uff0c\u6240\u4ee5\u6839\u672c\u4e0d\u5e94\u8be5\u63a5\u6536\u5230\u4efb\u4f55\u5149\u7ebf\u3002 \u56e0\u6b64\uff0c\u6211\u4eec\u4f3c\u4e4e\u5f97\u5230\u4e86\u4e00\u4e2a\u8ba1\u7b97\u67d0\u70b9\u7684\u5149\u7167\u5f3a\u5ea6\u7684\u597d\u65b9\u6cd5\uff0c\u5149\u5f3a\u4e0e\u8be5\u70b9\u7684\u6cd5\u7ebf\u548c\u8be5\u70b9\u6307\u5411\u5149\u6e90\u7684\u5411\u91cf\u4e4b\u95f4\u7684\u5939\u89d2\u5927\u5c0f\u6709\u5173\u3002\u4f46\u6211\u4eec\u8981\u600e\u4e48\u8ba1\u7b97\u5b83\u5462\uff1f \u6709\u4e00\u4e2a\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u7684\u6570\u5b66\u8fd0\u7b97\u2014\u2014\u2014\u2014\u6570\u91cf\u79ef\uff08\u53c8\u79f0\u4e3a\u70b9\u79ef\uff09\u3002\u8be5\u8fd0\u7b97\u9700\u8981\u4e24\u4e2a\u5411\u91cf\u5e76\u5f97\u5230\u4e00\u4e2a\u6570\u5b57\uff08\u6807\u91cf\uff09\uff0c\u5982\u679c\u5b83\u4eec\u4e4b\u95f4\u7684\u89d2\u5ea6\u8f83\u5c0f\uff0c\u5219\u5f97\u5230\u4e00\u4e2a\u6b63\u6570\uff1b\u5982\u679c\u5b83\u4eec\u4e4b\u95f4\u7684\u89d2\u5ea6\u5f88\u5927\uff0c\u5219\u5f97\u5230\u4e00\u4e2a\u8d1f\u6570\u3002\u5982\u679c\u4e24\u4e2a\u5411\u91cf\u90fd\u88ab\u5f52\u4e00\u5316\uff0c\u5373\u4e24\u8005\u7684\u957f\u5ea6\u90fd\u7b49\u4e8e1\uff0c\u90a3\u4e48\u6570\u91cf\u79ef\u7684\u7ed3\u679c\u5c06\u4ecb\u4e8e -1 \u548c 1 \u4e4b\u95f4\u3002\u5982\u679c\u4e24\u4e2a\u5411\u91cf\u7684\u65b9\u5411\u76f8\u540c\uff08\u5373\u5939\u89d2\u4e3a 0 \uff09\uff0c\u5219\u6570\u91cf\u79ef\u4e3a1\uff1b\u5982\u679c\u4e24\u4e2a\u5411\u91cf\u5939\u89d2\u4e3a\u76f4\u89d2\uff0c\u5219\u5b83\u7684\u503c\u4e3a 0 \uff1b\u5982\u679c\u4e24\u4e2a\u5411\u91cf\u7684\u65b9\u5411\u76f8\u53cd\uff0c\u5219\u4e3a -1 \u3002 \u6211\u4eec\u5b9a\u4e49\u4e24\u4e2a\u5411\u91cf\uff0c v1 \u548c v2 \uff0c\u5e76\u4ee5 \u03b1 \u4f5c\u4e3a\u5b83\u4eec\u4e4b\u95f4\u7684\u5939\u89d2\u3002\u6570\u91cf\u79ef\u7684\u5b9a\u4e49\u5982\u4e0b\uff1a \u5982\u679c\u4e24\u4e2a\u5411\u91cf\u90fd\u5f52\u4e00\u5316\uff0c\u5373\u5b83\u4eec\u7684\u957f\u5ea6\uff0c\u6216\u5b83\u4eec\u7684\u6a21\u957f\u7b49\u4e8e1\uff0c\u5b83\u4eec\u7684\u6570\u91cf\u79ef\u5373\u4e3a\u5939\u89d2\u7684\u4f59\u5f26\u503c\u3002\u6211\u4eec\u5c06\u4f7f\u7528\u8be5\u8fd0\u7b97\u6765\u8ba1\u7b97\u6f2b\u53cd\u5c04\u5206\u91cf\u3002 \u6240\u4ee5\u6211\u4eec\u9700\u8981\u8ba1\u7b97\u6307\u5411\u5149\u6e90\u7684\u5411\u91cf\uff0c\u8be5\u600e\u4e48\u505a\u5462\uff1f\u5047\u5982\u6211\u4eec\u6709\u6bcf\u4e2a\u70b9\u7684\u4f4d\u7f6e\uff08\u5373\u9876\u70b9\u4f4d\u7f6e\uff09\u548c\u5149\u6e90\u7684\u4f4d\u7f6e\u3002\u9996\u5148\uff0c\u8fd9\u4e24\u4e2a\u5750\u6807\u5fc5\u987b\u4f4d\u4e8e\u540c\u4e00\u4e2a\u5750\u6807\u7a7a\u95f4\u4e2d\u3002\u4e3a\u4e86\u7b80\u5316\uff0c\u6211\u4eec\u5047\u8bbe\u5b83\u4eec\u90fd\u5904\u4e8e\u4e16\u754c\u5750\u6807\u7cfb\u4e2d\uff0c\u90a3\u4e48\u8fd9\u4e9b\u4f4d\u7f6e\u662f\u6307\u5411\u9876\u70b9\u4f4d\u7f6e\uff08 VP \uff09\u548c\u5149\u6e90\uff08 VS \uff09\u7684\u5411\u91cf\u7684\u5750\u6807\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u5982\u679c\u6211\u4eec\u4ece VP \u4e2d\u51cf\u53bb VS \uff0c\u5c31\u4f1a\u5f97\u5230\u6211\u4eec\u6240\u9700\u7684\u5411\u91cf\uff0c\u79f0\u4e3a L \u3002 \u73b0\u5728\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u6307\u5411\u5149\u6e90\u7684\u77e2\u91cf\u548c\u6cd5\u7ebf\u4e4b\u95f4\u505a\u6570\u91cf\u79ef\uff0c\u56e0\u4e3aJohann Lambert\u662f\u7b2c\u4e00\u4e2a\u63d0\u51fa\u8fd9\u79cd\u5173\u7cfb\u6765\u6a21\u62df\u5e73\u9762\u4eae\u5ea6\u7684\uff0c\u6240\u4ee5\u8be5\u4e58\u79ef\u88ab\u79f0\u4e3a\u5170\u4f2f\u7279\u9879\u3002 \u8ba9\u6211\u4eec\u603b\u7ed3\u4e00\u4e0b\uff0c\u5b9a\u4e49\u4ee5\u4e0b\u53d8\u91cf\uff1a vPos \uff1a\u6211\u4eec\u7684\u9876\u70b9\u5728\u6a21\u578b\u89c2\u5bdf\u7a7a\u95f4\u5750\u6807\u7cfb\u4e2d\u7684\u4f4d\u7f6e\u3002 lPos \uff1a\u89c2\u5bdf\u7a7a\u95f4\u5750\u6807\u7cfb\u4e2d\u7684\u5149\u6e90\u4f4d\u7f6e\u3002 intensity \uff1a\u5149\u7684\u5f3a\u5ea6\uff08\u4ece0\u52301\uff09\u3002 lCourour \uff1a\u5149\u7684\u989c\u8272\u3002 normal \uff1a\u9876\u70b9\u6cd5\u7ebf\u3002 \u9996\u5148\u6211\u4eec\u9700\u8981\u8ba1\u7b97\u4ece\u5f53\u524d\u4f4d\u7f6e\u6307\u5411\u5149\u6e90\u7684\u5411\u91cf\uff1a toLightDirection = lPos - vPos \uff0c\u8be5\u8fd0\u7b97\u7684\u7ed3\u679c\u9700\u8981\u5f52\u4e00\u5316\u3002 \u7136\u540e\u6211\u4eec\u9700\u8981\u8ba1\u7b97\u6f2b\u53cd\u5c04\u56e0\u6570\uff08\u6807\u91cf\uff09\uff1a diffuseFactor = normal \\cdot toLightDirection \u3002\u8ba1\u7b97\u4e24\u5411\u91cf\u4e4b\u95f4\u7684\u6570\u91cf\u79ef\uff0c\u6211\u4eec\u5e0c\u671b\u503c\u4ecb\u4e8e -1 \u548c 1 \u4e4b\u95f4\uff0c\u6240\u4ee5\u4e24\u4e2a\u5411\u91cf\u90fd\u9700\u8981\u5f52\u4e00\u5316\u3002\u989c\u8272\u9700\u8981\u4ecb\u4e8e 0 \u5230 1 \u4e4b\u95f4\uff0c\u6240\u4ee5\u5982\u679c\u503c\u4f4e\u4e8e 0 \uff0c\u6211\u4eec\u5c06\u5176\u8bbe\u4e3a 0 \u3002 \u6700\u540e\uff0c\u6211\u4eec\u53ea\u9700\u8981\u901a\u8fc7\u6f2b\u53cd\u5c04\u56e0\u6570\u548c\u5149\u7684\u5f3a\u5ea6\u6765\u8c03\u8282\u5149\u7684\u989c\u8272\uff1a color = diffuseColour * lColour * diffuseFactor * intensity","title":"\u6f2b\u53cd\u5c04"},{"location":"10-let-there-be-light/#_3","text":"\u73b0\u5728\u770b\u5230\u955c\u9762\u53cd\u5c04\uff0c\u4f46\u9996\u5148\u6211\u4eec\u9700\u8981\u77e5\u9053\u5149\u7ebf\u662f\u5982\u4f55\u53cd\u5c04\u7684\u3002\u5f53\u5149\u7167\u5c04\u5230\u4e00\u4e2a\u8868\u9762\u65f6\uff0c\u5b83\u7684\u4e00\u90e8\u5206\u88ab\u5438\u6536\uff0c\u53e6\u4e00\u90e8\u5206\u88ab\u53cd\u5c04\uff0c\u5982\u679c\u4f60\u8fd8\u8bb0\u5f97\u4f60\u7684\u7269\u7406\u8bfe\u77e5\u8bc6\uff0c\u53cd\u5c04\u5c31\u662f\u5149\u4ece\u7269\u4f53\u53cd\u5f39\u56de\u6765\u3002 \u5f53\u7136\uff0c\u7269\u4f53\u8868\u9762\u4e0d\u662f\u5b8c\u5168\u629b\u5149\u7684\uff0c\u5982\u679c\u4f60\u4ed4\u7ec6\u89c2\u5bdf\uff0c\u4f60\u4f1a\u770b\u5230\u5f88\u591a\u4e0d\u5e73\u6574\u7684\u5730\u65b9\u3002\u6b64\u5916\u8fd8\u6709\u8bb8\u591a\u5149\u7ebf\uff08\u5b9e\u9645\u4e0a\u662f\u5149\u5b50\uff09\uff0c\u4f1a\u649e\u51fb\u8fd9\u4e2a\u8868\u9762\uff0c\u5e76\u4e14\u4f1a\u4ee5\u4e0d\u540c\u7684\u89d2\u5ea6\u8fdb\u884c\u53cd\u5c04\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u770b\u5230\u7684\u5c31\u50cf\u662f\u4e00\u675f\u5149\u7167\u5c04\u8868\u9762\u5e76\u6563\u5c04\u56de\u6765\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5149\u5728\u649e\u51fb\u8868\u9762\u65f6\u4f1a\u53d1\u6563\uff0c\u8fd9\u5c31\u662f\u6211\u4eec\u4e4b\u524d\u8ba8\u8bba\u8fc7\u7684\u6f2b\u53cd\u5c04\u5206\u91cf\u3002 \u4f46\u662f\uff0c\u5f53\u5149\u7ebf\u7167\u5c04\u629b\u5149\u8868\u9762\u65f6\uff0c\u4f8b\u5982\u91d1\u5c5e\uff0c\u5149\u7ebf\u4f1a\u53d7\u5230\u8f83\u4f4e\u7684\u6269\u6563\u5f71\u54cd\uff0c\u5e76\u4e14\u5728\u5b83\u649e\u5230\u8868\u9762\u65f6\uff0c\u5927\u90e8\u5206\u4f1a\u5411\u53cd\u65b9\u5411\u53cd\u5c04\u3002 \u8fd9\u5c31\u662f\u955c\u9762\u53cd\u5c04\u5206\u91cf\u7684\u6a21\u578b\uff0c\u5b83\u53d6\u51b3\u4e8e\u6750\u8d28\u5c5e\u6027\u3002\u5bf9\u4e8e\u955c\u9762\u53cd\u5c04\uff0c\u91cd\u8981\u7684\u662f\u53ea\u6709\u5f53\u6444\u50cf\u673a\u5904\u4e8e\u6070\u5f53\u7684\u4f4d\u7f6e\u65f6\uff0c\u5373\u53cd\u5c04\u5149\u7684\u53cd\u5c04\u533a\u57df\u5185\uff0c\u53cd\u5c04\u5149\u624d\u53ef\u89c1\u3002 \u65e2\u7136\u5df2\u7ecf\u89e3\u91ca\u4e86\u955c\u9762\u53cd\u5c04\u4e4b\u4e2d\u7684\u673a\u7406\uff0c\u6211\u4eec\u63a5\u4e0b\u6765\u51c6\u5907\u8ba1\u7b97\u8fd9\u4e2a\u5206\u91cf\u3002\u9996\u5148\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u4ece\u5149\u6e90\u6307\u5411\u9876\u70b9\u7684\u5411\u91cf\u3002\u5f53\u6211\u4eec\u8ba1\u7b97\u6f2b\u53cd\u5c04\u5206\u91cf\u65f6\uff0c\u6211\u4eec\u4f7f\u7528\u7684\u662f\u65b9\u5411\u4e0e\u4e4b\u76f8\u53cd\u7684\u5411\u91cf\uff0c\u5b83\u6307\u5411\u7684\u662f\u5149\u6e90\uff0c\u5373 toLightDirection \u3002\u6240\u4ee5\u8ba9\u6211\u4eec\u5c06\u5176\u8ba1\u7b97\u4e3a fromLightDirection = -(toLightDirection) \u3002 \u7136\u540e\u6211\u4eec\u9700\u8981\u8003\u8651\u5230\u8868\u9762\u7684\u6cd5\u7ebf\uff0c\u6765\u8ba1\u7b97\u7531 fromLightDirection \u5c04\u51fa\u7684\u5149\u7ebf\u649e\u51fb\u8868\u9762\u6240\u4ea7\u751f\u7684\u53cd\u5c04\u5149\u3002\u6709\u4e00\u4e2a\u540d\u4e3a reflect \u7684GLSL\u51fd\u6570\u5b9e\u73b0\u4e86\u8be5\u529f\u80fd\u3002\u6240\u4ee5\uff0c reflectLight = reflect(fromLightSource, normal) \u3002 \u6211\u4eec\u8fd8\u9700\u8981\u4e00\u4e2a\u6307\u5411\u6444\u50cf\u673a\u7684\u5411\u91cf\uff0c\u5e76\u5c06\u5176\u547d\u540d\u4e3a cameraDirection \uff0c\u7136\u540e\u8ba1\u7b97\u51fa\u6444\u50cf\u673a\u4f4d\u7f6e\u548c\u9876\u70b9\u4f4d\u7f6e\u4e4b\u95f4\u7684\u5dee\u503c\uff1a cameraDirection = cameraPos - vPos \u3002\u6444\u50cf\u673a\u4f4d\u7f6e\u5411\u91cf\u548c\u9876\u70b9\u4f4d\u7f6e\u9700\u8981\u5904\u4e8e\u76f8\u540c\u7684\u5750\u6807\u7cfb\u4e2d\uff0c\u5e76\u4e14\u5f97\u5230\u7684\u5411\u91cf\u9700\u8981\u5f52\u4e00\u5316\u3002\u4e0b\u56fe\u6982\u8ff0\u4e86\u6211\u4eec\u76ee\u524d\u8ba1\u7b97\u7684\u4e3b\u8981\u5206\u91cf\uff1a \u73b0\u5728\u6211\u4eec\u9700\u8981\u8ba1\u7b97\u5149\u5f3a\uff0c\u5373 specularFactor \u3002\u5982\u679c cameraDirection \u548c reflectLight \u5411\u91cf\u6307\u5411\u76f8\u540c\u7684\u65b9\u5411\uff0c\u8be5\u503c\u5c31\u8d8a\u9ad8\uff0c\u5982\u679c\u5b83\u4eec\u65b9\u5411\u76f8\u53cd\u5176\u503c\u5219\u8d8a\u4f4e\u3002\u4e3a\u4e86\u8ba1\u7b97\u8be5\u503c\u6211\u4eec\u5c06\u518d\u6b21\u8fd0\u7528\u6570\u91cf\u79ef\u3002 specularFactor = cameraDirection \\cdot reflectLight \u3002\u6211\u4eec\u53ea\u5e0c\u671b\u8be5\u503c\u4f4d\u4e8e 0 \u548c 1 \u4e4b\u95f4\uff0c\u6240\u4ee5\u5982\u679c\u5b83\u4f4e\u4e8e 0 \uff0c\u5c31\u5c06\u5b83\u8bbe\u4e3a0\u3002 \u6211\u4eec\u8fd8\u9700\u8981\u8003\u8651\u5230\uff0c\u5982\u679c\u6444\u50cf\u673a\u6307\u5411\u53cd\u5c04\u5149\u9525\uff0c\u5219\u8be5\u5149\u66f4\u5f3a\u70c8\u3002\u8fd9\u53ef\u4ee5\u901a\u8fc7\u8ba1\u7b97 specularFactor \u7684 specularPower \u6b21\u5e42\u6765\u5b9e\u73b0\uff0c\u5176\u4e2d specularPower \u4e3a\u7ed9\u5b9a\u7684\u53c2\u6570\uff1a specularFactor = specularFactor^{specularPower} \u6700\u540e\uff0c\u6211\u4eec\u9700\u8981\u5bf9\u6750\u8d28\u7684\u53cd\u5c04\u7387\u8fdb\u884c\u5efa\u6a21\uff0c\u5982\u679c\u5149\u7ebf\u53cd\u5c04\uff0c\u53cd\u5c04\u7387\u5c06\u8c03\u8282\u53cd\u5c04\u5149\u7684\u5f3a\u5ea6\uff0c\u8fd9\u5c06\u7528\u5230\u4e00\u4e2a\u540d\u4e3a reflectance \u7684\u53c2\u6570\u3002\u6240\u4ee5\u955c\u9762\u53cd\u5c04\u5206\u91cf\u7684\u989c\u8272\u4e3a\uff1a specularColour * lColour * reflectance * specularFactor * intensity","title":"\u955c\u9762\u53cd\u5c04"},{"location":"10-let-there-be-light/#_4","text":"\u6211\u4eec\u73b0\u5728\u77e5\u9053\u5982\u4f55\u8ba1\u7b97\u8fd9\u4e09\u4e2a\u5206\u91cf\u4e86\uff0c\u8fd9\u4e9b\u5206\u91cf\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u7528\u73af\u5883\u5149\u6a21\u62df\u70b9\u5149\u6e90\u3002\u4f46\u662f\u6211\u4eec\u7684\u5149\u7167\u6a21\u578b\u8fd8\u4e0d\u5b8c\u6574\uff0c\u56e0\u4e3a\u7269\u4f53\u53cd\u5c04\u7684\u5149\u4e0e\u5149\u6e90\u7684\u8ddd\u79bb\u65e0\u5173\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u9700\u8981\u6a21\u62df\u5149\u7ebf\u8870\u51cf\u3002 \u8870\u51cf\u662f\u4e00\u4e2a\u4e0e\u8ddd\u79bb\u548c\u5149\u6709\u5173\u7684\u51fd\u6570\u3002\u5149\u7684\u5f3a\u5ea6\u4e0e\u8ddd\u79bb\u7684\u5e73\u65b9\u6210\u53cd\u6bd4\u3002\u8fd9\u5f88\u5bb9\u6613\u7406\u89e3\uff0c\u968f\u7740\u5149\u7ebf\u7684\u4f20\u64ad\uff0c\u5176\u80fd\u91cf\u6cbf\u7740\u7403\u4f53\u8868\u9762\u5206\u5e03\uff0c\u5176\u534a\u5f84\u7b49\u4e8e\u5149\u7ebf\u884c\u8fdb\u7684\u8ddd\u79bb\uff0c\u800c\u7403\u7684\u8868\u9762\u79ef\u4e0e\u5176\u534a\u5f84\u7684\u5e73\u65b9\u6210\u6b63\u6bd4\u3002\u6211\u4eec\u53ef\u4ee5\u7528\u4e0b\u5f0f\u6765\u8ba1\u7b97\u8870\u51cf\u56e0\u5b50\uff1a 1.0 /(atConstant + atLineardist + atExponentdist ^ {2}) \u3002 \u4e3a\u4e86\u6a21\u62df\u8870\u51cf\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5c06\u8870\u51cf\u56e0\u6570\u4e58\u4ee5\u6700\u7ec8\u989c\u8272\u5373\u53ef\u3002","title":"\u8870\u51cf"},{"location":"10-let-there-be-light/#_5","text":"\u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u5f00\u59cb\u7f16\u7a0b\u5b9e\u73b0\u4e0a\u8ff0\u7684\u6240\u6709\u6982\u5ff5\uff0c\u6211\u4eec\u5c06\u4ece\u7740\u8272\u5668\u5f00\u59cb\u3002\u5927\u90e8\u5206\u5de5\u4f5c\u5c06\u5728\u7247\u5143\u7740\u8272\u5668\u4e2d\u5b8c\u6210\uff0c\u4f46\u6211\u4eec\u8fd8\u9700\u8981\u5c06\u9876\u70b9\u7740\u8272\u5668\u4e2d\u7684\u4e00\u4e9b\u6570\u636e\u4f20\u9012\u7ed9\u5b83\u3002\u5728\u4e0a\u4e00\u7ae0\u4e2d\uff0c\u7247\u5143\u7740\u8272\u5668\u4ec5\u63a5\u6536\u7eb9\u7406\u5750\u6807\uff0c\u73b0\u5728\u6211\u4eec\u8fd8\u5c06\u4f20\u9012\u4e24\u4e2a\u53c2\u6570\uff1a \u5df2\u8f6c\u6362\u4e3a\u6a21\u578b\u89c2\u5bdf\u7a7a\u95f4\u5750\u6807\u7cfb\u5e76\u5df2\u5f52\u4e00\u5316\u7684\u9876\u70b9\u6cd5\u7ebf\u3002 \u5df2\u8f6c\u6362\u4e3a\u6a21\u578b\u89c2\u5bdf\u7a7a\u95f4\u5750\u6807\u7cfb\u7684\u9876\u70b9\u4f4d\u7f6e\u3002 \u9876\u70b9\u7740\u8272\u5668\u7684\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a #version 330 layout (location=0) in vec3 position; layout (location=1) in vec2 texCoord; layout (location=2) in vec3 vertexNormal; out vec2 outTexCoord; out vec3 mvVertexNormal; out vec3 mvVertexPos; uniform mat4 modelViewMatrix; uniform mat4 projectionMatrix; void main() { vec4 mvPos = modelViewMatrix * vec4(position, 1.0); gl_Position = projectionMatrix * mvPos; outTexCoord = texCoord; mvVertexNormal = normalize(modelViewMatrix * vec4(vertexNormal, 0.0)).xyz; mvVertexPos = mvPos.xyz; } \u5728\u6211\u4eec\u7ee7\u7eed\u8bb2\u89e3\u7247\u5143\u7740\u8272\u5668\u4e4b\u524d\uff0c\u5fc5\u987b\u5f3a\u8c03\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u6982\u5ff5\u3002\u4ece\u4e0a\u8ff0\u4ee3\u7801\u53ef\u4ee5\u770b\u5230\uff0c mvVertexNormal \uff0c\u8be5\u53d8\u91cf\u5305\u542b\u5df2\u8f6c\u6362\u4e3a\u6a21\u578b\u89c2\u5bdf\u7a7a\u95f4\u5750\u6807\u7684\u9876\u70b9\u6cd5\u7ebf\u3002\u8fd9\u662f\u901a\u8fc7\u5c06 vertexNormal \u4e58\u4e0a modelViewMatrix \u6765\u5b9e\u73b0\u7684\uff0c\u5c31\u50cf\u9876\u70b9\u4f4d\u7f6e\u4e00\u6837\u3002\u4f46\u6709\u4e00\u4e2a\u7ec6\u5fae\u7684\u533a\u522b\uff0c\u8be5\u9876\u70b9\u6cd5\u7ebf\u7684w\u5206\u91cf\u5728\u4e58\u4ee5\u77e9\u9635\u4e4b\u524d\u88ab\u8bbe\u7f6e\u4e3a0\uff1a vec4(vertexNormal, 0.0) \u3002\u6211\u4eec\u4e3a\u4ec0\u4e48\u8981\u8fd9\u6837\u505a\u5462?\u56e0\u4e3a\u6211\u4eec\u5e0c\u671b\u6cd5\u7ebf\u88ab\u65cb\u8f6c\u548c\u7f29\u653e\uff0c\u4f46\u6211\u4eec\u4e0d\u5e0c\u671b\u5b83\u88ab\u5e73\u79fb\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u5bf9\u5b83\u7684\u65b9\u5411\u611f\u5174\u8da3\uff0c\u800c\u4e0d\u662f\u5b83\u7684\u4f4d\u7f6e\u3002\u800c\u8fd9\u662f\u901a\u8fc7\u5c06w\u5206\u91cf\u8bbe\u7f6e\u4e3a0\u6765\u5b9e\u73b0\u7684\uff0c\u8fd9\u4e5f\u662f\u662f\u4f7f\u7528\u9f50\u6b21\u5750\u6807\u7684\u4f18\u70b9\u4e4b\u4e00\uff0c\u901a\u8fc7\u8bbe\u7f6ew\u5206\u91cf\uff0c\u6211\u4eec\u53ef\u4ee5\u63a7\u5236\u5e94\u7528\u7684\u53d8\u6362\u3002\u4f60\u53ef\u4ee5\u5728\u7eb8\u4e0a\u505a\u77e9\u9635\u4e58\u6cd5\uff0c\u770b\u770b\u4e3a\u4ec0\u4e48\u662f\u8fd9\u6837\u3002 \u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u5f00\u59cb\u5728\u7247\u5143\u7740\u8272\u5668\u4e2d\u5f00\u5de5\u4e86\uff0c\u9664\u4e86\u5c06\u6765\u81ea\u9876\u70b9\u7740\u8272\u5668\u7684\u503c\u58f0\u660e\u4e3a\u8f93\u5165\u53c2\u6570\u4e4b\u5916\uff0c\u6211\u4eec\u5c06\u5b9a\u4e49\u4e00\u4e9b\u6709\u7528\u7684\u7ed3\u6784\u4f53\u6765\u5efa\u6a21\u5149\u7167\u548c\u6750\u8d28\u5c5e\u6027\u3002\u9996\u5148\u6211\u4eec\u5b9a\u4e49\u7528\u4e8e\u5efa\u6a21\u5149\u7684\u7ed3\u6784\u4f53\u3002 struct Attenuation { float constant; float linear; float exponent; }; struct PointLight { vec3 colour; // \u5149\u6e90\u4f4d\u7f6e\u662f\u5728\u89c2\u5bdf\u5750\u6807\u7cfb\u4e2d\u7684 vec3 position; float intensity; Attenuation att; }; \u70b9\u5149\u6e90\u7531\u4e00\u4e2a\u989c\u8272\uff0c\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u4ee5\u53ca\u4e00\u4e2a\u4ecb\u4e8e 0 \u548c 1 \u4e4b\u95f4\u7684\u6570\u5b57\uff08\u7528\u4e8e\u6a21\u62df\u5149\u7167\u5f3a\u5ea6\uff09\u548c\u4e00\u7ec4\u7528\u4e8e\u6a21\u62df\u8870\u51cf\u65b9\u7a0b\u7684\u53c2\u6570\u5b9a\u4e49\u3002 \u5efa\u6a21\u6750\u8d28\u5c5e\u6027\u7684\u7ed3\u6784\u4f53\u5982\u4e0b\uff1a struct Material { vec4 ambient; vec4 diffuse; vec4 specular; int hasTexture; float reflectance; }; \u6750\u8d28\u7531\u4e00\u7ec4\u989c\u8272\u5b9a\u4e49\uff08\u5047\u5982\u6211\u4eec\u4e0d\u4f7f\u7528\u7eb9\u7406\u4e3a\u7247\u5143\u7740\u8272\uff09\uff1a \u7528\u4e8e\u73af\u5883\u5149\u5206\u91cf\u7684\u989c\u8272\u3002 \u7528\u4e8e\u6f2b\u53cd\u5c04\u5206\u91cf\u7684\u989c\u8272\u3002 \u7528\u4e8e\u955c\u9762\u53cd\u5c04\u5206\u91cf\u7684\u989c\u8272\u3002 \u6750\u8d28\u8fd8\u7531\u4e00\u4e2a\u6807\u5fd7\u63a7\u5236\u5b83\u662f\u5426\u62e5\u6709\u5173\u8054\u7684\u7eb9\u7406\u548c\u53cd\u5c04\u7387\u6307\u6570\u5b9a\u4e49\u3002\u6211\u4eec\u5c06\u5728\u7247\u5143\u7740\u8272\u5668\u4e2d\u4f7f\u7528\u4ee5\u4e0bUniform\u3002 uniform sampler2D texture_sampler; uniform vec3 ambientLight; uniform float specularPower; uniform Material material; uniform PointLight pointLight; uniform vec3 camera_pos; \u6211\u4eec\u7528\u65b0\u5efa\u7684Uniform\u8bbe\u7f6e\u4ee5\u4e0b\u53d8\u91cf\uff1a \u73af\u5883\u5149\uff1a\u50a8\u5b58\u989c\u8272\uff0c\u4ee5\u540c\u6837\u65b9\u5f0f\u5f71\u54cd\u6bcf\u4e2a\u7247\u5143\u3002 \u955c\u9762\u53cd\u5c04\u5f3a\u5ea6\uff08\u5728\u8ba8\u8bba\u955c\u9762\u53cd\u5c04\u5149\u65f6\u7ed9\u51fa\u7684\u65b9\u7a0b\u5f0f\u4e2d\u4f7f\u7528\u7684\u6307\u6570\uff09\u3002 \u4e00\u4e2a\u70b9\u5149\u6e90\u3002 \u6750\u8d28\u5c5e\u6027\u3002 \u6444\u50cf\u673a\u5728\u89c2\u5bdf\u7a7a\u95f4\u5750\u6807\u7cfb\u4e2d\u7684\u4f4d\u7f6e\u3002 \u6211\u4eec\u8fd8\u5c06\u5b9a\u4e49\u4e00\u4e9b\u5168\u5c40\u53d8\u91cf\uff0c\u5b83\u4eec\u5c06\u50a8\u5b58\u8981\u5728\u73af\u5883\u3001\u6f2b\u53cd\u5c04\u548c\u955c\u9762\u53cd\u5c04\u4e2d\u4f7f\u7528\u7684\u6750\u8d28\u989c\u8272\u5206\u91cf\u3002\u6211\u4eec\u4f7f\u7528\u8fd9\u4e9b\u53d8\u91cf\u662f\u56e0\u4e3a\u5982\u679c\u5206\u91cf\u5177\u6709\u7eb9\u7406\uff0c\u6211\u4eec\u5c06\u5bf9\u6240\u6709\u5206\u91cf\u4f7f\u7528\u76f8\u540c\u7684\u989c\u8272\uff0c\u5e76\u4e14\u6211\u4eec\u4e0d\u5e0c\u671b\u8fdb\u884c\u5197\u4f59\u7684\u7eb9\u7406\u67e5\u627e\u3002\u8fd9\u4e9b\u53d8\u91cf\u7684\u5b9a\u4e49\u5982\u4e0b\uff1a vec4 ambientC; vec4 diffuseC; vec4 speculrC; \u6211\u4eec\u73b0\u5728\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\uff0c\u6765\u6839\u636e\u6750\u8d28\u5c5e\u6027\u8bbe\u7f6e\u8fd9\u4e9b\u53d8\u91cf\uff1a void setupColours(Material material, vec2 textCoord) { if (material.hasTexture == 1) { ambientC = texture(texture_sampler, textCoord); diffuseC = ambientC; speculrC = ambientC; } else { ambientC = material.ambient; diffuseC = material.diffuse; speculrC = material.specular; } } \u73b0\u5728\u6211\u4eec\u8981\u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\uff0c\u5b83\u4ee5\u70b9\u5149\u6e90\u3001\u9876\u70b9\u4f4d\u7f6e\u53ca\u5176\u6cd5\u7ebf\u4e3a\u8f93\u5165\u5e76\u8fd4\u56de\u6b64\u524d\u63cf\u8ff0\u7684\u6f2b\u53cd\u5c04\u548c\u955c\u9762\u53cd\u5c04\u5206\u91cf\u8ba1\u7b97\u7684\u989c\u8272\u3002 vec4 calcPointLight(PointLight light, vec3 position, vec3 normal) { vec4 diffuseColour = vec4(0, 0, 0, 0); vec4 specColour = vec4(0, 0, 0, 0); // \u6f2b\u53cd\u5c04 vec3 light_direction = light.position - position; vec3 to_light_source = normalize(light_direction); float diffuseFactor = max(dot(normal, to_light_source ), 0.0); diffuseColour = diffuseC * vec4(light.colour, 1.0) * light.intensity * diffuseFactor; // \u955c\u9762\u53cd\u5c04 vec3 camera_direction = normalize(-position); vec3 from_light_source = -to_light_source; vec3 reflected_light = normalize(reflect(from_light_source, normal)); float specularFactor = max( dot(camera_direction, reflected_light), 0.0); specularFactor = pow(specularFactor, specularPower); specColour = speculrC * specularFactor * material.reflectance * vec4(light.colour, 1.0); // \u8870\u51cf float distance = length(light_direction); float attenuationInv = light.att.constant + light.att.linear * distance + light.att.exponent * distance * distance; return (diffuseColour + specColour) / attenuationInv; } \u4e0a\u8ff0\u4ee3\u7801\u76f8\u5bf9\u6bd4\u8f83\u76f4\u767d\u7b80\u5355\uff0c\u5b83\u53ea\u662f\u8ba1\u7b97\u4e86\u6f2b\u53cd\u5c04\u5206\u91cf\u7684\u989c\u8272\uff0c\u53e6\u4e00\u4e2a\u662f\u8ba1\u7b97\u955c\u9762\u53cd\u5c04\u7684\u989c\u8272\uff0c\u5e76\u901a\u8fc7\u5149\u7ebf\u5728\u5230\u8fbe\u6211\u4eec\u6b63\u5728\u5904\u7406\u7684\u9876\u70b9\u65f6\u53d7\u5230\u7684\u8870\u51cf\u6765\u8c03\u6574\u5b83\u4eec\u3002 \u8bf7\u6ce8\u610f\uff0c\u9876\u70b9\u5750\u6807\u662f\u4f4d\u4e8e\u89c2\u5bdf\u7a7a\u95f4\u4e2d\u7684\u3002\u5728\u8ba1\u7b97\u955c\u9762\u53cd\u5c04\u65f6\uff0c\u6211\u4eec\u5f97\u51fa\u5230\u89c2\u5bdf\u70b9\uff08\u5373\u6444\u50cf\u673a\u4f4d\u7f6e\uff09\u7684\u65b9\u5411\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a vec3 camera_direction = normalize(camera_pos - position); \u4f46\u662f\uff0c\u7531\u4e8e position \u4f4d\u4e8e\u89c2\u5bdf\u7a7a\u95f4\u4e2d\uff0c\u6444\u50cf\u673a\u4f4d\u7f6e\u59cb\u7ec8\u4f4d\u4e8e\u539f\u70b9\uff0c\u5373 (0, 0, 0) \uff0c\u6240\u4ee5\u6211\u4eec\u6309\u5982\u4e0b\u4ee3\u7801\u8ba1\u7b97\u5b83\uff1a vec3 camera_direction = normalize(vec3(0, 0, 0) - position); \u53ef\u4ee5\u7b80\u5316\u4e3a\uff1a vec3 camera_direction = normalize(-position); \u6709\u4e86\u4e0a\u8ff0\u51fd\u6570\uff0c\u9876\u70b9\u7740\u8272\u5668\u7684\u4e3b\u51fd\u6570\u5c31\u53d8\u5f97\u975e\u5e38\u7b80\u5355\u4e86\u3002 void main() { setupColours(material, outTexCoord); vec4 diffuseSpecularComp = calcPointLight(pointLight, mvVertexPos, mvVertexNormal); fragColor = ambientC * vec4(ambientLight, 1) + diffuseSpecularComp; } \u8c03\u7528 setupColours \u51fd\u6570\u5c06\u4f7f\u7528\u9002\u5f53\u7684\u989c\u8272\u6765\u8bbe\u7f6e\u53d8\u91cf ambientC \u3001 diffuseC \u548c speculrC \u3002\u7136\u540e\uff0c\u6211\u4eec\u8ba1\u7b97\u6f2b\u53cd\u5c04\u548c\u955c\u9762\u53cd\u5c04\u5206\u91cf\uff0c\u5e76\u8003\u8651\u5230\u8870\u51cf\u3002\u4e3a\u4e86\u65b9\u4fbf\u8d77\u89c1\uff0c\u6211\u4eec\u4f7f\u7528\u5355\u4e2a\u51fd\u6570\u8c03\u7528\u6765\u5b9e\u73b0\u6b64\u64cd\u4f5c\uff0c\u5982\u4e0a\u6240\u8ff0\u3002\u6700\u7ec8\u7684\u989c\u8272\u662f\u901a\u8fc7\u6dfb\u52a0\u73af\u5883\u5149\u5206\u91cf\u6765\u8ba1\u7b97\u7684\uff08\u5c06 ambientC \u4e58\u4ee5\u73af\u5883\u5149\uff09\u3002\u5982\u4f60\u6240\u89c1\uff0c\u73af\u5883\u5149\u4e0d\u53d7\u8870\u51cf\u7684\u5f71\u54cd\u3002 \u5728\u7740\u8272\u5668\u4e2d\u6211\u4eec\u5f15\u5165\u4e86\u4e00\u4e9b\u9700\u8981\u8fdb\u4e00\u6b65\u89e3\u91ca\u7684\u65b0\u6982\u5ff5\uff0c\u6211\u4eec\u6b63\u5728\u5b9a\u4e49\u7ed3\u6784\u4f53\u5e76\u5c06\u5b83\u4eec\u7528\u4f5cUniform\u3002\u4f46\u6211\u4eec\u8981\u600e\u4e48\u4f20\u9012\u8fd9\u4e9b\u7ed3\u6784\u4f53\uff1f\u9996\u5148\uff0c\u6211\u4eec\u5c06\u5b9a\u4e49\u4e24\u4e2a\u65b0\u7c7b\uff0c\u5b83\u4eec\u5efa\u6a21\u70b9\u5149\u6e90\u548c\u6750\u8d28\u5c5e\u6027\uff0c\u540d\u4e3a PointLight \u548c Material \u3002\u5b83\u4eec\u53ea\u662f\u666e\u901a\u7684Java\u5bf9\u8c61\uff0c\u6240\u4ee5\u4f60\u53ef\u4ee5\u5728\u672c\u4e66\u9644\u5e26\u7684\u6e90\u4ee3\u7801\u4e2d\u67e5\u770b\u5b83\u4eec\u3002\u7136\u540e\uff0c\u6211\u4eec\u9700\u8981\u5728 ShaderProgram \u7c7b\u4e2d\u521b\u5efa\u65b0\u65b9\u6cd5\uff0c\u9996\u5148\u8981\u80fd\u591f\u4e3a\u70b9\u5149\u6e90\u548c\u6750\u8d28\u7ed3\u6784\u4f53\u521b\u5efaUniform\u3002 public void createPointLightUniform(String uniformName) throws Exception { createUniform(uniformName + \".colour\"); createUniform(uniformName + \".position\"); createUniform(uniformName + \".intensity\"); createUniform(uniformName + \".att.constant\"); createUniform(uniformName + \".att.linear\"); createUniform(uniformName + \".att.exponent\"); } public void createMaterialUniform(String uniformName) throws Exception { createUniform(uniformName + \".ambient\"); createUniform(uniformName + \".diffuse\"); createUniform(uniformName + \".specular\"); createUniform(uniformName + \".hasTexture\"); createUniform(uniformName + \".reflectance\"); } \u5982\u4f60\u6240\u89c1\uff0c\u5b83\u975e\u5e38\u7b80\u5355\uff0c\u6211\u4eec\u53ea\u4e3a\u6784\u6210\u7ed3\u6784\u4f53\u7684\u6240\u6709\u5c5e\u6027\u521b\u5efa\u4e00\u4e2a\u5355\u72ec\u7684Uniform\u3002\u73b0\u5728\u6211\u4eec\u9700\u8981\u521b\u5efa\u53e6\u5916\u4e24\u4e2a\u65b9\u6cd5\u6765\u8bbe\u7f6e\u8fd9\u4e9bUniform\u7684\u503c\uff0c\u5e76\u5c06 PointLight \u548c Material \u7684\u5b9e\u4f8b\u4f5c\u4e3a\u53c2\u6570\u3002 public void setUniform(String uniformName, PointLight pointLight) { setUniform(uniformName + \".colour\", pointLight.getColor() ); setUniform(uniformName + \".position\", pointLight.getPosition()); setUniform(uniformName + \".intensity\", pointLight.getIntensity()); PointLight.Attenuation att = pointLight.getAttenuation(); setUniform(uniformName + \".att.constant\", att.getConstant()); setUniform(uniformName + \".att.linear\", att.getLinear()); setUniform(uniformName + \".att.exponent\", att.getExponent()); } public void setUniform(String uniformName, Material material) { setUniform(uniformName + \".ambient\", material.getAmbientColour()); setUniform(uniformName + \".diffuse\", material.getDiffuseColour()); setUniform(uniformName + \".specular\", material.getSpecularColour()); setUniform(uniformName + \".hasTexture\", material.isTextured() ? 1 : 0); setUniform(uniformName + \".reflectance\", material.getReflectance()); } \u5728\u672c\u7ae0\u6e90\u4ee3\u7801\u4e2d\uff0c\u4f60\u8fd8\u5c06\u770b\u5230\u6211\u4eec\u8fd8\u4fee\u6539\u4e86 Mesh \u7c7b\u6765\u50a8\u5b58\u6750\u8d28\u5b9e\u4f8b\uff0c\u5e76\u4e14\u521b\u5efa\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\uff0c\u5728\u5176\u4e2d\u521b\u5efa\u4e86\u4e00\u4e2a\u53ef\u7528\u201cN\u201d\u548c\u201cM\u201d\u952e\u63a7\u5236\u79fb\u52a8\u7684\u70b9\u5149\u6e90\uff0c\u4ee5\u663e\u793a\u70b9\u5149\u6e90\u805a\u7126\u5728\u53cd\u5c04\u7387\u503c\u9ad8\u4e8e0\u7684\u7f51\u683c\u4e0a\u65f6\u662f\u600e\u6837\u7684\u3002 \u8ba9\u6211\u4eec\u56de\u5230\u7247\u5143\u7740\u8272\u5668\uff0c\u5982\u4e0a\u6240\u8ff0\uff0c\u6211\u4eec\u9700\u8981\u53e6\u4e00\u4e2a\u50a8\u5b58\u6444\u50cf\u673a\u4f4d\u7f6e camera_pos \u7684Uniform\u3002\u8fd9\u4e9b\u5750\u6807\u5fc5\u987b\u4f4d\u4e8e\u89c2\u5bdf\u7a7a\u95f4\u4e2d\u3002\u901a\u5e38\u6211\u4eec\u5c06\u5728\u4e16\u754c\u7a7a\u95f4\u5750\u6807\u7cfb\u4e2d\u8bbe\u7f6e\u5149\u6e90\u5750\u6807\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u5c06\u5b83\u4eec\u4e58\u4ee5\u89c2\u5bdf\u77e9\u9635\uff0c\u4ee5\u4fbf\u80fd\u591f\u5728\u7740\u8272\u5668\u4e2d\u4f7f\u7528\u5b83\u4eec\uff0c\u6240\u4ee5\u9700\u8981\u5728 Transformation \u7c7b\u4e2d\u521b\u5efa\u4e00\u4e2a\u65b0\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u8fd4\u56de\u89c2\u5bdf\u77e9\u9635\u4ee5\u4fbf\u53d8\u6362\u5149\u6e90\u5750\u6807\u3002 // \u83b7\u5f97\u5149\u6e90\u5bf9\u8c61\u7684\u526f\u672c\u5e76\u5c06\u5b83\u7684\u5750\u6807\u53d8\u6362\u5230\u89c2\u5bdf\u7a7a\u95f4\u5750\u6807\u7cfb PointLight currPointLight = new PointLight(pointLight); Vector3f lightPos = currPointLight.getPosition(); Vector4f aux = new Vector4f(lightPos, 1); aux.mul(viewMatrix); lightPos.x = aux.x; lightPos.y = aux.y; lightPos.z = aux.z; shaderProgram.setUniform(\"pointLight\", currPointLight); \u6211\u4eec\u4e0d\u4f1a\u5199\u4e0a\u5b8c\u6574\u7684\u6e90\u4ee3\u7801\uff0c\u56e0\u4e3a\u5982\u679c\u8fd9\u6837\u8fd9\u4e00\u7ae0\u5c31\u592a\u957f\u4e86\uff0c\u4e14\u5bf9\u4e8e\u89e3\u91ca\u6e05\u695a\u6982\u5ff5\u6ca1\u6709\u592a\u591a\u7684\u5e2e\u52a9\uff0c\u4f60\u53ef\u4ee5\u5728\u672c\u4e66\u9644\u5e26\u7684\u6e90\u4ee3\u7801\u4e2d\u67e5\u9605\u6e90\u4ee3\u7801\u3002","title":"\u5b9e\u73b0"},{"location":"11-let-there-be-even-more-light/","text":"\u8981\u6709\u66f4\u591a\u7684\u5149\uff08Let there be even more light\uff09 \u5728\u672c\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u5b9e\u73b0\u5728\u6b64\u524d\u7ae0\u8282\u4e2d\u4ecb\u7ecd\u7684\u5176\u4ed6\u7c7b\u578b\u7684\u5149\u3002\u6211\u4eec\u5148\u4ece\u5e73\u884c\u5149\u5f00\u59cb\u3002 \u5e73\u884c\u5149 \u5982\u679c\u4f60\u56de\u60f3\u4e00\u4e0b\uff0c\u5e73\u884c\u5149\u4ece\u540c\u4e00\u65b9\u5411\u7167\u5c04\u5230\u6240\u6709\u7269\u4f53\u4e0a\u3002\u5b83\u7528\u6765\u6a21\u62df\u9065\u8fdc\u4f46\u5149\u5f3a\u5f88\u9ad8\u7684\u5149\u6e90\uff0c\u6bd4\u5982\u592a\u9633\u3002 \u5e73\u884c\u5149\u7684\u53e6\u4e00\u4e2a\u7279\u70b9\u662f\u5b83\u4e0d\u53d7\u8870\u51cf\u7684\u5f71\u54cd\uff0c\u8054\u60f3\u592a\u9633\u5149\uff0c\u6240\u6709\u88ab\u9633\u5149\u7167\u5c04\u7684\u7269\u4f53\u90fd\u4ee5\u76f8\u540c\u7684\u5149\u5f3a\u88ab\u7167\u5c04\uff0c\u56e0\u4e3a\u79bb\u592a\u9633\u7684\u8ddd\u79bb\u592a\u5927\uff0c\u4ee5\u81f3\u4e8e\u5b83\u4eec\u4e4b\u95f4\u7684\u76f8\u5bf9\u4f4d\u7f6e\u90fd\u662f\u65e0\u5173\u7d27\u8981\u7684\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5e73\u884c\u5149\u88ab\u6a21\u62df\u4e3a\u4f4d\u4e8e\u65e0\u7a77\u8fdc\u5904\u7684\u5149\u6e90\uff0c\u5982\u679c\u5b83\u53d7\u5230\u8870\u51cf\u7684\u5f71\u54cd\uff0c\u90a3\u4e48\u5b83\u5c06\u5bf9\u4efb\u4f55\u7269\u4f53\u90fd\u6ca1\u6709\u5f71\u54cd\uff08\u5b83\u5bf9\u7269\u4f53\u989c\u8272\u7684\u5f71\u54cd\u5c06\u7b49\u4e8e0\uff09\u3002 \u6b64\u5916\uff0c\u5e73\u884c\u5149\u4e5f\u7531\u6f2b\u53cd\u5c04\u548c\u955c\u9762\u53cd\u5c04\u5206\u91cf\u7ec4\u6210\uff0c\u4e0e\u70b9\u5149\u6e90\u7684\u533a\u522b\u5728\u4e8e\u5b83\u6ca1\u6709\u4f4d\u7f6e\uff0c\u4f46\u6709\u65b9\u5411\uff0c\u5e76\u4e14\u5b83\u4e0d\u53d7\u8870\u51cf\u7684\u5f71\u54cd\u3002\u56de\u5230\u5e73\u884c\u5149\u7684\u5c5e\u6027\uff0c\u60f3\u8c61\u6211\u4eec\u6b63\u5728\u6a21\u62df\u592a\u9633\u5728\u4e09\u7ef4\u4e16\u754c\u4e2d\u8fd0\u52a8\uff0c\u4e0b\u56fe\u5c55\u793a\u4e86\u9ece\u660e\u3001\u6b63\u5348\u548c\u9ec4\u660f\u65f6\u7684\u5149\u7ebf\u65b9\u5411\u3002 \u4e0a\u56fe\u4e2d\u7684\u5149\u7ebf\u7684\u65b9\u5411\u4e3a\uff1a \u9ece\u660e: -1, 0, 0 \u6b63\u5348: 0, 1, 0 \u9ec4\u660f: 1, 0, 0 \u6ce8\u610f\uff1a\u4f60\u53ef\u80fd\u8ba4\u4e3a\u4e0a\u8ff0\u5750\u6807\u662f\u4f4d\u7f6e\u5750\u6807\uff0c\u4f46\u5b83\u4eec\u53ea\u662f\u4e00\u4e2a\u77e2\u91cf\uff0c\u4e00\u4e2a\u65b9\u5411\uff0c\u800c\u4e0d\u662f\u4e00\u4e2a\u4f4d\u7f6e\u3002\u4ee5\u6570\u5b66\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u77e2\u91cf\u548c\u4f4d\u7f6e\u662f\u4e0d\u53ef\u5206\u8fa8\u7684\uff0c\u4f46\u5b83\u4eec\u6709\u7740\u5b8c\u5168\u4e0d\u540c\u7684\u542b\u4e49\u3002 \u4f46\u662f\uff0c\u6211\u4eec\u5982\u4f55\u6a21\u62df\u8fd9\u4e2a\u5149\u4f4d\u4e8e\u65e0\u7a77\u8fdc\u5904\u5462\uff1f\u7b54\u6848\u662f\u4f7f\u7528 w \u5206\u91cf\uff0c\u5373\u4f7f\u7528\u9f50\u6b21\u5750\u6807\u5e76\u5c06 w \u5206\u91cf\u8bbe\u7f6e\u4e3a 0 \u3002 \u9ece\u660e: -1, 0, 0, 0 \u6b63\u5348: 0, 1, 0, 0 \u9ec4\u660f: 1, 0, 0, 0 \u8fd9\u5c31\u5982\u540c\u6211\u4eec\u5728\u4f20\u9012\u6cd5\u7ebf\u3002\u5bf9\u4e8e\u6cd5\u7ebf\uff0c\u6211\u4eec\u5c06\u5176 w \u5206\u91cf\u8bbe\u7f6e\u4e3a 0 \uff0c\u8868\u793a\u6211\u4eec\u5bf9\u5176\u4f4d\u79fb\u4e0d\u611f\u5174\u8da3\uff0c\u53ea\u5bf9\u65b9\u5411\u611f\u5174\u8da3\u3002\u6b64\u5916\uff0c\u5f53\u6211\u4eec\u5904\u7406\u5e73\u884c\u5149\u65f6\uff0c\u4e5f\u9700\u8981\u8fd9\u6837\u505a\uff0c\u6444\u50cf\u673a\u7684\u4f4d\u79fb\u4e0d\u5e94\u5f71\u54cd\u5e73\u884c\u5149\u7684\u65b9\u5411\u3002 \u8ba9\u6211\u4eec\u5f00\u59cb\u7f16\u7801\u5b9e\u73b0\u548c\u6a21\u62df\u5e73\u884c\u5149\uff0c\u9996\u5148\u8981\u505a\u7684\u662f\u521b\u5efa\u4e00\u4e2a\u7c7b\u6765\u50a8\u5b58\u5b83\u7684\u5c5e\u6027\u3002\u5b83\u53ea\u662f\u53e6\u4e00\u4e2a\u666e\u901a\u7684Java\u5bf9\u8c61\uff0c\u5176\u5177\u6709\u590d\u5236\u6784\u9020\u51fd\u6570\uff0c\u5e76\u50a8\u5b58\u5149\u7684\u65b9\u5411\u3001\u989c\u8272\u548c\u5f3a\u5ea6\u3002 package org.lwjglb.engine.graph; import org.joml.Vector3f; public class DirectionalLight { private Vector3f color; private Vector3f direction; private float intensity; public DirectionalLight(Vector3f color, Vector3f direction, float intensity) { this.color = color; this.direction = direction; this.intensity = intensity; } public DirectionalLight(DirectionalLight light) { this(new Vector3f(light.getColor()), new Vector3f(light.getDirection()), light.getIntensity()); } // \u63a5\u4e0b\u6765\u662fGetter\u548cSetter... \u5982\u4f60\u6240\u89c1\uff0c\u6211\u4eec\u7528 Vector3f \u6765\u50a8\u5b58\u65b9\u5411\u3002\u4fdd\u6301\u51b7\u9759\uff0c\u5f53\u5c06\u5e73\u884c\u5149\u4f20\u9012\u5230\u7740\u8272\u5668\u65f6\uff0c\u6211\u4eec\u5c06\u5904\u7406 w \u5206\u91cf\u3002\u987a\u4fbf\u4e00\u63d0\uff0c\u63a5\u4e0b\u6765\u8981\u505a\u7684\u5c31\u662f\u66f4\u65b0 ShaderProgram \u6765\u521b\u5efa\u548c\u66f4\u65b0\u50a8\u5b58\u5e73\u884c\u5149\u7684Uniform\u3002 \u5728\u7247\u5143\u7740\u8272\u5668\u4e2d\uff0c\u6211\u4eec\u5c06\u5b9a\u4e49\u4e00\u4e2a\u7ed3\u6784\u4f53\u6765\u6a21\u62df\u5e73\u884c\u5149\u3002 struct DirectionalLight { vec3 colour; vec3 direction; float intensity; }; \u6709\u4e86\u4e0a\u8ff0\u5b9a\u4e49\uff0c ShaderProgram \u7c7b\u4e2d\u7684\u65b0\u65b9\u6cd5\u5c31\u5f88\u7b80\u5355\u4e86\u3002 // ... public void createDirectionalLightUniform(String uniformName) throws Exception { createUniform(uniformName + \".colour\"); createUniform(uniformName + \".direction\"); createUniform(uniformName + \".intensity\"); } // ... public void setUniform(String uniformName, DirectionalLight dirLight) { setUniform(uniformName + \".colour\", dirLight.getColor() ); setUniform(uniformName + \".direction\", dirLight.getDirection()); setUniform(uniformName + \".intensity\", dirLight.getIntensity()); } \u6211\u4eec\u73b0\u5728\u9700\u8981\u4f7f\u7528Uniform\uff0c\u901a\u8fc7 DummyGame \u7c7b\u63a7\u5236\u592a\u9633\u7684\u89d2\u5ea6\u6765\u6a21\u62df\u5b83\u662f\u5982\u4f55\u5728\u5929\u4e0a\u79fb\u52a8\u7684\u3002 \u6211\u4eec\u9700\u8981\u66f4\u65b0\u5149\u7684\u65b9\u5411\uff0c\u6240\u4ee5\u592a\u9633\u5728\u9ece\u660e\u65f6\uff08 -90\u00b0 \uff09\uff0c\u5149\u7ebf\u5728 (-1, 0, 0) \u65b9\u5411\u4e0a\uff0c\u5176 x \u5206\u91cf\u4ece -1 \u9010\u6e10\u589e\u52a0\u5230 0 \uff0c y \u5206\u91cf\u9010\u6e10\u4ece 0 \u589e\u52a0\u5230 1 \u3002\u63a5\u4e0b\u6765\uff0c x \u5206\u91cf\u589e\u52a0\u5230 1 \uff0c y \u5206\u91cf\u51cf\u5c11\u5230 0 \u3002\u8fd9\u53ef\u4ee5\u901a\u8fc7\u5c06 x \u5206\u91cf\u8bbe\u7f6e\u4e3a\u89d2\u7684\u6b63\u5f26\u548c\u5c06 y \u5206\u91cf\u8bbe\u7f6e\u4e3a\u89d2\u7684\u4f59\u5f26\u6765\u5b9e\u73b0\u3002 \u6211\u4eec\u4e5f\u4f1a\u8c03\u8282\u5149\u5f3a\uff0c\u5f53\u5b83\u8fdc\u79bb\u9ece\u660e\u65f6\u5f3a\u5ea6\u5c06\u589e\u5f3a\uff0c\u5f53\u5b83\u4e34\u8fd1\u9ec4\u660f\u65f6\u5f3a\u5ea6\u5c06\u51cf\u5f31\u3002\u6211\u4eec\u901a\u8fc7\u5c06\u5f3a\u5ea6\u8bbe\u7f6e\u4e3a 0 \u6765\u6a21\u62df\u591c\u665a\u3002\u6b64\u5916\uff0c\u6211\u4eec\u8fd8\u5c06\u8c03\u8282\u989c\u8272\uff0c\u4f7f\u5149\u5728\u9ece\u660e\u548c\u9ec4\u660f\u65f6\u53d8\u5f97\u66f4\u7ea2\u3002\u8fd9\u5c06\u5728 DummyGame \u7c7b\u7684 update \u65b9\u6cd5\u4e2d\u5b9e\u73b0\u3002 // \u66f4\u65b0\u5e73\u884c\u5149\u7684\u65b9\u5411\uff0c\u5f3a\u5ea6\u548c\u989c\u8272 lightAngle += 1.1f; if (lightAngle > 90) { directionalLight.setIntensity(0); if (lightAngle >= 360) { lightAngle = -90; } } else if (lightAngle <= -80 || lightAngle >= 80) { float factor = 1 - (float)(Math.abs(lightAngle) - 80)/ 10.0f; directionalLight.setIntensity(factor); directionalLight.getColor().y = Math.max(factor, 0.9f); directionalLight.getColor().z = Math.max(factor, 0.5f); } else { directionalLight.setIntensity(1); directionalLight.getColor().x = 1; directionalLight.getColor().y = 1; directionalLight.getColor().z = 1; } double angRad = Math.toRadians(lightAngle); directionalLight.getDirection().x = (float) Math.sin(angRad); directionalLight.getDirection().y = (float) Math.cos(angRad); \u7136\u540e\uff0c\u6211\u4eec\u9700\u8981\u5728 Renderer \u7c7b\u4e2d\u7684 render \u65b9\u6cd5\u4e2d\u5c06\u5e73\u884c\u5149\u4f20\u7ed9\u7740\u8272\u5668\u3002 // \u83b7\u53d6\u5e73\u884c\u5149\u5bf9\u8c61\u7684\u526f\u672c\u5e76\u5c06\u5176\u5750\u6807\u53d8\u6362\u5230\u89c2\u5bdf\u5750\u6807\u7cfb DirectionalLight currDirLight = new DirectionalLight(directionalLight); Vector4f dir = new Vector4f(currDirLight.getDirection(), 0); dir.mul(viewMatrix); currDirLight.setDirection(new Vector3f(dir.x, dir.y, dir.z)); shaderProgram.setUniform(\"directionalLight\", currDirLight); \u5982\u4f60\u6240\u89c1\uff0c\u6211\u4eec\u9700\u8981\u53d8\u6362\u5149\u7684\u65b9\u5411\u5230\u89c2\u5bdf\u7a7a\u95f4\uff0c\u4f46\u6211\u4eec\u4e0d\u60f3\u5e94\u7528\u4f4d\u79fb\uff0c\u6240\u4ee5\u5c06 w \u5206\u91cf\u8bbe\u7f6e\u4e3a 0 \u3002 \u73b0\u5728\uff0c\u6211\u4eec\u5df2\u7ecf\u51c6\u5907\u597d\u5728\u7247\u5143\u7740\u8272\u5668\u4e0a\u5b8c\u6210\u5269\u4e0b\u7684\u5de5\u4f5c\u4e86\uff0c\u56e0\u4e3a\u9876\u70b9\u7740\u8272\u5668\u4e0d\u9700\u8981\u4fee\u6539\u3002\u6b64\u524d\u5df2\u7ecf\u8bf4\u8fc7\uff0c\u6211\u4eec\u9700\u8981\u5b9a\u4e49\u4e00\u4e2a\u540d\u4e3a DirectionalLight \u7684\u65b0\u7ed3\u6784\u4f53\u6765\u6a21\u62df\u5e73\u884c\u5149\uff0c\u6240\u4ee5\u9700\u8981\u4e00\u4e2a\u65b0\u7684Uniform\u3002 uniform DirectionalLight directionalLight; \u6211\u4eec\u9700\u8981\u91cd\u6784\u4e00\u4e0b\u4ee3\u7801\uff0c\u5728\u4e0a\u4e00\u7ae0\u4e2d\uff0c\u6211\u4eec\u6709\u4e00\u4e2a\u540d\u4e3a calcPointLight \u7684\u51fd\u6570\uff0c\u5b83\u8ba1\u7b97\u6f2b\u53cd\u5c04\u548c\u955c\u9762\u53cd\u5c04\u5206\u91cf\uff0c\u5e76\u5e94\u7528\u8870\u51cf\u3002\u4f46\u5982\u4e0a\u6240\u8ff0\uff0c\u5e73\u884c\u5149\u4f7f\u7528\u6f2b\u53cd\u5c04\u548c\u955c\u9762\u53cd\u5c04\u5206\u91cf\uff0c\u4f46\u4e0d\u53d7\u8870\u51cf\u5f71\u54cd\uff0c\u6240\u4ee5\u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a calcLightColour \u7684\u65b0\u51fd\u6570\u6765\u8ba1\u7b97\u90a3\u4e9b\u5206\u91cf\u3002 vec4 calcLightColour(vec3 light_colour, float light_intensity, vec3 position, vec3 to_light_dir, vec3 normal) { vec4 diffuseColour = vec4(0, 0, 0, 0); vec4 specColour = vec4(0, 0, 0, 0); // \u6f2b\u53cd\u5c04\u5149 float diffuseFactor = max(dot(normal, to_light_dir), 0.0); diffuseColour = diffuseC * vec4(light_colour, 1.0) * light_intensity * diffuseFactor; // \u955c\u9762\u53cd\u5c04\u5149 vec3 camera_direction = normalize(camera_pos - position); vec3 from_light_dir = -to_light_dir; vec3 reflected_light = normalize(reflect(from_light_dir , normal)); float specularFactor = max( dot(camera_direction, reflected_light), 0.0); specularFactor = pow(specularFactor, specularPower); specColour = speculrC * light_intensity * specularFactor * material.reflectance * vec4(light_colour, 1.0); return (diffuseColour + specColour); } \u7136\u540e\uff0c calcPointLight \u65b9\u6cd5\u5c06\u8870\u51cf\u56e0\u6570\u5e94\u7528\u5230\u4e0a\u8ff0\u51fd\u6570\u8ba1\u7b97\u7684\u7ed3\u679c\u4e0a\u3002 vec4 calcPointLight(PointLight light, vec3 position, vec3 normal) { vec3 light_direction = light.position - position; vec3 to_light_dir = normalize(light_direction); vec4 light_colour = calcLightColour(light.colour, light.intensity, position, to_light_dir, normal); // \u5e94\u7528\u8870\u51cf float distance = length(light_direction); float attenuationInv = light.att.constant + light.att.linear * distance + light.att.exponent * distance * distance; return light_colour / attenuationInv; } \u6211\u4eec\u8fd8\u5c06\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u51fd\u6570\u6765\u8ba1\u7b97\u5e73\u884c\u5149\u7684\u6548\u679c\uff0c\u5b83\u53ea\u8c03\u7528\u4ec5\u9700\u5149\u7167\u65b9\u5411\u7684 calcLightColour \u65b9\u6cd5\u3002 vec4 calcDirectionalLight(DirectionalLight light, vec3 position, vec3 normal) { return calcLightColour(light.colour, light.intensity, position, normalize(light.direction), normal); } \u6700\u540e\uff0c main \u65b9\u6cd5\u901a\u8fc7\u73af\u5883\u5149\u548c\u5e73\u884c\u5149\u7684\u989c\u8272\u5206\u91cf\u7efc\u5408\u8d77\u6765\u8ba1\u7b97\u7247\u5143\u989c\u8272\u3002 void main() { setupColours(material, outTexCoord); vec4 diffuseSpecularComp = calcDirectionalLight(directionalLight, mvVertexPos, mvVertexNormal); diffuseSpecularComp += calcPointLight(pointLight, mvVertexPos, mvVertexNormal); fragColor = ambientC * vec4(ambientLight, 1) + diffuseSpecularComp; } \u5c31\u8fd9\u6837\uff0c\u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u6a21\u62df\u592a\u9633\u5728\u5929\u7a7a\u4e2d\u7684\u8fd0\u52a8\uff0c\u5982\u4e0b\u6240\u793a\uff08\u5728\u793a\u4f8b\u4ee3\u7801\u4e2d\u8fd0\u52a8\u901f\u5ea6\u52a0\u5feb\uff0c\u4e0d\u7528\u7b49\u5f85\u592a\u4e45\u5c31\u53ef\u4ee5\u770b\u5230\uff09\u3002 \u805a\u5149\u6e90 \u73b0\u5728\u6211\u4eec\u5c06\u5b9e\u73b0\u4e0e\u70b9\u5149\u6e90\u975e\u5e38\u76f8\u4f3c\u7684\u805a\u5149\u6e90\uff0c\u4f46\u662f\u5b83\u53d1\u5c04\u7684\u5149\u4ec5\u9650\u4e8e\u4e09\u7ef4\u5706\u9525\u4f53\u4e2d\u3002\u5b83\u6a21\u62df\u4ece\u7126\u70b9\u6216\u4efb\u4f55\u5176\u4ed6\u4e0d\u5411\u6240\u6709\u65b9\u5411\u53d1\u5c04\u5149\u7684\u5149\u6e90\u3002\u805a\u5149\u6e90\u6709\u7740\u548c\u70b9\u5149\u6e90\u4e00\u6837\u7684\u5c5e\u6027\uff0c\u4f46\u5b83\u6dfb\u52a0\u4e86\u4e24\u4e2a\u65b0\u7684\u53c2\u6570\uff0c\u5706\u9525\u89d2\u548c\u5706\u9525\u65b9\u5411\u3002 \u805a\u5149\u6e90\u4e0e\u70b9\u5149\u6e90\u7684\u8ba1\u7b97\u65b9\u6cd5\u76f8\u540c\uff0c\u4f46\u6709\u4e00\u4e9b\u4e0d\u540c\u3002\u4ece\u9876\u70b9\u4f4d\u7f6e\u5230\u5149\u6e90\u7684\u77e2\u91cf\u4e0d\u5728\u5149\u9525\u5185\u7684\u70b9\u4e0d\u53d7\u5149\u7167\u7684\u5f71\u54cd\u3002 \u8be5\u5982\u4f55\u8ba1\u7b97\u5b83\u662f\u5426\u5728\u5149\u9525\u5185\u5462\uff1f\u6211\u4eec\u9700\u8981\u5728\u5149\u6e90\u548c\u5706\u9525\u65b9\u5411\u77e2\u91cf\uff08\u4e24\u8005\u90fd\u5f52\u4e00\u5316\u4e86\uff09\u4e4b\u95f4\u518d\u505a\u6b21\u6570\u91cf\u79ef\u3002 L \u548c C \u5411\u91cf\u4e4b\u95f4\u7684\u6570\u91cf\u79ef\u7b49\u4e8e\uff1a \\vec{L}\\cdot\\vec{C}=|\\vec{L}|\\cdot|\\vec{C}|\\cdot Cos(\\alpha) \u3002\u5728\u805a\u5149\u6e90\u7684\u5b9a\u4e49\u4e2d\uff0c\u6211\u4eec\u50a8\u5b58\u9525\u89d2\u7684\u4f59\u5f26\u503c\uff0c\u5982\u679c\u6570\u91cf\u79ef\u9ad8\u4e8e\u8be5\u503c\uff0c\u6211\u4eec\u5c31\u77e5\u9053\u5b83\u4f4d\u4e8e\u5149\u9525\u5185\u90e8\uff08\u60f3\u60f3\u4f59\u5f26\u56fe\uff0c\u5f53 \u03b1 \u89d2\u4e3a 0 \u65f6\uff0c\u5176\u4f59\u5f26\u503c\u4e3a 1 \u3002\u57280\u00b0~180\u00b0\u65f6\uff0c\u89d2\u5ea6\u8d8a\u5c0f\u4f59\u5f26\u503c\u8d8a\u5927\uff09\u3002 \u7b2c\u4e8c\u4e2a\u4e0d\u540c\u4e4b\u5904\u662f\u8fdc\u79bb\u5149\u9525\u65b9\u5411\u7684\u70b9\u5c06\u53d7\u5230\u66f4\u5c11\u7684\u5149\u7167\uff0c\u6362\u53e5\u8bdd\u8bf4\uff0c\u8870\u51cf\u5f71\u54cd\u5c06\u66f4\u5f3a\u3002\u6709\u51e0\u79cd\u8ba1\u7b97\u65b9\u6cd5\uff0c\u6211\u4eec\u5c06\u9009\u62e9\u4e00\u79cd\u7b80\u5355\u7684\u65b9\u6cd5\uff0c\u901a\u8fc7\u5c06\u8870\u51cf\u4e0e\u4e0b\u8ff0\u516c\u5f0f\u76f8\u4e58\uff1a 1 - (1-Cos(\\alpha))/(1-Cos(cutOffAngle) (\u5728\u7247\u5143\u7740\u8272\u5668\u4e2d\uff0c\u6211\u4eec\u6ca1\u6709\u4f20\u9012\u89d2\u5ea6\uff0c\u800c\u662f\u4f20\u9012\u89d2\u5ea6\u7684\u4f59\u5f26\u503c\u3002\u4f60\u53ef\u4ee5\u68c0\u67e5\u4e0a\u9762\u7684\u516c\u5f0f\u7684\u7ed3\u679c\u662f\u5426\u4f4d\u4e8e0\u52301\u4e4b\u95f4\uff0c\u5f53\u89d2\u5ea6\u4e3a0\u65f6\uff0c\u4f59\u5f26\u503c\u4e3a1\u3002) \u5b9e\u73b0\u975e\u5e38\u7c7b\u4f3c\u4e8e\u5176\u4ed6\u7684\u5149\u6e90\uff0c\u6211\u4eec\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a SpotLight \u7684\u7c7b\uff0c\u8bbe\u7f6e\u9002\u5f53\u7684Uniform\uff0c\u5c06\u5176\u4f20\u9012\u7ed9\u7740\u8272\u5668\u5e76\u4fee\u6539\u7247\u5143\u7740\u8272\u5668\u4ee5\u83b7\u53d6\u5b83\u3002\u4f60\u53ef\u4ee5\u67e5\u770b\u672c\u7ae0\u7684\u6e90\u4ee3\u7801\u3002 \u5f53\u4f20\u9012Uniform\u65f6\uff0c\u53e6\u4e00\u4ef6\u91cd\u8981\u7684\u4e8b\u662f\u4f4d\u79fb\u4e0d\u5e94\u8be5\u5e94\u7528\u5230\u5149\u9525\u65b9\u5411\u4e0a\uff0c\u56e0\u4e3a\u6211\u4eec\u53ea\u5bf9\u65b9\u5411\u611f\u5174\u8da3\u3002\u56e0\u6b64\uff0c\u548c\u5e73\u884c\u5149\u7684\u60c5\u51b5\u4e00\u6837\uff0c\u5f53\u53d8\u6362\u5230\u89c2\u5bdf\u7a7a\u95f4\u5750\u6807\u7cfb\u65f6\uff0c\u5fc5\u987b\u5c06 w \u5206\u91cf\u8bbe\u7f6e\u4e3a 0 \u3002 \u591a\u5149\u6e90 \u6211\u4eec\u7ec8\u4e8e\u5b9e\u73b0\u4e86\u56db\u79cd\u7c7b\u578b\u7684\u5149\u6e90\uff0c\u4f46\u662f\u76ee\u524d\u6bcf\u79cd\u7c7b\u578b\u7684\u5149\u6e90\u53ea\u80fd\u4f7f\u7528\u4e00\u4e2a\u5b9e\u4f8b\u3002\u8fd9\u5bf9\u4e8e\u73af\u5883\u5149\u548c\u5e73\u884c\u5149\u6765\u8bf4\u6ca1\u95ee\u9898\uff0c\u4f46\u662f\u6211\u4eec\u786e\u5b9e\u5e0c\u671b\u4f7f\u7528\u591a\u4e2a\u70b9\u5149\u6e90\u548c\u805a\u5149\u6e90\u3002\u6211\u4eec\u9700\u8981\u4fee\u6539\u7247\u5143\u7740\u8272\u5668\u6765\u63a5\u6536\u5149\u6e90\u5217\u8868\uff0c\u6240\u4ee5\u4f7f\u7528\u6570\u7ec4\u6765\u50a8\u5b58\u8fd9\u4e9b\u6570\u636e\u3002\u6765\u770b\u770b\u600e\u4e48\u5b9e\u73b0\u5427\u3002 \u5728\u5f00\u59cb\u4e4b\u524d\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5728GLSL\u4e2d\uff0c\u6570\u7ec4\u7684\u957f\u5ea6\u5fc5\u987b\u5728\u7f16\u8bd1\u65f6\u8bbe\u7f6e\uff0c\u56e0\u6b64\u5b83\u5fc5\u987b\u8db3\u591f\u5927\uff0c\u4ee5\u4fbf\u5728\u8fd0\u884c\u65f6\u80fd\u591f\u50a8\u5b58\u6240\u9700\u7684\u6240\u6709\u5bf9\u8c61\u3002\u9996\u5148\u662f\u5b9a\u4e49\u4e00\u4e9b\u5e38\u91cf\u6765\u8bbe\u7f6e\u8981\u4f7f\u7528\u7684\u6700\u5927\u70b9\u5149\u6e90\u6570\u548c\u805a\u5149\u6e90\u6570\u3002 const int MAX_POINT_LIGHTS = 5; const int MAX_SPOT_LIGHTS = 5; \u7136\u540e\u6211\u4eec\u9700\u8981\u4fee\u6539\u6b64\u524d\u53ea\u50a8\u5b58\u4e00\u4e2a\u70b9\u5149\u6e90\u548c\u4e00\u4e2a\u805a\u5149\u6e90\u7684Uniform\uff0c\u4ee5\u4fbf\u4f7f\u7528\u6570\u7ec4\u3002 uniform PointLight pointLights[MAX_POINT_LIGHTS]; uniform SpotLight spotLights[MAX_SPOT_LIGHTS]; \u5728main\u51fd\u6570\u4e2d\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5bf9\u8fd9\u4e9b\u6570\u7ec4\u8fdb\u884c\u8fed\u4ee3\uff0c\u4ee5\u4f7f\u7528\u73b0\u6709\u51fd\u6570\u8ba1\u7b97\u6bcf\u4e2a\u5bf9\u8c61\u5bf9\u989c\u8272\u7684\u5f71\u54cd\u3002\u6211\u4eec\u53ef\u80fd\u4e0d\u4f1a\u50cfUniform\u6570\u7ec4\u957f\u5ea6\u90a3\u6837\u4f20\u9012\u5f88\u591a\u5149\u6e90\uff0c\u6240\u4ee5\u9700\u8981\u63a7\u5236\u5b83\u3002\u6709\u5f88\u591a\u53ef\u884c\u7684\u65b9\u6cd5\uff0c\u4f46\u8fd9\u53ef\u80fd\u4e0d\u9002\u7528\u4e8e\u65e7\u7684\u663e\u5361\u3002\u6700\u7ec8\u6211\u4eec\u9009\u62e9\u68c0\u67e5\u5149\u5f3a\uff08\u5728\u6570\u7ec4\u4e2d\u7684\u7a7a\u4f4d\uff0c\u5149\u5f3a\u4e3a0\uff09\u3002 for (int i=0; i<MAX_POINT_LIGHTS; i++) { if ( pointLights[i].intensity > 0 ) { diffuseSpecularComp += calcPointLight(pointLights[i], mvVertexPos, mvVertexNormal); } } for (int i=0; i<MAX_SPOT_LIGHTS; i++) { if ( spotLights[i].pl.intensity > 0 ) { diffuseSpecularComp += calcSpotLight(spotLights[i], mvVertexPos, mvVertexNormal); } } \u73b0\u5728\u6211\u4eec\u9700\u8981\u5728 Render \u7c7b\u4e2d\u521b\u5efa\u8fd9\u4e9bUniform\u3002\u5f53\u4f7f\u7528\u6570\u7ec4\u65f6\uff0c\u6211\u4eec\u9700\u8981\u4e3a\u5217\u8868\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u521b\u5efa\u4e00\u4e2aUniform\u3002\u4f8b\u5982\uff0c\u5bf9\u4e8e pointLights \u6570\u7ec4\uff0c\u6211\u4eec\u9700\u8981\u521b\u5efa\u540d\u4e3a pointLights[0] \u3001 pointLights[1] \u4e4b\u7c7b\u7684Uniform\u3002\u5f53\u7136\uff0c\u8fd9\u4e5f\u9002\u7528\u4e8e\u7ed3\u6784\u4f53\u5c5e\u6027\uff0c\u6240\u4ee5\u6211\u4eec\u5c06\u521b\u5efa pointLights[0].colour \u3001 pointLights[1].colour \u7b49\u7b49\u3002\u521b\u5efa\u8fd9\u4e9bUniform\u7684\u65b9\u6cd5\u5982\u4e0b\u6240\u793a\uff1a public void createPointLightListUniform(String uniformName, int size) throws Exception { for (int i = 0; i < size; i++) { createPointLightUniform(uniformName + \"[\" + i + \"]\"); } } public void createSpotLightListUniform(String uniformName, int size) throws Exception { for (int i = 0; i < size; i++) { createSpotLightUniform(uniformName + \"[\" + i + \"]\"); } } \u6211\u4eec\u4e5f\u9700\u8981\u65b9\u6cd5\u6765\u8bbe\u7f6e\u8fd9\u4e9bUniform\u7684\u503c\uff1a public void setUniform(String uniformName, PointLight[] pointLights) { int numLights = pointLights != null ? pointLights.length : 0; for (int i = 0; i < numLights; i++) { setUniform(uniformName, pointLights[i], i); } } public void setUniform(String uniformName, PointLight pointLight, int pos) { setUniform(uniformName + \"[\" + pos + \"]\", pointLight); } public void setUniform(String uniformName, SpotLight[] spotLights) { int numLights = spotLights != null ? spotLights.length : 0; for (int i = 0; i < numLights; i++) { setUniform(uniformName, spotLights[i], i); } } public void setUniform(String uniformName, SpotLight spotLight, int pos) { setUniform(uniformName + \"[\" + pos + \"]\", spotLight); } \u6700\u540e\uff0c\u6211\u4eec\u53ea\u9700\u8981\u66f4\u65b0 Render \u7c7b\u6765\u63a5\u6536\u70b9\u5149\u6e90\u548c\u805a\u5149\u6e90\u5217\u8868\uff0c\u5e76\u76f8\u5e94\u5730\u4fee\u6539 DummyGame \u7c7b\u4ee5\u521b\u5efa\u8fd9\u4e9b\u5217\u8868\uff0c\u6700\u7ec8\u6548\u679c\u5982\u4e0b\u6240\u793a\u3002","title":"\u8981\u6709\u66f4\u591a\u7684\u5149"},{"location":"11-let-there-be-even-more-light/#let-there-be-even-more-light","text":"\u5728\u672c\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u5b9e\u73b0\u5728\u6b64\u524d\u7ae0\u8282\u4e2d\u4ecb\u7ecd\u7684\u5176\u4ed6\u7c7b\u578b\u7684\u5149\u3002\u6211\u4eec\u5148\u4ece\u5e73\u884c\u5149\u5f00\u59cb\u3002","title":"\u8981\u6709\u66f4\u591a\u7684\u5149\uff08Let there be even more light\uff09"},{"location":"11-let-there-be-even-more-light/#_1","text":"\u5982\u679c\u4f60\u56de\u60f3\u4e00\u4e0b\uff0c\u5e73\u884c\u5149\u4ece\u540c\u4e00\u65b9\u5411\u7167\u5c04\u5230\u6240\u6709\u7269\u4f53\u4e0a\u3002\u5b83\u7528\u6765\u6a21\u62df\u9065\u8fdc\u4f46\u5149\u5f3a\u5f88\u9ad8\u7684\u5149\u6e90\uff0c\u6bd4\u5982\u592a\u9633\u3002 \u5e73\u884c\u5149\u7684\u53e6\u4e00\u4e2a\u7279\u70b9\u662f\u5b83\u4e0d\u53d7\u8870\u51cf\u7684\u5f71\u54cd\uff0c\u8054\u60f3\u592a\u9633\u5149\uff0c\u6240\u6709\u88ab\u9633\u5149\u7167\u5c04\u7684\u7269\u4f53\u90fd\u4ee5\u76f8\u540c\u7684\u5149\u5f3a\u88ab\u7167\u5c04\uff0c\u56e0\u4e3a\u79bb\u592a\u9633\u7684\u8ddd\u79bb\u592a\u5927\uff0c\u4ee5\u81f3\u4e8e\u5b83\u4eec\u4e4b\u95f4\u7684\u76f8\u5bf9\u4f4d\u7f6e\u90fd\u662f\u65e0\u5173\u7d27\u8981\u7684\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5e73\u884c\u5149\u88ab\u6a21\u62df\u4e3a\u4f4d\u4e8e\u65e0\u7a77\u8fdc\u5904\u7684\u5149\u6e90\uff0c\u5982\u679c\u5b83\u53d7\u5230\u8870\u51cf\u7684\u5f71\u54cd\uff0c\u90a3\u4e48\u5b83\u5c06\u5bf9\u4efb\u4f55\u7269\u4f53\u90fd\u6ca1\u6709\u5f71\u54cd\uff08\u5b83\u5bf9\u7269\u4f53\u989c\u8272\u7684\u5f71\u54cd\u5c06\u7b49\u4e8e0\uff09\u3002 \u6b64\u5916\uff0c\u5e73\u884c\u5149\u4e5f\u7531\u6f2b\u53cd\u5c04\u548c\u955c\u9762\u53cd\u5c04\u5206\u91cf\u7ec4\u6210\uff0c\u4e0e\u70b9\u5149\u6e90\u7684\u533a\u522b\u5728\u4e8e\u5b83\u6ca1\u6709\u4f4d\u7f6e\uff0c\u4f46\u6709\u65b9\u5411\uff0c\u5e76\u4e14\u5b83\u4e0d\u53d7\u8870\u51cf\u7684\u5f71\u54cd\u3002\u56de\u5230\u5e73\u884c\u5149\u7684\u5c5e\u6027\uff0c\u60f3\u8c61\u6211\u4eec\u6b63\u5728\u6a21\u62df\u592a\u9633\u5728\u4e09\u7ef4\u4e16\u754c\u4e2d\u8fd0\u52a8\uff0c\u4e0b\u56fe\u5c55\u793a\u4e86\u9ece\u660e\u3001\u6b63\u5348\u548c\u9ec4\u660f\u65f6\u7684\u5149\u7ebf\u65b9\u5411\u3002 \u4e0a\u56fe\u4e2d\u7684\u5149\u7ebf\u7684\u65b9\u5411\u4e3a\uff1a \u9ece\u660e: -1, 0, 0 \u6b63\u5348: 0, 1, 0 \u9ec4\u660f: 1, 0, 0 \u6ce8\u610f\uff1a\u4f60\u53ef\u80fd\u8ba4\u4e3a\u4e0a\u8ff0\u5750\u6807\u662f\u4f4d\u7f6e\u5750\u6807\uff0c\u4f46\u5b83\u4eec\u53ea\u662f\u4e00\u4e2a\u77e2\u91cf\uff0c\u4e00\u4e2a\u65b9\u5411\uff0c\u800c\u4e0d\u662f\u4e00\u4e2a\u4f4d\u7f6e\u3002\u4ee5\u6570\u5b66\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u77e2\u91cf\u548c\u4f4d\u7f6e\u662f\u4e0d\u53ef\u5206\u8fa8\u7684\uff0c\u4f46\u5b83\u4eec\u6709\u7740\u5b8c\u5168\u4e0d\u540c\u7684\u542b\u4e49\u3002 \u4f46\u662f\uff0c\u6211\u4eec\u5982\u4f55\u6a21\u62df\u8fd9\u4e2a\u5149\u4f4d\u4e8e\u65e0\u7a77\u8fdc\u5904\u5462\uff1f\u7b54\u6848\u662f\u4f7f\u7528 w \u5206\u91cf\uff0c\u5373\u4f7f\u7528\u9f50\u6b21\u5750\u6807\u5e76\u5c06 w \u5206\u91cf\u8bbe\u7f6e\u4e3a 0 \u3002 \u9ece\u660e: -1, 0, 0, 0 \u6b63\u5348: 0, 1, 0, 0 \u9ec4\u660f: 1, 0, 0, 0 \u8fd9\u5c31\u5982\u540c\u6211\u4eec\u5728\u4f20\u9012\u6cd5\u7ebf\u3002\u5bf9\u4e8e\u6cd5\u7ebf\uff0c\u6211\u4eec\u5c06\u5176 w \u5206\u91cf\u8bbe\u7f6e\u4e3a 0 \uff0c\u8868\u793a\u6211\u4eec\u5bf9\u5176\u4f4d\u79fb\u4e0d\u611f\u5174\u8da3\uff0c\u53ea\u5bf9\u65b9\u5411\u611f\u5174\u8da3\u3002\u6b64\u5916\uff0c\u5f53\u6211\u4eec\u5904\u7406\u5e73\u884c\u5149\u65f6\uff0c\u4e5f\u9700\u8981\u8fd9\u6837\u505a\uff0c\u6444\u50cf\u673a\u7684\u4f4d\u79fb\u4e0d\u5e94\u5f71\u54cd\u5e73\u884c\u5149\u7684\u65b9\u5411\u3002 \u8ba9\u6211\u4eec\u5f00\u59cb\u7f16\u7801\u5b9e\u73b0\u548c\u6a21\u62df\u5e73\u884c\u5149\uff0c\u9996\u5148\u8981\u505a\u7684\u662f\u521b\u5efa\u4e00\u4e2a\u7c7b\u6765\u50a8\u5b58\u5b83\u7684\u5c5e\u6027\u3002\u5b83\u53ea\u662f\u53e6\u4e00\u4e2a\u666e\u901a\u7684Java\u5bf9\u8c61\uff0c\u5176\u5177\u6709\u590d\u5236\u6784\u9020\u51fd\u6570\uff0c\u5e76\u50a8\u5b58\u5149\u7684\u65b9\u5411\u3001\u989c\u8272\u548c\u5f3a\u5ea6\u3002 package org.lwjglb.engine.graph; import org.joml.Vector3f; public class DirectionalLight { private Vector3f color; private Vector3f direction; private float intensity; public DirectionalLight(Vector3f color, Vector3f direction, float intensity) { this.color = color; this.direction = direction; this.intensity = intensity; } public DirectionalLight(DirectionalLight light) { this(new Vector3f(light.getColor()), new Vector3f(light.getDirection()), light.getIntensity()); } // \u63a5\u4e0b\u6765\u662fGetter\u548cSetter... \u5982\u4f60\u6240\u89c1\uff0c\u6211\u4eec\u7528 Vector3f \u6765\u50a8\u5b58\u65b9\u5411\u3002\u4fdd\u6301\u51b7\u9759\uff0c\u5f53\u5c06\u5e73\u884c\u5149\u4f20\u9012\u5230\u7740\u8272\u5668\u65f6\uff0c\u6211\u4eec\u5c06\u5904\u7406 w \u5206\u91cf\u3002\u987a\u4fbf\u4e00\u63d0\uff0c\u63a5\u4e0b\u6765\u8981\u505a\u7684\u5c31\u662f\u66f4\u65b0 ShaderProgram \u6765\u521b\u5efa\u548c\u66f4\u65b0\u50a8\u5b58\u5e73\u884c\u5149\u7684Uniform\u3002 \u5728\u7247\u5143\u7740\u8272\u5668\u4e2d\uff0c\u6211\u4eec\u5c06\u5b9a\u4e49\u4e00\u4e2a\u7ed3\u6784\u4f53\u6765\u6a21\u62df\u5e73\u884c\u5149\u3002 struct DirectionalLight { vec3 colour; vec3 direction; float intensity; }; \u6709\u4e86\u4e0a\u8ff0\u5b9a\u4e49\uff0c ShaderProgram \u7c7b\u4e2d\u7684\u65b0\u65b9\u6cd5\u5c31\u5f88\u7b80\u5355\u4e86\u3002 // ... public void createDirectionalLightUniform(String uniformName) throws Exception { createUniform(uniformName + \".colour\"); createUniform(uniformName + \".direction\"); createUniform(uniformName + \".intensity\"); } // ... public void setUniform(String uniformName, DirectionalLight dirLight) { setUniform(uniformName + \".colour\", dirLight.getColor() ); setUniform(uniformName + \".direction\", dirLight.getDirection()); setUniform(uniformName + \".intensity\", dirLight.getIntensity()); } \u6211\u4eec\u73b0\u5728\u9700\u8981\u4f7f\u7528Uniform\uff0c\u901a\u8fc7 DummyGame \u7c7b\u63a7\u5236\u592a\u9633\u7684\u89d2\u5ea6\u6765\u6a21\u62df\u5b83\u662f\u5982\u4f55\u5728\u5929\u4e0a\u79fb\u52a8\u7684\u3002 \u6211\u4eec\u9700\u8981\u66f4\u65b0\u5149\u7684\u65b9\u5411\uff0c\u6240\u4ee5\u592a\u9633\u5728\u9ece\u660e\u65f6\uff08 -90\u00b0 \uff09\uff0c\u5149\u7ebf\u5728 (-1, 0, 0) \u65b9\u5411\u4e0a\uff0c\u5176 x \u5206\u91cf\u4ece -1 \u9010\u6e10\u589e\u52a0\u5230 0 \uff0c y \u5206\u91cf\u9010\u6e10\u4ece 0 \u589e\u52a0\u5230 1 \u3002\u63a5\u4e0b\u6765\uff0c x \u5206\u91cf\u589e\u52a0\u5230 1 \uff0c y \u5206\u91cf\u51cf\u5c11\u5230 0 \u3002\u8fd9\u53ef\u4ee5\u901a\u8fc7\u5c06 x \u5206\u91cf\u8bbe\u7f6e\u4e3a\u89d2\u7684\u6b63\u5f26\u548c\u5c06 y \u5206\u91cf\u8bbe\u7f6e\u4e3a\u89d2\u7684\u4f59\u5f26\u6765\u5b9e\u73b0\u3002 \u6211\u4eec\u4e5f\u4f1a\u8c03\u8282\u5149\u5f3a\uff0c\u5f53\u5b83\u8fdc\u79bb\u9ece\u660e\u65f6\u5f3a\u5ea6\u5c06\u589e\u5f3a\uff0c\u5f53\u5b83\u4e34\u8fd1\u9ec4\u660f\u65f6\u5f3a\u5ea6\u5c06\u51cf\u5f31\u3002\u6211\u4eec\u901a\u8fc7\u5c06\u5f3a\u5ea6\u8bbe\u7f6e\u4e3a 0 \u6765\u6a21\u62df\u591c\u665a\u3002\u6b64\u5916\uff0c\u6211\u4eec\u8fd8\u5c06\u8c03\u8282\u989c\u8272\uff0c\u4f7f\u5149\u5728\u9ece\u660e\u548c\u9ec4\u660f\u65f6\u53d8\u5f97\u66f4\u7ea2\u3002\u8fd9\u5c06\u5728 DummyGame \u7c7b\u7684 update \u65b9\u6cd5\u4e2d\u5b9e\u73b0\u3002 // \u66f4\u65b0\u5e73\u884c\u5149\u7684\u65b9\u5411\uff0c\u5f3a\u5ea6\u548c\u989c\u8272 lightAngle += 1.1f; if (lightAngle > 90) { directionalLight.setIntensity(0); if (lightAngle >= 360) { lightAngle = -90; } } else if (lightAngle <= -80 || lightAngle >= 80) { float factor = 1 - (float)(Math.abs(lightAngle) - 80)/ 10.0f; directionalLight.setIntensity(factor); directionalLight.getColor().y = Math.max(factor, 0.9f); directionalLight.getColor().z = Math.max(factor, 0.5f); } else { directionalLight.setIntensity(1); directionalLight.getColor().x = 1; directionalLight.getColor().y = 1; directionalLight.getColor().z = 1; } double angRad = Math.toRadians(lightAngle); directionalLight.getDirection().x = (float) Math.sin(angRad); directionalLight.getDirection().y = (float) Math.cos(angRad); \u7136\u540e\uff0c\u6211\u4eec\u9700\u8981\u5728 Renderer \u7c7b\u4e2d\u7684 render \u65b9\u6cd5\u4e2d\u5c06\u5e73\u884c\u5149\u4f20\u7ed9\u7740\u8272\u5668\u3002 // \u83b7\u53d6\u5e73\u884c\u5149\u5bf9\u8c61\u7684\u526f\u672c\u5e76\u5c06\u5176\u5750\u6807\u53d8\u6362\u5230\u89c2\u5bdf\u5750\u6807\u7cfb DirectionalLight currDirLight = new DirectionalLight(directionalLight); Vector4f dir = new Vector4f(currDirLight.getDirection(), 0); dir.mul(viewMatrix); currDirLight.setDirection(new Vector3f(dir.x, dir.y, dir.z)); shaderProgram.setUniform(\"directionalLight\", currDirLight); \u5982\u4f60\u6240\u89c1\uff0c\u6211\u4eec\u9700\u8981\u53d8\u6362\u5149\u7684\u65b9\u5411\u5230\u89c2\u5bdf\u7a7a\u95f4\uff0c\u4f46\u6211\u4eec\u4e0d\u60f3\u5e94\u7528\u4f4d\u79fb\uff0c\u6240\u4ee5\u5c06 w \u5206\u91cf\u8bbe\u7f6e\u4e3a 0 \u3002 \u73b0\u5728\uff0c\u6211\u4eec\u5df2\u7ecf\u51c6\u5907\u597d\u5728\u7247\u5143\u7740\u8272\u5668\u4e0a\u5b8c\u6210\u5269\u4e0b\u7684\u5de5\u4f5c\u4e86\uff0c\u56e0\u4e3a\u9876\u70b9\u7740\u8272\u5668\u4e0d\u9700\u8981\u4fee\u6539\u3002\u6b64\u524d\u5df2\u7ecf\u8bf4\u8fc7\uff0c\u6211\u4eec\u9700\u8981\u5b9a\u4e49\u4e00\u4e2a\u540d\u4e3a DirectionalLight \u7684\u65b0\u7ed3\u6784\u4f53\u6765\u6a21\u62df\u5e73\u884c\u5149\uff0c\u6240\u4ee5\u9700\u8981\u4e00\u4e2a\u65b0\u7684Uniform\u3002 uniform DirectionalLight directionalLight; \u6211\u4eec\u9700\u8981\u91cd\u6784\u4e00\u4e0b\u4ee3\u7801\uff0c\u5728\u4e0a\u4e00\u7ae0\u4e2d\uff0c\u6211\u4eec\u6709\u4e00\u4e2a\u540d\u4e3a calcPointLight \u7684\u51fd\u6570\uff0c\u5b83\u8ba1\u7b97\u6f2b\u53cd\u5c04\u548c\u955c\u9762\u53cd\u5c04\u5206\u91cf\uff0c\u5e76\u5e94\u7528\u8870\u51cf\u3002\u4f46\u5982\u4e0a\u6240\u8ff0\uff0c\u5e73\u884c\u5149\u4f7f\u7528\u6f2b\u53cd\u5c04\u548c\u955c\u9762\u53cd\u5c04\u5206\u91cf\uff0c\u4f46\u4e0d\u53d7\u8870\u51cf\u5f71\u54cd\uff0c\u6240\u4ee5\u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a calcLightColour \u7684\u65b0\u51fd\u6570\u6765\u8ba1\u7b97\u90a3\u4e9b\u5206\u91cf\u3002 vec4 calcLightColour(vec3 light_colour, float light_intensity, vec3 position, vec3 to_light_dir, vec3 normal) { vec4 diffuseColour = vec4(0, 0, 0, 0); vec4 specColour = vec4(0, 0, 0, 0); // \u6f2b\u53cd\u5c04\u5149 float diffuseFactor = max(dot(normal, to_light_dir), 0.0); diffuseColour = diffuseC * vec4(light_colour, 1.0) * light_intensity * diffuseFactor; // \u955c\u9762\u53cd\u5c04\u5149 vec3 camera_direction = normalize(camera_pos - position); vec3 from_light_dir = -to_light_dir; vec3 reflected_light = normalize(reflect(from_light_dir , normal)); float specularFactor = max( dot(camera_direction, reflected_light), 0.0); specularFactor = pow(specularFactor, specularPower); specColour = speculrC * light_intensity * specularFactor * material.reflectance * vec4(light_colour, 1.0); return (diffuseColour + specColour); } \u7136\u540e\uff0c calcPointLight \u65b9\u6cd5\u5c06\u8870\u51cf\u56e0\u6570\u5e94\u7528\u5230\u4e0a\u8ff0\u51fd\u6570\u8ba1\u7b97\u7684\u7ed3\u679c\u4e0a\u3002 vec4 calcPointLight(PointLight light, vec3 position, vec3 normal) { vec3 light_direction = light.position - position; vec3 to_light_dir = normalize(light_direction); vec4 light_colour = calcLightColour(light.colour, light.intensity, position, to_light_dir, normal); // \u5e94\u7528\u8870\u51cf float distance = length(light_direction); float attenuationInv = light.att.constant + light.att.linear * distance + light.att.exponent * distance * distance; return light_colour / attenuationInv; } \u6211\u4eec\u8fd8\u5c06\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u51fd\u6570\u6765\u8ba1\u7b97\u5e73\u884c\u5149\u7684\u6548\u679c\uff0c\u5b83\u53ea\u8c03\u7528\u4ec5\u9700\u5149\u7167\u65b9\u5411\u7684 calcLightColour \u65b9\u6cd5\u3002 vec4 calcDirectionalLight(DirectionalLight light, vec3 position, vec3 normal) { return calcLightColour(light.colour, light.intensity, position, normalize(light.direction), normal); } \u6700\u540e\uff0c main \u65b9\u6cd5\u901a\u8fc7\u73af\u5883\u5149\u548c\u5e73\u884c\u5149\u7684\u989c\u8272\u5206\u91cf\u7efc\u5408\u8d77\u6765\u8ba1\u7b97\u7247\u5143\u989c\u8272\u3002 void main() { setupColours(material, outTexCoord); vec4 diffuseSpecularComp = calcDirectionalLight(directionalLight, mvVertexPos, mvVertexNormal); diffuseSpecularComp += calcPointLight(pointLight, mvVertexPos, mvVertexNormal); fragColor = ambientC * vec4(ambientLight, 1) + diffuseSpecularComp; } \u5c31\u8fd9\u6837\uff0c\u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u6a21\u62df\u592a\u9633\u5728\u5929\u7a7a\u4e2d\u7684\u8fd0\u52a8\uff0c\u5982\u4e0b\u6240\u793a\uff08\u5728\u793a\u4f8b\u4ee3\u7801\u4e2d\u8fd0\u52a8\u901f\u5ea6\u52a0\u5feb\uff0c\u4e0d\u7528\u7b49\u5f85\u592a\u4e45\u5c31\u53ef\u4ee5\u770b\u5230\uff09\u3002","title":"\u5e73\u884c\u5149"},{"location":"11-let-there-be-even-more-light/#_2","text":"\u73b0\u5728\u6211\u4eec\u5c06\u5b9e\u73b0\u4e0e\u70b9\u5149\u6e90\u975e\u5e38\u76f8\u4f3c\u7684\u805a\u5149\u6e90\uff0c\u4f46\u662f\u5b83\u53d1\u5c04\u7684\u5149\u4ec5\u9650\u4e8e\u4e09\u7ef4\u5706\u9525\u4f53\u4e2d\u3002\u5b83\u6a21\u62df\u4ece\u7126\u70b9\u6216\u4efb\u4f55\u5176\u4ed6\u4e0d\u5411\u6240\u6709\u65b9\u5411\u53d1\u5c04\u5149\u7684\u5149\u6e90\u3002\u805a\u5149\u6e90\u6709\u7740\u548c\u70b9\u5149\u6e90\u4e00\u6837\u7684\u5c5e\u6027\uff0c\u4f46\u5b83\u6dfb\u52a0\u4e86\u4e24\u4e2a\u65b0\u7684\u53c2\u6570\uff0c\u5706\u9525\u89d2\u548c\u5706\u9525\u65b9\u5411\u3002 \u805a\u5149\u6e90\u4e0e\u70b9\u5149\u6e90\u7684\u8ba1\u7b97\u65b9\u6cd5\u76f8\u540c\uff0c\u4f46\u6709\u4e00\u4e9b\u4e0d\u540c\u3002\u4ece\u9876\u70b9\u4f4d\u7f6e\u5230\u5149\u6e90\u7684\u77e2\u91cf\u4e0d\u5728\u5149\u9525\u5185\u7684\u70b9\u4e0d\u53d7\u5149\u7167\u7684\u5f71\u54cd\u3002 \u8be5\u5982\u4f55\u8ba1\u7b97\u5b83\u662f\u5426\u5728\u5149\u9525\u5185\u5462\uff1f\u6211\u4eec\u9700\u8981\u5728\u5149\u6e90\u548c\u5706\u9525\u65b9\u5411\u77e2\u91cf\uff08\u4e24\u8005\u90fd\u5f52\u4e00\u5316\u4e86\uff09\u4e4b\u95f4\u518d\u505a\u6b21\u6570\u91cf\u79ef\u3002 L \u548c C \u5411\u91cf\u4e4b\u95f4\u7684\u6570\u91cf\u79ef\u7b49\u4e8e\uff1a \\vec{L}\\cdot\\vec{C}=|\\vec{L}|\\cdot|\\vec{C}|\\cdot Cos(\\alpha) \u3002\u5728\u805a\u5149\u6e90\u7684\u5b9a\u4e49\u4e2d\uff0c\u6211\u4eec\u50a8\u5b58\u9525\u89d2\u7684\u4f59\u5f26\u503c\uff0c\u5982\u679c\u6570\u91cf\u79ef\u9ad8\u4e8e\u8be5\u503c\uff0c\u6211\u4eec\u5c31\u77e5\u9053\u5b83\u4f4d\u4e8e\u5149\u9525\u5185\u90e8\uff08\u60f3\u60f3\u4f59\u5f26\u56fe\uff0c\u5f53 \u03b1 \u89d2\u4e3a 0 \u65f6\uff0c\u5176\u4f59\u5f26\u503c\u4e3a 1 \u3002\u57280\u00b0~180\u00b0\u65f6\uff0c\u89d2\u5ea6\u8d8a\u5c0f\u4f59\u5f26\u503c\u8d8a\u5927\uff09\u3002 \u7b2c\u4e8c\u4e2a\u4e0d\u540c\u4e4b\u5904\u662f\u8fdc\u79bb\u5149\u9525\u65b9\u5411\u7684\u70b9\u5c06\u53d7\u5230\u66f4\u5c11\u7684\u5149\u7167\uff0c\u6362\u53e5\u8bdd\u8bf4\uff0c\u8870\u51cf\u5f71\u54cd\u5c06\u66f4\u5f3a\u3002\u6709\u51e0\u79cd\u8ba1\u7b97\u65b9\u6cd5\uff0c\u6211\u4eec\u5c06\u9009\u62e9\u4e00\u79cd\u7b80\u5355\u7684\u65b9\u6cd5\uff0c\u901a\u8fc7\u5c06\u8870\u51cf\u4e0e\u4e0b\u8ff0\u516c\u5f0f\u76f8\u4e58\uff1a 1 - (1-Cos(\\alpha))/(1-Cos(cutOffAngle) (\u5728\u7247\u5143\u7740\u8272\u5668\u4e2d\uff0c\u6211\u4eec\u6ca1\u6709\u4f20\u9012\u89d2\u5ea6\uff0c\u800c\u662f\u4f20\u9012\u89d2\u5ea6\u7684\u4f59\u5f26\u503c\u3002\u4f60\u53ef\u4ee5\u68c0\u67e5\u4e0a\u9762\u7684\u516c\u5f0f\u7684\u7ed3\u679c\u662f\u5426\u4f4d\u4e8e0\u52301\u4e4b\u95f4\uff0c\u5f53\u89d2\u5ea6\u4e3a0\u65f6\uff0c\u4f59\u5f26\u503c\u4e3a1\u3002) \u5b9e\u73b0\u975e\u5e38\u7c7b\u4f3c\u4e8e\u5176\u4ed6\u7684\u5149\u6e90\uff0c\u6211\u4eec\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a SpotLight \u7684\u7c7b\uff0c\u8bbe\u7f6e\u9002\u5f53\u7684Uniform\uff0c\u5c06\u5176\u4f20\u9012\u7ed9\u7740\u8272\u5668\u5e76\u4fee\u6539\u7247\u5143\u7740\u8272\u5668\u4ee5\u83b7\u53d6\u5b83\u3002\u4f60\u53ef\u4ee5\u67e5\u770b\u672c\u7ae0\u7684\u6e90\u4ee3\u7801\u3002 \u5f53\u4f20\u9012Uniform\u65f6\uff0c\u53e6\u4e00\u4ef6\u91cd\u8981\u7684\u4e8b\u662f\u4f4d\u79fb\u4e0d\u5e94\u8be5\u5e94\u7528\u5230\u5149\u9525\u65b9\u5411\u4e0a\uff0c\u56e0\u4e3a\u6211\u4eec\u53ea\u5bf9\u65b9\u5411\u611f\u5174\u8da3\u3002\u56e0\u6b64\uff0c\u548c\u5e73\u884c\u5149\u7684\u60c5\u51b5\u4e00\u6837\uff0c\u5f53\u53d8\u6362\u5230\u89c2\u5bdf\u7a7a\u95f4\u5750\u6807\u7cfb\u65f6\uff0c\u5fc5\u987b\u5c06 w \u5206\u91cf\u8bbe\u7f6e\u4e3a 0 \u3002","title":"\u805a\u5149\u6e90"},{"location":"11-let-there-be-even-more-light/#_3","text":"\u6211\u4eec\u7ec8\u4e8e\u5b9e\u73b0\u4e86\u56db\u79cd\u7c7b\u578b\u7684\u5149\u6e90\uff0c\u4f46\u662f\u76ee\u524d\u6bcf\u79cd\u7c7b\u578b\u7684\u5149\u6e90\u53ea\u80fd\u4f7f\u7528\u4e00\u4e2a\u5b9e\u4f8b\u3002\u8fd9\u5bf9\u4e8e\u73af\u5883\u5149\u548c\u5e73\u884c\u5149\u6765\u8bf4\u6ca1\u95ee\u9898\uff0c\u4f46\u662f\u6211\u4eec\u786e\u5b9e\u5e0c\u671b\u4f7f\u7528\u591a\u4e2a\u70b9\u5149\u6e90\u548c\u805a\u5149\u6e90\u3002\u6211\u4eec\u9700\u8981\u4fee\u6539\u7247\u5143\u7740\u8272\u5668\u6765\u63a5\u6536\u5149\u6e90\u5217\u8868\uff0c\u6240\u4ee5\u4f7f\u7528\u6570\u7ec4\u6765\u50a8\u5b58\u8fd9\u4e9b\u6570\u636e\u3002\u6765\u770b\u770b\u600e\u4e48\u5b9e\u73b0\u5427\u3002 \u5728\u5f00\u59cb\u4e4b\u524d\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5728GLSL\u4e2d\uff0c\u6570\u7ec4\u7684\u957f\u5ea6\u5fc5\u987b\u5728\u7f16\u8bd1\u65f6\u8bbe\u7f6e\uff0c\u56e0\u6b64\u5b83\u5fc5\u987b\u8db3\u591f\u5927\uff0c\u4ee5\u4fbf\u5728\u8fd0\u884c\u65f6\u80fd\u591f\u50a8\u5b58\u6240\u9700\u7684\u6240\u6709\u5bf9\u8c61\u3002\u9996\u5148\u662f\u5b9a\u4e49\u4e00\u4e9b\u5e38\u91cf\u6765\u8bbe\u7f6e\u8981\u4f7f\u7528\u7684\u6700\u5927\u70b9\u5149\u6e90\u6570\u548c\u805a\u5149\u6e90\u6570\u3002 const int MAX_POINT_LIGHTS = 5; const int MAX_SPOT_LIGHTS = 5; \u7136\u540e\u6211\u4eec\u9700\u8981\u4fee\u6539\u6b64\u524d\u53ea\u50a8\u5b58\u4e00\u4e2a\u70b9\u5149\u6e90\u548c\u4e00\u4e2a\u805a\u5149\u6e90\u7684Uniform\uff0c\u4ee5\u4fbf\u4f7f\u7528\u6570\u7ec4\u3002 uniform PointLight pointLights[MAX_POINT_LIGHTS]; uniform SpotLight spotLights[MAX_SPOT_LIGHTS]; \u5728main\u51fd\u6570\u4e2d\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5bf9\u8fd9\u4e9b\u6570\u7ec4\u8fdb\u884c\u8fed\u4ee3\uff0c\u4ee5\u4f7f\u7528\u73b0\u6709\u51fd\u6570\u8ba1\u7b97\u6bcf\u4e2a\u5bf9\u8c61\u5bf9\u989c\u8272\u7684\u5f71\u54cd\u3002\u6211\u4eec\u53ef\u80fd\u4e0d\u4f1a\u50cfUniform\u6570\u7ec4\u957f\u5ea6\u90a3\u6837\u4f20\u9012\u5f88\u591a\u5149\u6e90\uff0c\u6240\u4ee5\u9700\u8981\u63a7\u5236\u5b83\u3002\u6709\u5f88\u591a\u53ef\u884c\u7684\u65b9\u6cd5\uff0c\u4f46\u8fd9\u53ef\u80fd\u4e0d\u9002\u7528\u4e8e\u65e7\u7684\u663e\u5361\u3002\u6700\u7ec8\u6211\u4eec\u9009\u62e9\u68c0\u67e5\u5149\u5f3a\uff08\u5728\u6570\u7ec4\u4e2d\u7684\u7a7a\u4f4d\uff0c\u5149\u5f3a\u4e3a0\uff09\u3002 for (int i=0; i<MAX_POINT_LIGHTS; i++) { if ( pointLights[i].intensity > 0 ) { diffuseSpecularComp += calcPointLight(pointLights[i], mvVertexPos, mvVertexNormal); } } for (int i=0; i<MAX_SPOT_LIGHTS; i++) { if ( spotLights[i].pl.intensity > 0 ) { diffuseSpecularComp += calcSpotLight(spotLights[i], mvVertexPos, mvVertexNormal); } } \u73b0\u5728\u6211\u4eec\u9700\u8981\u5728 Render \u7c7b\u4e2d\u521b\u5efa\u8fd9\u4e9bUniform\u3002\u5f53\u4f7f\u7528\u6570\u7ec4\u65f6\uff0c\u6211\u4eec\u9700\u8981\u4e3a\u5217\u8868\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u521b\u5efa\u4e00\u4e2aUniform\u3002\u4f8b\u5982\uff0c\u5bf9\u4e8e pointLights \u6570\u7ec4\uff0c\u6211\u4eec\u9700\u8981\u521b\u5efa\u540d\u4e3a pointLights[0] \u3001 pointLights[1] \u4e4b\u7c7b\u7684Uniform\u3002\u5f53\u7136\uff0c\u8fd9\u4e5f\u9002\u7528\u4e8e\u7ed3\u6784\u4f53\u5c5e\u6027\uff0c\u6240\u4ee5\u6211\u4eec\u5c06\u521b\u5efa pointLights[0].colour \u3001 pointLights[1].colour \u7b49\u7b49\u3002\u521b\u5efa\u8fd9\u4e9bUniform\u7684\u65b9\u6cd5\u5982\u4e0b\u6240\u793a\uff1a public void createPointLightListUniform(String uniformName, int size) throws Exception { for (int i = 0; i < size; i++) { createPointLightUniform(uniformName + \"[\" + i + \"]\"); } } public void createSpotLightListUniform(String uniformName, int size) throws Exception { for (int i = 0; i < size; i++) { createSpotLightUniform(uniformName + \"[\" + i + \"]\"); } } \u6211\u4eec\u4e5f\u9700\u8981\u65b9\u6cd5\u6765\u8bbe\u7f6e\u8fd9\u4e9bUniform\u7684\u503c\uff1a public void setUniform(String uniformName, PointLight[] pointLights) { int numLights = pointLights != null ? pointLights.length : 0; for (int i = 0; i < numLights; i++) { setUniform(uniformName, pointLights[i], i); } } public void setUniform(String uniformName, PointLight pointLight, int pos) { setUniform(uniformName + \"[\" + pos + \"]\", pointLight); } public void setUniform(String uniformName, SpotLight[] spotLights) { int numLights = spotLights != null ? spotLights.length : 0; for (int i = 0; i < numLights; i++) { setUniform(uniformName, spotLights[i], i); } } public void setUniform(String uniformName, SpotLight spotLight, int pos) { setUniform(uniformName + \"[\" + pos + \"]\", spotLight); } \u6700\u540e\uff0c\u6211\u4eec\u53ea\u9700\u8981\u66f4\u65b0 Render \u7c7b\u6765\u63a5\u6536\u70b9\u5149\u6e90\u548c\u805a\u5149\u6e90\u5217\u8868\uff0c\u5e76\u76f8\u5e94\u5730\u4fee\u6539 DummyGame \u7c7b\u4ee5\u521b\u5efa\u8fd9\u4e9b\u5217\u8868\uff0c\u6700\u7ec8\u6548\u679c\u5982\u4e0b\u6240\u793a\u3002","title":"\u591a\u5149\u6e90"},{"location":"12-game-hud/","text":"\u6e38\u620fHUD\uff08Game HUD\uff09 \u5728\u672c\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u4e3a\u6e38\u620f\u521b\u5efa\u4e00\u4e2aHUD\uff08Heads-Up Display\uff0c\u5e73\u89c6\u663e\u793a\u5668\uff09\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5c31\u662f\u4e00\u7ec4\u7528\u4e8e\u5728\u4e09\u7ef4\u573a\u666f\u4e0a\uff0c\u968f\u65f6\u663e\u793a\u76f8\u5173\u4fe1\u606f\u7684\u4e8c\u7ef4\u56fe\u5f62\u548c\u6587\u672c\u3002\u672c\u4f8b\u4e2d\u5c06\u521b\u5efa\u4e00\u4e2a\u7b80\u5355\u7684HUD\uff0c\u8fd9\u53ef\u4e3a\u6211\u4eec\u5c55\u73b0\u4e00\u4e9b\u663e\u793a\u4fe1\u606f\u7684\u57fa\u672c\u6280\u672f\u3002 \u5f53\u4f60\u67e5\u9605\u672c\u7ae0\u7684\u6e90\u4ee3\u7801\u65f6\uff0c\u8fd8\u5c06\u53d1\u73b0\u6211\u4eec\u5bf9\u6e90\u4ee3\u7801\u505a\u4e86\u4e00\u4e9b\u5c0f\u7684\u91cd\u6784\uff0c\u7279\u522b\u662f Renderer \u7c7b\uff0c\u4ee5\u4fbf\u4e3aHUD\u6e32\u67d3\u505a\u597d\u51c6\u5907\u3002 \u6587\u672c\u6e32\u67d3 \u521b\u5efaHUD\u6240\u8981\u505a\u7684\u7b2c\u4e00\u4ef6\u4e8b\u662f\u6e32\u67d3\u6587\u672c\u3002\u4e3a\u4e86\u5b9e\u73b0\u5b83\uff0c\u6211\u4eec\u5c06\u50a8\u5b58\u5b57\u7b26\u7684\u7eb9\u7406\u6620\u5c04\u5230\u4e00\u4e2a\u65b9\u5f62\u4e2d\uff0c\u8be5\u65b9\u5f62\u5c06\u88ab\u5206\u5272\u4e3a\u4e00\u7ec4\u8868\u793a\u6bcf\u4e2a\u5b57\u7b26\u7684\u7247\u6bb5\u3002\u4e4b\u540e\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u8be5\u7eb9\u7406\u5728\u5c4f\u5e55\u4e0a\u7ed8\u5236\u6587\u672c\u3002\u6240\u4ee5\u9996\u5148\u521b\u5efa\u542b\u6709\u6240\u6709\u5b57\u6bcd\u7684\u7eb9\u7406\uff0c\u8fd9\u9879\u5de5\u4f5c\u53ef\u4ee5\u4f7f\u7528\u5f88\u591a\u8f6f\u4ef6\u6765\u505a\uff0c\u4f8b\u5982 CBFG \u3001 F2IBuilder \u7b49\u7b49\u3002\u672c\u4f8b\u4f7f\u7528Codehead\u7684\u4f4d\u56fe\u5b57\u4f53\u751f\u6210\u5668\uff08Codehead\u2019s Bitmap Font Generator\uff0cCBFG\uff09\u3002 CBFG\u5141\u8bb8\u4f60\u914d\u7f6e\u5f88\u591a\u9009\u9879\uff0c\u5982\u7eb9\u7406\u5927\u5c0f\u3001\u5b57\u4f53\u7c7b\u578b\u3001\u8981\u4f7f\u7528\u7684\u6297\u952f\u9f7f\u7b49\u7b49\u3002\u4e0b\u56fe\u662f\u672c\u4f8b\u5c06\u7528\u6765\u751f\u6210\u7eb9\u7406\u6587\u4ef6\u7684\u914d\u7f6e\u3002\u5728\u672c\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u5047\u8bbe\u6587\u672c\u7f16\u7801\u4e3aISO-8859-1\uff0c\u5982\u679c\u4f60\u9700\u8981\u5904\u7406\u5176\u4ed6\u7684\u5b57\u7b26\u96c6\uff0c\u5219\u9700\u8981\u7a0d\u5fae\u4fee\u6539\u4ee3\u7801\u3002 \u5f53\u8bbe\u7f6e\u597dCBFG\u7684\u6240\u6709\u9009\u9879\u540e\uff0c\u53ef\u4ee5\u5c06\u5176\u5bfc\u51fa\u4e3a\u591a\u79cd\u56fe\u7247\u683c\u5f0f\u3002\u73b0\u5728\u6211\u4eec\u5c06\u5176\u5bfc\u51fa\u4e3aBMP\u6587\u4ef6\uff0c\u7136\u540e\u518d\u8f6c\u6362\u4e3aPNG\u6587\u4ef6\uff0c\u4ee5\u4fbf\u5c06\u5176\u4f5c\u4e3a\u7eb9\u7406\u52a0\u8f7d\u3002\u5f53\u8f6c\u6362\u4e3aPNG\u683c\u5f0f\u65f6\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u5c06\u9ed1\u8272\u80cc\u666f\u8bbe\u7f6e\u4e3a\u900f\u660e\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u5c06\u9ed1\u8272\u8bbe\u4e3aAlpha\u503c\u7b49\u4e8e0\uff08\u53ef\u4ee5\u4f7f\u7528GIMP\u8fd9\u6837\u7684\u5de5\u5177\u6765\u5b9e\u73b0\uff09\u3002\u6700\u7ec8\u4f60\u4f1a\u770b\u5230\u7c7b\u4f3c\u4e0b\u56fe\u6240\u793a\u7684\u7ed3\u679c\u3002 \u5982\u4f60\u6240\u89c1\uff0c\u56fe\u50cf\u4e2d\u7684\u6240\u6709\u5b57\u7b26\u90fd\u4ee5\u884c\u548c\u5217\u7684\u5f62\u5f0f\u6392\u5217\u3002\u5728\u672c\u4f8b\u4e2d\uff0c\u56fe\u50cf\u753115\u5217\u548c17\u884c\u5b57\u7b26\u7ec4\u6210\u3002\u901a\u8fc7\u4f7f\u7528\u7279\u5b9a\u5b57\u7b26\u7684\u7f16\u53f7\uff0c\u6211\u4eec\u53ef\u4ee5\u8ba1\u7b97\u5176\u5bf9\u5e94\u50a8\u5b58\u5728\u56fe\u50cf\u4e2d\u7684\u884c\u548c\u5217\u3002\u6240\u5728\u5217\u7684\u8ba1\u7b97\u65b9\u6cd5\u4e3a\uff1a \u5217\u6570 = \u5b57\u7b26\u7f16\u53f7 \\space mod \\space \u5217\u603b\u6570 \uff0c\u5176\u4e2d mod \u662f\u53d6\u4f59\u8fd0\u7b97\u7b26\uff0c\u6240\u5728\u884c\u7684\u8ba1\u7b97\u65b9\u6cd5\u4e3a\uff1a \u6240\u5728\u884c = \u5b57\u7b26\u7f16\u53f7 / \u884c\u603b\u6570 \u3002\u5728\u672c\u4f8b\u4e2d\u6211\u4eec\u5c06\u6574\u6570\u9664\u4ee5\u6574\u6570\uff0c\u4ee5\u4fbf\u5ffd\u7565\u5c0f\u6570\u90e8\u5206\u3002 \u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a TextItem \u7684\u65b0\u7c7b\uff0c\u5b83\u5c06\u50a8\u5b58\u6e32\u67d3\u6587\u672c\u6240\u9700\u7684\u56fe\u5143\u3002\u8fd9\u662f\u4e00\u4e2a\u4e0d\u8003\u8651\u591a\u884c\u6587\u672c\u7684\u7b80\u5316\u5b9e\u73b0\uff0c\u4f46\u662f\u5b83\u80fd\u5728HUD\u4e2d\u663e\u793a\u6587\u672c\u4fe1\u606f\u3002\u4e0b\u5217\u4ee3\u7801\u662f\u8be5\u7c7b\u7684\u58f0\u660e\u4e0e\u6784\u9020\u51fd\u6570\uff1a package org.lwjglb.engine; import java.nio.charset.Charset; import java.util.ArrayList; import java.util.List; import org.lwjglb.engine.graph.Material; import org.lwjglb.engine.graph.Mesh; import org.lwjglb.engine.graph.Texture; public class TextItem extends GameItem { private static final float ZPOS = 0.0f; private static final int VERTICES_PER_QUAD = 4; private String text; private final int numCols; private final int numRows; public TextItem(String text, String fontFileName, int numCols, int numRows) throws Exception { super(); this.text = text; this.numCols = numCols; this.numRows = numRows; Texture texture = new Texture(fontFileName); this.setMesh(buildMesh(texture, numCols, numRows)); } \u8fd9\u4e2a\u7c7b\u7ee7\u627f\u4e86 GameItem \u7c7b\uff0c\u8fd9\u662f\u56e0\u4e3a\u672c\u4f8b\u5e0c\u671b\u6539\u53d8\u5728\u5c4f\u5e55\u4e0a\u6587\u672c\u7684\u4f4d\u7f6e\uff0c\u4e5f\u53ef\u80fd\u9700\u8981\u7f29\u653e\u548c\u65cb\u8f6c\u5b83\u3002\u6784\u9020\u51fd\u6570\u63a5\u6536\u8981\u6e32\u67d3\u7684\u6587\u672c\u548c\u7528\u4e8e\u6e32\u67d3\u7684\u7eb9\u7406\u7684\u6587\u4ef6\u548c\u76f8\u5173\u6570\u636e\uff08\u50a8\u5b58\u56fe\u50cf\u7684\u6587\u4ef6\u53ca\u884c\u5217\u6570\uff09\u3002 \u5728\u6784\u9020\u51fd\u6570\u4e2d\uff0c\u6211\u4eec\u52a0\u8f7d\u7eb9\u7406\u56fe\u50cf\u6587\u4ef6\uff0c\u5e76\u8c03\u7528\u4e00\u4e2a\u65b9\u6cd5\u6765\u521b\u5efa\u4e00\u4e2a Mesh \u5b9e\u4f8b\u4e3a\u6587\u672c\u5efa\u6a21\u3002\u8ba9\u6211\u4eec\u770b\u5230 buildMesh \u65b9\u6cd5\uff1a private Mesh buildMesh(Texture texture, int numCols, int numRows) { byte[] chars = text.getBytes(Charset.forName(\"ISO-8859-1\")); int numChars = chars.length; List<Float> positions = new ArrayList<>(); List<Float> textCoords = new ArrayList<>(); float[] normals = new float[0]; List<Integer> indices = new ArrayList<>(); float tileWidth = (float)texture.getWidth() / (float)numCols; float tileHeight = (float)texture.getHeight() / (float)numRows; \u4ee3\u7801\u521b\u5efa\u4e86\u7528\u4e8e\u50a8\u5b58Mesh\u7684\u4f4d\u7f6e\u3001\u7eb9\u7406\u5750\u6807\u3001\u6cd5\u7ebf\u548c\u7d22\u5f15\u7684\u6570\u636e\u7ed3\u6784\u3002\u73b0\u5728\u6211\u4eec\u4e0d\u4f7f\u7528\u5149\u7167\uff0c\u56e0\u6b64\u6cd5\u7ebf\u6570\u5217\u662f\u7a7a\u7684\u3002\u6211\u4eec\u8981\u505a\u7684\u662f\u6784\u9020\u4e00\u7ec4\u5b57\u7b26\u7247\u6bb5\uff0c\u6bcf\u4e2a\u5b57\u7b26\u7247\u6bb5\u4ee3\u8868\u4e00\u4e2a\u5b57\u7b26\u3002\u6211\u4eec\u8fd8\u9700\u8981\u6839\u636e\u6bcf\u4e2a\u7247\u6bb5\u5bf9\u5e94\u7684\u5b57\u7b26\u6765\u5206\u914d\u5bf9\u5e94\u7684\u7eb9\u7406\u5750\u6807\u3002\u4e0b\u56fe\u5c55\u73b0\u4e86\u6587\u672c\u77e9\u5f62\u548c\u5b57\u7b26\u7247\u6bb5\u7684\u5173\u7cfb\uff1a \u56e0\u6b64\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u5b57\u7b26\uff0c\u6211\u4eec\u9700\u8981\u521b\u5efa\u7531\u4e24\u4e2a\u4e09\u89d2\u5f62\u6784\u6210\u7684\u5b57\u7b26\u7247\u6bb5\uff0c\u8fd9\u4e24\u4e2a\u4e09\u89d2\u5f62\u53ef\u4ee5\u7528\u56db\u4e2a\u9876\u70b9\uff08V1\u3001V2\u3001V3\u548cV4\uff09\u5b9a\u4e49\u3002\u7b2c\u4e00\u4e2a\u4e09\u89d2\u5f62\uff08\u5de6\u4e0b\u89d2\u7684\u90a3\u4e2a\uff09\u7684\u7d22\u5f15\u4e3a(0, 1, 2)\uff0c\u800c\u7b2c\u4e8c\u4e2a\u4e09\u89d2\u5f62\uff08\u53f3\u4e0a\u89d2\u7684\u90a3\u4e2a\uff09\u7684\u7d22\u5f15\u4e3a(3, 0, 2)\u3002\u7eb9\u7406\u5750\u6807\u662f\u57fa\u4e8e\u4e0e\u7eb9\u7406\u56fe\u50cf\u4e2d\u6bcf\u4e2a\u5b57\u7b26\u76f8\u5173\u7684\u884c\u5217\u8ba1\u7b97\u7684\uff0c\u7eb9\u7406\u5750\u6807\u7684\u8303\u56f4\u4e3a[0, 1]\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u5c06\u5f53\u524d\u884c\u6216\u5f53\u524d\u5217\u9664\u4ee5\u603b\u884c\u6570\u548c\u603b\u5217\u6570\u5c31\u53ef\u4ee5\u83b7\u5f97V1\u7684\u5750\u6807\u3002\u5bf9\u4e8e\u5176\u4ed6\u9876\u70b9\uff0c\u6211\u4eec\u53ea\u9700\u8981\u9002\u5f53\u52a0\u4e0a\u884c\u5bbd\u6216\u5217\u5bbd\u5c31\u53ef\u4ee5\u5f97\u5230\u5bf9\u5e94\u5750\u6807\u3002 \u4e0b\u8ff0\u7684\u5faa\u73af\u8bed\u53e5\u5757\u521b\u5efa\u4e86\u4e0e\u6e32\u67d3\u6587\u672c\u77e9\u5f62\u76f8\u5173\u7684\u6240\u6709\u9876\u70b9\u3001\u7eb9\u7406\u5750\u6807\u548c\u7d22\u5f15\u3002 for(int i=0; i<numChars; i++) { byte currChar = chars[i]; int col = currChar % numCols; int row = currChar / numCols; // \u6784\u9020\u7531\u4e24\u4e2a\u4e09\u89d2\u5f62\u7ec4\u6210\u7684\u5b57\u7b26\u7247\u6bb5 // \u5de6\u4e0a\u89d2\u7684\u9876\u70b9 positions.add((float)i*tileWidth); // x positions.add(0.0f); //y positions.add(ZPOS); //z textCoords.add((float)col / (float)numCols ); textCoords.add((float)row / (float)numRows ); indices.add(i*VERTICES_PER_QUAD); // \u5de6\u4e0b\u89d2\u7684\u9876\u70b9 positions.add((float)i*tileWidth); // x positions.add(tileHeight); //y positions.add(ZPOS); //z textCoords.add((float)col / (float)numCols ); textCoords.add((float)(row + 1) / (float)numRows ); indices.add(i*VERTICES_PER_QUAD + 1); // \u53f3\u4e0b\u89d2\u7684\u9876\u70b9 positions.add((float)i*tileWidth + tileWidth); // x positions.add(tileHeight); //y positions.add(ZPOS); //z textCoords.add((float)(col + 1)/ (float)numCols ); textCoords.add((float)(row + 1) / (float)numRows ); indices.add(i*VERTICES_PER_QUAD + 2); // \u53f3\u4e0a\u89d2\u7684\u9876\u70b9 positions.add((float)i*tileWidth + tileWidth); // x positions.add(0.0f); //y positions.add(ZPOS); //z textCoords.add((float)(col + 1)/ (float)numCols ); textCoords.add((float)row / (float)numRows ); indices.add(i*VERTICES_PER_QUAD + 3); // \u6dfb\u52a0\u5de6\u4e0a\u89d2\u548c\u53f3\u4e0b\u89d2\u9876\u70b9\u7684\u7d22\u5f15 indices.add(i*VERTICES_PER_QUAD); indices.add(i*VERTICES_PER_QUAD + 2); } \u4e0a\u8ff0\u4ee3\u7801\u4e2d\u9700\u8981\u6ce8\u610f\u7684\u4e00\u4e9b\u4e8b\u9879\uff1a \u6211\u4eec\u5c06\u4f7f\u7528\u5c4f\u5e55\u5750\u6807\u6765\u8868\u793a\u9876\u70b9\uff08\u8bb0\u4f4f\u5c4f\u5e55\u5750\u6807\u7cfb\u7684\u539f\u70b9\u4f4d\u4e8e\u5c4f\u5e55\u5de6\u4e0a\u89d2\uff09\u3002\u4e09\u89d2\u5f62\u4e0a\u9876\u70b9\u7684Y\u5750\u6807\u5c0f\u4e8e\u4e09\u89d2\u5f62\u4e0b\u9876\u70b9\u7684Y\u5750\u6807\u3002 \u6211\u4eec\u4e0d\u7f29\u653e\u56fe\u5f62\uff0c\u56e0\u6b64\u6bcf\u4e2a\u5b57\u7b26\u7247\u6bb5\u7684X\u8ddd\u79bb\u5c31\u7b49\u4e8e\u5b57\u7b26\u5bbd\u5ea6\uff0c\u4e09\u89d2\u5f62\u7684\u9ad8\u5ea6\u5c31\u662f\u6bcf\u4e2a\u5b57\u7b26\u7684\u9ad8\u5ea6\u3002\u8fd9\u662f\u56e0\u4e3a\u672c\u4f8b\u5e0c\u671b\u5c3d\u53ef\u80fd\u5730\u4f7f\u6e32\u67d3\u6587\u672c\u4e0e\u539f\u59cb\u7eb9\u7406\u76f8\u4f3c\uff08\u4e0d\u7ba1\u600e\u6837\uff0c\u6211\u4eec\u53ef\u4ee5\u7a0d\u540e\u7f29\u653e\u5b83\uff0c\u56e0\u4e3a TextItem \u7c7b\u7ee7\u627f\u4e86 GameItem \u7c7b\uff09\u3002 Z\u5750\u6807\u4e3a\u56fa\u5b9a\u503c\uff0c\u56e0\u4e3a\u5b83\u4e0e\u7ed8\u5236\u8be5\u56fe\u50cf\u65e0\u5173\u3002 \u4e0b\u56fe\u5c55\u793a\u4e86\u4e00\u4e9b\u9876\u70b9\u7684\u5750\u6807\uff1a \u4e3a\u4ec0\u4e48\u6211\u4eec\u4f7f\u7528\u5c4f\u5e55\u5750\u6807\u7cfb\uff1f\u9996\u5148\uff0c\u56e0\u4e3a\u672c\u4f8b\u5c06\u5728HUD\u4e2d\u6e32\u67d32D\u5bf9\u8c61\uff0c\u5e76\u4e14\u901a\u5e38\u8fd9\u6837\u4f7f\u7528\u5b83\u4eec\u66f4\u65b9\u4fbf\u3002\u5176\u6b21\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u6b63\u4ea4\u6295\u5f71\uff08Orthographic Projection\uff09\u7ed8\u5236\u5b83\u4eec\uff0c\u7a0d\u540e\u518d\u89e3\u91ca\u4ec0\u4e48\u662f\u6b63\u4ea4\u6295\u5f71\u3002 TextItem \u7c7b\u6700\u540e\u8fd8\u9700\u6dfb\u52a0\u4e00\u4e9b\u65b9\u6cd5\uff0c\u4ee5\u83b7\u53d6\u6587\u672c\u5e76\u5728\u8fd0\u884c\u65f6\u66f4\u6539\u6587\u672c\u3002\u6bcf\u5f53\u6587\u672c\u88ab\u66f4\u6539\u65f6\uff0c\u9700\u8981\u6e05\u7406\u6b64\u524d\u7684VAO\uff08\u50a8\u5b58\u5728 Mesh \u5b9e\u4f8b\u4e2d\uff09\u5e76\u521b\u5efa\u4e00\u4e2a\u65b0\u7684VAO\u3002\u6211\u4eec\u4e0d\u9700\u8981\u5220\u9664\u7eb9\u7406\uff0c\u6240\u4ee5\u5728 Mesh \u7c7b\u4e2d\u6dfb\u52a0\u4e86\u4e00\u4e2a\u65b0\u65b9\u6cd5\u6765\u5220\u9664\u8fd9\u4e9b\u6570\u636e\u3002 public String getText() { return text; } public void setText(String text) { this.text = text; Texture texture = this.getMesh().getMaterial().getTexture(); this.getMesh().deleteBuffers(); this.setMesh(buildMesh(texture, numCols, numRows)); } \u65e2\u7136\u6211\u4eec\u5df2\u7ecf\u5efa\u7acb\u4e86\u6e32\u67d3\u6587\u672c\u6240\u9700\u8981\u7684\u57fa\u7840\u7ed3\u6784\uff0c\u63a5\u4e0b\u6765\u8be5\u600e\u4e48\u505a\u5462\uff1f\u9996\u5148\u5982\u6b64\u524d\u7ae0\u8282\u6240\u8ff0\uff0c\u6e32\u67d3\u4e09\u7ef4\u573a\u666f\uff0c\u7136\u540e\u5728\u5176\u4e0a\u6e32\u67d3\u4e8c\u7ef4\u7684HUD\u3002\u4e3a\u4e86\u6e32\u67d3HUD\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u6b63\u4ea4\u6295\u5f71\uff08\u4e5f\u79f0\u4e3a\u6b63\u4ea4\u6295\u5f71\uff09\u3002\u6b63\u4ea4\u6295\u5f71\u662f\u4e09\u7ef4\u7269\u4f53\u7684\u4e00\u79cd\u4e8c\u7ef4\u8868\u793a\u65b9\u5f0f\uff0c\u4f60\u53ef\u80fd\u5df2\u7ecf\u5728\u4e09\u7ef4\u6a21\u578b\u7684\u84dd\u56fe\u4e2d\u770b\u5230\u4e86\u4e00\u4e9b\u4f8b\u5b50\uff0c\u5b83\u4eec\u7528\u6765\u8868\u793a\u67d0\u4e9b\u7269\u4f53\u4ece\u9876\u90e8\u6216\u67d0\u4e9b\u4fa7\u9762\u770b\u5230\u7684\u6837\u5b50\u3002\u4e0b\u56fe\u662f\u5706\u67f1\u4f53\u4ece\u9876\u90e8\u548c\u524d\u9762\u7684\u6b63\u4ea4\u6295\u5f71\uff1a \u8fd9\u79cd\u6295\u5f71\u5bf9\u4e8e\u7ed8\u5236\u4e8c\u7ef4\u7269\u4f53\u662f\u975e\u5e38\u65b9\u4fbf\u7684\uff0c\u56e0\u4e3a\u5b83\u201c\u5ffd\u7565\u201d\u4e86Z\u5750\u6807\u7684\u503c\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5ffd\u7565\u4e86\u5230\u5c4f\u5e55\u7684\u8ddd\u79bb\u3002\u4f7f\u7528\u8fd9\u79cd\u6295\u5f71\uff0c\u7269\u4f53\u5927\u5c0f\u4e0d\u4f1a\u968f\u7740\u8ddd\u79bb\u7684\u589e\u5927\u800c\u51cf\u5c0f\uff08\u4e0d\u540c\u4e8e\u900f\u89c6\u6295\u5f71\uff09\u3002\u4e3a\u4e86\u4f7f\u7528\u6b63\u4ea4\u6295\u5f71\u6295\u5f71\u7269\u4f53\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528\u53e6\u4e00\u4e2a\u77e9\u9635\uff0c\u5373\u6b63\u4ea4\u6295\u5f71\u77e9\u9635\uff0c\u6b63\u4ea4\u6295\u5f71\u77e9\u9635\u7684\u516c\u5f0f\u5982\u4e0b\u6240\u793a\uff1a \u8fd9\u4e2a\u77e9\u9635\u8fd8\u77eb\u6b63\u4e86\u5931\u771f\uff0c\u56e0\u4e3a\u6211\u4eec\u7684\u7a97\u53e3\u5e76\u4e0d\u603b\u662f\u5b8c\u7f8e\u7684\u6b63\u65b9\u5f62\uff0c\u800c\u662f\u4e00\u4e2a\u77e9\u5f62\u3002 right \u548c bottom \u662f\u5c4f\u5e55\u5927\u5c0f\uff0c\u800c left \u548c top \u662f\u539f\u70b9\u5750\u6807\u3002\u6b63\u4ea4\u6295\u5f71\u77e9\u9635\u7528\u4e8e\u5c06\u5c4f\u5e55\u5750\u6807\u8f6c\u6362\u4e3a\u4e09\u7ef4\u7a7a\u95f4\u5750\u6807\u3002\u4e0b\u56fe\u5c55\u73b0\u4e86\u8be5\u6295\u5f71\u7684\u6620\u5c04\u8fc7\u7a0b\uff1a \u8be5\u77e9\u9635\u5c06\u5141\u8bb8\u6211\u4eec\u4f7f\u7528\u5c4f\u5e55\u5750\u6807\u3002 \u6211\u4eec\u73b0\u5728\u53ef\u4ee5\u7ee7\u7eed\u5b9e\u73b0HUD\u4e86\u3002\u63a5\u4e0b\u6765\u8981\u505a\u7684\u662f\u521b\u5efa\u53e6\u4e00\u7ec4\u7740\u8272\u5668\uff0c\u4e00\u4e2a\u9876\u70b9\u7740\u8272\u5668\u548c\u4e00\u4e2a\u7247\u5143\u7740\u8272\u5668\uff0c\u6765\u7ed8\u5236HUD\u3002\u9876\u70b9\u7740\u8272\u5668\u5f88\u7b80\u5355\uff1a #version 330 layout (location=0) in vec3 position; layout (location=1) in vec2 texCoord; layout (location=2) in vec3 vertexNormal; out vec2 outTexCoord; uniform mat4 projModelMatrix; void main() { gl_Position = projModelMatrix * vec4(position, 1.0); outTexCoord = texCoord; } \u5b83\u4ec5\u63a5\u6536\u9876\u70b9\u5750\u6807\u3001\u7eb9\u7406\u5750\u6807\u3001\u7d22\u5f15\u548c\u6cd5\u7ebf\uff0c\u5e76\u5c06\u4f7f\u7528\u77e9\u9635\u5c06\u5b83\u4eec\u8f6c\u6362\u4e3a\u4e09\u7ef4\u7a7a\u95f4\u5750\u6807\uff0c\u8be5\u77e9\u9635\u662f\u6b63\u4ea4\u6295\u5f71\u77e9\u9635\u4e0e\u6a21\u578b\u77e9\u9635\u7684\u4e58\u79ef\uff0c\u5373 projModelMatrix = \u6b63\u4ea4\u6295\u5f71\u77e9\u9635 \\cdot \u6a21\u578b\u77e9\u9635 \u3002\u7531\u4e8e\u6211\u4eec\u6ca1\u6709\u5728\u4e16\u754c\u5750\u6807\u7cfb\u4e2d\u5bf9\u5750\u6807\u505a\u4efb\u4f55\u5904\u7406\uff0c\u6240\u4ee5\u5728Java\u4ee3\u7801\u4e2d\u5c06\u4e24\u4e2a\u77e9\u9635\u76f8\u4e58\u6bd4\u5728\u7740\u8272\u5668\u4e2d\u76f8\u4e58\u66f4\u9ad8\u6548\u3002\u8fd9\u6837\uff0c\u6211\u4eec\u53ea\u9700\u4e3a\u6bcf\u4e2a\u9879\u76ee\u505a\u4e00\u6b21\u77e9\u9635\u4e58\u6cd5\u8fd0\u7b97\uff0c\u800c\u4e0d\u662f\u4e3a\u6bcf\u4e2a\u9876\u70b9\u505a\u4e00\u6b21\u3002\u8fd8\u5e94\u8bb0\u4f4f\u9876\u70b9\u5e94\u8be5\u7528\u5c4f\u5e55\u5750\u6807\u8868\u793a\u3002 \u7247\u5143\u7740\u8272\u5668\u4e5f\u5f88\u7b80\u5355\uff1a #version 330 in vec2 outTexCoord; in vec3 mvPos; out vec4 fragColor; uniform sampler2D texture_sampler; uniform vec4 colour; void main() { fragColor = colour * texture(texture_sampler, outTexCoord); } \u5b83\u53ea\u662f\u5c06\u57fa\u672c\u989c\u8272\u4e0e\u7eb9\u7406\u989c\u8272\u76f8\u4e58\uff0c\u8fd9\u6837\u53ef\u4ee5\u6539\u53d8\u6e32\u67d3\u6587\u672c\u7684\u989c\u8272\uff0c\u800c\u4e0d\u9700\u8981\u521b\u5efa\u591a\u4e2a\u7eb9\u7406\u6587\u4ef6\u3002\u73b0\u5728\u65e2\u7136\u5df2\u7ecf\u521b\u5efa\u4e86\u4e00\u7ec4\u65b0\u7684\u7740\u8272\u5668\uff0c\u5c31\u53ef\u4ee5\u5728 Renderer \u7c7b\u4e2d\u4f7f\u7528\u5b83\u4eec\u3002\u4f46\u5728\u6b64\u4e4b\u524d\uff0c\u6211\u4eec\u8981\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a IHud \u7684\u63a5\u53e3\uff0c\u8be5\u63a5\u53e3\u50a8\u5b58\u6240\u6709\u8981\u5728HUD\u4e0a\u663e\u793a\u7684\u5143\u7d20\uff0c\u5e76\u63d0\u4f9b\u4e00\u4e2a\u9ed8\u8ba4\u7684 cleanup \u65b9\u6cd5\u3002 package org.lwjglb.engine; public interface IHud { GameItem[] getGameItems(); default void cleanup() { GameItem[] gameItems = getGameItems(); for (GameItem gameItem : gameItems) { gameItem.getMesh().cleanUp(); } } } \u901a\u8fc7\u8be5\u63a5\u53e3\uff0c\u4e0d\u540c\u7684\u6e38\u620f\u53ef\u4ee5\u5b9a\u4e49\u81ea\u5b9a\u4e49\u7684HUD\uff0c\u800c\u4e0d\u9700\u8981\u6539\u53d8\u6e32\u67d3\u673a\u5236\u3002\u73b0\u5728\u56de\u5230 Renderer \u7c7b\uff0c\u987a\u4fbf\u4e00\u63d0\uff0c\u5b83\u5df2\u7ecf\u88ab\u79fb\u52a8\u5230 engine.graph \u5305\u4e0b\uff0c\u56e0\u4e3a\u73b0\u5728\u5b83\u7684\u901a\u7528\u6027\u8db3\u4ee5\u4e0d\u4f9d\u8d56\u4efb\u4f55\u6e38\u620f\u7684\u5177\u4f53\u5b9e\u73b0\u4e86\u3002\u5728 Renderer \u7c7b\u4e2d\uff0c\u6211\u4eec\u6dfb\u52a0\u4e86\u4e00\u4e2a\u65b0\u7684\u65b9\u6cd5\u6765\u521b\u5efa\u3001\u8fde\u63a5\u548c\u521d\u59cb\u5316\u4e00\u4e2a\u65b0\u7684 ShaderProgram \uff0c\u4ee5\u4fbf\u4f7f\u7528\u4e0a\u8ff0\u6240\u793a\u7684\u7740\u8272\u5668\u3002 private void setupHudShader() throws Exception { hudShaderProgram = new ShaderProgram(); hudShaderProgram.createVertexShader(Utils.loadResource(\"/shaders/hud_vertex.vs\")); hudShaderProgram.createFragmentShader(Utils.loadResource(\"/shaders/hud_fragment.fs\")); hudShaderProgram.link(); // \u4e3a\u6b63\u4ea4\u6295\u5f71\u6a21\u578b\u77e9\u9635\u548c\u989c\u8272\u521b\u5efaUniform hudShaderProgram.createUniform(\"projModelMatrix\"); hudShaderProgram.createUniform(\"colour\"); } render \u65b9\u6cd5\u9996\u5148\u4f1a\u8c03\u7528 renderScene \u65b9\u6cd5\uff0c\u5176\u4e2d\u5305\u542b\u4e86\u6b64\u524d\u7ae0\u8282\u6240\u8ff0\u7684\u6e32\u67d3\u4e09\u7ef4\u573a\u666f\u7684\u4ee3\u7801\uff0c\u7136\u540e\u8c03\u7528\u4e00\u4e2a\u540d\u4e3a renderHud \u7684\u65b0\u65b9\u6cd5\uff0c\u7528\u4e8e\u6e32\u67d3HUD\u3002 public void render(Window window, Camera camera, GameItem[] gameItems, SceneLight sceneLight, IHud hud) { clear(); if ( window.isResized() ) { glViewport(0, 0, window.getWidth(), window.getHeight()); window.setResized(false); } renderScene(window, camera, gameItems, sceneLight); renderHud(window, hud); } renderHud \u65b9\u6cd5\u5b9e\u73b0\u5982\u4e0b\uff1a private void renderHud(Window window, IHud hud) { hudShaderProgram.bind(); Matrix4f ortho = transformation.getOrthoProjectionMatrix(0, window.getWidth(), window.getHeight(), 0); for (GameItem gameItem : hud.getGameItems()) { Mesh mesh = gameItem.getMesh(); // HUD\u5143\u7d20\u7684\u6b63\u4ea4\u6295\u5f71\u77e9\u9635\u4e0e\u6a21\u578b\u77e9\u9635\u76f8\u4e58 Matrix4f projModelMatrix = transformation.getOrtoProjModelMatrix(gameItem, ortho); hudShaderProgram.setUniform(\"projModelMatrix\", projModelMatrix); hudShaderProgram.setUniform(\"colour\", gameItem.getMesh().getMaterial().getAmbientColour()); // \u6e32\u67d3\u6b64HUD\u9879\u76ee\u7684\u7f51\u683c mesh.render(); } hudShaderProgram.unbind(); } \u4e0a\u8ff0\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u904d\u5386\u4e86HUD\u7684\u6240\u6709\u5143\u7d20\uff0c\u5e76\u5c06\u4e0e\u6bcf\u4e2a\u5143\u7d20\u5173\u8054\u7684\u6a21\u578b\u77e9\u9635\u548c\u6b63\u4ea4\u6295\u5f71\u77e9\u9635\u76f8\u4e58\u3002\u6b63\u4ea4\u6295\u5f71\u77e9\u9635\u5728\u6bcf\u6b21 render \u8c03\u7528\u65f6\u88ab\u5237\u65b0\uff08\u56e0\u4e3a\u5c4f\u5e55\u5927\u5c0f\u53ef\u4ee5\u88ab\u6539\u53d8\uff09\uff0c\u5e76\u4e14\u901a\u8fc7\u5982\u4e0b\u65b9\u5f0f\u8ba1\u7b97\uff1a public final Matrix4f getOrthoProjectionMatrix(float left, float right, float bottom, float top) { orthoMatrix.identity(); orthoMatrix.setOrtho2D(left, right, bottom, top); return orthoMatrix; } \u6211\u4eec\u5c06\u5728 game \u5305\u4e2d\u521b\u5efa\u4e00\u4e2a Hud \u7c7b\uff0c\u5b83\u5b9e\u73b0\u4e86 IHud \u63a5\u53e3\uff0c\u5e76\u5728\u6784\u9020\u51fd\u6570\u63a5\u6536\u4e00\u4e2a\u6587\u672c\uff0c\u7528\u4e8e\u5728\u5176\u4e2d\u521b\u5efa TextItem \u5b9e\u4f8b\u3002 package org.lwjglb.game; import org.joml.Vector4f; import org.lwjglb.engine.GameItem; import org.lwjglb.engine.IHud; import org.lwjglb.engine.TextItem; public class Hud implements IHud { private static final int FONT_COLS = 15; private static final int FONT_ROWS = 17; private static final String FONT_TEXTURE = \"textures/font_texture.png\"; private final GameItem[] gameItems; private final TextItem statusTextItem; public Hud(String statusText) throws Exception { this.statusTextItem = new TextItem(statusText, FONT_TEXTURE, FONT_COLS, FONT_ROWS); this.statusTextItem.getMesh().getMaterial().setColour(new Vector4f(1, 1, 1, 1)); gameItems = new GameItem[]{statusTextItem}; } public void setStatusText(String statusText) { this.statusTextItem.setText(statusText); } @Override public GameItem[] getGameItems() { return gameItems; } public void updateSize(Window window) { this.statusTextItem.setPosition(10f, window.getHeight() - 50f, 0); } } \u5728 DummyGame \u7c7b\u4e2d\u6211\u4eec\u521b\u5efa\u8be5\u7c7b\u7684\u5b9e\u4f8b\uff0c\u5e76\u7528\u9ed8\u8ba4\u6587\u672c\u521d\u59cb\u5316\u5b83\uff0c\u6700\u540e\u5f97\u5230\u5982\u4e0b\u6240\u793a\u7684\u7ed3\u679c\uff1a \u5728 Texture \u7c7b\u4e2d\u53ef\u4ee5\u901a\u8fc7\u4fee\u6539\u7eb9\u7406\u7684\u8fc7\u6ee4\u65b9\u5f0f\u6765\u63d0\u5347\u6587\u672c\u7684\u53ef\u8bfb\u6027\uff08\u5982\u679c\u9700\u8981\u6587\u672c\u7f29\u653e\u7684\u8bdd\u9700\u8981\u6ce8\u610f\u6b64\u4e8b\uff09\u3002 glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST); \u4f46\u662f\u672c\u4f8b\u8fd8\u6ca1\u6709\u505a\u5b8c\u3002\u5982\u679c\u7528\u7f29\u653e\u4f7f\u6587\u672c\u4e0e\u7acb\u65b9\u4f53\u91cd\u53e0\u65f6\uff0c\u5c31\u4f1a\u770b\u5230\u5982\u4e0b\u6548\u679c\uff1a \u7ed8\u5236\u7684\u6587\u672c\u80cc\u666f\u4e0d\u900f\u660e\u3002\u4e3a\u4e86\u5b9e\u73b0\u80cc\u666f\u900f\u660e\uff0c\u6211\u4eec\u5fc5\u987b\u660e\u786e\u542f\u7528\u6df7\u5408\uff08Blend\uff09\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u4f7f\u7528Alpha\u5206\u91cf\u3002\u672c\u4f8b\u5c06\u5728 Window \u7c7b\u4e2d\u7528\u4e0b\u8ff0\u4ee3\u7801\u8bbe\u7f6e\u5176\u521d\u59cb\u5316\u53c2\u6570\uff1a // \u652f\u6301\u900f\u660e glEnable(GL_BLEND); glBlendFunc(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA); \u73b0\u5728\u4f60\u53ef\u4ee5\u770b\u5230\u6587\u672c\u4ee5\u900f\u660e\u80cc\u666f\u7ed8\u5236\u4e86\u3002 \u5b8c\u5584HUD \u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u6e32\u67d3\u4e86\u4e00\u4e9b\u6587\u672c\uff0c\u4f46\u8fd8\u53ef\u4ee5\u5411HUD\u6dfb\u52a0\u66f4\u591a\u7684\u5143\u7d20\u3002\u672c\u4f8b\u5c06\u6dfb\u52a0\u4e00\u4e2a\u6839\u636e\u6444\u50cf\u673a\u671d\u5411\u65cb\u8f6c\u7684\u6307\u9488\u3002\u73b0\u5728\u6211\u4eec\u5c06\u5411 Hud \u7c7b\u6dfb\u52a0\u4e00\u4e2a\u65b0\u7684 GameItem \uff0c\u5b83\u5c06\u5305\u542b\u4e00\u4e2a\u6307\u9488\u7684\u6a21\u578b\u7f51\u683c\u3002 \u6307\u9488\u7684\u6a21\u578b\u662f.obj\u6587\u4ef6\uff0c\u4f46\u5b83\u4e0d\u4f1a\u5173\u8054\u4efb\u4f55\u7eb9\u7406\uff0c\u76f8\u53cd\uff0c\u5b83\u53ea\u6709\u4e00\u4e2a\u57fa\u7840\u8272\u3002\u6240\u4ee5\u9700\u8981\u4fee\u6539HUD\u7684\u7247\u5143\u7740\u8272\u5668\uff0c\u4ee5\u786e\u8ba4\u662f\u5426\u4f7f\u7528\u7eb9\u7406\u3002\u672c\u4f8b\u5c06\u901a\u8fc7\u8bbe\u7f6e\u4e00\u4e2a\u540d\u4e3a hasTexture \u7684\u65b0Uniform\u6765\u5b9e\u73b0\u5b83\u3002 #version 330 in vec2 outTexCoord; in vec3 mvPos; out vec4 fragColor; uniform sampler2D texture_sampler; uniform vec4 colour; uniform int hasTexture; void main() { if ( hasTexture == 1 ) { fragColor = colour * texture(texture_sampler, outTexCoord); } else { fragColor = colour; } } \u8981\u5c06\u6307\u9488\u6dfb\u52a0\u5230HUD\u4e0a\uff0c\u53ea\u9700\u5728 Hud \u7c7b\u4e2d\u521b\u5efa\u4e00\u4e2a\u65b0\u7684 GameItem \u5b9e\u4f8b\u3002\u5b83\u52a0\u8f7d\u6307\u9488\u6a21\u578b\uff0c\u5e76\u5c06\u5176\u6dfb\u52a0\u5230\u9879\u76ee\u5217\u8868\u4e2d\u3002\u5728\u672c\u4f8b\u4e2d\u9700\u8981\u653e\u5927\u6307\u9488\uff0c\u56e0\u4e3a\u5b83\u5728\u5c4f\u5e55\u5750\u6807\u7cfb\u4e2d\u6e32\u67d3\uff0c\u6240\u4ee5\u901a\u5e38\u4f60\u9700\u8981\u653e\u5927\u5b83\u3002 // \u521b\u5efa\u6307\u9488 Mesh mesh = OBJLoader.loadMesh(\"/models/compass.obj\"); Material material = new Material(); material.setAmbientColour(new Vector4f(1, 0, 0, 1)); mesh.setMaterial(material); compassItem = new GameItem(mesh); compassItem.setScale(40.0f); // \u65cb\u8f6c\u4ee5\u5c06\u5176\u53d8\u6362\u5230\u5c4f\u5e55\u5750\u6807\u7cfb compassItem.setRotation(0f, 0f, 180f); // \u521b\u5efa\u4e00\u4e2a\u6570\u7ec4\uff0c\u7528\u4e8e\u50a8\u5b58HUD\u9879\u76ee gameItems = new GameItem[]{statusTextItem, compassItem}; \u8fd8\u8981\u6ce8\u610f\uff0c\u4e3a\u4e86\u4f7f\u6307\u9488\u6307\u5411\u4e0a\u65b9\uff0c\u6211\u4eec\u9700\u8981\u5c06\u5176\u65cb\u8f6c180\u00b0\uff0c\u56e0\u4e3a\u6a21\u578b\u901a\u5e38\u503e\u5411\u4e8e\u4f7f\u7528OpenGL\u7a7a\u95f4\u5750\u6807\u7cfb\u3002\u5982\u679c\u6211\u4eec\u8981\u4f7f\u7528\u5c4f\u5e55\u5750\u6807\uff0c\u5b83\u4f1a\u6307\u5411\u4e0b\u65b9\u3002 Hud \u7c7b\u8fd8\u63d0\u4f9b\u4e00\u4e2a\u65b9\u6cd5\u6765\u66f4\u65b0\u6307\u9488\u7684\u6307\u5411\uff0c\u8be5\u65b9\u6cd5\u4e5f\u5fc5\u987b\u8003\u8651\u5230\u8fd9\u4e00\u70b9\u3002 public void rotateCompass(float angle) { this.compassItem.setRotation(0, 0, 180 + angle); } \u5728 DummyGame \u7c7b\u4e2d\uff0c\u6bcf\u5f53\u6444\u50cf\u673a\u79fb\u52a8\u65f6\uff0c\u6211\u4eec\u9700\u8981\u7528Y\u89d2\u65cb\u8f6c\u66f4\u65b0\u89d2\u5ea6\u3002 // \u6839\u636e\u9f20\u6807\u66f4\u65b0\u6444\u50cf\u673a if (mouseInput.isRightButtonPressed()) { Vector2f rotVec = mouseInput.getDisplVec(); camera.moveRotation(rotVec.x * MOUSE_SENSITIVITY, rotVec.y * MOUSE_SENSITIVITY, 0); // \u66f4\u65b0HUD\u6307\u9488 hud.rotateCompass(camera.getRotation().y); } \u6211\u4eec\u4f1a\u770b\u5230\u8fd9\u6837\u7684\u7ed3\u679c\uff08\u8bb0\u4f4f\u8fd9\u53ea\u662f\u4e2a\u793a\u4f8b\uff0c\u5728\u5b9e\u9645\u7684\u6e38\u620f\u4e2d\uff0c\u4f60\u53ef\u80fd\u60f3\u4f7f\u7528\u4e00\u4e9b\u7eb9\u7406\u8bbe\u7f6e\u6307\u9488\u7684\u5916\u89c2\uff09\u3002 \u518d\u8c08\u6587\u672c\u6e32\u67d3 \u5728\u56de\u987e\u5176\u4ed6\u4e3b\u9898\u4e4b\u524d\uff0c\u8ba9\u6211\u4eec\u518d\u8c08\u8c08\u4e4b\u524d\u4ecb\u7ecd\u7684\u6587\u672c\u6e32\u67d3\u65b9\u6cd5\u3002\u8be5\u65b9\u6848\u975e\u5e38\u7b80\u6d01\u5730\u4ecb\u7ecd\u4e86\u6e32\u67d3HUD\u6240\u6d89\u53ca\u7684\u6982\u5ff5\uff0c\u4f46\u5b83\u5b58\u5728\u4e00\u4e9b\u95ee\u9898\uff1a \u5b83\u4e0d\u652f\u6301\u975e\u62c9\u4e01\u5b57\u7b26\u3002 \u5982\u679c\u4f60\u60f3\u4f7f\u7528\u591a\u79cd\u5b57\u4f53\uff0c\u5219\u9700\u8981\u4e3a\u6bcf\u79cd\u5b57\u4f53\u521b\u5efa\u5355\u72ec\u7684\u7eb9\u7406\u6587\u4ef6\u3002\u6b64\u5916\uff0c\u6539\u53d8\u6587\u672c\u5927\u5c0f\u7684\u552f\u4e00\u65b9\u6cd5\u662f\u7f29\u653e\uff0c\u8fd9\u4f1a\u5bfc\u81f4\u6e32\u67d3\u6587\u672c\u7684\u8d28\u91cf\u8f83\u5dee\uff0c\u6216\u8005\u9700\u8981\u521b\u5efa\u989d\u5916\u7684\u7eb9\u7406\u6587\u4ef6\u3002 \u6700\u91cd\u8981\u7684\u662f\uff0c\u5927\u591a\u6570\u5b57\u4f53\u4e2d\u7684\u5b57\u7b26\u4e4b\u95f4\u7684\u5927\u5c0f\u5e76\u4e0d\u540c\uff0c\u800c\u6211\u4eec\u5c06\u5b57\u4f53\u7eb9\u7406\u5206\u5272\u6210\u540c\u6837\u5927\u5c0f\u7684\u5143\u7d20\u3002\u6211\u4eec\u4f7f\u7528\u4e86 Monospaced \u98ce\u683c\uff08\u5373\u6240\u6709\u5b57\u7b26\u5177\u6709\u76f8\u540c\u7684\u5bbd\u5ea6\uff09\u7684\u201cConsolas\u201d\u5b57\u4f53\uff0c\u4f46\u5982\u679c\u4f7f\u7528\u975eMonospaced\u7684\u5b57\u4f53\uff0c\u5c31\u4f1a\u770b\u5230\u5b57\u7b26\u4e4b\u95f4\u607c\u4eba\u7684\u7a7a\u767d\u3002 \u6211\u4eec\u9700\u8981\u66f4\u6539\u65b9\u6cd5\uff0c\u5e76\u63d0\u4f9b\u4e00\u79cd\u66f4\u7075\u6d3b\u7684\u6e32\u67d3\u6587\u672c\u65b9\u5f0f\u3002\u5982\u679c\u4f60\u4ed4\u7ec6\u60f3\u60f3\uff0c\u6574\u4f53\u60f3\u6cd5\u662f\u53ef\u884c\u7684\uff0c\u4e5f\u5c31\u662f\u901a\u8fc7\u5355\u72ec\u6e32\u67d3\u6bcf\u4e2a\u5b57\u7b26\u7684\u77e9\u5f62\u6765\u6e32\u67d3\u6587\u672c\u3002\u8fd9\u91cc\u7684\u95ee\u9898\u5c31\u662f\u8be5\u5982\u4f55\u751f\u6210\u7eb9\u7406\uff0c\u6211\u4eec\u9700\u8981\u901a\u8fc7\u7cfb\u7edf\u4e2d\u53ef\u7528\u7684\u5b57\u4f53\u52a8\u6001\u5730\u751f\u6210\u8fd9\u4e9b\u7eb9\u7406\u3002 \u8fd9\u5c31\u9700\u8981 java.awt.Font \u51fa\u624b\u4e86\uff0c\u6211\u4eec\u5c06\u901a\u8fc7\u6307\u5b9a\u5b57\u4f53\u7cfb\u5217\u548c\u5927\u5c0f\u52a8\u6001\u5730\u7ed8\u5236\u6bcf\u4e00\u4e2a\u5b57\u7b26\u6765\u751f\u6210\u7eb9\u7406\u3002\u8be5\u7eb9\u7406\u7684\u4f7f\u7528\u65b9\u5f0f\u4e0e\u4e4b\u524d\u63cf\u8ff0\u7684\u76f8\u540c\uff0c\u4f46\u5b83\u5c06\u5b8c\u7f8e\u5730\u89e3\u51b3\u4e0a\u8ff0\u6240\u6709\u95ee\u9898\u3002\u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a FontTexture \u7684\u65b0\u7c7b\uff0c\u8be5\u7c7b\u5c06\u63a5\u6536 Font \u5b9e\u4f8b\u548c\u5b57\u7b26\u96c6\u540d\u79f0\uff0c\u5e76\u5c06\u52a8\u6001\u5730\u521b\u5efa\u5305\u542b\u6240\u6709\u53ef\u7528\u5b57\u7b26\u7684\u7eb9\u7406\u3002\u6784\u9020\u51fd\u6570\u5982\u4e0b\u6240\u793a\uff1a public FontTexture(Font font, String charSetName) throws Exception { this.font = font; this.charSetName = charSetName; charMap = new HashMap<>(); buildTexture(); } \u9996\u5148\u8981\u5904\u7406\u975e\u62c9\u4e01\u5b57\u7b26\u95ee\u9898\u3002\u7ed9\u5b9a\u5b57\u7b26\u96c6\u548c\u5b57\u4f53\uff0c\u6211\u4eec\u5c06\u6784\u5efa\u4e00\u4e2a\u5305\u542b\u6240\u6709\u53ef\u6e32\u67d3\u5b57\u7b26\u7684 String \u3002 private String getAllAvailableChars(String charsetName) { CharsetEncoder ce = Charset.forName(charsetName).newEncoder(); StringBuilder result = new StringBuilder(); for (char c = 0; c < Character.MAX_VALUE; c++) { if (ce.canEncode(c)) { result.append(c); } } return result.toString(); } \u8ba9\u6211\u4eec\u6765\u770b\u770b\u5b9e\u9645\u521b\u5efa\u7eb9\u7406\u7684 buildTexture \u65b9\u6cd5\uff1a private void buildTexture() throws Exception { // \u4f7f\u7528FontMetrics\u83b7\u53d6\u6bcf\u4e2a\u5b57\u7b26\u7684\u4fe1\u606f BufferedImage img = new BufferedImage(1, 1, BufferedImage.TYPE_INT_ARGB); Graphics2D g2D = img.createGraphics(); g2D.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON); g2D.setFont(font); FontMetrics fontMetrics = g2D.getFontMetrics(); String allChars = getAllAvailableChars(charSetName); this.width = 0; this.height = fontMetrics.getHeight(); for (char c : allChars.toCharArray()) { // \u83b7\u53d6\u6bcf\u4e2a\u5b57\u7b26\u7684\u5927\u5c0f\uff0c\u5e76\u66f4\u65b0\u56fe\u50cf\u7684\u5927\u5c0f CharInfo charInfo = new CharInfo(width, fontMetrics.charWidth(c)); charMap.put(c, charInfo); width += charInfo.getWidth() + CHAR_PADDING; } g2D.dispose(); \u6211\u4eec\u9996\u5148\u901a\u8fc7\u521b\u5efa\u4e34\u65f6\u56fe\u50cf\u6765\u83b7\u5f97 FontMetrics \uff0c\u7136\u540e\u904d\u5386\u5305\u542b\u6240\u6709\u53ef\u7528\u5b57\u7b26\u7684 String \uff0c\u5e76\u5728 FontMetrics \u7684\u5e2e\u52a9\u4e0b\u83b7\u53d6\u6bcf\u4e2a\u5b57\u7b26\u7684\u5bbd\u5ea6\u3002\u6211\u4eec\u5c06\u8fd9\u4e9b\u4fe1\u606f\u50a8\u5b58\u5728\u4e00\u4e2a charMap \u6620\u5c04\u4e0a\uff0c\u4ee5\u5b57\u7b26\u4f5c\u4e3a\u6620\u5c04\u7684\u952e\u3002\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u786e\u5b9a\u4e86\u7eb9\u7406\u56fe\u50cf\u7684\u5927\u5c0f\uff08\u56fe\u50cf\u7684\u9ad8\u5ea6\u7b49\u4e8e\u6240\u6709\u5b57\u7b26\u7684\u6700\u5927\u9ad8\u5ea6\uff0c\u800c\u5bbd\u5ea6\u7b49\u4e8e\u6240\u6709\u5b57\u7b26\u7684\u5bbd\u5ea6\u603b\u548c\uff09\u3002 ChatSet \u662f\u4e00\u4e2a\u5185\u90e8\u7c7b\uff0c\u5b83\u50a8\u5b58\u6709\u5173\u5b57\u7b26\u7684\u4fe1\u606f\uff08\u5b83\u7684\u5bbd\u5ea6\u548c\u5b83\u5728\u7eb9\u7406\u56fe\u50cf\u4e2d\u7684\u8d77\u70b9\uff09\u3002 public static class CharInfo { private final int startX; private final int width; public CharInfo(int startX, int width) { this.startX = startX; this.width = width; } public int getStartX() { return startX; } public int getWidth() { return width; } } \u7136\u540e\uff0c\u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a\u50a8\u5b58\u6240\u6709\u53ef\u7528\u5b57\u7b26\u7684\u56fe\u50cf\uff0c\u53ea\u9700\u5728 BufferedImage \u4e0a\u7ed8\u5236\u5b57\u7b26\u4e32\u5373\u53ef\u3002 // \u521b\u5efa\u4e0e\u5b57\u7b26\u96c6\u76f8\u5173\u7684\u56fe\u50cf img = new BufferedImage(width, height, BufferedImage.TYPE_INT_ARGB); g2D = img.createGraphics(); g2D.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON); g2D.setFont(font); fontMetrics = g2D.getFontMetrics(); g2D.setColor(Color.WHITE); int startX = 0; for (char c : allChars.toCharArray()) { CharInfo charInfo = charMap.get(c); g2D.drawString(\"\" + c, startX, fontMetrics.getAscent()); startX += charInfo.getWidth() + CHAR_PADDING; } g2D.dispose(); \u6211\u4eec\u6b63\u5728\u751f\u6210\u4e00\u4e2a\u5305\u542b\u6240\u6709\u5b57\u7b26\u7684\u5355\u884c\u56fe\u50cf\uff08\u53ef\u80fd\u4e0d\u6ee1\u8db3\u7eb9\u7406\u5927\u5c0f\u5e94\u8be5\u4e3a\u4e8c\u7684\u5e42\u7684\u524d\u63d0\uff0c\u4f46\u662f\u5b83\u4ecd\u9002\u7528\u4e8e\u5927\u591a\u6570\u73b0\u4ee3\u663e\u5361\u3002\u5728\u4efb\u4f55\u60c5\u51b5\u4e0b\uff0c\u4f60\u90fd\u53ef\u4ee5\u901a\u8fc7\u589e\u52a0\u989d\u5916\u7684\u7a7a\u767d\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff09\u3002\u4f60\u4e5f\u53ef\u4ee5\u67e5\u770b\u751f\u6210\u7684\u56fe\u50cf\uff0c\u5728\u4e0a\u8ff0\u4ee3\u7801\u4e4b\u540e\uff0c\u6dfb\u52a0\u4e0b\u8ff0\u7684\u4e00\u884c\u4ee3\u7801\uff1a ImageIO.write(img, IMAGE_FORMAT, new java.io.File(\"Temp.png\")); \u56fe\u50cf\u5c06\u88ab\u5199\u5165\u4e00\u4e2a\u4e34\u65f6\u6587\u4ef6\u3002\u8be5\u6587\u4ef6\u5c06\u5305\u542b\u4e00\u4e2a\u5728\u767d\u8272\u80cc\u666f\u4e0b\uff0c\u4f7f\u7528\u6297\u952f\u9f7f\u7ed8\u5236\u6240\u6709\u53ef\u7528\u5b57\u7b26\u7684\u957f\u6761\u3002 \u6700\u540e\u53ea\u9700\u8981\u4ece\u8be5\u56fe\u50cf\u521b\u5efa\u4e00\u4e2a Texture \u5b9e\u4f8b\uff0c\u6211\u4eec\u53ea\u9700\u4f7f\u7528PNG\u683c\u5f0f\uff08\u8fd9\u5c31\u662f Texture \u7c7b\u6240\u671f\u671b\u7684\uff09\u8f6c\u50a8\u56fe\u50cf\u5b57\u8282\u3002 ByteBuffer buf = null; try ( ByteArrayOutputStream out = new ByteArrayOutputStream()) { ImageIO.write(img, IMAGE_FORMAT, out); out.flush(); byte[] data = out.toByteArray(); buf = ByteBuffer.allocateDirect(data.length); buf.put(data, 0, data.length); buf.flip(); } texture = new Texture(buf); } \u4f60\u53ef\u80fd\u6ce8\u610f\u5230\uff0c\u6211\u4eec\u5df2\u7ecf\u7a0d\u5fae\u4fee\u6539\u4e86 Texture \u7c7b\uff0c\u4f7f\u5176\u5177\u6709\u4e00\u4e2a\u63a5\u6536 ByteBuffer \u7684\u6784\u9020\u51fd\u6570\u3002\u5176\u4e2d\u8fd9\u4e2a\u65b0\u7684\u6784\u9020\u51fd\u6570\u4f7f\u7528 stbi_load_from_memory \u52a0\u8f7d\u56fe\u7247\u3002\u73b0\u5728\u6211\u4eec\u53ea\u9700\u66f4\u6539 TextItem \u7c7b\uff0c\u4ee5\u4fbf\u5728\u5176\u6784\u9020\u51fd\u6570\u4e2d\u63a5\u6536 FontTexture \u5b9e\u4f8b\u3002 public TextItem(String text, FontTexture fontTexture) throws Exception { super(); this.text = text; this.fontTexture = fontTexture; setMesh(buildMesh()); } \u53ea\u9700\u8981\u5728\u8bbe\u7f6e\u7247\u6bb5\u5750\u6807\u548c\u7eb9\u7406\u5750\u6807\u65f6\u7a0d\u7a0d\u4fee\u6539 buildMesh \u65b9\u6cd5\uff0c\u4e0b\u8ff0\u4ee3\u7801\u662f\u5176\u4e2d\u4e00\u4e2a\u9876\u70b9\u7684\u793a\u4f8b\uff1a float startx = 0; for(int i=0; i<numChars; i++) { FontTexture.CharInfo charInfo = fontTexture.getCharInfo(characters[i]); // \u6784\u9020\u7531\u4e24\u4e2a\u4e09\u89d2\u5f62\u7ec4\u6210\u7684\u5b57\u7b26\u7247\u6bb5 // \u5de6\u4e0a\u89d2\u9876\u70b9 positions.add(startx); // x positions.add(0.0f); // y positions.add(ZPOS); // z textCoords.add( (float)charInfo.getStartX() / (float)fontTexture.getWidth()); textCoords.add(0.0f); indices.add(i*VERTICES_PER_QUAD); // \u66f4\u591a\u4ee3\u7801... startx += charInfo.getWidth(); } \u4f60\u53ef\u4ee5\u5728\u6e90\u4ee3\u7801\u4e2d\u67e5\u9605\u5176\u4ed6\u66f4\u6539\u3002\u4e0b\u56fe\u662f\u4e00\u4e2a\u5927\u5c0f\u4e3a20\u7684Arial\u5b57\u4f53\u7684\u6e32\u67d3\u6548\u679c\uff1a \u5982\u4f60\u6240\u89c1\u6587\u672c\u6e32\u67d3\u7684\u8d28\u91cf\u5df2\u7ecf\u6709\u4e86\u5f88\u5927\u7684\u63d0\u5347\uff0c\u4f60\u53ef\u4ee5\u7528\u4e0d\u540c\u7684\u5b57\u4f53\u548c\u5927\u5c0f\u6765\u6e32\u67d3\u3002\u8fd9\u4ecd\u7136\u6709\u5f88\u5927\u7684\u6539\u8fdb\u7a7a\u95f4(\u5982\u652f\u6301\u591a\u884c\u6587\u672c\u3001\u7279\u6548\u7b49)\uff0c\u4f46\u8fd9\u5c06\u7559\u7ed9\u5404\u4f4d\u8bfb\u8005\u4f5c\u4e3a\u7ec3\u4e60\u3002 \u4f60\u53ef\u80fd\u8fd8\u6ce8\u610f\u5230\uff0c\u6211\u4eec\u4ecd\u7136\u80fd\u591f\u7f29\u653e\u6587\u672c\uff08\u901a\u8fc7\u7740\u8272\u5668\u4e2d\u7684\u6a21\u578b\u89c2\u5bdf\u77e9\u9635\uff09\u3002\u73b0\u5728\u7684\u6587\u672c\u53ef\u80fd\u4e0d\u9700\u8981\u7f29\u653e\uff0c\u4f46\u5bf9\u5176\u4ed6\u7684HUD\u5143\u7d20\u53ef\u80fd\u4f1a\u6709\u7528\u3002 \u6211\u4eec\u5df2\u7ecf\u786e\u7acb\u4e86\u6240\u6709\u7684\u57fa\u672c\u6570\u636e\u7ed3\u6784\uff0c\u4ee5\u4fbf\u4e3a\u6e38\u620f\u521b\u5efa\u4e00\u4e2aHUD\u3002\u73b0\u5728\uff0c\u53ea\u5269\u4e00\u4e2a\u95ee\u9898\uff0c\u90a3\u5c31\u662f\u521b\u5efa\u6240\u6709\u7684\u5143\u7d20\uff0c\u4f20\u9012\u76f8\u5173\u4fe1\u606f\u7ed9\u7528\u6237\uff0c\u5e76\u7ed9\u4ed6\u4eec\u4e00\u4e2a\u4e13\u4e1a\u7684\u5916\u89c2\u3002 OSX \u5982\u679c\u4f60\u8bd5\u56fe\u8fd0\u884c\u672c\u7ae0\u4e2d\u7684\u793a\u4f8b\uff0c\u4ee5\u53ca\u4e0b\u4e00\u4e2a\u6e32\u67d3\u6587\u672c\u7684\u793a\u4f8b\uff0c\u5219\u53ef\u80fd\u4f1a\u53d1\u73b0\u5e94\u7528\u7a0b\u5e8f\u963b\u585e\uff0c\u5c4f\u5e55\u4e0a\u4e0d\u4f1a\u663e\u793a\u4efb\u4f55\u5185\u5bb9\u3002\u8fd9\u662f\u7531\u4e8eAWT\u548cGLFW\u5728OSX\u4e0b\u76f8\u5904\u5f97\u4e0d\u592a\u597d\uff0c\u4f46\u8fd9\u548cAWT\u6709\u4ec0\u4e48\u5173\u7cfb\u5462\uff1f\u6211\u4eec\u4f7f\u7528\u7684\u662f Font \u7c7b\uff0c\u5b83\u5c5e\u4e8eAWT\uff0c\u5982\u679c\u8981\u5b9e\u4f8b\u5316\u5b83\uff0cAWT\u4e5f\u9700\u8981\u521d\u59cb\u5316\u3002\u5728OSX\u4e2d\uff0cAWT\u8bd5\u56fe\u5728\u4e3b\u7ebf\u7a0b\u8fd0\u884c\uff0c\u4f46GLFW\u4e5f\u9700\u8981\u5728\u4e3b\u7ebf\u7a0b\u8fd0\u884c\uff0c\u8fd9\u5c31\u662f\u9020\u6210\u6b64\u95ee\u9898\u7684\u539f\u56e0\u3002 \u4e3a\u4e86\u80fd\u591f\u4f7f\u7528 Font \u7c7b\uff0cGLFW\u5fc5\u987b\u5728AWT\u4e4b\u524d\u521d\u59cb\u5316\uff0c\u5e76\u4e14\u793a\u4f8b\u9700\u8981\u4ee5Headless\u6a21\u5f0f\u8fd0\u884c\u3002\u4f60\u9700\u8981\u5728\u4efb\u4f55\u4e1c\u897f\u88ab\u521d\u59cb\u5316\u4e4b\u524d\u8bbe\u7f6e\u6b64\u5c5e\u6027\uff1a System.setProperty(\"java.awt.headless\", \"true\"); \u4f60\u4e5f\u8bb8\u4f1a\u6536\u5230\u4e00\u4e2a\u8b66\u544a\uff0c\u4f46\u793a\u4f8b\u6210\u529f\u8fd0\u884c\u4e86\u3002 \u4e00\u4e2a\u66f4\u7b80\u6d01\u7684\u65b9\u6cd5\u662f\u4f7f\u7528 stb \u5e93\u6765\u6e32\u67d3\u6587\u672c\u3002","title":"\u6e38\u620fHUD"},{"location":"12-game-hud/#hudgame-hud","text":"\u5728\u672c\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u4e3a\u6e38\u620f\u521b\u5efa\u4e00\u4e2aHUD\uff08Heads-Up Display\uff0c\u5e73\u89c6\u663e\u793a\u5668\uff09\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5c31\u662f\u4e00\u7ec4\u7528\u4e8e\u5728\u4e09\u7ef4\u573a\u666f\u4e0a\uff0c\u968f\u65f6\u663e\u793a\u76f8\u5173\u4fe1\u606f\u7684\u4e8c\u7ef4\u56fe\u5f62\u548c\u6587\u672c\u3002\u672c\u4f8b\u4e2d\u5c06\u521b\u5efa\u4e00\u4e2a\u7b80\u5355\u7684HUD\uff0c\u8fd9\u53ef\u4e3a\u6211\u4eec\u5c55\u73b0\u4e00\u4e9b\u663e\u793a\u4fe1\u606f\u7684\u57fa\u672c\u6280\u672f\u3002 \u5f53\u4f60\u67e5\u9605\u672c\u7ae0\u7684\u6e90\u4ee3\u7801\u65f6\uff0c\u8fd8\u5c06\u53d1\u73b0\u6211\u4eec\u5bf9\u6e90\u4ee3\u7801\u505a\u4e86\u4e00\u4e9b\u5c0f\u7684\u91cd\u6784\uff0c\u7279\u522b\u662f Renderer \u7c7b\uff0c\u4ee5\u4fbf\u4e3aHUD\u6e32\u67d3\u505a\u597d\u51c6\u5907\u3002","title":"\u6e38\u620fHUD\uff08Game HUD\uff09"},{"location":"12-game-hud/#_1","text":"\u521b\u5efaHUD\u6240\u8981\u505a\u7684\u7b2c\u4e00\u4ef6\u4e8b\u662f\u6e32\u67d3\u6587\u672c\u3002\u4e3a\u4e86\u5b9e\u73b0\u5b83\uff0c\u6211\u4eec\u5c06\u50a8\u5b58\u5b57\u7b26\u7684\u7eb9\u7406\u6620\u5c04\u5230\u4e00\u4e2a\u65b9\u5f62\u4e2d\uff0c\u8be5\u65b9\u5f62\u5c06\u88ab\u5206\u5272\u4e3a\u4e00\u7ec4\u8868\u793a\u6bcf\u4e2a\u5b57\u7b26\u7684\u7247\u6bb5\u3002\u4e4b\u540e\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u8be5\u7eb9\u7406\u5728\u5c4f\u5e55\u4e0a\u7ed8\u5236\u6587\u672c\u3002\u6240\u4ee5\u9996\u5148\u521b\u5efa\u542b\u6709\u6240\u6709\u5b57\u6bcd\u7684\u7eb9\u7406\uff0c\u8fd9\u9879\u5de5\u4f5c\u53ef\u4ee5\u4f7f\u7528\u5f88\u591a\u8f6f\u4ef6\u6765\u505a\uff0c\u4f8b\u5982 CBFG \u3001 F2IBuilder \u7b49\u7b49\u3002\u672c\u4f8b\u4f7f\u7528Codehead\u7684\u4f4d\u56fe\u5b57\u4f53\u751f\u6210\u5668\uff08Codehead\u2019s Bitmap Font Generator\uff0cCBFG\uff09\u3002 CBFG\u5141\u8bb8\u4f60\u914d\u7f6e\u5f88\u591a\u9009\u9879\uff0c\u5982\u7eb9\u7406\u5927\u5c0f\u3001\u5b57\u4f53\u7c7b\u578b\u3001\u8981\u4f7f\u7528\u7684\u6297\u952f\u9f7f\u7b49\u7b49\u3002\u4e0b\u56fe\u662f\u672c\u4f8b\u5c06\u7528\u6765\u751f\u6210\u7eb9\u7406\u6587\u4ef6\u7684\u914d\u7f6e\u3002\u5728\u672c\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u5047\u8bbe\u6587\u672c\u7f16\u7801\u4e3aISO-8859-1\uff0c\u5982\u679c\u4f60\u9700\u8981\u5904\u7406\u5176\u4ed6\u7684\u5b57\u7b26\u96c6\uff0c\u5219\u9700\u8981\u7a0d\u5fae\u4fee\u6539\u4ee3\u7801\u3002 \u5f53\u8bbe\u7f6e\u597dCBFG\u7684\u6240\u6709\u9009\u9879\u540e\uff0c\u53ef\u4ee5\u5c06\u5176\u5bfc\u51fa\u4e3a\u591a\u79cd\u56fe\u7247\u683c\u5f0f\u3002\u73b0\u5728\u6211\u4eec\u5c06\u5176\u5bfc\u51fa\u4e3aBMP\u6587\u4ef6\uff0c\u7136\u540e\u518d\u8f6c\u6362\u4e3aPNG\u6587\u4ef6\uff0c\u4ee5\u4fbf\u5c06\u5176\u4f5c\u4e3a\u7eb9\u7406\u52a0\u8f7d\u3002\u5f53\u8f6c\u6362\u4e3aPNG\u683c\u5f0f\u65f6\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u5c06\u9ed1\u8272\u80cc\u666f\u8bbe\u7f6e\u4e3a\u900f\u660e\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u5c06\u9ed1\u8272\u8bbe\u4e3aAlpha\u503c\u7b49\u4e8e0\uff08\u53ef\u4ee5\u4f7f\u7528GIMP\u8fd9\u6837\u7684\u5de5\u5177\u6765\u5b9e\u73b0\uff09\u3002\u6700\u7ec8\u4f60\u4f1a\u770b\u5230\u7c7b\u4f3c\u4e0b\u56fe\u6240\u793a\u7684\u7ed3\u679c\u3002 \u5982\u4f60\u6240\u89c1\uff0c\u56fe\u50cf\u4e2d\u7684\u6240\u6709\u5b57\u7b26\u90fd\u4ee5\u884c\u548c\u5217\u7684\u5f62\u5f0f\u6392\u5217\u3002\u5728\u672c\u4f8b\u4e2d\uff0c\u56fe\u50cf\u753115\u5217\u548c17\u884c\u5b57\u7b26\u7ec4\u6210\u3002\u901a\u8fc7\u4f7f\u7528\u7279\u5b9a\u5b57\u7b26\u7684\u7f16\u53f7\uff0c\u6211\u4eec\u53ef\u4ee5\u8ba1\u7b97\u5176\u5bf9\u5e94\u50a8\u5b58\u5728\u56fe\u50cf\u4e2d\u7684\u884c\u548c\u5217\u3002\u6240\u5728\u5217\u7684\u8ba1\u7b97\u65b9\u6cd5\u4e3a\uff1a \u5217\u6570 = \u5b57\u7b26\u7f16\u53f7 \\space mod \\space \u5217\u603b\u6570 \uff0c\u5176\u4e2d mod \u662f\u53d6\u4f59\u8fd0\u7b97\u7b26\uff0c\u6240\u5728\u884c\u7684\u8ba1\u7b97\u65b9\u6cd5\u4e3a\uff1a \u6240\u5728\u884c = \u5b57\u7b26\u7f16\u53f7 / \u884c\u603b\u6570 \u3002\u5728\u672c\u4f8b\u4e2d\u6211\u4eec\u5c06\u6574\u6570\u9664\u4ee5\u6574\u6570\uff0c\u4ee5\u4fbf\u5ffd\u7565\u5c0f\u6570\u90e8\u5206\u3002 \u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a TextItem \u7684\u65b0\u7c7b\uff0c\u5b83\u5c06\u50a8\u5b58\u6e32\u67d3\u6587\u672c\u6240\u9700\u7684\u56fe\u5143\u3002\u8fd9\u662f\u4e00\u4e2a\u4e0d\u8003\u8651\u591a\u884c\u6587\u672c\u7684\u7b80\u5316\u5b9e\u73b0\uff0c\u4f46\u662f\u5b83\u80fd\u5728HUD\u4e2d\u663e\u793a\u6587\u672c\u4fe1\u606f\u3002\u4e0b\u5217\u4ee3\u7801\u662f\u8be5\u7c7b\u7684\u58f0\u660e\u4e0e\u6784\u9020\u51fd\u6570\uff1a package org.lwjglb.engine; import java.nio.charset.Charset; import java.util.ArrayList; import java.util.List; import org.lwjglb.engine.graph.Material; import org.lwjglb.engine.graph.Mesh; import org.lwjglb.engine.graph.Texture; public class TextItem extends GameItem { private static final float ZPOS = 0.0f; private static final int VERTICES_PER_QUAD = 4; private String text; private final int numCols; private final int numRows; public TextItem(String text, String fontFileName, int numCols, int numRows) throws Exception { super(); this.text = text; this.numCols = numCols; this.numRows = numRows; Texture texture = new Texture(fontFileName); this.setMesh(buildMesh(texture, numCols, numRows)); } \u8fd9\u4e2a\u7c7b\u7ee7\u627f\u4e86 GameItem \u7c7b\uff0c\u8fd9\u662f\u56e0\u4e3a\u672c\u4f8b\u5e0c\u671b\u6539\u53d8\u5728\u5c4f\u5e55\u4e0a\u6587\u672c\u7684\u4f4d\u7f6e\uff0c\u4e5f\u53ef\u80fd\u9700\u8981\u7f29\u653e\u548c\u65cb\u8f6c\u5b83\u3002\u6784\u9020\u51fd\u6570\u63a5\u6536\u8981\u6e32\u67d3\u7684\u6587\u672c\u548c\u7528\u4e8e\u6e32\u67d3\u7684\u7eb9\u7406\u7684\u6587\u4ef6\u548c\u76f8\u5173\u6570\u636e\uff08\u50a8\u5b58\u56fe\u50cf\u7684\u6587\u4ef6\u53ca\u884c\u5217\u6570\uff09\u3002 \u5728\u6784\u9020\u51fd\u6570\u4e2d\uff0c\u6211\u4eec\u52a0\u8f7d\u7eb9\u7406\u56fe\u50cf\u6587\u4ef6\uff0c\u5e76\u8c03\u7528\u4e00\u4e2a\u65b9\u6cd5\u6765\u521b\u5efa\u4e00\u4e2a Mesh \u5b9e\u4f8b\u4e3a\u6587\u672c\u5efa\u6a21\u3002\u8ba9\u6211\u4eec\u770b\u5230 buildMesh \u65b9\u6cd5\uff1a private Mesh buildMesh(Texture texture, int numCols, int numRows) { byte[] chars = text.getBytes(Charset.forName(\"ISO-8859-1\")); int numChars = chars.length; List<Float> positions = new ArrayList<>(); List<Float> textCoords = new ArrayList<>(); float[] normals = new float[0]; List<Integer> indices = new ArrayList<>(); float tileWidth = (float)texture.getWidth() / (float)numCols; float tileHeight = (float)texture.getHeight() / (float)numRows; \u4ee3\u7801\u521b\u5efa\u4e86\u7528\u4e8e\u50a8\u5b58Mesh\u7684\u4f4d\u7f6e\u3001\u7eb9\u7406\u5750\u6807\u3001\u6cd5\u7ebf\u548c\u7d22\u5f15\u7684\u6570\u636e\u7ed3\u6784\u3002\u73b0\u5728\u6211\u4eec\u4e0d\u4f7f\u7528\u5149\u7167\uff0c\u56e0\u6b64\u6cd5\u7ebf\u6570\u5217\u662f\u7a7a\u7684\u3002\u6211\u4eec\u8981\u505a\u7684\u662f\u6784\u9020\u4e00\u7ec4\u5b57\u7b26\u7247\u6bb5\uff0c\u6bcf\u4e2a\u5b57\u7b26\u7247\u6bb5\u4ee3\u8868\u4e00\u4e2a\u5b57\u7b26\u3002\u6211\u4eec\u8fd8\u9700\u8981\u6839\u636e\u6bcf\u4e2a\u7247\u6bb5\u5bf9\u5e94\u7684\u5b57\u7b26\u6765\u5206\u914d\u5bf9\u5e94\u7684\u7eb9\u7406\u5750\u6807\u3002\u4e0b\u56fe\u5c55\u73b0\u4e86\u6587\u672c\u77e9\u5f62\u548c\u5b57\u7b26\u7247\u6bb5\u7684\u5173\u7cfb\uff1a \u56e0\u6b64\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u5b57\u7b26\uff0c\u6211\u4eec\u9700\u8981\u521b\u5efa\u7531\u4e24\u4e2a\u4e09\u89d2\u5f62\u6784\u6210\u7684\u5b57\u7b26\u7247\u6bb5\uff0c\u8fd9\u4e24\u4e2a\u4e09\u89d2\u5f62\u53ef\u4ee5\u7528\u56db\u4e2a\u9876\u70b9\uff08V1\u3001V2\u3001V3\u548cV4\uff09\u5b9a\u4e49\u3002\u7b2c\u4e00\u4e2a\u4e09\u89d2\u5f62\uff08\u5de6\u4e0b\u89d2\u7684\u90a3\u4e2a\uff09\u7684\u7d22\u5f15\u4e3a(0, 1, 2)\uff0c\u800c\u7b2c\u4e8c\u4e2a\u4e09\u89d2\u5f62\uff08\u53f3\u4e0a\u89d2\u7684\u90a3\u4e2a\uff09\u7684\u7d22\u5f15\u4e3a(3, 0, 2)\u3002\u7eb9\u7406\u5750\u6807\u662f\u57fa\u4e8e\u4e0e\u7eb9\u7406\u56fe\u50cf\u4e2d\u6bcf\u4e2a\u5b57\u7b26\u76f8\u5173\u7684\u884c\u5217\u8ba1\u7b97\u7684\uff0c\u7eb9\u7406\u5750\u6807\u7684\u8303\u56f4\u4e3a[0, 1]\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u5c06\u5f53\u524d\u884c\u6216\u5f53\u524d\u5217\u9664\u4ee5\u603b\u884c\u6570\u548c\u603b\u5217\u6570\u5c31\u53ef\u4ee5\u83b7\u5f97V1\u7684\u5750\u6807\u3002\u5bf9\u4e8e\u5176\u4ed6\u9876\u70b9\uff0c\u6211\u4eec\u53ea\u9700\u8981\u9002\u5f53\u52a0\u4e0a\u884c\u5bbd\u6216\u5217\u5bbd\u5c31\u53ef\u4ee5\u5f97\u5230\u5bf9\u5e94\u5750\u6807\u3002 \u4e0b\u8ff0\u7684\u5faa\u73af\u8bed\u53e5\u5757\u521b\u5efa\u4e86\u4e0e\u6e32\u67d3\u6587\u672c\u77e9\u5f62\u76f8\u5173\u7684\u6240\u6709\u9876\u70b9\u3001\u7eb9\u7406\u5750\u6807\u548c\u7d22\u5f15\u3002 for(int i=0; i<numChars; i++) { byte currChar = chars[i]; int col = currChar % numCols; int row = currChar / numCols; // \u6784\u9020\u7531\u4e24\u4e2a\u4e09\u89d2\u5f62\u7ec4\u6210\u7684\u5b57\u7b26\u7247\u6bb5 // \u5de6\u4e0a\u89d2\u7684\u9876\u70b9 positions.add((float)i*tileWidth); // x positions.add(0.0f); //y positions.add(ZPOS); //z textCoords.add((float)col / (float)numCols ); textCoords.add((float)row / (float)numRows ); indices.add(i*VERTICES_PER_QUAD); // \u5de6\u4e0b\u89d2\u7684\u9876\u70b9 positions.add((float)i*tileWidth); // x positions.add(tileHeight); //y positions.add(ZPOS); //z textCoords.add((float)col / (float)numCols ); textCoords.add((float)(row + 1) / (float)numRows ); indices.add(i*VERTICES_PER_QUAD + 1); // \u53f3\u4e0b\u89d2\u7684\u9876\u70b9 positions.add((float)i*tileWidth + tileWidth); // x positions.add(tileHeight); //y positions.add(ZPOS); //z textCoords.add((float)(col + 1)/ (float)numCols ); textCoords.add((float)(row + 1) / (float)numRows ); indices.add(i*VERTICES_PER_QUAD + 2); // \u53f3\u4e0a\u89d2\u7684\u9876\u70b9 positions.add((float)i*tileWidth + tileWidth); // x positions.add(0.0f); //y positions.add(ZPOS); //z textCoords.add((float)(col + 1)/ (float)numCols ); textCoords.add((float)row / (float)numRows ); indices.add(i*VERTICES_PER_QUAD + 3); // \u6dfb\u52a0\u5de6\u4e0a\u89d2\u548c\u53f3\u4e0b\u89d2\u9876\u70b9\u7684\u7d22\u5f15 indices.add(i*VERTICES_PER_QUAD); indices.add(i*VERTICES_PER_QUAD + 2); } \u4e0a\u8ff0\u4ee3\u7801\u4e2d\u9700\u8981\u6ce8\u610f\u7684\u4e00\u4e9b\u4e8b\u9879\uff1a \u6211\u4eec\u5c06\u4f7f\u7528\u5c4f\u5e55\u5750\u6807\u6765\u8868\u793a\u9876\u70b9\uff08\u8bb0\u4f4f\u5c4f\u5e55\u5750\u6807\u7cfb\u7684\u539f\u70b9\u4f4d\u4e8e\u5c4f\u5e55\u5de6\u4e0a\u89d2\uff09\u3002\u4e09\u89d2\u5f62\u4e0a\u9876\u70b9\u7684Y\u5750\u6807\u5c0f\u4e8e\u4e09\u89d2\u5f62\u4e0b\u9876\u70b9\u7684Y\u5750\u6807\u3002 \u6211\u4eec\u4e0d\u7f29\u653e\u56fe\u5f62\uff0c\u56e0\u6b64\u6bcf\u4e2a\u5b57\u7b26\u7247\u6bb5\u7684X\u8ddd\u79bb\u5c31\u7b49\u4e8e\u5b57\u7b26\u5bbd\u5ea6\uff0c\u4e09\u89d2\u5f62\u7684\u9ad8\u5ea6\u5c31\u662f\u6bcf\u4e2a\u5b57\u7b26\u7684\u9ad8\u5ea6\u3002\u8fd9\u662f\u56e0\u4e3a\u672c\u4f8b\u5e0c\u671b\u5c3d\u53ef\u80fd\u5730\u4f7f\u6e32\u67d3\u6587\u672c\u4e0e\u539f\u59cb\u7eb9\u7406\u76f8\u4f3c\uff08\u4e0d\u7ba1\u600e\u6837\uff0c\u6211\u4eec\u53ef\u4ee5\u7a0d\u540e\u7f29\u653e\u5b83\uff0c\u56e0\u4e3a TextItem \u7c7b\u7ee7\u627f\u4e86 GameItem \u7c7b\uff09\u3002 Z\u5750\u6807\u4e3a\u56fa\u5b9a\u503c\uff0c\u56e0\u4e3a\u5b83\u4e0e\u7ed8\u5236\u8be5\u56fe\u50cf\u65e0\u5173\u3002 \u4e0b\u56fe\u5c55\u793a\u4e86\u4e00\u4e9b\u9876\u70b9\u7684\u5750\u6807\uff1a \u4e3a\u4ec0\u4e48\u6211\u4eec\u4f7f\u7528\u5c4f\u5e55\u5750\u6807\u7cfb\uff1f\u9996\u5148\uff0c\u56e0\u4e3a\u672c\u4f8b\u5c06\u5728HUD\u4e2d\u6e32\u67d32D\u5bf9\u8c61\uff0c\u5e76\u4e14\u901a\u5e38\u8fd9\u6837\u4f7f\u7528\u5b83\u4eec\u66f4\u65b9\u4fbf\u3002\u5176\u6b21\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u6b63\u4ea4\u6295\u5f71\uff08Orthographic Projection\uff09\u7ed8\u5236\u5b83\u4eec\uff0c\u7a0d\u540e\u518d\u89e3\u91ca\u4ec0\u4e48\u662f\u6b63\u4ea4\u6295\u5f71\u3002 TextItem \u7c7b\u6700\u540e\u8fd8\u9700\u6dfb\u52a0\u4e00\u4e9b\u65b9\u6cd5\uff0c\u4ee5\u83b7\u53d6\u6587\u672c\u5e76\u5728\u8fd0\u884c\u65f6\u66f4\u6539\u6587\u672c\u3002\u6bcf\u5f53\u6587\u672c\u88ab\u66f4\u6539\u65f6\uff0c\u9700\u8981\u6e05\u7406\u6b64\u524d\u7684VAO\uff08\u50a8\u5b58\u5728 Mesh \u5b9e\u4f8b\u4e2d\uff09\u5e76\u521b\u5efa\u4e00\u4e2a\u65b0\u7684VAO\u3002\u6211\u4eec\u4e0d\u9700\u8981\u5220\u9664\u7eb9\u7406\uff0c\u6240\u4ee5\u5728 Mesh \u7c7b\u4e2d\u6dfb\u52a0\u4e86\u4e00\u4e2a\u65b0\u65b9\u6cd5\u6765\u5220\u9664\u8fd9\u4e9b\u6570\u636e\u3002 public String getText() { return text; } public void setText(String text) { this.text = text; Texture texture = this.getMesh().getMaterial().getTexture(); this.getMesh().deleteBuffers(); this.setMesh(buildMesh(texture, numCols, numRows)); } \u65e2\u7136\u6211\u4eec\u5df2\u7ecf\u5efa\u7acb\u4e86\u6e32\u67d3\u6587\u672c\u6240\u9700\u8981\u7684\u57fa\u7840\u7ed3\u6784\uff0c\u63a5\u4e0b\u6765\u8be5\u600e\u4e48\u505a\u5462\uff1f\u9996\u5148\u5982\u6b64\u524d\u7ae0\u8282\u6240\u8ff0\uff0c\u6e32\u67d3\u4e09\u7ef4\u573a\u666f\uff0c\u7136\u540e\u5728\u5176\u4e0a\u6e32\u67d3\u4e8c\u7ef4\u7684HUD\u3002\u4e3a\u4e86\u6e32\u67d3HUD\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u6b63\u4ea4\u6295\u5f71\uff08\u4e5f\u79f0\u4e3a\u6b63\u4ea4\u6295\u5f71\uff09\u3002\u6b63\u4ea4\u6295\u5f71\u662f\u4e09\u7ef4\u7269\u4f53\u7684\u4e00\u79cd\u4e8c\u7ef4\u8868\u793a\u65b9\u5f0f\uff0c\u4f60\u53ef\u80fd\u5df2\u7ecf\u5728\u4e09\u7ef4\u6a21\u578b\u7684\u84dd\u56fe\u4e2d\u770b\u5230\u4e86\u4e00\u4e9b\u4f8b\u5b50\uff0c\u5b83\u4eec\u7528\u6765\u8868\u793a\u67d0\u4e9b\u7269\u4f53\u4ece\u9876\u90e8\u6216\u67d0\u4e9b\u4fa7\u9762\u770b\u5230\u7684\u6837\u5b50\u3002\u4e0b\u56fe\u662f\u5706\u67f1\u4f53\u4ece\u9876\u90e8\u548c\u524d\u9762\u7684\u6b63\u4ea4\u6295\u5f71\uff1a \u8fd9\u79cd\u6295\u5f71\u5bf9\u4e8e\u7ed8\u5236\u4e8c\u7ef4\u7269\u4f53\u662f\u975e\u5e38\u65b9\u4fbf\u7684\uff0c\u56e0\u4e3a\u5b83\u201c\u5ffd\u7565\u201d\u4e86Z\u5750\u6807\u7684\u503c\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5ffd\u7565\u4e86\u5230\u5c4f\u5e55\u7684\u8ddd\u79bb\u3002\u4f7f\u7528\u8fd9\u79cd\u6295\u5f71\uff0c\u7269\u4f53\u5927\u5c0f\u4e0d\u4f1a\u968f\u7740\u8ddd\u79bb\u7684\u589e\u5927\u800c\u51cf\u5c0f\uff08\u4e0d\u540c\u4e8e\u900f\u89c6\u6295\u5f71\uff09\u3002\u4e3a\u4e86\u4f7f\u7528\u6b63\u4ea4\u6295\u5f71\u6295\u5f71\u7269\u4f53\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528\u53e6\u4e00\u4e2a\u77e9\u9635\uff0c\u5373\u6b63\u4ea4\u6295\u5f71\u77e9\u9635\uff0c\u6b63\u4ea4\u6295\u5f71\u77e9\u9635\u7684\u516c\u5f0f\u5982\u4e0b\u6240\u793a\uff1a \u8fd9\u4e2a\u77e9\u9635\u8fd8\u77eb\u6b63\u4e86\u5931\u771f\uff0c\u56e0\u4e3a\u6211\u4eec\u7684\u7a97\u53e3\u5e76\u4e0d\u603b\u662f\u5b8c\u7f8e\u7684\u6b63\u65b9\u5f62\uff0c\u800c\u662f\u4e00\u4e2a\u77e9\u5f62\u3002 right \u548c bottom \u662f\u5c4f\u5e55\u5927\u5c0f\uff0c\u800c left \u548c top \u662f\u539f\u70b9\u5750\u6807\u3002\u6b63\u4ea4\u6295\u5f71\u77e9\u9635\u7528\u4e8e\u5c06\u5c4f\u5e55\u5750\u6807\u8f6c\u6362\u4e3a\u4e09\u7ef4\u7a7a\u95f4\u5750\u6807\u3002\u4e0b\u56fe\u5c55\u73b0\u4e86\u8be5\u6295\u5f71\u7684\u6620\u5c04\u8fc7\u7a0b\uff1a \u8be5\u77e9\u9635\u5c06\u5141\u8bb8\u6211\u4eec\u4f7f\u7528\u5c4f\u5e55\u5750\u6807\u3002 \u6211\u4eec\u73b0\u5728\u53ef\u4ee5\u7ee7\u7eed\u5b9e\u73b0HUD\u4e86\u3002\u63a5\u4e0b\u6765\u8981\u505a\u7684\u662f\u521b\u5efa\u53e6\u4e00\u7ec4\u7740\u8272\u5668\uff0c\u4e00\u4e2a\u9876\u70b9\u7740\u8272\u5668\u548c\u4e00\u4e2a\u7247\u5143\u7740\u8272\u5668\uff0c\u6765\u7ed8\u5236HUD\u3002\u9876\u70b9\u7740\u8272\u5668\u5f88\u7b80\u5355\uff1a #version 330 layout (location=0) in vec3 position; layout (location=1) in vec2 texCoord; layout (location=2) in vec3 vertexNormal; out vec2 outTexCoord; uniform mat4 projModelMatrix; void main() { gl_Position = projModelMatrix * vec4(position, 1.0); outTexCoord = texCoord; } \u5b83\u4ec5\u63a5\u6536\u9876\u70b9\u5750\u6807\u3001\u7eb9\u7406\u5750\u6807\u3001\u7d22\u5f15\u548c\u6cd5\u7ebf\uff0c\u5e76\u5c06\u4f7f\u7528\u77e9\u9635\u5c06\u5b83\u4eec\u8f6c\u6362\u4e3a\u4e09\u7ef4\u7a7a\u95f4\u5750\u6807\uff0c\u8be5\u77e9\u9635\u662f\u6b63\u4ea4\u6295\u5f71\u77e9\u9635\u4e0e\u6a21\u578b\u77e9\u9635\u7684\u4e58\u79ef\uff0c\u5373 projModelMatrix = \u6b63\u4ea4\u6295\u5f71\u77e9\u9635 \\cdot \u6a21\u578b\u77e9\u9635 \u3002\u7531\u4e8e\u6211\u4eec\u6ca1\u6709\u5728\u4e16\u754c\u5750\u6807\u7cfb\u4e2d\u5bf9\u5750\u6807\u505a\u4efb\u4f55\u5904\u7406\uff0c\u6240\u4ee5\u5728Java\u4ee3\u7801\u4e2d\u5c06\u4e24\u4e2a\u77e9\u9635\u76f8\u4e58\u6bd4\u5728\u7740\u8272\u5668\u4e2d\u76f8\u4e58\u66f4\u9ad8\u6548\u3002\u8fd9\u6837\uff0c\u6211\u4eec\u53ea\u9700\u4e3a\u6bcf\u4e2a\u9879\u76ee\u505a\u4e00\u6b21\u77e9\u9635\u4e58\u6cd5\u8fd0\u7b97\uff0c\u800c\u4e0d\u662f\u4e3a\u6bcf\u4e2a\u9876\u70b9\u505a\u4e00\u6b21\u3002\u8fd8\u5e94\u8bb0\u4f4f\u9876\u70b9\u5e94\u8be5\u7528\u5c4f\u5e55\u5750\u6807\u8868\u793a\u3002 \u7247\u5143\u7740\u8272\u5668\u4e5f\u5f88\u7b80\u5355\uff1a #version 330 in vec2 outTexCoord; in vec3 mvPos; out vec4 fragColor; uniform sampler2D texture_sampler; uniform vec4 colour; void main() { fragColor = colour * texture(texture_sampler, outTexCoord); } \u5b83\u53ea\u662f\u5c06\u57fa\u672c\u989c\u8272\u4e0e\u7eb9\u7406\u989c\u8272\u76f8\u4e58\uff0c\u8fd9\u6837\u53ef\u4ee5\u6539\u53d8\u6e32\u67d3\u6587\u672c\u7684\u989c\u8272\uff0c\u800c\u4e0d\u9700\u8981\u521b\u5efa\u591a\u4e2a\u7eb9\u7406\u6587\u4ef6\u3002\u73b0\u5728\u65e2\u7136\u5df2\u7ecf\u521b\u5efa\u4e86\u4e00\u7ec4\u65b0\u7684\u7740\u8272\u5668\uff0c\u5c31\u53ef\u4ee5\u5728 Renderer \u7c7b\u4e2d\u4f7f\u7528\u5b83\u4eec\u3002\u4f46\u5728\u6b64\u4e4b\u524d\uff0c\u6211\u4eec\u8981\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a IHud \u7684\u63a5\u53e3\uff0c\u8be5\u63a5\u53e3\u50a8\u5b58\u6240\u6709\u8981\u5728HUD\u4e0a\u663e\u793a\u7684\u5143\u7d20\uff0c\u5e76\u63d0\u4f9b\u4e00\u4e2a\u9ed8\u8ba4\u7684 cleanup \u65b9\u6cd5\u3002 package org.lwjglb.engine; public interface IHud { GameItem[] getGameItems(); default void cleanup() { GameItem[] gameItems = getGameItems(); for (GameItem gameItem : gameItems) { gameItem.getMesh().cleanUp(); } } } \u901a\u8fc7\u8be5\u63a5\u53e3\uff0c\u4e0d\u540c\u7684\u6e38\u620f\u53ef\u4ee5\u5b9a\u4e49\u81ea\u5b9a\u4e49\u7684HUD\uff0c\u800c\u4e0d\u9700\u8981\u6539\u53d8\u6e32\u67d3\u673a\u5236\u3002\u73b0\u5728\u56de\u5230 Renderer \u7c7b\uff0c\u987a\u4fbf\u4e00\u63d0\uff0c\u5b83\u5df2\u7ecf\u88ab\u79fb\u52a8\u5230 engine.graph \u5305\u4e0b\uff0c\u56e0\u4e3a\u73b0\u5728\u5b83\u7684\u901a\u7528\u6027\u8db3\u4ee5\u4e0d\u4f9d\u8d56\u4efb\u4f55\u6e38\u620f\u7684\u5177\u4f53\u5b9e\u73b0\u4e86\u3002\u5728 Renderer \u7c7b\u4e2d\uff0c\u6211\u4eec\u6dfb\u52a0\u4e86\u4e00\u4e2a\u65b0\u7684\u65b9\u6cd5\u6765\u521b\u5efa\u3001\u8fde\u63a5\u548c\u521d\u59cb\u5316\u4e00\u4e2a\u65b0\u7684 ShaderProgram \uff0c\u4ee5\u4fbf\u4f7f\u7528\u4e0a\u8ff0\u6240\u793a\u7684\u7740\u8272\u5668\u3002 private void setupHudShader() throws Exception { hudShaderProgram = new ShaderProgram(); hudShaderProgram.createVertexShader(Utils.loadResource(\"/shaders/hud_vertex.vs\")); hudShaderProgram.createFragmentShader(Utils.loadResource(\"/shaders/hud_fragment.fs\")); hudShaderProgram.link(); // \u4e3a\u6b63\u4ea4\u6295\u5f71\u6a21\u578b\u77e9\u9635\u548c\u989c\u8272\u521b\u5efaUniform hudShaderProgram.createUniform(\"projModelMatrix\"); hudShaderProgram.createUniform(\"colour\"); } render \u65b9\u6cd5\u9996\u5148\u4f1a\u8c03\u7528 renderScene \u65b9\u6cd5\uff0c\u5176\u4e2d\u5305\u542b\u4e86\u6b64\u524d\u7ae0\u8282\u6240\u8ff0\u7684\u6e32\u67d3\u4e09\u7ef4\u573a\u666f\u7684\u4ee3\u7801\uff0c\u7136\u540e\u8c03\u7528\u4e00\u4e2a\u540d\u4e3a renderHud \u7684\u65b0\u65b9\u6cd5\uff0c\u7528\u4e8e\u6e32\u67d3HUD\u3002 public void render(Window window, Camera camera, GameItem[] gameItems, SceneLight sceneLight, IHud hud) { clear(); if ( window.isResized() ) { glViewport(0, 0, window.getWidth(), window.getHeight()); window.setResized(false); } renderScene(window, camera, gameItems, sceneLight); renderHud(window, hud); } renderHud \u65b9\u6cd5\u5b9e\u73b0\u5982\u4e0b\uff1a private void renderHud(Window window, IHud hud) { hudShaderProgram.bind(); Matrix4f ortho = transformation.getOrthoProjectionMatrix(0, window.getWidth(), window.getHeight(), 0); for (GameItem gameItem : hud.getGameItems()) { Mesh mesh = gameItem.getMesh(); // HUD\u5143\u7d20\u7684\u6b63\u4ea4\u6295\u5f71\u77e9\u9635\u4e0e\u6a21\u578b\u77e9\u9635\u76f8\u4e58 Matrix4f projModelMatrix = transformation.getOrtoProjModelMatrix(gameItem, ortho); hudShaderProgram.setUniform(\"projModelMatrix\", projModelMatrix); hudShaderProgram.setUniform(\"colour\", gameItem.getMesh().getMaterial().getAmbientColour()); // \u6e32\u67d3\u6b64HUD\u9879\u76ee\u7684\u7f51\u683c mesh.render(); } hudShaderProgram.unbind(); } \u4e0a\u8ff0\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u904d\u5386\u4e86HUD\u7684\u6240\u6709\u5143\u7d20\uff0c\u5e76\u5c06\u4e0e\u6bcf\u4e2a\u5143\u7d20\u5173\u8054\u7684\u6a21\u578b\u77e9\u9635\u548c\u6b63\u4ea4\u6295\u5f71\u77e9\u9635\u76f8\u4e58\u3002\u6b63\u4ea4\u6295\u5f71\u77e9\u9635\u5728\u6bcf\u6b21 render \u8c03\u7528\u65f6\u88ab\u5237\u65b0\uff08\u56e0\u4e3a\u5c4f\u5e55\u5927\u5c0f\u53ef\u4ee5\u88ab\u6539\u53d8\uff09\uff0c\u5e76\u4e14\u901a\u8fc7\u5982\u4e0b\u65b9\u5f0f\u8ba1\u7b97\uff1a public final Matrix4f getOrthoProjectionMatrix(float left, float right, float bottom, float top) { orthoMatrix.identity(); orthoMatrix.setOrtho2D(left, right, bottom, top); return orthoMatrix; } \u6211\u4eec\u5c06\u5728 game \u5305\u4e2d\u521b\u5efa\u4e00\u4e2a Hud \u7c7b\uff0c\u5b83\u5b9e\u73b0\u4e86 IHud \u63a5\u53e3\uff0c\u5e76\u5728\u6784\u9020\u51fd\u6570\u63a5\u6536\u4e00\u4e2a\u6587\u672c\uff0c\u7528\u4e8e\u5728\u5176\u4e2d\u521b\u5efa TextItem \u5b9e\u4f8b\u3002 package org.lwjglb.game; import org.joml.Vector4f; import org.lwjglb.engine.GameItem; import org.lwjglb.engine.IHud; import org.lwjglb.engine.TextItem; public class Hud implements IHud { private static final int FONT_COLS = 15; private static final int FONT_ROWS = 17; private static final String FONT_TEXTURE = \"textures/font_texture.png\"; private final GameItem[] gameItems; private final TextItem statusTextItem; public Hud(String statusText) throws Exception { this.statusTextItem = new TextItem(statusText, FONT_TEXTURE, FONT_COLS, FONT_ROWS); this.statusTextItem.getMesh().getMaterial().setColour(new Vector4f(1, 1, 1, 1)); gameItems = new GameItem[]{statusTextItem}; } public void setStatusText(String statusText) { this.statusTextItem.setText(statusText); } @Override public GameItem[] getGameItems() { return gameItems; } public void updateSize(Window window) { this.statusTextItem.setPosition(10f, window.getHeight() - 50f, 0); } } \u5728 DummyGame \u7c7b\u4e2d\u6211\u4eec\u521b\u5efa\u8be5\u7c7b\u7684\u5b9e\u4f8b\uff0c\u5e76\u7528\u9ed8\u8ba4\u6587\u672c\u521d\u59cb\u5316\u5b83\uff0c\u6700\u540e\u5f97\u5230\u5982\u4e0b\u6240\u793a\u7684\u7ed3\u679c\uff1a \u5728 Texture \u7c7b\u4e2d\u53ef\u4ee5\u901a\u8fc7\u4fee\u6539\u7eb9\u7406\u7684\u8fc7\u6ee4\u65b9\u5f0f\u6765\u63d0\u5347\u6587\u672c\u7684\u53ef\u8bfb\u6027\uff08\u5982\u679c\u9700\u8981\u6587\u672c\u7f29\u653e\u7684\u8bdd\u9700\u8981\u6ce8\u610f\u6b64\u4e8b\uff09\u3002 glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST); \u4f46\u662f\u672c\u4f8b\u8fd8\u6ca1\u6709\u505a\u5b8c\u3002\u5982\u679c\u7528\u7f29\u653e\u4f7f\u6587\u672c\u4e0e\u7acb\u65b9\u4f53\u91cd\u53e0\u65f6\uff0c\u5c31\u4f1a\u770b\u5230\u5982\u4e0b\u6548\u679c\uff1a \u7ed8\u5236\u7684\u6587\u672c\u80cc\u666f\u4e0d\u900f\u660e\u3002\u4e3a\u4e86\u5b9e\u73b0\u80cc\u666f\u900f\u660e\uff0c\u6211\u4eec\u5fc5\u987b\u660e\u786e\u542f\u7528\u6df7\u5408\uff08Blend\uff09\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u4f7f\u7528Alpha\u5206\u91cf\u3002\u672c\u4f8b\u5c06\u5728 Window \u7c7b\u4e2d\u7528\u4e0b\u8ff0\u4ee3\u7801\u8bbe\u7f6e\u5176\u521d\u59cb\u5316\u53c2\u6570\uff1a // \u652f\u6301\u900f\u660e glEnable(GL_BLEND); glBlendFunc(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA); \u73b0\u5728\u4f60\u53ef\u4ee5\u770b\u5230\u6587\u672c\u4ee5\u900f\u660e\u80cc\u666f\u7ed8\u5236\u4e86\u3002","title":"\u6587\u672c\u6e32\u67d3"},{"location":"12-game-hud/#hud","text":"\u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u6e32\u67d3\u4e86\u4e00\u4e9b\u6587\u672c\uff0c\u4f46\u8fd8\u53ef\u4ee5\u5411HUD\u6dfb\u52a0\u66f4\u591a\u7684\u5143\u7d20\u3002\u672c\u4f8b\u5c06\u6dfb\u52a0\u4e00\u4e2a\u6839\u636e\u6444\u50cf\u673a\u671d\u5411\u65cb\u8f6c\u7684\u6307\u9488\u3002\u73b0\u5728\u6211\u4eec\u5c06\u5411 Hud \u7c7b\u6dfb\u52a0\u4e00\u4e2a\u65b0\u7684 GameItem \uff0c\u5b83\u5c06\u5305\u542b\u4e00\u4e2a\u6307\u9488\u7684\u6a21\u578b\u7f51\u683c\u3002 \u6307\u9488\u7684\u6a21\u578b\u662f.obj\u6587\u4ef6\uff0c\u4f46\u5b83\u4e0d\u4f1a\u5173\u8054\u4efb\u4f55\u7eb9\u7406\uff0c\u76f8\u53cd\uff0c\u5b83\u53ea\u6709\u4e00\u4e2a\u57fa\u7840\u8272\u3002\u6240\u4ee5\u9700\u8981\u4fee\u6539HUD\u7684\u7247\u5143\u7740\u8272\u5668\uff0c\u4ee5\u786e\u8ba4\u662f\u5426\u4f7f\u7528\u7eb9\u7406\u3002\u672c\u4f8b\u5c06\u901a\u8fc7\u8bbe\u7f6e\u4e00\u4e2a\u540d\u4e3a hasTexture \u7684\u65b0Uniform\u6765\u5b9e\u73b0\u5b83\u3002 #version 330 in vec2 outTexCoord; in vec3 mvPos; out vec4 fragColor; uniform sampler2D texture_sampler; uniform vec4 colour; uniform int hasTexture; void main() { if ( hasTexture == 1 ) { fragColor = colour * texture(texture_sampler, outTexCoord); } else { fragColor = colour; } } \u8981\u5c06\u6307\u9488\u6dfb\u52a0\u5230HUD\u4e0a\uff0c\u53ea\u9700\u5728 Hud \u7c7b\u4e2d\u521b\u5efa\u4e00\u4e2a\u65b0\u7684 GameItem \u5b9e\u4f8b\u3002\u5b83\u52a0\u8f7d\u6307\u9488\u6a21\u578b\uff0c\u5e76\u5c06\u5176\u6dfb\u52a0\u5230\u9879\u76ee\u5217\u8868\u4e2d\u3002\u5728\u672c\u4f8b\u4e2d\u9700\u8981\u653e\u5927\u6307\u9488\uff0c\u56e0\u4e3a\u5b83\u5728\u5c4f\u5e55\u5750\u6807\u7cfb\u4e2d\u6e32\u67d3\uff0c\u6240\u4ee5\u901a\u5e38\u4f60\u9700\u8981\u653e\u5927\u5b83\u3002 // \u521b\u5efa\u6307\u9488 Mesh mesh = OBJLoader.loadMesh(\"/models/compass.obj\"); Material material = new Material(); material.setAmbientColour(new Vector4f(1, 0, 0, 1)); mesh.setMaterial(material); compassItem = new GameItem(mesh); compassItem.setScale(40.0f); // \u65cb\u8f6c\u4ee5\u5c06\u5176\u53d8\u6362\u5230\u5c4f\u5e55\u5750\u6807\u7cfb compassItem.setRotation(0f, 0f, 180f); // \u521b\u5efa\u4e00\u4e2a\u6570\u7ec4\uff0c\u7528\u4e8e\u50a8\u5b58HUD\u9879\u76ee gameItems = new GameItem[]{statusTextItem, compassItem}; \u8fd8\u8981\u6ce8\u610f\uff0c\u4e3a\u4e86\u4f7f\u6307\u9488\u6307\u5411\u4e0a\u65b9\uff0c\u6211\u4eec\u9700\u8981\u5c06\u5176\u65cb\u8f6c180\u00b0\uff0c\u56e0\u4e3a\u6a21\u578b\u901a\u5e38\u503e\u5411\u4e8e\u4f7f\u7528OpenGL\u7a7a\u95f4\u5750\u6807\u7cfb\u3002\u5982\u679c\u6211\u4eec\u8981\u4f7f\u7528\u5c4f\u5e55\u5750\u6807\uff0c\u5b83\u4f1a\u6307\u5411\u4e0b\u65b9\u3002 Hud \u7c7b\u8fd8\u63d0\u4f9b\u4e00\u4e2a\u65b9\u6cd5\u6765\u66f4\u65b0\u6307\u9488\u7684\u6307\u5411\uff0c\u8be5\u65b9\u6cd5\u4e5f\u5fc5\u987b\u8003\u8651\u5230\u8fd9\u4e00\u70b9\u3002 public void rotateCompass(float angle) { this.compassItem.setRotation(0, 0, 180 + angle); } \u5728 DummyGame \u7c7b\u4e2d\uff0c\u6bcf\u5f53\u6444\u50cf\u673a\u79fb\u52a8\u65f6\uff0c\u6211\u4eec\u9700\u8981\u7528Y\u89d2\u65cb\u8f6c\u66f4\u65b0\u89d2\u5ea6\u3002 // \u6839\u636e\u9f20\u6807\u66f4\u65b0\u6444\u50cf\u673a if (mouseInput.isRightButtonPressed()) { Vector2f rotVec = mouseInput.getDisplVec(); camera.moveRotation(rotVec.x * MOUSE_SENSITIVITY, rotVec.y * MOUSE_SENSITIVITY, 0); // \u66f4\u65b0HUD\u6307\u9488 hud.rotateCompass(camera.getRotation().y); } \u6211\u4eec\u4f1a\u770b\u5230\u8fd9\u6837\u7684\u7ed3\u679c\uff08\u8bb0\u4f4f\u8fd9\u53ea\u662f\u4e2a\u793a\u4f8b\uff0c\u5728\u5b9e\u9645\u7684\u6e38\u620f\u4e2d\uff0c\u4f60\u53ef\u80fd\u60f3\u4f7f\u7528\u4e00\u4e9b\u7eb9\u7406\u8bbe\u7f6e\u6307\u9488\u7684\u5916\u89c2\uff09\u3002","title":"\u5b8c\u5584HUD"},{"location":"12-game-hud/#_2","text":"\u5728\u56de\u987e\u5176\u4ed6\u4e3b\u9898\u4e4b\u524d\uff0c\u8ba9\u6211\u4eec\u518d\u8c08\u8c08\u4e4b\u524d\u4ecb\u7ecd\u7684\u6587\u672c\u6e32\u67d3\u65b9\u6cd5\u3002\u8be5\u65b9\u6848\u975e\u5e38\u7b80\u6d01\u5730\u4ecb\u7ecd\u4e86\u6e32\u67d3HUD\u6240\u6d89\u53ca\u7684\u6982\u5ff5\uff0c\u4f46\u5b83\u5b58\u5728\u4e00\u4e9b\u95ee\u9898\uff1a \u5b83\u4e0d\u652f\u6301\u975e\u62c9\u4e01\u5b57\u7b26\u3002 \u5982\u679c\u4f60\u60f3\u4f7f\u7528\u591a\u79cd\u5b57\u4f53\uff0c\u5219\u9700\u8981\u4e3a\u6bcf\u79cd\u5b57\u4f53\u521b\u5efa\u5355\u72ec\u7684\u7eb9\u7406\u6587\u4ef6\u3002\u6b64\u5916\uff0c\u6539\u53d8\u6587\u672c\u5927\u5c0f\u7684\u552f\u4e00\u65b9\u6cd5\u662f\u7f29\u653e\uff0c\u8fd9\u4f1a\u5bfc\u81f4\u6e32\u67d3\u6587\u672c\u7684\u8d28\u91cf\u8f83\u5dee\uff0c\u6216\u8005\u9700\u8981\u521b\u5efa\u989d\u5916\u7684\u7eb9\u7406\u6587\u4ef6\u3002 \u6700\u91cd\u8981\u7684\u662f\uff0c\u5927\u591a\u6570\u5b57\u4f53\u4e2d\u7684\u5b57\u7b26\u4e4b\u95f4\u7684\u5927\u5c0f\u5e76\u4e0d\u540c\uff0c\u800c\u6211\u4eec\u5c06\u5b57\u4f53\u7eb9\u7406\u5206\u5272\u6210\u540c\u6837\u5927\u5c0f\u7684\u5143\u7d20\u3002\u6211\u4eec\u4f7f\u7528\u4e86 Monospaced \u98ce\u683c\uff08\u5373\u6240\u6709\u5b57\u7b26\u5177\u6709\u76f8\u540c\u7684\u5bbd\u5ea6\uff09\u7684\u201cConsolas\u201d\u5b57\u4f53\uff0c\u4f46\u5982\u679c\u4f7f\u7528\u975eMonospaced\u7684\u5b57\u4f53\uff0c\u5c31\u4f1a\u770b\u5230\u5b57\u7b26\u4e4b\u95f4\u607c\u4eba\u7684\u7a7a\u767d\u3002 \u6211\u4eec\u9700\u8981\u66f4\u6539\u65b9\u6cd5\uff0c\u5e76\u63d0\u4f9b\u4e00\u79cd\u66f4\u7075\u6d3b\u7684\u6e32\u67d3\u6587\u672c\u65b9\u5f0f\u3002\u5982\u679c\u4f60\u4ed4\u7ec6\u60f3\u60f3\uff0c\u6574\u4f53\u60f3\u6cd5\u662f\u53ef\u884c\u7684\uff0c\u4e5f\u5c31\u662f\u901a\u8fc7\u5355\u72ec\u6e32\u67d3\u6bcf\u4e2a\u5b57\u7b26\u7684\u77e9\u5f62\u6765\u6e32\u67d3\u6587\u672c\u3002\u8fd9\u91cc\u7684\u95ee\u9898\u5c31\u662f\u8be5\u5982\u4f55\u751f\u6210\u7eb9\u7406\uff0c\u6211\u4eec\u9700\u8981\u901a\u8fc7\u7cfb\u7edf\u4e2d\u53ef\u7528\u7684\u5b57\u4f53\u52a8\u6001\u5730\u751f\u6210\u8fd9\u4e9b\u7eb9\u7406\u3002 \u8fd9\u5c31\u9700\u8981 java.awt.Font \u51fa\u624b\u4e86\uff0c\u6211\u4eec\u5c06\u901a\u8fc7\u6307\u5b9a\u5b57\u4f53\u7cfb\u5217\u548c\u5927\u5c0f\u52a8\u6001\u5730\u7ed8\u5236\u6bcf\u4e00\u4e2a\u5b57\u7b26\u6765\u751f\u6210\u7eb9\u7406\u3002\u8be5\u7eb9\u7406\u7684\u4f7f\u7528\u65b9\u5f0f\u4e0e\u4e4b\u524d\u63cf\u8ff0\u7684\u76f8\u540c\uff0c\u4f46\u5b83\u5c06\u5b8c\u7f8e\u5730\u89e3\u51b3\u4e0a\u8ff0\u6240\u6709\u95ee\u9898\u3002\u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a FontTexture \u7684\u65b0\u7c7b\uff0c\u8be5\u7c7b\u5c06\u63a5\u6536 Font \u5b9e\u4f8b\u548c\u5b57\u7b26\u96c6\u540d\u79f0\uff0c\u5e76\u5c06\u52a8\u6001\u5730\u521b\u5efa\u5305\u542b\u6240\u6709\u53ef\u7528\u5b57\u7b26\u7684\u7eb9\u7406\u3002\u6784\u9020\u51fd\u6570\u5982\u4e0b\u6240\u793a\uff1a public FontTexture(Font font, String charSetName) throws Exception { this.font = font; this.charSetName = charSetName; charMap = new HashMap<>(); buildTexture(); } \u9996\u5148\u8981\u5904\u7406\u975e\u62c9\u4e01\u5b57\u7b26\u95ee\u9898\u3002\u7ed9\u5b9a\u5b57\u7b26\u96c6\u548c\u5b57\u4f53\uff0c\u6211\u4eec\u5c06\u6784\u5efa\u4e00\u4e2a\u5305\u542b\u6240\u6709\u53ef\u6e32\u67d3\u5b57\u7b26\u7684 String \u3002 private String getAllAvailableChars(String charsetName) { CharsetEncoder ce = Charset.forName(charsetName).newEncoder(); StringBuilder result = new StringBuilder(); for (char c = 0; c < Character.MAX_VALUE; c++) { if (ce.canEncode(c)) { result.append(c); } } return result.toString(); } \u8ba9\u6211\u4eec\u6765\u770b\u770b\u5b9e\u9645\u521b\u5efa\u7eb9\u7406\u7684 buildTexture \u65b9\u6cd5\uff1a private void buildTexture() throws Exception { // \u4f7f\u7528FontMetrics\u83b7\u53d6\u6bcf\u4e2a\u5b57\u7b26\u7684\u4fe1\u606f BufferedImage img = new BufferedImage(1, 1, BufferedImage.TYPE_INT_ARGB); Graphics2D g2D = img.createGraphics(); g2D.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON); g2D.setFont(font); FontMetrics fontMetrics = g2D.getFontMetrics(); String allChars = getAllAvailableChars(charSetName); this.width = 0; this.height = fontMetrics.getHeight(); for (char c : allChars.toCharArray()) { // \u83b7\u53d6\u6bcf\u4e2a\u5b57\u7b26\u7684\u5927\u5c0f\uff0c\u5e76\u66f4\u65b0\u56fe\u50cf\u7684\u5927\u5c0f CharInfo charInfo = new CharInfo(width, fontMetrics.charWidth(c)); charMap.put(c, charInfo); width += charInfo.getWidth() + CHAR_PADDING; } g2D.dispose(); \u6211\u4eec\u9996\u5148\u901a\u8fc7\u521b\u5efa\u4e34\u65f6\u56fe\u50cf\u6765\u83b7\u5f97 FontMetrics \uff0c\u7136\u540e\u904d\u5386\u5305\u542b\u6240\u6709\u53ef\u7528\u5b57\u7b26\u7684 String \uff0c\u5e76\u5728 FontMetrics \u7684\u5e2e\u52a9\u4e0b\u83b7\u53d6\u6bcf\u4e2a\u5b57\u7b26\u7684\u5bbd\u5ea6\u3002\u6211\u4eec\u5c06\u8fd9\u4e9b\u4fe1\u606f\u50a8\u5b58\u5728\u4e00\u4e2a charMap \u6620\u5c04\u4e0a\uff0c\u4ee5\u5b57\u7b26\u4f5c\u4e3a\u6620\u5c04\u7684\u952e\u3002\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u786e\u5b9a\u4e86\u7eb9\u7406\u56fe\u50cf\u7684\u5927\u5c0f\uff08\u56fe\u50cf\u7684\u9ad8\u5ea6\u7b49\u4e8e\u6240\u6709\u5b57\u7b26\u7684\u6700\u5927\u9ad8\u5ea6\uff0c\u800c\u5bbd\u5ea6\u7b49\u4e8e\u6240\u6709\u5b57\u7b26\u7684\u5bbd\u5ea6\u603b\u548c\uff09\u3002 ChatSet \u662f\u4e00\u4e2a\u5185\u90e8\u7c7b\uff0c\u5b83\u50a8\u5b58\u6709\u5173\u5b57\u7b26\u7684\u4fe1\u606f\uff08\u5b83\u7684\u5bbd\u5ea6\u548c\u5b83\u5728\u7eb9\u7406\u56fe\u50cf\u4e2d\u7684\u8d77\u70b9\uff09\u3002 public static class CharInfo { private final int startX; private final int width; public CharInfo(int startX, int width) { this.startX = startX; this.width = width; } public int getStartX() { return startX; } public int getWidth() { return width; } } \u7136\u540e\uff0c\u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a\u50a8\u5b58\u6240\u6709\u53ef\u7528\u5b57\u7b26\u7684\u56fe\u50cf\uff0c\u53ea\u9700\u5728 BufferedImage \u4e0a\u7ed8\u5236\u5b57\u7b26\u4e32\u5373\u53ef\u3002 // \u521b\u5efa\u4e0e\u5b57\u7b26\u96c6\u76f8\u5173\u7684\u56fe\u50cf img = new BufferedImage(width, height, BufferedImage.TYPE_INT_ARGB); g2D = img.createGraphics(); g2D.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON); g2D.setFont(font); fontMetrics = g2D.getFontMetrics(); g2D.setColor(Color.WHITE); int startX = 0; for (char c : allChars.toCharArray()) { CharInfo charInfo = charMap.get(c); g2D.drawString(\"\" + c, startX, fontMetrics.getAscent()); startX += charInfo.getWidth() + CHAR_PADDING; } g2D.dispose(); \u6211\u4eec\u6b63\u5728\u751f\u6210\u4e00\u4e2a\u5305\u542b\u6240\u6709\u5b57\u7b26\u7684\u5355\u884c\u56fe\u50cf\uff08\u53ef\u80fd\u4e0d\u6ee1\u8db3\u7eb9\u7406\u5927\u5c0f\u5e94\u8be5\u4e3a\u4e8c\u7684\u5e42\u7684\u524d\u63d0\uff0c\u4f46\u662f\u5b83\u4ecd\u9002\u7528\u4e8e\u5927\u591a\u6570\u73b0\u4ee3\u663e\u5361\u3002\u5728\u4efb\u4f55\u60c5\u51b5\u4e0b\uff0c\u4f60\u90fd\u53ef\u4ee5\u901a\u8fc7\u589e\u52a0\u989d\u5916\u7684\u7a7a\u767d\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff09\u3002\u4f60\u4e5f\u53ef\u4ee5\u67e5\u770b\u751f\u6210\u7684\u56fe\u50cf\uff0c\u5728\u4e0a\u8ff0\u4ee3\u7801\u4e4b\u540e\uff0c\u6dfb\u52a0\u4e0b\u8ff0\u7684\u4e00\u884c\u4ee3\u7801\uff1a ImageIO.write(img, IMAGE_FORMAT, new java.io.File(\"Temp.png\")); \u56fe\u50cf\u5c06\u88ab\u5199\u5165\u4e00\u4e2a\u4e34\u65f6\u6587\u4ef6\u3002\u8be5\u6587\u4ef6\u5c06\u5305\u542b\u4e00\u4e2a\u5728\u767d\u8272\u80cc\u666f\u4e0b\uff0c\u4f7f\u7528\u6297\u952f\u9f7f\u7ed8\u5236\u6240\u6709\u53ef\u7528\u5b57\u7b26\u7684\u957f\u6761\u3002 \u6700\u540e\u53ea\u9700\u8981\u4ece\u8be5\u56fe\u50cf\u521b\u5efa\u4e00\u4e2a Texture \u5b9e\u4f8b\uff0c\u6211\u4eec\u53ea\u9700\u4f7f\u7528PNG\u683c\u5f0f\uff08\u8fd9\u5c31\u662f Texture \u7c7b\u6240\u671f\u671b\u7684\uff09\u8f6c\u50a8\u56fe\u50cf\u5b57\u8282\u3002 ByteBuffer buf = null; try ( ByteArrayOutputStream out = new ByteArrayOutputStream()) { ImageIO.write(img, IMAGE_FORMAT, out); out.flush(); byte[] data = out.toByteArray(); buf = ByteBuffer.allocateDirect(data.length); buf.put(data, 0, data.length); buf.flip(); } texture = new Texture(buf); } \u4f60\u53ef\u80fd\u6ce8\u610f\u5230\uff0c\u6211\u4eec\u5df2\u7ecf\u7a0d\u5fae\u4fee\u6539\u4e86 Texture \u7c7b\uff0c\u4f7f\u5176\u5177\u6709\u4e00\u4e2a\u63a5\u6536 ByteBuffer \u7684\u6784\u9020\u51fd\u6570\u3002\u5176\u4e2d\u8fd9\u4e2a\u65b0\u7684\u6784\u9020\u51fd\u6570\u4f7f\u7528 stbi_load_from_memory \u52a0\u8f7d\u56fe\u7247\u3002\u73b0\u5728\u6211\u4eec\u53ea\u9700\u66f4\u6539 TextItem \u7c7b\uff0c\u4ee5\u4fbf\u5728\u5176\u6784\u9020\u51fd\u6570\u4e2d\u63a5\u6536 FontTexture \u5b9e\u4f8b\u3002 public TextItem(String text, FontTexture fontTexture) throws Exception { super(); this.text = text; this.fontTexture = fontTexture; setMesh(buildMesh()); } \u53ea\u9700\u8981\u5728\u8bbe\u7f6e\u7247\u6bb5\u5750\u6807\u548c\u7eb9\u7406\u5750\u6807\u65f6\u7a0d\u7a0d\u4fee\u6539 buildMesh \u65b9\u6cd5\uff0c\u4e0b\u8ff0\u4ee3\u7801\u662f\u5176\u4e2d\u4e00\u4e2a\u9876\u70b9\u7684\u793a\u4f8b\uff1a float startx = 0; for(int i=0; i<numChars; i++) { FontTexture.CharInfo charInfo = fontTexture.getCharInfo(characters[i]); // \u6784\u9020\u7531\u4e24\u4e2a\u4e09\u89d2\u5f62\u7ec4\u6210\u7684\u5b57\u7b26\u7247\u6bb5 // \u5de6\u4e0a\u89d2\u9876\u70b9 positions.add(startx); // x positions.add(0.0f); // y positions.add(ZPOS); // z textCoords.add( (float)charInfo.getStartX() / (float)fontTexture.getWidth()); textCoords.add(0.0f); indices.add(i*VERTICES_PER_QUAD); // \u66f4\u591a\u4ee3\u7801... startx += charInfo.getWidth(); } \u4f60\u53ef\u4ee5\u5728\u6e90\u4ee3\u7801\u4e2d\u67e5\u9605\u5176\u4ed6\u66f4\u6539\u3002\u4e0b\u56fe\u662f\u4e00\u4e2a\u5927\u5c0f\u4e3a20\u7684Arial\u5b57\u4f53\u7684\u6e32\u67d3\u6548\u679c\uff1a \u5982\u4f60\u6240\u89c1\u6587\u672c\u6e32\u67d3\u7684\u8d28\u91cf\u5df2\u7ecf\u6709\u4e86\u5f88\u5927\u7684\u63d0\u5347\uff0c\u4f60\u53ef\u4ee5\u7528\u4e0d\u540c\u7684\u5b57\u4f53\u548c\u5927\u5c0f\u6765\u6e32\u67d3\u3002\u8fd9\u4ecd\u7136\u6709\u5f88\u5927\u7684\u6539\u8fdb\u7a7a\u95f4(\u5982\u652f\u6301\u591a\u884c\u6587\u672c\u3001\u7279\u6548\u7b49)\uff0c\u4f46\u8fd9\u5c06\u7559\u7ed9\u5404\u4f4d\u8bfb\u8005\u4f5c\u4e3a\u7ec3\u4e60\u3002 \u4f60\u53ef\u80fd\u8fd8\u6ce8\u610f\u5230\uff0c\u6211\u4eec\u4ecd\u7136\u80fd\u591f\u7f29\u653e\u6587\u672c\uff08\u901a\u8fc7\u7740\u8272\u5668\u4e2d\u7684\u6a21\u578b\u89c2\u5bdf\u77e9\u9635\uff09\u3002\u73b0\u5728\u7684\u6587\u672c\u53ef\u80fd\u4e0d\u9700\u8981\u7f29\u653e\uff0c\u4f46\u5bf9\u5176\u4ed6\u7684HUD\u5143\u7d20\u53ef\u80fd\u4f1a\u6709\u7528\u3002 \u6211\u4eec\u5df2\u7ecf\u786e\u7acb\u4e86\u6240\u6709\u7684\u57fa\u672c\u6570\u636e\u7ed3\u6784\uff0c\u4ee5\u4fbf\u4e3a\u6e38\u620f\u521b\u5efa\u4e00\u4e2aHUD\u3002\u73b0\u5728\uff0c\u53ea\u5269\u4e00\u4e2a\u95ee\u9898\uff0c\u90a3\u5c31\u662f\u521b\u5efa\u6240\u6709\u7684\u5143\u7d20\uff0c\u4f20\u9012\u76f8\u5173\u4fe1\u606f\u7ed9\u7528\u6237\uff0c\u5e76\u7ed9\u4ed6\u4eec\u4e00\u4e2a\u4e13\u4e1a\u7684\u5916\u89c2\u3002","title":"\u518d\u8c08\u6587\u672c\u6e32\u67d3"},{"location":"12-game-hud/#osx","text":"\u5982\u679c\u4f60\u8bd5\u56fe\u8fd0\u884c\u672c\u7ae0\u4e2d\u7684\u793a\u4f8b\uff0c\u4ee5\u53ca\u4e0b\u4e00\u4e2a\u6e32\u67d3\u6587\u672c\u7684\u793a\u4f8b\uff0c\u5219\u53ef\u80fd\u4f1a\u53d1\u73b0\u5e94\u7528\u7a0b\u5e8f\u963b\u585e\uff0c\u5c4f\u5e55\u4e0a\u4e0d\u4f1a\u663e\u793a\u4efb\u4f55\u5185\u5bb9\u3002\u8fd9\u662f\u7531\u4e8eAWT\u548cGLFW\u5728OSX\u4e0b\u76f8\u5904\u5f97\u4e0d\u592a\u597d\uff0c\u4f46\u8fd9\u548cAWT\u6709\u4ec0\u4e48\u5173\u7cfb\u5462\uff1f\u6211\u4eec\u4f7f\u7528\u7684\u662f Font \u7c7b\uff0c\u5b83\u5c5e\u4e8eAWT\uff0c\u5982\u679c\u8981\u5b9e\u4f8b\u5316\u5b83\uff0cAWT\u4e5f\u9700\u8981\u521d\u59cb\u5316\u3002\u5728OSX\u4e2d\uff0cAWT\u8bd5\u56fe\u5728\u4e3b\u7ebf\u7a0b\u8fd0\u884c\uff0c\u4f46GLFW\u4e5f\u9700\u8981\u5728\u4e3b\u7ebf\u7a0b\u8fd0\u884c\uff0c\u8fd9\u5c31\u662f\u9020\u6210\u6b64\u95ee\u9898\u7684\u539f\u56e0\u3002 \u4e3a\u4e86\u80fd\u591f\u4f7f\u7528 Font \u7c7b\uff0cGLFW\u5fc5\u987b\u5728AWT\u4e4b\u524d\u521d\u59cb\u5316\uff0c\u5e76\u4e14\u793a\u4f8b\u9700\u8981\u4ee5Headless\u6a21\u5f0f\u8fd0\u884c\u3002\u4f60\u9700\u8981\u5728\u4efb\u4f55\u4e1c\u897f\u88ab\u521d\u59cb\u5316\u4e4b\u524d\u8bbe\u7f6e\u6b64\u5c5e\u6027\uff1a System.setProperty(\"java.awt.headless\", \"true\"); \u4f60\u4e5f\u8bb8\u4f1a\u6536\u5230\u4e00\u4e2a\u8b66\u544a\uff0c\u4f46\u793a\u4f8b\u6210\u529f\u8fd0\u884c\u4e86\u3002 \u4e00\u4e2a\u66f4\u7b80\u6d01\u7684\u65b9\u6cd5\u662f\u4f7f\u7528 stb \u5e93\u6765\u6e32\u67d3\u6587\u672c\u3002","title":"OSX"},{"location":"13-sky-box-and-some-optimizations/","text":"\u5929\u7a7a\u76d2\u4e0e\u4e00\u4e9b\u4f18\u5316 (Sky Box and some optimizations) \u5929\u7a7a\u76d2 \u5929\u7a7a\u76d2\uff08Sky Box\uff09\u5c06\u7528\u4e8e\u4e3a\u4e09\u7ef4\u4e16\u754c\u8bbe\u7f6e\u80cc\u666f\uff0c\u7ed9\u4eba\u4e00\u79cd\u4e16\u754c\u5e7f\u9614\u7684\u9519\u89c9\u3002\u8fd9\u4e2a\u80cc\u666f\u5c06\u6444\u50cf\u673a\u6240\u5904\u4f4d\u7f6e\u5305\u8d77\u6765\uff0c\u7f69\u4f4f\u6574\u4e2a\u7a7a\u95f4\u3002\u6211\u4eec\u8981\u505a\u7684\u662f\u6784\u9020\u4e00\u4e2a\u6e32\u67d3\u5728\u4e09\u7ef4\u573a\u666f\u5468\u56f4\u7684\u7acb\u65b9\u4f53\uff0c\u5373\u6444\u50cf\u673a\u7684\u4f4d\u7f6e\u5c06\u4f4d\u4e8e\u7acb\u65b9\u4f53\u7684\u4e2d\u5fc3\u3002\u8be5\u7acb\u65b9\u4f53\u7684\u9762\u5c06\u5305\u7740\u4e00\u5c42\u7eb9\u7406\uff0c\u7eb9\u7406\u4e0a\u6709\u5c71\u3001\u84dd\u5929\u548c\u4e91\u5f69\uff0c\u5b83\u5c06\u4ee5\u4e00\u79cd\u56fe\u50cf\u770b\u8d77\u6765\u50cf\u662f\u4e00\u4e2a\u8fde\u7eed\u7684\u98ce\u666f\u7684\u65b9\u5f0f\u8fdb\u884c\u6620\u5c04\u3002 \u4e0b\u56fe\u5c55\u73b0\u4e86\u5929\u7a7a\u76d2\u7684\u6982\u5ff5\u3002 \u521b\u5efa\u5929\u7a7a\u76d2\u7684\u8fc7\u7a0b\u53ef\u6982\u62ec\u4e3a\u4ee5\u4e0b\u51e0\u6b65\uff1a \u521b\u5efa\u4e00\u4e2a\u5927\u7acb\u65b9\u4f53\u3002 \u5bf9\u5b83\u5e94\u7528\u7eb9\u7406\uff0c\u4ea7\u751f\u4e00\u79cd\u770b\u5230\u6ca1\u6709\u8fb9\u7f18\u7684\u573a\u666f\u7684\u9519\u89c9\u3002 \u6e32\u67d3\u7acb\u65b9\u4f53\uff0c\u5b83\u7684\u539f\u70b9\u4f4d\u4e8e\u6444\u50cf\u673a\u6240\u5904\u7684\u4f4d\u7f6e\uff0c\u5b83\u7684\u9762\u8ddd\u79bb\u539f\u70b9\u5f88\u8fdc\u3002 \u8ba9\u6211\u4eec\u5148\u4ece\u7eb9\u7406\u5f00\u59cb\u3002\u4f60\u4f1a\u53d1\u73b0\u4e92\u8054\u7f51\u4e0a\u6709\u5f88\u591a\u9884\u5148\u751f\u6210\u7684\u7eb9\u7406\u53ef\u4f9b\u4f7f\u7528\uff0c\u672c\u7ae0\u793a\u4f8b\u4e2d\u4f7f\u7528\u7684\u7eb9\u7406\u4ece\u6b64\u5904\u4e0b\u8f7d\uff1a http://www.custommapmakers.org/skyboxes.php \u3002\u672c\u7ae0\u4e2d\u5177\u4f53\u4f7f\u7528\u7684\u7eb9\u7406\u662f\uff1a http://www.custommapmakers.org/skyboxes/zips/ely_hills.zip \uff0c\u4f5c\u8005\u662fColin Lowndes\u3002 \u8be5\u7f51\u7ad9\u7684\u7eb9\u7406\u90fd\u662f\u7531\u5355\u72ec\u7684TGA\u6587\u4ef6\u7ec4\u6210\uff0c\u6bcf\u4e2a\u6587\u4ef6\u90fd\u662f\u7acb\u65b9\u4f53\u7684\u4e00\u9762\u3002\u6211\u4eec\u7684\u7eb9\u7406\u52a0\u8f7d\u5668\u5e0c\u671b\u6587\u4ef6\u683c\u5f0f\u4e3aPNG\uff0c\u6240\u4ee5\u9700\u8981\u5c06\u6bcf\u4e00\u9762\u7684\u56fe\u50cf\u7ec4\u5408\u6210\u4e00\u4e2aPNG\u56fe\u50cf\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5176\u4ed6\u65b9\u6cd5\uff0c\u4f8b\u5982\u7acb\u65b9\u4f53\u6620\u5c04\uff08Cube Mapping\uff09\uff0c\u4f7f\u5176\u81ea\u52a8\u5e94\u7528\u7eb9\u7406\u3002\u4f46\u4e3a\u4e86\u4f7f\u672c\u7ae0\u5c3d\u53ef\u80fd\u7b80\u6d01\u6613\u61c2\uff0c\u4f60\u5fc5\u987b\u624b\u52a8\u628a\u5b83\u4eec\u6392\u5217\u4e3a\u4e00\u5f20\u56fe\u7247\uff0c\u6700\u7ec8\u56fe\u50cf\u5982\u4e0b\u6240\u793a\uff1a \u63a5\u4e0b\u6765\u9700\u8981\u521b\u5efa\u4e00\u4e2aOBJ\u6587\u4ef6\uff0c\u5176\u4e2d\u542b\u6709\u4e00\u4e2a\u7acb\u65b9\u4f53\uff0c\u6b63\u786e\u5730\u8bbe\u7f6e\u6bcf\u4e00\u9762\u7684\u7eb9\u7406\u5750\u6807\u3002\u4e0b\u56fe\u5c55\u73b0\u4e86\u7eb9\u7406\u4e0e\u7acb\u65b9\u4f53\u5404\u9762\u7684\u5173\u7cfb\uff08\u4f60\u53ef\u4ee5\u5728\u672c\u4e66\u6e90\u4ee3\u7801\u4e2d\u627e\u5230\u672c\u7ae0\u4f7f\u7528\u7684OBJ\u6587\u4ef6\uff09\uff1a \u5f53\u76f8\u5173\u8d44\u6e90\u51c6\u5907\u5c31\u7eea\uff0c\u5c31\u53ef\u4ee5\u5f00\u59cb\u7f16\u5199\u4ee3\u7801\u4e86\u3002\u9996\u5148\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a SkyBox \u7684\u65b0\u7c7b\uff0c\u5b83\u7684\u6784\u9020\u51fd\u6570\u63a5\u6536OBJ\u6a21\u578b\u8def\u5f84\u548c\u5929\u7a7a\u76d2\u7eb9\u7406\u6587\u4ef6\u8def\u5f84\u3002\u5982\u540c\u6b64\u524d\u4e00\u7ae0\u7684HUD\uff0c\u8fd9\u4e2a\u7c7b\u4e5f\u7ee7\u627f GameItem \u7c7b\u3002\u4e3a\u4ec0\u4e48\u5b83\u8981\u7ee7\u627f GameItem \u7c7b\uff1f\u9996\u5148\uff0c\u4e3a\u4e86\u65b9\u4fbf\u6211\u4eec\u91cd\u7528\u5927\u90e8\u5206\u5904\u7406\u7f51\u683c\u548c\u7eb9\u7406\u7684\u4ee3\u7801\uff1b\u7b2c\u4e8c\uff0c\u56e0\u4e3a\u5929\u7a7a\u76d2\u4e0d\u4f1a\u79fb\u52a8\uff0c\u6211\u4eec\u53ea\u60f3\u5e94\u7528\u65cb\u8f6c\u548c\u7f29\u653e\u3002\u8fd9\u6837\u60f3\u60f3 SkyBox \u786e\u5b9e\u662f\u4e00\u4e2a GameItem \u3002 SkyBox \u7c7b\u7684\u5b9e\u73b0\u5982\u4e0b\uff1a package org.lwjglb.engine; import org.lwjglb.engine.graph.Material; import org.lwjglb.engine.graph.Mesh; import org.lwjglb.engine.graph.OBJLoader; import org.lwjglb.engine.graph.Texture; public class SkyBox extends GameItem { public SkyBox(String objModel, String textureFile) throws Exception { super(); Mesh skyBoxMesh = OBJLoader.loadMesh(objModel); Texture skyBoxtexture = new Texture(textureFile); skyBoxMesh.setMaterial(new Material(skyBoxtexture, 0.0f)); setMesh(skyBoxMesh); setPosition(0, 0, 0); } } \u5982\u679c\u4f60\u67e5\u9605\u672c\u7ae0\u7684\u6e90\u4ee3\u7801\uff0c\u4f60\u4f1a\u53d1\u73b0\u6211\u4eec\u505a\u4e86\u4e00\u4e9b\u91cd\u6784\u3002\u6211\u4eec\u521b\u5efa\u4e86\u4e00\u4e2a\u540d\u4e3a Scene \u7684\u7c7b\uff0c\u5b83\u5c06\u6574\u7406\u4e0e\u4e09\u7ef4\u4e16\u754c\u76f8\u5173\u7684\u6240\u6709\u6570\u636e\u3002 Scene \u7c7b\u7684\u5b9a\u4e49\u548c\u5c5e\u6027\u5982\u4e0b\u6240\u793a\uff0c\u5176\u4e2d\u5305\u542b SkyBox \u7c7b\u7684\u5b9e\u4f8b\uff1a package org.lwjglb.engine; public class Scene { private GameItem[] gameItems; private SkyBox skyBox; private SceneLight sceneLight; public GameItem[] getGameItems() { return gameItems; } // \u66f4\u591a\u4ee3\u7801... \u63a5\u4e0b\u6765\u662f\u4e3a\u5929\u7a7a\u76d2\u521b\u5efa\u53e6\u4e00\u7ec4\u9876\u70b9\u548c\u7247\u5143\u7740\u8272\u5668\uff0c\u4f46\u4e3a\u4ec0\u4e48\u4e0d\u91cd\u7528\u5df2\u6709\u7684\u573a\u666f\u7740\u8272\u5668\u5462\uff1f\u5b9e\u9645\u4e0a\uff0c\u6211\u4eec\u6240\u9700\u7684\u7740\u8272\u5668\u662f\u539f\u6709\u7740\u8272\u5668\u7684\u7b80\u5316\u7248\uff0c\u4e0d\u9700\u8981\u8ba9\u5149\u7167\u5f71\u54cd\u5929\u7a7a\u76d2\uff08\u66f4\u51c6\u786e\u7684\u8bf4\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u70b9\u5149\u6e90\uff0c\u805a\u5149\u6e90\u548c\u5e73\u884c\u5149\uff09\u3002\u5929\u7a7a\u76d2\u7684\u9876\u70b9\u7740\u8272\u5668\u5982\u4e0b\u6240\u793a\uff1a #version 330 layout (location=0) in vec3 position; layout (location=1) in vec2 texCoord; layout (location=2) in vec3 vertexNormal; out vec2 outTexCoord; uniform mat4 modelViewMatrix; uniform mat4 projectionMatrix; void main() { gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0); outTexCoord = texCoord; } \u53ef\u4ee5\u770b\u5230\u6211\u4eec\u4ecd\u4f7f\u7528\u6a21\u578b\u89c2\u5bdf\u77e9\u9635\u3002\u5982\u4e0a\u6240\u8ff0\uff0c\u6211\u4eec\u5c06\u7f29\u653e\u5929\u7a7a\u76d2\uff0c\u6240\u4ee5\u9700\u8981\u53d8\u6362\u77e9\u9635\u3002\u4f60\u53ef\u80fd\u4f1a\u53d1\u73b0\u5230\u4e00\u4e9b\u5176\u4ed6\u5b9e\u73b0\uff0c\u5728\u521d\u59cb\u5316\u65f6\u5c31\u653e\u5927\u4e86\u7acb\u65b9\u4f53\u6a21\u578b\u7684\u5927\u5c0f\uff0c\u5e76\u4e14\u4e0d\u9700\u8981\u5c06\u6a21\u578b\u77e9\u9635\u548c\u89c2\u5bdf\u77e9\u9635\u76f8\u4e58\u3002\u4f46\u6211\u4eec\u9009\u62e9\u524d\u4e00\u79cd\u65b9\u6cd5\uff0c\u56e0\u4e3a\u5b83\u66f4\u7075\u6d3b\uff0c\u5b83\u5141\u8bb8\u5728\u8fd0\u884c\u65f6\u6539\u53d8\u5929\u7a7a\u76d2\u7684\u5927\u5c0f\u3002\u4f46\u5982\u679c\u4f60\u60f3\uff0c\u4f60\u5c31\u53ef\u4ee5\u8f7b\u677e\u6539\u6362\u5230\u53e6\u4e00\u79cd\u65b9\u6cd5\u3002 \u7247\u5143\u7740\u8272\u5668\u4e5f\u975e\u5e38\u7b80\u5355\uff1a #version 330 in vec2 outTexCoord; in vec3 mvPos; out vec4 fragColor; uniform sampler2D texture_sampler; uniform vec3 ambientLight; void main() { fragColor = vec4(ambientLight, 1) * texture(texture_sampler, outTexCoord); } \u5982\u4f60\u6240\u89c1\uff0c\u6211\u4eec\u4e3a\u7740\u8272\u5668\u6dfb\u52a0\u4e86\u4e00\u4e2a\u73af\u5883\u5149\uff0c\u8be5Uniform\u7684\u76ee\u7684\u662f\u4fee\u6539\u5929\u7a7a\u76d2\u7684\u989c\u8272\u4ee5\u6a21\u62df\u663c\u591c\uff08\u5982\u679c\u4e0d\u8fd9\u6837\u505a\uff0c\u5728\u4e16\u754c\u7684\u5176\u4ed6\u5730\u65b9\u90fd\u662f\u9ed1\u6697\u7684\u65f6\u5019\uff0c\u5929\u7a7a\u76d2\u770b\u8d77\u6765\u5c31\u50cf\u662f\u5728\u4e2d\u5348\uff09\u3002 \u5728 Renderer \u7c7b\u4e2d\uff0c\u6211\u4eec\u521a\u521a\u6dfb\u52a0\u4e86\u65b0\u7684\u65b9\u6cd5\u6765\u4f7f\u7528\u8fd9\u4e9b\u7740\u8272\u5668\u5e76\u8bbe\u7f6eUniform\uff08\u8fd9\u4e0d\u662f\u4ec0\u4e48\u65b0\u7684\u6982\u5ff5\uff09\u3002 private void setupSkyBoxShader() throws Exception { skyBoxShaderProgram = new ShaderProgram(); skyBoxShaderProgram.createVertexShader(Utils.loadResource(\"/shaders/sb_vertex.vs\")); skyBoxShaderProgram.createFragmentShader(Utils.loadResource(\"/shaders/sb_fragment.fs\")); skyBoxShaderProgram.link(); skyBoxShaderProgram.createUniform(\"projectionMatrix\"); skyBoxShaderProgram.createUniform(\"modelViewMatrix\"); skyBoxShaderProgram.createUniform(\"texture_sampler\"); skyBoxShaderProgram.createUniform(\"ambientLight\"); } \u5f53\u7136\uff0c\u6211\u4eec\u9700\u8981\u5728\u5168\u5c40\u6e32\u67d3\u4e2d\u4e3a\u6e32\u67d3\u5929\u7a7a\u76d2\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u6e32\u67d3\u65b9\u6cd5\u3002 private void renderSkyBox(Window window, Camera camera, Scene scene) { skyBoxShaderProgram.bind(); skyBoxShaderProgram.setUniform(\"texture_sampler\", 0); // \u66f4\u65b0\u6295\u5f71\u77e9\u9635 Matrix4f projectionMatrix = transformation.getProjectionMatrix(FOV, window.getWidth(), window.getHeight(), Z_NEAR, Z_FAR); skyBoxShaderProgram.setUniform(\"projectionMatrix\", projectionMatrix); SkyBox skyBox = scene.getSkyBox(); Matrix4f viewMatrix = transformation.getViewMatrix(camera); viewMatrix.m30(0); viewMatrix.m31(0); viewMatrix.m32(0); Matrix4f modelViewMatrix = transformation.getModelViewMatrix(skyBox, viewMatrix); skyBoxShaderProgram.setUniform(\"modelViewMatrix\", modelViewMatrix); skyBoxShaderProgram.setUniform(\"ambientLight\", scene.getSceneLight().getAmbientLight()); scene.getSkyBox().getMesh().render(); skyBoxShaderProgram.unbind(); } \u4e0a\u8ff0\u65b9\u6cd5\u4e0e\u5176\u4ed6\u6e32\u67d3\u65b9\u6cd5\u975e\u5e38\u76f8\u4f3c\uff0c\u4f46\u6709\u4e00\u4e2a\u4e0d\u540c\u4e4b\u5904\u9700\u8981\u89e3\u91ca\u3002\u5982\u4f60\u6240\u89c1\uff0c\u6211\u4eec\u50cf\u5e73\u5e38\u4e00\u6837\u4f20\u9012\u6295\u5f71\u77e9\u9635\u548c\u6a21\u578b\u89c2\u5bdf\u77e9\u9635\u3002\u4f46\u5f53\u53d6\u5f97\u89c2\u5bdf\u77e9\u9635\u65f6\uff0c\u6211\u4eec\u5c06\u5176\u4e00\u4e9b\u6570\u503c\u8bbe\u7f6e\u4e3a0\u3002\u4e3a\u4ec0\u4e48\u8981\u8fd9\u4e48\u505a\uff1f\u5176\u4e2d\u7684\u539f\u56e0\u662f\u6211\u4eec\u4e0d\u5e0c\u671b\u5929\u7a7a\u76d2\u88ab\u79fb\u52a8\u3002 \u8bf7\u8bb0\u4f4f\uff0c\u5f53\u6211\u4eec\u5728\u79fb\u52a8\u6444\u50cf\u673a\u65f6\uff0c\u5b9e\u9645\u4e0a\u662f\u5728\u79fb\u52a8\u6574\u4e2a\u4e16\u754c\u3002\u56e0\u6b64\uff0c\u5982\u679c\u76f4\u63a5\u5c06\u89c2\u5bdf\u77e9\u9635\u4e0e\u6a21\u578b\u77e9\u9635\u76f8\u4e58\uff0c\u5f53\u6444\u50cf\u673a\u79fb\u52a8\u65f6\uff0c\u5929\u7a7a\u76d2\u4e5f\u5c06\u79fb\u52a8\u3002\u4f46\u662f\u6211\u4eec\u4e0d\u60f3\u8fd9\u6837\uff0c\u6211\u4eec\u60f3\u628a\u5b83\u56fa\u5b9a\u5728\u5750\u6807\u539f\u70b9(0, 0, 0)\u3002\u8fd9\u662f\u901a\u8fc7\u5c06\u89c2\u5bdf\u77e9\u9635\u7684\u4f4d\u79fb\u589e\u91cf\u90e8\u5206\uff08 m30 , m31 \u548c m32 \uff09\u8bbe\u7f6e\u4e3a0\u6765\u5b9e\u73b0\u7684\u3002 \u4f60\u53ef\u80fd\u4f1a\u8ba4\u4e3a\u53ef\u4ee5\u907f\u514d\u4f7f\u7528\u89c2\u5bdf\u77e9\u9635\uff0c\u56e0\u4e3a\u5929\u7a7a\u76d2\u5fc5\u987b\u56fa\u5b9a\u5728\u539f\u70b9\u3002\u4f46\u5728\u6b64\u60c5\u51b5\u4e0b\uff0c\u4f60\u4f1a\u770b\u5230\u5929\u7a7a\u76d2\u4e0d\u4f1a\u968f\u7740\u6444\u50cf\u673a\u65cb\u8f6c\uff0c\u8fd9\u4e0d\u662f\u6211\u4eec\u60f3\u8981\u7684\u3002\u56e0\u6b64\u6211\u4eec\u9700\u8981\u65cb\u8f6c\u5b83\u4f46\u4e0d\u8981\u79fb\u52a8\u5b83\u3002 \u8fd9\u5c31\u662f\u5168\u90e8\u5185\u5bb9\uff0c\u4f60\u53ef\u4ee5\u67e5\u9605\u672c\u7ae0\u6e90\u4ee3\u7801\uff0c\u672c\u4f8b\u5728 DummyGame \u7c7b\u4e2d\u521b\u5efa\u4e86\u66f4\u591a\u7684\u65b9\u5757\u5b9e\u4f8b\u6765\u6a21\u62df\u5730\u9762\u548c\u5929\u7a7a\u76d2\u3002\u4f60\u4e5f\u53ef\u4ee5\u6539\u53d8\u73af\u5883\u5149\u6765\u6a21\u62df\u5149\u7167\u548c\u663c\u591c\u4ea4\u66ff\u3002\u6700\u7ec8\u5f97\u5230\u5982\u4e0b\u6240\u793a\u7684\u6548\u679c\uff1a \u5929\u7a7a\u76d2\u662f\u4e00\u4e2a\u5c0f\u7acb\u65b9\u4f53\uff08\u5728\u5b9e\u9645\u7684\u6e38\u620f\u4e2d\uff0c\u5b83\u5e94\u8be5\u5927\u5f97\u591a\uff09\uff0c\u6240\u4ee5\u4f60\u5728\u4e16\u754c\u4e2d\u79fb\u52a8\u65f6\uff0c\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u770b\u5230\u5176\u6548\u679c\u3002\u4f60\u8fd8\u53ef\u4ee5\u770b\u5230\uff0c\u6784\u6210\u5730\u9762\u7684\u65b9\u5757\u6bd4\u5929\u7a7a\u76d2\u5927\uff0c\u6240\u4ee5\u5f53\u4f60\u79fb\u52a8\u65f6\uff0c\u4f60\u4f1a\u770b\u5230\u4ece\u5c71\u4e2d\u5192\u51fa\u7684\u65b9\u5757\u3002\u8fd9\u5f88\u660e\u663e\uff0c\u56e0\u4e3a\u6211\u4eec\u8bbe\u7f6e\u7684\u5929\u7a7a\u76d2\u76f8\u5bf9\u8f83\u5c0f\u3002\u4f46\u65e0\u8bba\u5982\u4f55\uff0c\u6211\u4eec\u9700\u8981\u901a\u8fc7\u6dfb\u52a0\u4e00\u4e2a\u9690\u85cf\u548c\u6a21\u7cca\u8fdc\u5904\u7684\u7269\u4f53\u7684\u6548\u679c\uff08\u4f8b\u5982\u4f7f\u7528\u96fe\u6548\u679c\uff09\u6765\u51cf\u8f7b\u8fd9\u79cd\u5f71\u54cd\u3002 \u4e0d\u521b\u5efa\u66f4\u5927\u7684\u5929\u7a7a\u76d2\u7684\u53e6\u4e00\u4e2a\u539f\u56e0\u662f\u6211\u4eec\u9700\u8981\u51e0\u4e2a\u4f18\u5316\u6765\u63d0\u5347\u6548\u7387\uff08\u7a0d\u540e\u5bf9\u6b64\u8fdb\u884c\u89e3\u91ca\uff09\u3002 \u53ef\u4ee5\u6ce8\u91ca\u6e32\u67d3\u65b9\u6cd5\u4e2d\u9632\u6b62\u5929\u7a7a\u76d2\u79fb\u52a8\u7684\u4ee3\u7801\uff0c\u7136\u540e\u4f60\u5c31\u53ef\u4ee5\u5728\u5929\u7a7a\u76d2\u5916\u770b\u5230\u5982\u4e0b\u6240\u793a\u56fe\u50cf\uff1a \u867d\u7136\u8fd9\u4e0d\u662f\u5929\u7a7a\u76d2\u8be5\u505a\u7684\uff0c\u4f46\u8fd9\u53ef\u4ee5\u5e2e\u52a9\u4f60\u7406\u89e3\u5929\u7a7a\u76d2\u7684\u6982\u5ff5\u3002\u8bf7\u8bb0\u4f4f\uff0c\u8fd9\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u589e\u52a0\u5176\u4ed6\u6548\u679c\u6765\u6539\u5584\u5b83\uff0c\u6bd4\u5982\u592a\u9633\u5728\u5929\u7a79\u79fb\u52a8\u6216\u4e91\u5c42\u79fb\u52a8\u3002\u6b64\u5916\uff0c\u4e3a\u4e86\u521b\u5efa\u66f4\u5927\u7684\u4e16\u754c\uff0c\u4f60\u9700\u8981\u5c06\u4e16\u754c\u5206\u5272\u6210\u533a\u57df\uff0c\u53ea\u52a0\u8f7d\u90a3\u4e9b\u4e0e\u73a9\u5bb6\u6240\u5904\u7684\u533a\u57df\u76f8\u90bb\u7684\u533a\u57df\u3002 \u53e6\u5916\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff1a\u4ec0\u4e48\u65f6\u5019\u6e32\u67d3\u5929\u7a7a\u76d2\uff0c\u5728\u6e32\u67d3\u573a\u666f\u4e4b\u524d\u8fd8\u662f\u4e4b\u540e\uff1f\u5728\u6e32\u67d3\u573a\u666f\u540e\u6e32\u67d3\u5929\u7a7a\u76d2\u66f4\u4f18\uff0c\u56e0\u4e3a\u7531\u4e8e\u6df1\u5ea6\u6d4b\u8bd5\uff0c\u5927\u591a\u6570\u7247\u5143\u5c06\u88ab\u4e22\u5f03\u3002\u5f53OpenGL\u5c1d\u8bd5\u6e32\u67d3\u5b83\u4eec\uff0c\u5e76\u4e14\u542f\u7528\u4e86\u6df1\u5ea6\u6d4b\u8bd5\u65f6\uff0c\u5c06\u4e22\u5f03\u4e00\u4e9b\u4f4d\u4e8e\u5148\u524d\u6e32\u67d3\u7684\u7247\u5143\u4e4b\u540e\u7684\u7247\u5143\uff0c\u8fd9\u4e9b\u7247\u5143\u7684\u6df1\u5ea6\u503c\u66f4\u4f4e\u3002\u6240\u4ee5\u7b54\u6848\u5f88\u660e\u663e\uff0c\u5bf9\u5427\uff1f\u6e32\u67d3\u573a\u666f\u540e\uff0c\u518d\u6e32\u67d3\u5929\u7a7a\u76d2\u3002 \u4e0a\u8ff0\u65b9\u6cd5\u7684\u95ee\u9898\u662f\u5728\u5904\u7406\u900f\u660e\u7eb9\u7406\u65f6\uff0c\u5982\u679c\u5728\u573a\u666f\u4e2d\u6211\u4eec\u6709\u5e94\u7528\u900f\u660e\u7eb9\u7406\u7684\u7269\u4f53\uff0c\u5b83\u4eec\u5c06\u4f7f\u7528\u201c\u80cc\u666f\u201d\u8272\u7ed8\u5236\uff0c\u672c\u4f8b\u4e2d\u662f\u9ed1\u8272\u3002\u4f46\u5982\u679c\u6211\u4eec\u5148\u6e32\u67d3\u5929\u7a7a\u76d2\uff0c\u90a3\u4e48\u5c06\u4f1a\u6b63\u786e\u5730\u5e94\u7528\u900f\u660e\u6548\u679c\u3002 \u90a3\u4e48\uff0c\u6211\u4eec\u5e94\u8be5\u5728\u6e32\u67d3\u573a\u666f\u4e4b\u524d\u6e32\u67d3\u5929\u7a7a\u76d2\u5417\uff1f\u5173\u952e\u5728\u4e8e\u4f60\u7684\u9009\u62e9\u3002\u5982\u679c\u4f60\u5728\u6e32\u67d3\u573a\u666f\u524d\u6e32\u67d3\u5929\u7a7a\u76d2\uff0c\u53ef\u4ee5\u89e3\u51b3\u900f\u660e\u7eb9\u7406\u95ee\u9898\uff0c\u4f46\u662f\u4f1a\u5f71\u54cd\u6027\u80fd\u3002\u5b9e\u9645\u4e0a\uff0c\u5c31\u7b97\u6ca1\u6709\u5929\u7a7a\u76d2\uff0c\u4f60\u4e5f\u53ef\u80fd\u9762\u4e34\u900f\u660e\u95ee\u9898\u3002\u5047\u8bbe\u4f60\u6709\u4e00\u4e2a\u900f\u660e\u7684\u7269\u4f53\uff0c\u5b83\u4e0e\u8fdc\u5904\u7684\u7269\u4f53\u91cd\u53e0\uff0c\u5982\u679c\u9996\u5148\u6e32\u67d3\u900f\u660e\u5bf9\u8c61\uff0c\u90a3\u4e48\u4e5f\u4f1a\u51fa\u73b0\u900f\u660e\u95ee\u9898\u3002\u56e0\u6b64\uff0c\u4e5f\u8bb8\u53e6\u4e00\u79cd\u65b9\u6cd5\u662f\u5728\u6240\u6709\u5176\u4ed6\u9879\u88ab\u6e32\u67d3\u540e\uff0c\u5355\u72ec\u7ed8\u5236\u900f\u660e\u7684\u9879\u3002\u8fd9\u662f\u4e00\u4e9b\u5546\u4e1a\u6e38\u620f\u4f7f\u7528\u7684\u65b9\u6cd5\u3002\u4e0d\u8fc7\u73b0\u5728\u6211\u4eec\u5728\u6e32\u67d3\u573a\u666f\u4e4b\u540e\u6e32\u67d3\u5929\u7a7a\u76d2\uff0c\u4ee5\u83b7\u5f97\u66f4\u9ad8\u7684\u6027\u80fd\u3002 \u4e00\u4e9b\u4f18\u5316 \u4ece\u4e0a\u8ff0\u793a\u4f8b\u6765\u770b\uff0c\u5929\u7a7a\u76d2\u76f8\u5bf9\u8f83\u5c0f\u4f7f\u5f97\u5176\u6548\u679c\u6709\u70b9\u5947\u602a\uff08\u4f60\u53ef\u4ee5\u770b\u5230\u7269\u4f53\u795e\u5947\u5730\u4ece\u5c71\u4f53\u51fa\u73b0\uff09\u3002\u6240\u4ee5\u8ba9\u6211\u4eec\u589e\u52a0\u5929\u7a7a\u76d2\u7684\u5927\u5c0f\u548c\u4e16\u754c\u7684\u5927\u5c0f\uff0c\u5c06\u5929\u7a7a\u76d2\u7684\u5927\u5c0f\u653e\u592750\u500d\uff0c\u8fd9\u6837\u4e16\u754c\u753140,000\u4e2a\u6e38\u620f\u9879\u5b9e\u4f8b\uff08\u65b9\u5757\uff09\u7ec4\u6210\u3002 \u5982\u679c\u4f60\u66f4\u6539\u7f29\u653e\u5e76\u91cd\u65b0\u8fd0\u884c\u8fd9\u4e2a\u793a\u4f8b\uff0c\u4f60\u4f1a\u53d1\u73b0\u5f00\u59cb\u51fa\u73b0\u6027\u80fd\u95ee\u9898\uff0c\u5e76\u4e14\u5728\u4e16\u754c\u4e2d\u79fb\u52a8\u4e0d\u987a\u7545\u3002\u73b0\u5728\u662f\u65f6\u5019\u5173\u6ce8\u4e00\u4e0b\u6027\u80fd\u4e86\uff08\u4f60\u53ef\u80fd\u542c\u8fc7\u4e00\u53e5\u8001\u8bdd\uff1a\u201c\u8fc7\u65e9\u7684\u4f18\u5316\u662f\u4e07\u6076\u4e4b\u6e90\u201d\uff0c\u4f46\u662f\u4ece\u672c\u7ae0\u5f00\u59cb\uff0c\u6211\u5e0c\u671b\u6ca1\u6709\u4eba\u4f1a\u8bf4\u8fd9\u662f\u8fc7\u65e9\u7684\uff09\u3002 \u8ba9\u6211\u6765\u4ecb\u7ecd\u4e00\u4e2a\u6982\u5ff5\uff0c\u5b83\u80fd\u51cf\u5c11\u6b63\u5728\u6e32\u67d3\u7684\u6570\u636e\u6570\u91cf\uff0c\u5b83\u53eb\u505a\u9762\u5254\u9664\uff08Face Culling\uff09\u3002\u5728\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u6e32\u67d3\u4e86\u6210\u5343\u4e0a\u4e07\u4e2a\u7acb\u65b9\u4f53\uff0c\u7acb\u65b9\u4f53\u662f\u7531\u516d\u4e2a\u9762\u7ec4\u6210\u7684\u3002\u6211\u4eec\u6b63\u5728\u6e32\u67d3\u6bcf\u4e2a\u7acb\u65b9\u4f53\u7684\u516d\u4e2a\u9762\uff0c\u5373\u4f7f\u5b83\u4eec\u6709\u4e9b\u662f\u770b\u4e0d\u5230\u7684\u3002\u8fdb\u5165\u4e00\u4e2a\u7acb\u65b9\u4f53\u5185\u90e8\uff0c\u4f60\u4f1a\u770b\u5230\u5b83\u7684\u5185\u90e8\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u4e0d\u80fd\u88ab\u770b\u5230\u7684\u9762\u5e94\u8be5\u7acb\u5373\u820d\u5f03\uff0c\u8fd9\u5c31\u662f\u9762\u5254\u9664\u7684\u4f5c\u7528\u3002\u5b9e\u9645\u4e0a\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u7acb\u65b9\u4f53\uff0c\u4f60\u6700\u591a\u53ea\u80fd\u540c\u65f6\u770b\u5230\u4e09\u4e2a\u9762\uff0c\u6240\u4ee5\u53ea\u80fd\u901a\u8fc7\u4f7f\u7528\u9762\u5254\u9664\uff08\u5982\u679c\u4f60\u7684\u6e38\u620f\u4e0d\u8981\u6c42\u4f60\u8fdb\u5165\u6a21\u578b\u7684\u5185\u90e8\uff0c\u8fd9\u6837\u505a\u624d\u662f\u9ad8\u6548\u7684\uff0c\u7a0d\u540e\u4f60\u5c31\u53ef\u4ee5\u770b\u5230\u6548\u679c\uff09\u6765\u820d\u5f03\u4e00\u534a\u7684\u9762\uff0840,000\u00d73\u00d72\u4e2a\u4e09\u89d2\u5f62\uff09\u3002 \u9762\u5254\u9664\u68c0\u67e5\u6bcf\u4e2a\u4e09\u89d2\u5f62\u662f\u5426\u9762\u5411\u6444\u50cf\u673a\uff0c\u4e22\u5f03\u90a3\u4e9b\u4e0d\u9762\u5411\u6444\u50cf\u673a\u7684\u4e09\u89d2\u5f62\u3002\u4f46\u662f\uff0c\u5982\u4f55\u77e5\u9053\u4e09\u89d2\u5f62\u662f\u5426\u9762\u5411\u6444\u50cf\u673a\u5462\uff1f\u597d\u5427\uff0cOpenGL\u5b9e\u73b0\u5b83\u7684\u65b9\u5f0f\u662f\u901a\u8fc7\u68c0\u67e5\u7ec4\u6210\u4e09\u89d2\u5f62\u9876\u70b9\u7684\u73af\u7ed5\u987a\u5e8f\u3002 \u8bb0\u5f97\u4ece\u7b2c\u4e00\u7ae0\u5f00\u59cb\uff0c\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u4e09\u89d2\u5f62\u7684\u9876\u70b9\u4ee5\u987a\u65f6\u9488\u6216\u9006\u65f6\u9488\u987a\u5e8f\u6392\u5217\u3002\u5728OpenGL\u4e2d\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4ee5\u9006\u65f6\u9488\u987a\u5e8f\u6392\u5217\u9876\u70b9\u7684\u4e09\u89d2\u5f62\u9762\u5411\u6444\u50cf\u673a\uff0c\u800c\u4ee5\u987a\u65f6\u9488\u987a\u5e8f\u6392\u5217\u9876\u70b9\u7684\u4e09\u89d2\u5f62\u9762\u5411\u76f8\u53cd\u7684\u65b9\u5411\u3002\u5173\u952e\u662f\u5728\u8003\u8651\u6444\u50cf\u673a\u7684\u60c5\u51b5\u4e0b\uff0c\u68c0\u67e5\u9876\u70b9\u7684\u73af\u7ed5\u987a\u5e8f\u3002\u56e0\u6b64\uff0c\u6309\u7167\u9006\u65f6\u9488\u987a\u5e8f\u5b9a\u4e49\u7684\u4e09\u89d2\u5f62\u53ef\u4ee5\u6e32\u67d3\u3002 \u8ba9\u6211\u4eec\u6765\u5b9e\u73b0\u5b83\uff0c\u5728 Window \u7c7b\u7684 init \u65b9\u6cd5\u4e2d\u6dfb\u52a0\u4e0b\u8ff0\u4ee3\u7801\uff1a glEnable(GL_CULL_FACE); glCullFace(GL_BACK); \u7b2c\u4e00\u884c\u4ee3\u7801\u5c06\u542f\u7528\u9762\u5254\u9664\uff0c\u7b2c\u4e8c\u884c\u4ee3\u7801\u8bbe\u7f6e\u80cc\u5411\u9762\u4e3a\u9700\u8981\u5254\u9664\u7684\u9762\u3002\u5982\u679c\u5411\u4e0a\u770b\uff0c\u4f60\u4f1a\u770b\u5230\u5982\u4e0b\u56fe\u6240\u793a\u7684\u60c5\u666f\uff1a \u53d1\u751f\u4e86\u4ec0\u4e48\uff1f\u5982\u679c\u4f60\u67e5\u770b\u9876\u9762\u7684\u9876\u70b9\u987a\u5e8f\uff0c\u5c06\u770b\u5230\u5b83\u662f\u6309\u9006\u65f6\u9488\u5b9a\u4e49\u7684\u3002\u4f46\u8bf7\u8bb0\u4f4f\uff0c\u73af\u7ed5\u987a\u5e8f\u662f\u4ee5\u6444\u50cf\u673a\u4e3a\u89c6\u89d2\u3002\u5b9e\u9645\u4e0a\uff0c\u5982\u679c\u4f60\u8ba9\u4f4d\u79fb\u5f71\u54cd\u5929\u7a7a\u76d2\u4ee5\u4fbf\u80fd\u4ece\u5176\u4e0a\u65b9\u89c2\u5bdf\u5b83\u65f6\uff0c\u5219\u5f53\u4f60\u5728\u5929\u7a7a\u76d2\u5916\u65f6\uff0c\u5c06\u770b\u5230\u9876\u9762\u518d\u6b21\u6e32\u67d3\u3002 \u8ba9\u6211\u4eec\u6765\u63cf\u8ff0\u4e00\u4e0b\u53d1\u751f\u4e86\u4ec0\u4e48\u3002\u4e0b\u56fe\u5c55\u793a\u4e86\u5929\u7a7a\u76d2\u7acb\u65b9\u4f53\u7684\u9876\u9762\u4e09\u89d2\u5f62\u4e2d\u7684\u4e00\u4e2a\u4e09\u89d2\u5f62\uff0c\u5b83\u7531\u9006\u65f6\u9488\u987a\u5e8f\u6392\u5217\u7684\u4e09\u4e2a\u9876\u70b9\u5b9a\u4e49\uff1a \u4f46\u8981\u8bb0\u4f4f\uff0c\u6211\u4eec\u662f\u5728\u5929\u7a7a\u76d2\u91cc\uff0c\u5982\u679c\u4ece\u5185\u90e8\u89c2\u5bdf\u7acb\u65b9\u4f53\uff0c\u4f1a\u770b\u5230\u9876\u70b9\u662f\u6309\u987a\u65f6\u9488\u987a\u5e8f\u5b9a\u4e49\u7684\u3002 \u8fd9\u662f\u56e0\u4e3a\u5929\u7a7a\u76d2\u88ab\u5b9a\u4e49\u4e3a\u4ece\u5916\u90e8\u89c2\u5bdf\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u7ffb\u8f6c\u4e00\u4e9b\u9762\u7684\u5b9a\u4e49\uff0c\u4ee5\u4fbf\u5728\u542f\u7528\u9762\u5254\u9664\u65f6\u80fd\u6b63\u786e\u5730\u6e32\u67d3\u5b83\u3002 \u4f46\u8fd9\u4ecd\u6709\u66f4\u5927\u7684\u4f18\u5316\u7a7a\u95f4\u3002\u56de\u987e\u4e00\u4e0b\u6e32\u67d3\u6d41\u7a0b\uff0c\u5728 Renderer \u7c7b render \u65b9\u6cd5\u4e2d\uff0c\u6211\u4eec\u8981\u505a\u7684\u662f\u904d\u5386 GameItem \u6570\u7ec4\u5e76\u6e32\u67d3\u76f8\u5173\u7684 Mesh \u3002\u5bf9\u6bcf\u4e2a GameItem \uff0c\u6211\u4eec\u505a\u4e86\u4e0b\u8ff0\u5de5\u4f5c\uff1a \u8bbe\u7f6e\u6a21\u578b\u89c2\u5bdf\u77e9\u9635\uff08\u6bcf\u4e2a GameItem \u7684\u552f\u4e00\u503c\uff09\u3002 \u83b7\u53d6 GameItem \u50a8\u5b58\u7684 Mesh \u5e76\u7ed1\u5b9a\u7eb9\u7406\uff0c\u7ed1\u5b9aVAO\u5e76\u542f\u7528\u5176\u5c5e\u6027\u3002 \u6267\u884c\u8c03\u7528\u4ee5\u7ed8\u5236\u4e09\u89d2\u5f62\u3002 \u505c\u7528\u7eb9\u7406\u548cVAO\u3002 \u4f46\u5728\u73b0\u5728\u7684\u6e38\u620f\u4e2d\uff0c40,000\u4e2a GameItem \u90fd\u4f7f\u7528\u76f8\u540c\u7684 Mesh \uff0c\u800c\u6211\u4eec\u4e00\u6b21\u53c8\u4e00\u6b21\u5730\u91cd\u590d\u7b2c\u4e8c\u9879\u5230\u7b2c\u56db\u9879\u7684\u64cd\u4f5c\u3002\u8fd9\u4e0d\u662f\u5f88\u9ad8\u6548\uff0c\u8bf7\u8bb0\u4f4f\uff0c\u5bf9OpenGL\u51fd\u6570\u7684\u6bcf\u6b21\u8c03\u7528\u90fd\u662f\u6709\u6027\u80fd\u5f00\u9500\u7684\u672c\u5730\u8c03\u7528\u3002\u6b64\u5916\uff0c\u6211\u4eec\u8fd8\u5e94\u8be5\u5c3d\u91cf\u9650\u5236OpenGL\u4e2d\u7684\u72b6\u6001\u53d8\u5316\uff08\u7ed1\u5b9a\u548c\u505c\u7528\u7eb9\u7406\u3001VAO\u90fd\u662f\u72b6\u6001\u53d8\u5316\uff09\u3002 \u6211\u4eec\u9700\u8981\u6539\u53d8\u5f00\u53d1\u7684\u65b9\u5f0f\uff0c\u56f4\u7ed5\u7f51\u683c\u7ec4\u7ec7\u4ee3\u7801\u7ed3\u6784\uff0c\u56e0\u4e3a\u7ecf\u5e38\u6709\u8bb8\u591a\u6e38\u620f\u9879\u4f7f\u7528\u76f8\u540c\u7684\u7f51\u683c\u3002\u73b0\u5728\u6211\u4eec\u6709\u4e00\u4e2a\u6e38\u620f\u9879\u6570\u7ec4\uff0c\u6bcf\u9879\u90fd\u6307\u5411\u540c\u4e00\u4e2a\u7f51\u683c\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u4f5c\u4e3a\u66ff\u4ee3\uff0c\u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a\u7f51\u683c\u6620\u5c04\u8868\uff0c\u5176\u4e2d\u5305\u62ec\u50a8\u5b58\u5171\u4eab\u8be5\u7f51\u683c\u7684\u6240\u6709\u6e38\u620f\u9879\u3002 \u5bf9\u4e8e\u6bcf\u4e00\u4e2a Mesh \uff0c\u6e32\u67d3\u6b65\u9aa4\u5c06\u4f1a\u662f\uff1a \u83b7\u53d6\u4e0e GameItem \u76f8\u5173\u8054\u7684 Mesh \u5e76\u7ed1\u5b9a Mesh \u7eb9\u7406\uff0c\u7ed1\u5b9aVAO\u5e76\u542f\u7528\u5176\u5c5e\u6027\u3002 \u5bf9\u4e8e\u6bcf\u4e2a\u76f8\u5173\u7684 GameItem \uff1a a. \u8bbe\u7f6e\u6a21\u578b\u89c2\u5bdf\u77e9\u9635\uff08\u6bcf\u4e2a GameItem \u552f\u4e00\u7684\uff09\u3002 b. \u8c03\u7528\u7ed8\u5236\u4e09\u89d2\u5f62\u3002 \u89e3\u7ed1\u7eb9\u7406\u548cVAO\u3002 \u5728 Scene \u7c7b\u4e2d\u50a8\u5b58\u4e0b\u8ff0 Map \uff1a private Map<Mesh, List<GameItem>> meshMap; \u6211\u4eec\u4ecd\u6709 setGameItems \u65b9\u6cd5\uff0c\u4f46\u6211\u4eec\u4e0d\u53ea\u662f\u50a8\u5b58\u6570\u7ec4\uff0c\u800c\u662f\u6784\u9020\u7f51\u683c\u6620\u5c04\u8868\u3002 public void setGameItems(GameItem[] gameItems) { int numGameItems = gameItems != null ? gameItems.length : 0; for (int i=0; i<numGameItems; i++) { GameItem gameItem = gameItems[i]; Mesh mesh = gameItem.getMesh(); List<GameItem> list = meshMap.get(mesh); if ( list == null ) { list = new ArrayList<>(); meshMap.put(mesh, list); } list.add(gameItem); } } Mesh \u7c7b\u73b0\u5728\u6709\u4e00\u4e2a\u65b9\u6cd5\u6765\u6e32\u67d3\u4e0e\u5176\u76f8\u5173\u7684 GameItem \u5217\u8868\uff0c\u7136\u540e\u5c06\u7ed1\u5b9a\u548c\u89e3\u7ed1\u4ee3\u7801\u5206\u4e3a\u4e0d\u540c\u7684\u65b9\u6cd5\u3002 private void initRender() { Texture texture = material.getTexture(); if (texture != null) { // \u6fc0\u6d3b\u7b2c\u4e00\u4e2a\u7eb9\u7406\u5e93 glActiveTexture(GL_TEXTURE0); // \u7ed1\u5b9a\u7eb9\u7406 glBindTexture(GL_TEXTURE_2D, texture.getId()); } // \u7ed8\u5236\u7f51\u683c glBindVertexArray(getVaoId()); glEnableVertexAttribArray(0); glEnableVertexAttribArray(1); glEnableVertexAttribArray(2); } private void endRender() { // \u6062\u590d\u72b6\u6001 glDisableVertexAttribArray(0); glDisableVertexAttribArray(1); glDisableVertexAttribArray(2); glBindVertexArray(0); glBindTexture(GL_TEXTURE_2D, 0); } public void render() { initRender(); glDrawElements(GL_TRIANGLES, getVertexCount(), GL_UNSIGNED_INT, 0); endRender(); } public void renderList(List<GameItem> gameItems, Consumer<GameItem> consumer) { initRender(); for (GameItem gameItem : gameItems) { // \u8bbe\u7f6e\u6e38\u620f\u9879\u76ee\u6240\u9700\u7684\u6e32\u67d3\u6570\u636e consumer.accept(gameItem); // \u6e32\u67d3\u6e38\u620f\u9879\u76ee glDrawElements(GL_TRIANGLES, getVertexCount(), GL_UNSIGNED_INT, 0); } endRender(); } \u5982\u4f60\u6240\u89c1\uff0c\u6211\u4eec\u4ecd\u7136\u4fdd\u7559\u4e86\u65e7\u65b9\u6cd5\uff0c\u5b83\u8fd4\u56de\u4e00\u4e2a Mesh \uff0c\u8fd9\u662f\u8003\u8651\u5230\u5982\u679c\u53ea\u6709\u4e00\u4e2a GameItem \u7684\u60c5\u51b5\uff08\u8fd9\u53ef\u80fd\u5728\u5176\u4ed6\u60c5\u51b5\u4e0b\u4f7f\u7528\uff0c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u4e0d\u79fb\u9664\u5b83\uff09\u3002\u65b0\u7684\u65b9\u6cd5\u6e32\u67d3\u4e00\u4e2a List<GameItem> \uff0c\u5e76\u63a5\u53d7\u4e00\u4e2a Counsumer \u7c7b\u578b\u7684\u53c2\u6570\uff08\u4e00\u4e2a\u51fd\u6570\uff0c\u4f7f\u7528\u4e86Java8\u5f15\u5165\u7684\u51fd\u6570\u5f0f\u7f16\u7a0b\uff09\uff0c\u5b83\u5c06\u7528\u4e8e\u5728\u7ed8\u5236\u4e09\u89d2\u5f62\u4e4b\u524d\u4e3a\u6bcf\u4e2a GameItem \u8bbe\u7f6e\u7279\u5b9a\u7684\u5185\u5bb9\uff0c\u56e0\u4e3a\u4e0d\u5e0c\u671b Mesh \u7c7b\u4e0eUniform\u7684\u540d\u79f0\u548c\u8bbe\u7f6e\u8fd9\u4e9b\u53c2\u6570\u65f6\u6240\u6d89\u53ca\u7684\u53c2\u6570\u76f8\u8026\u5408\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u5b83\u6765\u8bbe\u7f6e\u6a21\u578b\u89c2\u5bdf\u77e9\u9635\u3002 \u5728 Renderer \u7c7b\u4e2d\u7684 renderScene \u65b9\u6cd5\u4f60\u53ef\u4ee5\u770b\u5230\uff0c\u6211\u4eec\u53ea\u9700\u904d\u5386\u7f51\u683c\u6620\u5c04\u8868\uff0c\u5e76\u901a\u8fc7Lambda\u8868\u8fbe\u5f0f\u8bbe\u7f6e\u6a21\u578b\u89c2\u5bdf\u77e9\u9635\u7684Uniform\u3002 for (Mesh mesh : mapMeshes.keySet()) { sceneShaderProgram.setUniform(\"material\", mesh.getMaterial()); mesh.renderList(mapMeshes.get(mesh), (GameItem gameItem) -> { Matrix4f modelViewMatrix = transformation.buildModelViewMatrix(gameItem, viewMatrix); sceneShaderProgram.setUniform(\"modelViewMatrix\", modelViewMatrix); } ); } \u53ef\u4ee5\u505a\u7684\u53e6\u4e00\u9879\u4f18\u5316\u662f\uff0c\u6211\u4eec\u5728\u6e32\u67d3\u5468\u671f\u4e2d\u521b\u5efa\u4e86\u5927\u91cf\u5bf9\u8c61\u3002\u7279\u522b\u662f\uff0c\u6211\u4eec\u521b\u5efa\u4e86\u592a\u591a\u7684 Matrix4f \u5b9e\u4f8b\uff0c\u5b83\u4eec\u4e3a\u6bcf\u4e2a GameItem \u5b9e\u4f8b\u90fd\u4fdd\u5b58\u4e86\u4e00\u4e2a\u6a21\u578b\u89c6\u56fe\u77e9\u9635\u3002\u6211\u4eec\u5e94\u5728 Transformation \u7c7b\u4e2d\u521b\u5efa\u7279\u5b9a\u7684\u77e9\u9635\uff0c\u5e76\u91cd\u7528\u76f8\u540c\u7684\u5b9e\u4f8b\u3002\u5982\u679c\u4f60\u67e5\u9605\u6e90\u4ee3\u7801\uff0c\u4f1a\u770b\u5230\u6211\u4eec\u5df2\u7ecf\u66f4\u6539\u4e86\u65b9\u6cd5\u7684\u540d\u79f0\uff0c getXX \u65b9\u6cd5\u53ea\u8fd4\u56de\u50a8\u5b58\u7684\u77e9\u9635\u5b9e\u4f8b\uff0c\u5e76\u4e14\u4efb\u4f55\u66f4\u6539\u77e9\u9635\u503c\u7684\u65b9\u6cd5\u90fd\u79f0\u4e3a buildXX \uff0c\u4ee5\u9610\u660e\u5176\u7528\u9014\u3002 \u6211\u4eec\u4e5f\u907f\u514d\u4e86\u6bcf\u6b21\u4e3a\u77e9\u9635\u8bbe\u7f6eUniform\u65f6\u6784\u9020\u65b0\u7684 FloatBuffer \u5b9e\u4f8b\uff0c\u5e76\u79fb\u9664\u4e86\u5176\u4ed6\u4e00\u4e9b\u65e0\u7528\u7684\u5b9e\u4f8b\u5316\u64cd\u4f5c\u3002\u6709\u4e86\u8fd9\u4e9b\uff0c\u4f60\u73b0\u5728\u53ef\u4ee5\u770b\u5230\u66f4\u6d41\u7545\u66f4\u7075\u6d3b\u7684\u6e32\u67d3\u4e86\u3002 \u4f60\u53ef\u4ee5\u5728\u6e90\u4ee3\u7801\u4e2d\u67e5\u9605\u6240\u6709\u7ec6\u8282\u3002","title":"\u5929\u7a7a\u76d2\u4e0e\u4e00\u4e9b\u4f18\u5316"},{"location":"13-sky-box-and-some-optimizations/#sky-box-and-some-optimizations","text":"","title":"\u5929\u7a7a\u76d2\u4e0e\u4e00\u4e9b\u4f18\u5316 (Sky Box and some optimizations)"},{"location":"13-sky-box-and-some-optimizations/#_1","text":"\u5929\u7a7a\u76d2\uff08Sky Box\uff09\u5c06\u7528\u4e8e\u4e3a\u4e09\u7ef4\u4e16\u754c\u8bbe\u7f6e\u80cc\u666f\uff0c\u7ed9\u4eba\u4e00\u79cd\u4e16\u754c\u5e7f\u9614\u7684\u9519\u89c9\u3002\u8fd9\u4e2a\u80cc\u666f\u5c06\u6444\u50cf\u673a\u6240\u5904\u4f4d\u7f6e\u5305\u8d77\u6765\uff0c\u7f69\u4f4f\u6574\u4e2a\u7a7a\u95f4\u3002\u6211\u4eec\u8981\u505a\u7684\u662f\u6784\u9020\u4e00\u4e2a\u6e32\u67d3\u5728\u4e09\u7ef4\u573a\u666f\u5468\u56f4\u7684\u7acb\u65b9\u4f53\uff0c\u5373\u6444\u50cf\u673a\u7684\u4f4d\u7f6e\u5c06\u4f4d\u4e8e\u7acb\u65b9\u4f53\u7684\u4e2d\u5fc3\u3002\u8be5\u7acb\u65b9\u4f53\u7684\u9762\u5c06\u5305\u7740\u4e00\u5c42\u7eb9\u7406\uff0c\u7eb9\u7406\u4e0a\u6709\u5c71\u3001\u84dd\u5929\u548c\u4e91\u5f69\uff0c\u5b83\u5c06\u4ee5\u4e00\u79cd\u56fe\u50cf\u770b\u8d77\u6765\u50cf\u662f\u4e00\u4e2a\u8fde\u7eed\u7684\u98ce\u666f\u7684\u65b9\u5f0f\u8fdb\u884c\u6620\u5c04\u3002 \u4e0b\u56fe\u5c55\u73b0\u4e86\u5929\u7a7a\u76d2\u7684\u6982\u5ff5\u3002 \u521b\u5efa\u5929\u7a7a\u76d2\u7684\u8fc7\u7a0b\u53ef\u6982\u62ec\u4e3a\u4ee5\u4e0b\u51e0\u6b65\uff1a \u521b\u5efa\u4e00\u4e2a\u5927\u7acb\u65b9\u4f53\u3002 \u5bf9\u5b83\u5e94\u7528\u7eb9\u7406\uff0c\u4ea7\u751f\u4e00\u79cd\u770b\u5230\u6ca1\u6709\u8fb9\u7f18\u7684\u573a\u666f\u7684\u9519\u89c9\u3002 \u6e32\u67d3\u7acb\u65b9\u4f53\uff0c\u5b83\u7684\u539f\u70b9\u4f4d\u4e8e\u6444\u50cf\u673a\u6240\u5904\u7684\u4f4d\u7f6e\uff0c\u5b83\u7684\u9762\u8ddd\u79bb\u539f\u70b9\u5f88\u8fdc\u3002 \u8ba9\u6211\u4eec\u5148\u4ece\u7eb9\u7406\u5f00\u59cb\u3002\u4f60\u4f1a\u53d1\u73b0\u4e92\u8054\u7f51\u4e0a\u6709\u5f88\u591a\u9884\u5148\u751f\u6210\u7684\u7eb9\u7406\u53ef\u4f9b\u4f7f\u7528\uff0c\u672c\u7ae0\u793a\u4f8b\u4e2d\u4f7f\u7528\u7684\u7eb9\u7406\u4ece\u6b64\u5904\u4e0b\u8f7d\uff1a http://www.custommapmakers.org/skyboxes.php \u3002\u672c\u7ae0\u4e2d\u5177\u4f53\u4f7f\u7528\u7684\u7eb9\u7406\u662f\uff1a http://www.custommapmakers.org/skyboxes/zips/ely_hills.zip \uff0c\u4f5c\u8005\u662fColin Lowndes\u3002 \u8be5\u7f51\u7ad9\u7684\u7eb9\u7406\u90fd\u662f\u7531\u5355\u72ec\u7684TGA\u6587\u4ef6\u7ec4\u6210\uff0c\u6bcf\u4e2a\u6587\u4ef6\u90fd\u662f\u7acb\u65b9\u4f53\u7684\u4e00\u9762\u3002\u6211\u4eec\u7684\u7eb9\u7406\u52a0\u8f7d\u5668\u5e0c\u671b\u6587\u4ef6\u683c\u5f0f\u4e3aPNG\uff0c\u6240\u4ee5\u9700\u8981\u5c06\u6bcf\u4e00\u9762\u7684\u56fe\u50cf\u7ec4\u5408\u6210\u4e00\u4e2aPNG\u56fe\u50cf\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5176\u4ed6\u65b9\u6cd5\uff0c\u4f8b\u5982\u7acb\u65b9\u4f53\u6620\u5c04\uff08Cube Mapping\uff09\uff0c\u4f7f\u5176\u81ea\u52a8\u5e94\u7528\u7eb9\u7406\u3002\u4f46\u4e3a\u4e86\u4f7f\u672c\u7ae0\u5c3d\u53ef\u80fd\u7b80\u6d01\u6613\u61c2\uff0c\u4f60\u5fc5\u987b\u624b\u52a8\u628a\u5b83\u4eec\u6392\u5217\u4e3a\u4e00\u5f20\u56fe\u7247\uff0c\u6700\u7ec8\u56fe\u50cf\u5982\u4e0b\u6240\u793a\uff1a \u63a5\u4e0b\u6765\u9700\u8981\u521b\u5efa\u4e00\u4e2aOBJ\u6587\u4ef6\uff0c\u5176\u4e2d\u542b\u6709\u4e00\u4e2a\u7acb\u65b9\u4f53\uff0c\u6b63\u786e\u5730\u8bbe\u7f6e\u6bcf\u4e00\u9762\u7684\u7eb9\u7406\u5750\u6807\u3002\u4e0b\u56fe\u5c55\u73b0\u4e86\u7eb9\u7406\u4e0e\u7acb\u65b9\u4f53\u5404\u9762\u7684\u5173\u7cfb\uff08\u4f60\u53ef\u4ee5\u5728\u672c\u4e66\u6e90\u4ee3\u7801\u4e2d\u627e\u5230\u672c\u7ae0\u4f7f\u7528\u7684OBJ\u6587\u4ef6\uff09\uff1a \u5f53\u76f8\u5173\u8d44\u6e90\u51c6\u5907\u5c31\u7eea\uff0c\u5c31\u53ef\u4ee5\u5f00\u59cb\u7f16\u5199\u4ee3\u7801\u4e86\u3002\u9996\u5148\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a SkyBox \u7684\u65b0\u7c7b\uff0c\u5b83\u7684\u6784\u9020\u51fd\u6570\u63a5\u6536OBJ\u6a21\u578b\u8def\u5f84\u548c\u5929\u7a7a\u76d2\u7eb9\u7406\u6587\u4ef6\u8def\u5f84\u3002\u5982\u540c\u6b64\u524d\u4e00\u7ae0\u7684HUD\uff0c\u8fd9\u4e2a\u7c7b\u4e5f\u7ee7\u627f GameItem \u7c7b\u3002\u4e3a\u4ec0\u4e48\u5b83\u8981\u7ee7\u627f GameItem \u7c7b\uff1f\u9996\u5148\uff0c\u4e3a\u4e86\u65b9\u4fbf\u6211\u4eec\u91cd\u7528\u5927\u90e8\u5206\u5904\u7406\u7f51\u683c\u548c\u7eb9\u7406\u7684\u4ee3\u7801\uff1b\u7b2c\u4e8c\uff0c\u56e0\u4e3a\u5929\u7a7a\u76d2\u4e0d\u4f1a\u79fb\u52a8\uff0c\u6211\u4eec\u53ea\u60f3\u5e94\u7528\u65cb\u8f6c\u548c\u7f29\u653e\u3002\u8fd9\u6837\u60f3\u60f3 SkyBox \u786e\u5b9e\u662f\u4e00\u4e2a GameItem \u3002 SkyBox \u7c7b\u7684\u5b9e\u73b0\u5982\u4e0b\uff1a package org.lwjglb.engine; import org.lwjglb.engine.graph.Material; import org.lwjglb.engine.graph.Mesh; import org.lwjglb.engine.graph.OBJLoader; import org.lwjglb.engine.graph.Texture; public class SkyBox extends GameItem { public SkyBox(String objModel, String textureFile) throws Exception { super(); Mesh skyBoxMesh = OBJLoader.loadMesh(objModel); Texture skyBoxtexture = new Texture(textureFile); skyBoxMesh.setMaterial(new Material(skyBoxtexture, 0.0f)); setMesh(skyBoxMesh); setPosition(0, 0, 0); } } \u5982\u679c\u4f60\u67e5\u9605\u672c\u7ae0\u7684\u6e90\u4ee3\u7801\uff0c\u4f60\u4f1a\u53d1\u73b0\u6211\u4eec\u505a\u4e86\u4e00\u4e9b\u91cd\u6784\u3002\u6211\u4eec\u521b\u5efa\u4e86\u4e00\u4e2a\u540d\u4e3a Scene \u7684\u7c7b\uff0c\u5b83\u5c06\u6574\u7406\u4e0e\u4e09\u7ef4\u4e16\u754c\u76f8\u5173\u7684\u6240\u6709\u6570\u636e\u3002 Scene \u7c7b\u7684\u5b9a\u4e49\u548c\u5c5e\u6027\u5982\u4e0b\u6240\u793a\uff0c\u5176\u4e2d\u5305\u542b SkyBox \u7c7b\u7684\u5b9e\u4f8b\uff1a package org.lwjglb.engine; public class Scene { private GameItem[] gameItems; private SkyBox skyBox; private SceneLight sceneLight; public GameItem[] getGameItems() { return gameItems; } // \u66f4\u591a\u4ee3\u7801... \u63a5\u4e0b\u6765\u662f\u4e3a\u5929\u7a7a\u76d2\u521b\u5efa\u53e6\u4e00\u7ec4\u9876\u70b9\u548c\u7247\u5143\u7740\u8272\u5668\uff0c\u4f46\u4e3a\u4ec0\u4e48\u4e0d\u91cd\u7528\u5df2\u6709\u7684\u573a\u666f\u7740\u8272\u5668\u5462\uff1f\u5b9e\u9645\u4e0a\uff0c\u6211\u4eec\u6240\u9700\u7684\u7740\u8272\u5668\u662f\u539f\u6709\u7740\u8272\u5668\u7684\u7b80\u5316\u7248\uff0c\u4e0d\u9700\u8981\u8ba9\u5149\u7167\u5f71\u54cd\u5929\u7a7a\u76d2\uff08\u66f4\u51c6\u786e\u7684\u8bf4\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u70b9\u5149\u6e90\uff0c\u805a\u5149\u6e90\u548c\u5e73\u884c\u5149\uff09\u3002\u5929\u7a7a\u76d2\u7684\u9876\u70b9\u7740\u8272\u5668\u5982\u4e0b\u6240\u793a\uff1a #version 330 layout (location=0) in vec3 position; layout (location=1) in vec2 texCoord; layout (location=2) in vec3 vertexNormal; out vec2 outTexCoord; uniform mat4 modelViewMatrix; uniform mat4 projectionMatrix; void main() { gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0); outTexCoord = texCoord; } \u53ef\u4ee5\u770b\u5230\u6211\u4eec\u4ecd\u4f7f\u7528\u6a21\u578b\u89c2\u5bdf\u77e9\u9635\u3002\u5982\u4e0a\u6240\u8ff0\uff0c\u6211\u4eec\u5c06\u7f29\u653e\u5929\u7a7a\u76d2\uff0c\u6240\u4ee5\u9700\u8981\u53d8\u6362\u77e9\u9635\u3002\u4f60\u53ef\u80fd\u4f1a\u53d1\u73b0\u5230\u4e00\u4e9b\u5176\u4ed6\u5b9e\u73b0\uff0c\u5728\u521d\u59cb\u5316\u65f6\u5c31\u653e\u5927\u4e86\u7acb\u65b9\u4f53\u6a21\u578b\u7684\u5927\u5c0f\uff0c\u5e76\u4e14\u4e0d\u9700\u8981\u5c06\u6a21\u578b\u77e9\u9635\u548c\u89c2\u5bdf\u77e9\u9635\u76f8\u4e58\u3002\u4f46\u6211\u4eec\u9009\u62e9\u524d\u4e00\u79cd\u65b9\u6cd5\uff0c\u56e0\u4e3a\u5b83\u66f4\u7075\u6d3b\uff0c\u5b83\u5141\u8bb8\u5728\u8fd0\u884c\u65f6\u6539\u53d8\u5929\u7a7a\u76d2\u7684\u5927\u5c0f\u3002\u4f46\u5982\u679c\u4f60\u60f3\uff0c\u4f60\u5c31\u53ef\u4ee5\u8f7b\u677e\u6539\u6362\u5230\u53e6\u4e00\u79cd\u65b9\u6cd5\u3002 \u7247\u5143\u7740\u8272\u5668\u4e5f\u975e\u5e38\u7b80\u5355\uff1a #version 330 in vec2 outTexCoord; in vec3 mvPos; out vec4 fragColor; uniform sampler2D texture_sampler; uniform vec3 ambientLight; void main() { fragColor = vec4(ambientLight, 1) * texture(texture_sampler, outTexCoord); } \u5982\u4f60\u6240\u89c1\uff0c\u6211\u4eec\u4e3a\u7740\u8272\u5668\u6dfb\u52a0\u4e86\u4e00\u4e2a\u73af\u5883\u5149\uff0c\u8be5Uniform\u7684\u76ee\u7684\u662f\u4fee\u6539\u5929\u7a7a\u76d2\u7684\u989c\u8272\u4ee5\u6a21\u62df\u663c\u591c\uff08\u5982\u679c\u4e0d\u8fd9\u6837\u505a\uff0c\u5728\u4e16\u754c\u7684\u5176\u4ed6\u5730\u65b9\u90fd\u662f\u9ed1\u6697\u7684\u65f6\u5019\uff0c\u5929\u7a7a\u76d2\u770b\u8d77\u6765\u5c31\u50cf\u662f\u5728\u4e2d\u5348\uff09\u3002 \u5728 Renderer \u7c7b\u4e2d\uff0c\u6211\u4eec\u521a\u521a\u6dfb\u52a0\u4e86\u65b0\u7684\u65b9\u6cd5\u6765\u4f7f\u7528\u8fd9\u4e9b\u7740\u8272\u5668\u5e76\u8bbe\u7f6eUniform\uff08\u8fd9\u4e0d\u662f\u4ec0\u4e48\u65b0\u7684\u6982\u5ff5\uff09\u3002 private void setupSkyBoxShader() throws Exception { skyBoxShaderProgram = new ShaderProgram(); skyBoxShaderProgram.createVertexShader(Utils.loadResource(\"/shaders/sb_vertex.vs\")); skyBoxShaderProgram.createFragmentShader(Utils.loadResource(\"/shaders/sb_fragment.fs\")); skyBoxShaderProgram.link(); skyBoxShaderProgram.createUniform(\"projectionMatrix\"); skyBoxShaderProgram.createUniform(\"modelViewMatrix\"); skyBoxShaderProgram.createUniform(\"texture_sampler\"); skyBoxShaderProgram.createUniform(\"ambientLight\"); } \u5f53\u7136\uff0c\u6211\u4eec\u9700\u8981\u5728\u5168\u5c40\u6e32\u67d3\u4e2d\u4e3a\u6e32\u67d3\u5929\u7a7a\u76d2\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u6e32\u67d3\u65b9\u6cd5\u3002 private void renderSkyBox(Window window, Camera camera, Scene scene) { skyBoxShaderProgram.bind(); skyBoxShaderProgram.setUniform(\"texture_sampler\", 0); // \u66f4\u65b0\u6295\u5f71\u77e9\u9635 Matrix4f projectionMatrix = transformation.getProjectionMatrix(FOV, window.getWidth(), window.getHeight(), Z_NEAR, Z_FAR); skyBoxShaderProgram.setUniform(\"projectionMatrix\", projectionMatrix); SkyBox skyBox = scene.getSkyBox(); Matrix4f viewMatrix = transformation.getViewMatrix(camera); viewMatrix.m30(0); viewMatrix.m31(0); viewMatrix.m32(0); Matrix4f modelViewMatrix = transformation.getModelViewMatrix(skyBox, viewMatrix); skyBoxShaderProgram.setUniform(\"modelViewMatrix\", modelViewMatrix); skyBoxShaderProgram.setUniform(\"ambientLight\", scene.getSceneLight().getAmbientLight()); scene.getSkyBox().getMesh().render(); skyBoxShaderProgram.unbind(); } \u4e0a\u8ff0\u65b9\u6cd5\u4e0e\u5176\u4ed6\u6e32\u67d3\u65b9\u6cd5\u975e\u5e38\u76f8\u4f3c\uff0c\u4f46\u6709\u4e00\u4e2a\u4e0d\u540c\u4e4b\u5904\u9700\u8981\u89e3\u91ca\u3002\u5982\u4f60\u6240\u89c1\uff0c\u6211\u4eec\u50cf\u5e73\u5e38\u4e00\u6837\u4f20\u9012\u6295\u5f71\u77e9\u9635\u548c\u6a21\u578b\u89c2\u5bdf\u77e9\u9635\u3002\u4f46\u5f53\u53d6\u5f97\u89c2\u5bdf\u77e9\u9635\u65f6\uff0c\u6211\u4eec\u5c06\u5176\u4e00\u4e9b\u6570\u503c\u8bbe\u7f6e\u4e3a0\u3002\u4e3a\u4ec0\u4e48\u8981\u8fd9\u4e48\u505a\uff1f\u5176\u4e2d\u7684\u539f\u56e0\u662f\u6211\u4eec\u4e0d\u5e0c\u671b\u5929\u7a7a\u76d2\u88ab\u79fb\u52a8\u3002 \u8bf7\u8bb0\u4f4f\uff0c\u5f53\u6211\u4eec\u5728\u79fb\u52a8\u6444\u50cf\u673a\u65f6\uff0c\u5b9e\u9645\u4e0a\u662f\u5728\u79fb\u52a8\u6574\u4e2a\u4e16\u754c\u3002\u56e0\u6b64\uff0c\u5982\u679c\u76f4\u63a5\u5c06\u89c2\u5bdf\u77e9\u9635\u4e0e\u6a21\u578b\u77e9\u9635\u76f8\u4e58\uff0c\u5f53\u6444\u50cf\u673a\u79fb\u52a8\u65f6\uff0c\u5929\u7a7a\u76d2\u4e5f\u5c06\u79fb\u52a8\u3002\u4f46\u662f\u6211\u4eec\u4e0d\u60f3\u8fd9\u6837\uff0c\u6211\u4eec\u60f3\u628a\u5b83\u56fa\u5b9a\u5728\u5750\u6807\u539f\u70b9(0, 0, 0)\u3002\u8fd9\u662f\u901a\u8fc7\u5c06\u89c2\u5bdf\u77e9\u9635\u7684\u4f4d\u79fb\u589e\u91cf\u90e8\u5206\uff08 m30 , m31 \u548c m32 \uff09\u8bbe\u7f6e\u4e3a0\u6765\u5b9e\u73b0\u7684\u3002 \u4f60\u53ef\u80fd\u4f1a\u8ba4\u4e3a\u53ef\u4ee5\u907f\u514d\u4f7f\u7528\u89c2\u5bdf\u77e9\u9635\uff0c\u56e0\u4e3a\u5929\u7a7a\u76d2\u5fc5\u987b\u56fa\u5b9a\u5728\u539f\u70b9\u3002\u4f46\u5728\u6b64\u60c5\u51b5\u4e0b\uff0c\u4f60\u4f1a\u770b\u5230\u5929\u7a7a\u76d2\u4e0d\u4f1a\u968f\u7740\u6444\u50cf\u673a\u65cb\u8f6c\uff0c\u8fd9\u4e0d\u662f\u6211\u4eec\u60f3\u8981\u7684\u3002\u56e0\u6b64\u6211\u4eec\u9700\u8981\u65cb\u8f6c\u5b83\u4f46\u4e0d\u8981\u79fb\u52a8\u5b83\u3002 \u8fd9\u5c31\u662f\u5168\u90e8\u5185\u5bb9\uff0c\u4f60\u53ef\u4ee5\u67e5\u9605\u672c\u7ae0\u6e90\u4ee3\u7801\uff0c\u672c\u4f8b\u5728 DummyGame \u7c7b\u4e2d\u521b\u5efa\u4e86\u66f4\u591a\u7684\u65b9\u5757\u5b9e\u4f8b\u6765\u6a21\u62df\u5730\u9762\u548c\u5929\u7a7a\u76d2\u3002\u4f60\u4e5f\u53ef\u4ee5\u6539\u53d8\u73af\u5883\u5149\u6765\u6a21\u62df\u5149\u7167\u548c\u663c\u591c\u4ea4\u66ff\u3002\u6700\u7ec8\u5f97\u5230\u5982\u4e0b\u6240\u793a\u7684\u6548\u679c\uff1a \u5929\u7a7a\u76d2\u662f\u4e00\u4e2a\u5c0f\u7acb\u65b9\u4f53\uff08\u5728\u5b9e\u9645\u7684\u6e38\u620f\u4e2d\uff0c\u5b83\u5e94\u8be5\u5927\u5f97\u591a\uff09\uff0c\u6240\u4ee5\u4f60\u5728\u4e16\u754c\u4e2d\u79fb\u52a8\u65f6\uff0c\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u770b\u5230\u5176\u6548\u679c\u3002\u4f60\u8fd8\u53ef\u4ee5\u770b\u5230\uff0c\u6784\u6210\u5730\u9762\u7684\u65b9\u5757\u6bd4\u5929\u7a7a\u76d2\u5927\uff0c\u6240\u4ee5\u5f53\u4f60\u79fb\u52a8\u65f6\uff0c\u4f60\u4f1a\u770b\u5230\u4ece\u5c71\u4e2d\u5192\u51fa\u7684\u65b9\u5757\u3002\u8fd9\u5f88\u660e\u663e\uff0c\u56e0\u4e3a\u6211\u4eec\u8bbe\u7f6e\u7684\u5929\u7a7a\u76d2\u76f8\u5bf9\u8f83\u5c0f\u3002\u4f46\u65e0\u8bba\u5982\u4f55\uff0c\u6211\u4eec\u9700\u8981\u901a\u8fc7\u6dfb\u52a0\u4e00\u4e2a\u9690\u85cf\u548c\u6a21\u7cca\u8fdc\u5904\u7684\u7269\u4f53\u7684\u6548\u679c\uff08\u4f8b\u5982\u4f7f\u7528\u96fe\u6548\u679c\uff09\u6765\u51cf\u8f7b\u8fd9\u79cd\u5f71\u54cd\u3002 \u4e0d\u521b\u5efa\u66f4\u5927\u7684\u5929\u7a7a\u76d2\u7684\u53e6\u4e00\u4e2a\u539f\u56e0\u662f\u6211\u4eec\u9700\u8981\u51e0\u4e2a\u4f18\u5316\u6765\u63d0\u5347\u6548\u7387\uff08\u7a0d\u540e\u5bf9\u6b64\u8fdb\u884c\u89e3\u91ca\uff09\u3002 \u53ef\u4ee5\u6ce8\u91ca\u6e32\u67d3\u65b9\u6cd5\u4e2d\u9632\u6b62\u5929\u7a7a\u76d2\u79fb\u52a8\u7684\u4ee3\u7801\uff0c\u7136\u540e\u4f60\u5c31\u53ef\u4ee5\u5728\u5929\u7a7a\u76d2\u5916\u770b\u5230\u5982\u4e0b\u6240\u793a\u56fe\u50cf\uff1a \u867d\u7136\u8fd9\u4e0d\u662f\u5929\u7a7a\u76d2\u8be5\u505a\u7684\uff0c\u4f46\u8fd9\u53ef\u4ee5\u5e2e\u52a9\u4f60\u7406\u89e3\u5929\u7a7a\u76d2\u7684\u6982\u5ff5\u3002\u8bf7\u8bb0\u4f4f\uff0c\u8fd9\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u589e\u52a0\u5176\u4ed6\u6548\u679c\u6765\u6539\u5584\u5b83\uff0c\u6bd4\u5982\u592a\u9633\u5728\u5929\u7a79\u79fb\u52a8\u6216\u4e91\u5c42\u79fb\u52a8\u3002\u6b64\u5916\uff0c\u4e3a\u4e86\u521b\u5efa\u66f4\u5927\u7684\u4e16\u754c\uff0c\u4f60\u9700\u8981\u5c06\u4e16\u754c\u5206\u5272\u6210\u533a\u57df\uff0c\u53ea\u52a0\u8f7d\u90a3\u4e9b\u4e0e\u73a9\u5bb6\u6240\u5904\u7684\u533a\u57df\u76f8\u90bb\u7684\u533a\u57df\u3002 \u53e6\u5916\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff1a\u4ec0\u4e48\u65f6\u5019\u6e32\u67d3\u5929\u7a7a\u76d2\uff0c\u5728\u6e32\u67d3\u573a\u666f\u4e4b\u524d\u8fd8\u662f\u4e4b\u540e\uff1f\u5728\u6e32\u67d3\u573a\u666f\u540e\u6e32\u67d3\u5929\u7a7a\u76d2\u66f4\u4f18\uff0c\u56e0\u4e3a\u7531\u4e8e\u6df1\u5ea6\u6d4b\u8bd5\uff0c\u5927\u591a\u6570\u7247\u5143\u5c06\u88ab\u4e22\u5f03\u3002\u5f53OpenGL\u5c1d\u8bd5\u6e32\u67d3\u5b83\u4eec\uff0c\u5e76\u4e14\u542f\u7528\u4e86\u6df1\u5ea6\u6d4b\u8bd5\u65f6\uff0c\u5c06\u4e22\u5f03\u4e00\u4e9b\u4f4d\u4e8e\u5148\u524d\u6e32\u67d3\u7684\u7247\u5143\u4e4b\u540e\u7684\u7247\u5143\uff0c\u8fd9\u4e9b\u7247\u5143\u7684\u6df1\u5ea6\u503c\u66f4\u4f4e\u3002\u6240\u4ee5\u7b54\u6848\u5f88\u660e\u663e\uff0c\u5bf9\u5427\uff1f\u6e32\u67d3\u573a\u666f\u540e\uff0c\u518d\u6e32\u67d3\u5929\u7a7a\u76d2\u3002 \u4e0a\u8ff0\u65b9\u6cd5\u7684\u95ee\u9898\u662f\u5728\u5904\u7406\u900f\u660e\u7eb9\u7406\u65f6\uff0c\u5982\u679c\u5728\u573a\u666f\u4e2d\u6211\u4eec\u6709\u5e94\u7528\u900f\u660e\u7eb9\u7406\u7684\u7269\u4f53\uff0c\u5b83\u4eec\u5c06\u4f7f\u7528\u201c\u80cc\u666f\u201d\u8272\u7ed8\u5236\uff0c\u672c\u4f8b\u4e2d\u662f\u9ed1\u8272\u3002\u4f46\u5982\u679c\u6211\u4eec\u5148\u6e32\u67d3\u5929\u7a7a\u76d2\uff0c\u90a3\u4e48\u5c06\u4f1a\u6b63\u786e\u5730\u5e94\u7528\u900f\u660e\u6548\u679c\u3002 \u90a3\u4e48\uff0c\u6211\u4eec\u5e94\u8be5\u5728\u6e32\u67d3\u573a\u666f\u4e4b\u524d\u6e32\u67d3\u5929\u7a7a\u76d2\u5417\uff1f\u5173\u952e\u5728\u4e8e\u4f60\u7684\u9009\u62e9\u3002\u5982\u679c\u4f60\u5728\u6e32\u67d3\u573a\u666f\u524d\u6e32\u67d3\u5929\u7a7a\u76d2\uff0c\u53ef\u4ee5\u89e3\u51b3\u900f\u660e\u7eb9\u7406\u95ee\u9898\uff0c\u4f46\u662f\u4f1a\u5f71\u54cd\u6027\u80fd\u3002\u5b9e\u9645\u4e0a\uff0c\u5c31\u7b97\u6ca1\u6709\u5929\u7a7a\u76d2\uff0c\u4f60\u4e5f\u53ef\u80fd\u9762\u4e34\u900f\u660e\u95ee\u9898\u3002\u5047\u8bbe\u4f60\u6709\u4e00\u4e2a\u900f\u660e\u7684\u7269\u4f53\uff0c\u5b83\u4e0e\u8fdc\u5904\u7684\u7269\u4f53\u91cd\u53e0\uff0c\u5982\u679c\u9996\u5148\u6e32\u67d3\u900f\u660e\u5bf9\u8c61\uff0c\u90a3\u4e48\u4e5f\u4f1a\u51fa\u73b0\u900f\u660e\u95ee\u9898\u3002\u56e0\u6b64\uff0c\u4e5f\u8bb8\u53e6\u4e00\u79cd\u65b9\u6cd5\u662f\u5728\u6240\u6709\u5176\u4ed6\u9879\u88ab\u6e32\u67d3\u540e\uff0c\u5355\u72ec\u7ed8\u5236\u900f\u660e\u7684\u9879\u3002\u8fd9\u662f\u4e00\u4e9b\u5546\u4e1a\u6e38\u620f\u4f7f\u7528\u7684\u65b9\u6cd5\u3002\u4e0d\u8fc7\u73b0\u5728\u6211\u4eec\u5728\u6e32\u67d3\u573a\u666f\u4e4b\u540e\u6e32\u67d3\u5929\u7a7a\u76d2\uff0c\u4ee5\u83b7\u5f97\u66f4\u9ad8\u7684\u6027\u80fd\u3002","title":"\u5929\u7a7a\u76d2"},{"location":"13-sky-box-and-some-optimizations/#_2","text":"\u4ece\u4e0a\u8ff0\u793a\u4f8b\u6765\u770b\uff0c\u5929\u7a7a\u76d2\u76f8\u5bf9\u8f83\u5c0f\u4f7f\u5f97\u5176\u6548\u679c\u6709\u70b9\u5947\u602a\uff08\u4f60\u53ef\u4ee5\u770b\u5230\u7269\u4f53\u795e\u5947\u5730\u4ece\u5c71\u4f53\u51fa\u73b0\uff09\u3002\u6240\u4ee5\u8ba9\u6211\u4eec\u589e\u52a0\u5929\u7a7a\u76d2\u7684\u5927\u5c0f\u548c\u4e16\u754c\u7684\u5927\u5c0f\uff0c\u5c06\u5929\u7a7a\u76d2\u7684\u5927\u5c0f\u653e\u592750\u500d\uff0c\u8fd9\u6837\u4e16\u754c\u753140,000\u4e2a\u6e38\u620f\u9879\u5b9e\u4f8b\uff08\u65b9\u5757\uff09\u7ec4\u6210\u3002 \u5982\u679c\u4f60\u66f4\u6539\u7f29\u653e\u5e76\u91cd\u65b0\u8fd0\u884c\u8fd9\u4e2a\u793a\u4f8b\uff0c\u4f60\u4f1a\u53d1\u73b0\u5f00\u59cb\u51fa\u73b0\u6027\u80fd\u95ee\u9898\uff0c\u5e76\u4e14\u5728\u4e16\u754c\u4e2d\u79fb\u52a8\u4e0d\u987a\u7545\u3002\u73b0\u5728\u662f\u65f6\u5019\u5173\u6ce8\u4e00\u4e0b\u6027\u80fd\u4e86\uff08\u4f60\u53ef\u80fd\u542c\u8fc7\u4e00\u53e5\u8001\u8bdd\uff1a\u201c\u8fc7\u65e9\u7684\u4f18\u5316\u662f\u4e07\u6076\u4e4b\u6e90\u201d\uff0c\u4f46\u662f\u4ece\u672c\u7ae0\u5f00\u59cb\uff0c\u6211\u5e0c\u671b\u6ca1\u6709\u4eba\u4f1a\u8bf4\u8fd9\u662f\u8fc7\u65e9\u7684\uff09\u3002 \u8ba9\u6211\u6765\u4ecb\u7ecd\u4e00\u4e2a\u6982\u5ff5\uff0c\u5b83\u80fd\u51cf\u5c11\u6b63\u5728\u6e32\u67d3\u7684\u6570\u636e\u6570\u91cf\uff0c\u5b83\u53eb\u505a\u9762\u5254\u9664\uff08Face Culling\uff09\u3002\u5728\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u6e32\u67d3\u4e86\u6210\u5343\u4e0a\u4e07\u4e2a\u7acb\u65b9\u4f53\uff0c\u7acb\u65b9\u4f53\u662f\u7531\u516d\u4e2a\u9762\u7ec4\u6210\u7684\u3002\u6211\u4eec\u6b63\u5728\u6e32\u67d3\u6bcf\u4e2a\u7acb\u65b9\u4f53\u7684\u516d\u4e2a\u9762\uff0c\u5373\u4f7f\u5b83\u4eec\u6709\u4e9b\u662f\u770b\u4e0d\u5230\u7684\u3002\u8fdb\u5165\u4e00\u4e2a\u7acb\u65b9\u4f53\u5185\u90e8\uff0c\u4f60\u4f1a\u770b\u5230\u5b83\u7684\u5185\u90e8\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u4e0d\u80fd\u88ab\u770b\u5230\u7684\u9762\u5e94\u8be5\u7acb\u5373\u820d\u5f03\uff0c\u8fd9\u5c31\u662f\u9762\u5254\u9664\u7684\u4f5c\u7528\u3002\u5b9e\u9645\u4e0a\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u7acb\u65b9\u4f53\uff0c\u4f60\u6700\u591a\u53ea\u80fd\u540c\u65f6\u770b\u5230\u4e09\u4e2a\u9762\uff0c\u6240\u4ee5\u53ea\u80fd\u901a\u8fc7\u4f7f\u7528\u9762\u5254\u9664\uff08\u5982\u679c\u4f60\u7684\u6e38\u620f\u4e0d\u8981\u6c42\u4f60\u8fdb\u5165\u6a21\u578b\u7684\u5185\u90e8\uff0c\u8fd9\u6837\u505a\u624d\u662f\u9ad8\u6548\u7684\uff0c\u7a0d\u540e\u4f60\u5c31\u53ef\u4ee5\u770b\u5230\u6548\u679c\uff09\u6765\u820d\u5f03\u4e00\u534a\u7684\u9762\uff0840,000\u00d73\u00d72\u4e2a\u4e09\u89d2\u5f62\uff09\u3002 \u9762\u5254\u9664\u68c0\u67e5\u6bcf\u4e2a\u4e09\u89d2\u5f62\u662f\u5426\u9762\u5411\u6444\u50cf\u673a\uff0c\u4e22\u5f03\u90a3\u4e9b\u4e0d\u9762\u5411\u6444\u50cf\u673a\u7684\u4e09\u89d2\u5f62\u3002\u4f46\u662f\uff0c\u5982\u4f55\u77e5\u9053\u4e09\u89d2\u5f62\u662f\u5426\u9762\u5411\u6444\u50cf\u673a\u5462\uff1f\u597d\u5427\uff0cOpenGL\u5b9e\u73b0\u5b83\u7684\u65b9\u5f0f\u662f\u901a\u8fc7\u68c0\u67e5\u7ec4\u6210\u4e09\u89d2\u5f62\u9876\u70b9\u7684\u73af\u7ed5\u987a\u5e8f\u3002 \u8bb0\u5f97\u4ece\u7b2c\u4e00\u7ae0\u5f00\u59cb\uff0c\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u4e09\u89d2\u5f62\u7684\u9876\u70b9\u4ee5\u987a\u65f6\u9488\u6216\u9006\u65f6\u9488\u987a\u5e8f\u6392\u5217\u3002\u5728OpenGL\u4e2d\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4ee5\u9006\u65f6\u9488\u987a\u5e8f\u6392\u5217\u9876\u70b9\u7684\u4e09\u89d2\u5f62\u9762\u5411\u6444\u50cf\u673a\uff0c\u800c\u4ee5\u987a\u65f6\u9488\u987a\u5e8f\u6392\u5217\u9876\u70b9\u7684\u4e09\u89d2\u5f62\u9762\u5411\u76f8\u53cd\u7684\u65b9\u5411\u3002\u5173\u952e\u662f\u5728\u8003\u8651\u6444\u50cf\u673a\u7684\u60c5\u51b5\u4e0b\uff0c\u68c0\u67e5\u9876\u70b9\u7684\u73af\u7ed5\u987a\u5e8f\u3002\u56e0\u6b64\uff0c\u6309\u7167\u9006\u65f6\u9488\u987a\u5e8f\u5b9a\u4e49\u7684\u4e09\u89d2\u5f62\u53ef\u4ee5\u6e32\u67d3\u3002 \u8ba9\u6211\u4eec\u6765\u5b9e\u73b0\u5b83\uff0c\u5728 Window \u7c7b\u7684 init \u65b9\u6cd5\u4e2d\u6dfb\u52a0\u4e0b\u8ff0\u4ee3\u7801\uff1a glEnable(GL_CULL_FACE); glCullFace(GL_BACK); \u7b2c\u4e00\u884c\u4ee3\u7801\u5c06\u542f\u7528\u9762\u5254\u9664\uff0c\u7b2c\u4e8c\u884c\u4ee3\u7801\u8bbe\u7f6e\u80cc\u5411\u9762\u4e3a\u9700\u8981\u5254\u9664\u7684\u9762\u3002\u5982\u679c\u5411\u4e0a\u770b\uff0c\u4f60\u4f1a\u770b\u5230\u5982\u4e0b\u56fe\u6240\u793a\u7684\u60c5\u666f\uff1a \u53d1\u751f\u4e86\u4ec0\u4e48\uff1f\u5982\u679c\u4f60\u67e5\u770b\u9876\u9762\u7684\u9876\u70b9\u987a\u5e8f\uff0c\u5c06\u770b\u5230\u5b83\u662f\u6309\u9006\u65f6\u9488\u5b9a\u4e49\u7684\u3002\u4f46\u8bf7\u8bb0\u4f4f\uff0c\u73af\u7ed5\u987a\u5e8f\u662f\u4ee5\u6444\u50cf\u673a\u4e3a\u89c6\u89d2\u3002\u5b9e\u9645\u4e0a\uff0c\u5982\u679c\u4f60\u8ba9\u4f4d\u79fb\u5f71\u54cd\u5929\u7a7a\u76d2\u4ee5\u4fbf\u80fd\u4ece\u5176\u4e0a\u65b9\u89c2\u5bdf\u5b83\u65f6\uff0c\u5219\u5f53\u4f60\u5728\u5929\u7a7a\u76d2\u5916\u65f6\uff0c\u5c06\u770b\u5230\u9876\u9762\u518d\u6b21\u6e32\u67d3\u3002 \u8ba9\u6211\u4eec\u6765\u63cf\u8ff0\u4e00\u4e0b\u53d1\u751f\u4e86\u4ec0\u4e48\u3002\u4e0b\u56fe\u5c55\u793a\u4e86\u5929\u7a7a\u76d2\u7acb\u65b9\u4f53\u7684\u9876\u9762\u4e09\u89d2\u5f62\u4e2d\u7684\u4e00\u4e2a\u4e09\u89d2\u5f62\uff0c\u5b83\u7531\u9006\u65f6\u9488\u987a\u5e8f\u6392\u5217\u7684\u4e09\u4e2a\u9876\u70b9\u5b9a\u4e49\uff1a \u4f46\u8981\u8bb0\u4f4f\uff0c\u6211\u4eec\u662f\u5728\u5929\u7a7a\u76d2\u91cc\uff0c\u5982\u679c\u4ece\u5185\u90e8\u89c2\u5bdf\u7acb\u65b9\u4f53\uff0c\u4f1a\u770b\u5230\u9876\u70b9\u662f\u6309\u987a\u65f6\u9488\u987a\u5e8f\u5b9a\u4e49\u7684\u3002 \u8fd9\u662f\u56e0\u4e3a\u5929\u7a7a\u76d2\u88ab\u5b9a\u4e49\u4e3a\u4ece\u5916\u90e8\u89c2\u5bdf\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u7ffb\u8f6c\u4e00\u4e9b\u9762\u7684\u5b9a\u4e49\uff0c\u4ee5\u4fbf\u5728\u542f\u7528\u9762\u5254\u9664\u65f6\u80fd\u6b63\u786e\u5730\u6e32\u67d3\u5b83\u3002 \u4f46\u8fd9\u4ecd\u6709\u66f4\u5927\u7684\u4f18\u5316\u7a7a\u95f4\u3002\u56de\u987e\u4e00\u4e0b\u6e32\u67d3\u6d41\u7a0b\uff0c\u5728 Renderer \u7c7b render \u65b9\u6cd5\u4e2d\uff0c\u6211\u4eec\u8981\u505a\u7684\u662f\u904d\u5386 GameItem \u6570\u7ec4\u5e76\u6e32\u67d3\u76f8\u5173\u7684 Mesh \u3002\u5bf9\u6bcf\u4e2a GameItem \uff0c\u6211\u4eec\u505a\u4e86\u4e0b\u8ff0\u5de5\u4f5c\uff1a \u8bbe\u7f6e\u6a21\u578b\u89c2\u5bdf\u77e9\u9635\uff08\u6bcf\u4e2a GameItem \u7684\u552f\u4e00\u503c\uff09\u3002 \u83b7\u53d6 GameItem \u50a8\u5b58\u7684 Mesh \u5e76\u7ed1\u5b9a\u7eb9\u7406\uff0c\u7ed1\u5b9aVAO\u5e76\u542f\u7528\u5176\u5c5e\u6027\u3002 \u6267\u884c\u8c03\u7528\u4ee5\u7ed8\u5236\u4e09\u89d2\u5f62\u3002 \u505c\u7528\u7eb9\u7406\u548cVAO\u3002 \u4f46\u5728\u73b0\u5728\u7684\u6e38\u620f\u4e2d\uff0c40,000\u4e2a GameItem \u90fd\u4f7f\u7528\u76f8\u540c\u7684 Mesh \uff0c\u800c\u6211\u4eec\u4e00\u6b21\u53c8\u4e00\u6b21\u5730\u91cd\u590d\u7b2c\u4e8c\u9879\u5230\u7b2c\u56db\u9879\u7684\u64cd\u4f5c\u3002\u8fd9\u4e0d\u662f\u5f88\u9ad8\u6548\uff0c\u8bf7\u8bb0\u4f4f\uff0c\u5bf9OpenGL\u51fd\u6570\u7684\u6bcf\u6b21\u8c03\u7528\u90fd\u662f\u6709\u6027\u80fd\u5f00\u9500\u7684\u672c\u5730\u8c03\u7528\u3002\u6b64\u5916\uff0c\u6211\u4eec\u8fd8\u5e94\u8be5\u5c3d\u91cf\u9650\u5236OpenGL\u4e2d\u7684\u72b6\u6001\u53d8\u5316\uff08\u7ed1\u5b9a\u548c\u505c\u7528\u7eb9\u7406\u3001VAO\u90fd\u662f\u72b6\u6001\u53d8\u5316\uff09\u3002 \u6211\u4eec\u9700\u8981\u6539\u53d8\u5f00\u53d1\u7684\u65b9\u5f0f\uff0c\u56f4\u7ed5\u7f51\u683c\u7ec4\u7ec7\u4ee3\u7801\u7ed3\u6784\uff0c\u56e0\u4e3a\u7ecf\u5e38\u6709\u8bb8\u591a\u6e38\u620f\u9879\u4f7f\u7528\u76f8\u540c\u7684\u7f51\u683c\u3002\u73b0\u5728\u6211\u4eec\u6709\u4e00\u4e2a\u6e38\u620f\u9879\u6570\u7ec4\uff0c\u6bcf\u9879\u90fd\u6307\u5411\u540c\u4e00\u4e2a\u7f51\u683c\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u4f5c\u4e3a\u66ff\u4ee3\uff0c\u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a\u7f51\u683c\u6620\u5c04\u8868\uff0c\u5176\u4e2d\u5305\u62ec\u50a8\u5b58\u5171\u4eab\u8be5\u7f51\u683c\u7684\u6240\u6709\u6e38\u620f\u9879\u3002 \u5bf9\u4e8e\u6bcf\u4e00\u4e2a Mesh \uff0c\u6e32\u67d3\u6b65\u9aa4\u5c06\u4f1a\u662f\uff1a \u83b7\u53d6\u4e0e GameItem \u76f8\u5173\u8054\u7684 Mesh \u5e76\u7ed1\u5b9a Mesh \u7eb9\u7406\uff0c\u7ed1\u5b9aVAO\u5e76\u542f\u7528\u5176\u5c5e\u6027\u3002 \u5bf9\u4e8e\u6bcf\u4e2a\u76f8\u5173\u7684 GameItem \uff1a a. \u8bbe\u7f6e\u6a21\u578b\u89c2\u5bdf\u77e9\u9635\uff08\u6bcf\u4e2a GameItem \u552f\u4e00\u7684\uff09\u3002 b. \u8c03\u7528\u7ed8\u5236\u4e09\u89d2\u5f62\u3002 \u89e3\u7ed1\u7eb9\u7406\u548cVAO\u3002 \u5728 Scene \u7c7b\u4e2d\u50a8\u5b58\u4e0b\u8ff0 Map \uff1a private Map<Mesh, List<GameItem>> meshMap; \u6211\u4eec\u4ecd\u6709 setGameItems \u65b9\u6cd5\uff0c\u4f46\u6211\u4eec\u4e0d\u53ea\u662f\u50a8\u5b58\u6570\u7ec4\uff0c\u800c\u662f\u6784\u9020\u7f51\u683c\u6620\u5c04\u8868\u3002 public void setGameItems(GameItem[] gameItems) { int numGameItems = gameItems != null ? gameItems.length : 0; for (int i=0; i<numGameItems; i++) { GameItem gameItem = gameItems[i]; Mesh mesh = gameItem.getMesh(); List<GameItem> list = meshMap.get(mesh); if ( list == null ) { list = new ArrayList<>(); meshMap.put(mesh, list); } list.add(gameItem); } } Mesh \u7c7b\u73b0\u5728\u6709\u4e00\u4e2a\u65b9\u6cd5\u6765\u6e32\u67d3\u4e0e\u5176\u76f8\u5173\u7684 GameItem \u5217\u8868\uff0c\u7136\u540e\u5c06\u7ed1\u5b9a\u548c\u89e3\u7ed1\u4ee3\u7801\u5206\u4e3a\u4e0d\u540c\u7684\u65b9\u6cd5\u3002 private void initRender() { Texture texture = material.getTexture(); if (texture != null) { // \u6fc0\u6d3b\u7b2c\u4e00\u4e2a\u7eb9\u7406\u5e93 glActiveTexture(GL_TEXTURE0); // \u7ed1\u5b9a\u7eb9\u7406 glBindTexture(GL_TEXTURE_2D, texture.getId()); } // \u7ed8\u5236\u7f51\u683c glBindVertexArray(getVaoId()); glEnableVertexAttribArray(0); glEnableVertexAttribArray(1); glEnableVertexAttribArray(2); } private void endRender() { // \u6062\u590d\u72b6\u6001 glDisableVertexAttribArray(0); glDisableVertexAttribArray(1); glDisableVertexAttribArray(2); glBindVertexArray(0); glBindTexture(GL_TEXTURE_2D, 0); } public void render() { initRender(); glDrawElements(GL_TRIANGLES, getVertexCount(), GL_UNSIGNED_INT, 0); endRender(); } public void renderList(List<GameItem> gameItems, Consumer<GameItem> consumer) { initRender(); for (GameItem gameItem : gameItems) { // \u8bbe\u7f6e\u6e38\u620f\u9879\u76ee\u6240\u9700\u7684\u6e32\u67d3\u6570\u636e consumer.accept(gameItem); // \u6e32\u67d3\u6e38\u620f\u9879\u76ee glDrawElements(GL_TRIANGLES, getVertexCount(), GL_UNSIGNED_INT, 0); } endRender(); } \u5982\u4f60\u6240\u89c1\uff0c\u6211\u4eec\u4ecd\u7136\u4fdd\u7559\u4e86\u65e7\u65b9\u6cd5\uff0c\u5b83\u8fd4\u56de\u4e00\u4e2a Mesh \uff0c\u8fd9\u662f\u8003\u8651\u5230\u5982\u679c\u53ea\u6709\u4e00\u4e2a GameItem \u7684\u60c5\u51b5\uff08\u8fd9\u53ef\u80fd\u5728\u5176\u4ed6\u60c5\u51b5\u4e0b\u4f7f\u7528\uff0c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u4e0d\u79fb\u9664\u5b83\uff09\u3002\u65b0\u7684\u65b9\u6cd5\u6e32\u67d3\u4e00\u4e2a List<GameItem> \uff0c\u5e76\u63a5\u53d7\u4e00\u4e2a Counsumer \u7c7b\u578b\u7684\u53c2\u6570\uff08\u4e00\u4e2a\u51fd\u6570\uff0c\u4f7f\u7528\u4e86Java8\u5f15\u5165\u7684\u51fd\u6570\u5f0f\u7f16\u7a0b\uff09\uff0c\u5b83\u5c06\u7528\u4e8e\u5728\u7ed8\u5236\u4e09\u89d2\u5f62\u4e4b\u524d\u4e3a\u6bcf\u4e2a GameItem \u8bbe\u7f6e\u7279\u5b9a\u7684\u5185\u5bb9\uff0c\u56e0\u4e3a\u4e0d\u5e0c\u671b Mesh \u7c7b\u4e0eUniform\u7684\u540d\u79f0\u548c\u8bbe\u7f6e\u8fd9\u4e9b\u53c2\u6570\u65f6\u6240\u6d89\u53ca\u7684\u53c2\u6570\u76f8\u8026\u5408\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u5b83\u6765\u8bbe\u7f6e\u6a21\u578b\u89c2\u5bdf\u77e9\u9635\u3002 \u5728 Renderer \u7c7b\u4e2d\u7684 renderScene \u65b9\u6cd5\u4f60\u53ef\u4ee5\u770b\u5230\uff0c\u6211\u4eec\u53ea\u9700\u904d\u5386\u7f51\u683c\u6620\u5c04\u8868\uff0c\u5e76\u901a\u8fc7Lambda\u8868\u8fbe\u5f0f\u8bbe\u7f6e\u6a21\u578b\u89c2\u5bdf\u77e9\u9635\u7684Uniform\u3002 for (Mesh mesh : mapMeshes.keySet()) { sceneShaderProgram.setUniform(\"material\", mesh.getMaterial()); mesh.renderList(mapMeshes.get(mesh), (GameItem gameItem) -> { Matrix4f modelViewMatrix = transformation.buildModelViewMatrix(gameItem, viewMatrix); sceneShaderProgram.setUniform(\"modelViewMatrix\", modelViewMatrix); } ); } \u53ef\u4ee5\u505a\u7684\u53e6\u4e00\u9879\u4f18\u5316\u662f\uff0c\u6211\u4eec\u5728\u6e32\u67d3\u5468\u671f\u4e2d\u521b\u5efa\u4e86\u5927\u91cf\u5bf9\u8c61\u3002\u7279\u522b\u662f\uff0c\u6211\u4eec\u521b\u5efa\u4e86\u592a\u591a\u7684 Matrix4f \u5b9e\u4f8b\uff0c\u5b83\u4eec\u4e3a\u6bcf\u4e2a GameItem \u5b9e\u4f8b\u90fd\u4fdd\u5b58\u4e86\u4e00\u4e2a\u6a21\u578b\u89c6\u56fe\u77e9\u9635\u3002\u6211\u4eec\u5e94\u5728 Transformation \u7c7b\u4e2d\u521b\u5efa\u7279\u5b9a\u7684\u77e9\u9635\uff0c\u5e76\u91cd\u7528\u76f8\u540c\u7684\u5b9e\u4f8b\u3002\u5982\u679c\u4f60\u67e5\u9605\u6e90\u4ee3\u7801\uff0c\u4f1a\u770b\u5230\u6211\u4eec\u5df2\u7ecf\u66f4\u6539\u4e86\u65b9\u6cd5\u7684\u540d\u79f0\uff0c getXX \u65b9\u6cd5\u53ea\u8fd4\u56de\u50a8\u5b58\u7684\u77e9\u9635\u5b9e\u4f8b\uff0c\u5e76\u4e14\u4efb\u4f55\u66f4\u6539\u77e9\u9635\u503c\u7684\u65b9\u6cd5\u90fd\u79f0\u4e3a buildXX \uff0c\u4ee5\u9610\u660e\u5176\u7528\u9014\u3002 \u6211\u4eec\u4e5f\u907f\u514d\u4e86\u6bcf\u6b21\u4e3a\u77e9\u9635\u8bbe\u7f6eUniform\u65f6\u6784\u9020\u65b0\u7684 FloatBuffer \u5b9e\u4f8b\uff0c\u5e76\u79fb\u9664\u4e86\u5176\u4ed6\u4e00\u4e9b\u65e0\u7528\u7684\u5b9e\u4f8b\u5316\u64cd\u4f5c\u3002\u6709\u4e86\u8fd9\u4e9b\uff0c\u4f60\u73b0\u5728\u53ef\u4ee5\u770b\u5230\u66f4\u6d41\u7545\u66f4\u7075\u6d3b\u7684\u6e32\u67d3\u4e86\u3002 \u4f60\u53ef\u4ee5\u5728\u6e90\u4ee3\u7801\u4e2d\u67e5\u9605\u6240\u6709\u7ec6\u8282\u3002","title":"\u4e00\u4e9b\u4f18\u5316"},{"location":"14-height-maps/","text":"\u9ad8\u5ea6\u56fe\uff08Height Maps\uff09 \u672c\u7ae0\u4e2d\u6211\u4eec\u5c06\u5b66\u4e60\u5982\u4f55\u4f7f\u7528\u9ad8\u5ea6\u56fe\u521b\u5efa\u590d\u6742\u7684\u5730\u5f62\u3002\u5728\u5f00\u59cb\u524d\uff0c\u4f60\u4f1a\u6ce8\u610f\u5230\u6211\u4eec\u505a\u4e86\u4e00\u4e9b\u91cd\u6784\u3002\u6211\u4eec\u521b\u5efa\u4e86\u4e00\u4e9b\u65b0\u7684\u5305\u548c\u79fb\u52a8\u4e86\u4e00\u4e9b\u7c7b\u4ee5\u66f4\u597d\u5730\u7ec4\u7ec7\u5b83\u4eec\u3002\u4f60\u53ef\u4ee5\u5728\u6e90\u4ee3\u7801\u4e2d\u4e86\u89e3\u8fd9\u4e9b\u6539\u53d8\u3002 \u6240\u4ee5\u4ec0\u4e48\u662f\u9ad8\u5ea6\u56fe\uff1f\u9ad8\u5ea6\u56fe\u662f\u7528\u4e8e\u751f\u6210\u4e09\u7ef4\u5730\u5f62\u7684\u56fe\u50cf\uff0c\u5b83\u4f7f\u7528\u50cf\u7d20\u989c\u8272\u6765\u83b7\u53d6\u8868\u9762\u9ad8\u5ea6\u3002\u9ad8\u5ea6\u56fe\u56fe\u50cf\u901a\u5e38\u662f\u7070\u5ea6\u56fe\uff0c\u5b83\u53ef\u4ee5\u7531 Terragen \u7b49\u8f6f\u4ef6\u751f\u6210\u3002\u4e00\u5f20\u9ad8\u5ea6\u56fe\u56fe\u50cf\u770b\u8d77\u6765\u5c31\u50cf\u8fd9\u6837\u3002 \u4e0a\u56fe\u5c31\u50cf\u4f60\u4fef\u89c6\u4e00\u7247\u9646\u5730\u4e00\u6837\u3002\u5229\u7528\u4e0a\u56fe\uff0c\u6211\u4eec\u5c06\u6784\u5efa\u7531\u9876\u70b9\u7ec4\u6210\u7684\u4e09\u89d2\u5f62\u6240\u7ec4\u6210\u7684\u7f51\u683c\u3002\u6bcf\u4e2a\u9876\u70b9\u7684\u9ad8\u5ea6\u5c06\u6839\u636e\u56fe\u50cf\u7684\u6bcf\u4e2a\u50cf\u7d20\u7684\u989c\u8272\u6765\u8ba1\u7b97\u3002\u9ed1\u8272\u662f\u6700\u4f4e\uff0c\u767d\u8272\u662f\u6700\u9ad8\u3002 \u6211\u4eec\u5c06\u4e3a\u56fe\u50cf\u7684\u6bcf\u4e2a\u50cf\u7d20\u521b\u5efa\u4e00\u7ec4\u9876\u70b9\uff0c\u8fd9\u4e9b\u9876\u70b9\u5c06\u7ec4\u6210\u4e09\u89d2\u5f62\uff0c\u8fd9\u4e9b\u4e09\u89d2\u5f62\u5c06\u7ec4\u6210\u4e0b\u56fe\u6240\u793a\u7684\u7f51\u683c\u3002 \u7f51\u683c\u5c06\u7ec4\u6210\u4e00\u4e2a\u5de8\u5927\u7684\u56db\u8fb9\u5f62\uff0c\u5b83\u5c06\u4f1a\u5728X\u548cZ\u8f74\u4e0a\u6e32\u67d3\uff0c\u5e76\u6839\u636e\u50cf\u7d20\u989c\u8272\u6765\u6539\u53d8\u5b83\u7684Y\u8f74\u9ad8\u5ea6\u3002 \u7531\u9ad8\u5ea6\u56fe\u521b\u5efa\u4e09\u7ef4\u5730\u5f62\u7684\u8fc7\u7a0b\u53ef\u6982\u62ec\u4e3a\u4ee5\u4e0b\u6b65\u9aa4\uff1a * \u52a0\u8f7d\u50a8\u5b58\u9ad8\u5ea6\u56fe\u7684\u56fe\u50cf(\u6211\u4eec\u5c06\u4f7f\u7528\u4e00\u4e2a BufferedImage \u5b9e\u4f8b\u4ee5\u83b7\u53d6\u6bcf\u4e2a\u50cf\u7d20)\u3002 * \u4e3a\u6bcf\u4e2a\u56fe\u50cf\u50cf\u7d20\u521b\u5efa\u4e00\u4e2a\u9876\u70b9\uff0c\u5176\u9ad8\u5ea6\u57fa\u4e8e\u50cf\u7d20\u989c\u8272\u3002 * \u5c06\u6b63\u786e\u7684\u7eb9\u7406\u5750\u6807\u5206\u914d\u7ed9\u9876\u70b9\u3002 * \u8bbe\u7f6e\u7d22\u5f15\u4ee5\u7ed8\u5236\u4e0e\u9876\u70b9\u76f8\u5173\u7684\u4e09\u89d2\u5f62\u3002 \u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a HeightMapMesh \u7684\u7c7b\uff0c\u8be5\u7c7b\u5c06\u57fa\u4e8e\u9ad8\u5ea6\u56fe\u6309\u4ee5\u4e0a\u6b65\u9aa4\u521b\u5efa\u4e00\u4e2a Mesh \u3002\u8ba9\u6211\u4eec\u5148\u770b\u770b\u8be5\u7c7b\u5b9a\u4e49\u7684\u5e38\u91cf\uff1a private static final int MAX_COLOUR = 255 * 255 * 255; \u5982\u4e0a\u6240\u8ff0\uff0c\u6211\u4eec\u5c06\u57fa\u4e8e\u9ad8\u5ea6\u56fe\u56fe\u50cf\u7684\u6bcf\u4e2a\u50cf\u7d20\u7684\u989c\u8272\u6765\u8ba1\u7b97\u6bcf\u4e2a\u9876\u70b9\u7684\u9ad8\u5ea6\u3002\u56fe\u50cf\u901a\u5e38\u662f\u7070\u5ea6\u56fe\uff0c\u5bf9\u4e8ePNG\u56fe\u50cf\u6765\u8bf4\uff0c\u8fd9\u610f\u5473\u7740\u6bcf\u4e2a\u50cf\u7d20\u7684\u6bcf\u4e2aRGB\u503c\u53ef\u4ee5\u57280\u5230255\u4e4b\u95f4\u53d8\u5316\uff0c\u56e0\u6b64\u6211\u4eec\u6709256\u4e2a\u503c\u6765\u8868\u793a\u4e0d\u540c\u7684\u9ad8\u5ea6\u3002\u8fd9\u53ef\u80fd\u8db3\u591f\u4e86\uff0c\u4f46\u5982\u679c\u7cbe\u5ea6\u4e0d\u591f\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e09\u4e2aRGB\u503c\u4ee5\u6709\u66f4\u591a\u7684\u503c\uff0c\u5728\u6b64\u60c5\u51b5\u4e0b\uff0c\u9ad8\u5ea6\u8ba1\u7b97\u8303\u56f4\u4e3a0\u5230255^3\u3002\u6211\u4eec\u5c06\u4f7f\u7528\u7b2c\u4e8c\u79cd\u65b9\u6cd5\uff0c\u56e0\u6b64\u6211\u4eec\u4e0d\u5c40\u9650\u4e8e\u7070\u5ea6\u56fe\u3002 \u63a5\u4e0b\u6765\u7684\u5e38\u91cf\u662f\uff1a private static final float STARTX = -0.5f; private static final float STARTZ = -0.5f; \u7f51\u683c\u5c06\u7531\u4e00\u7ec4\u9876\u70b9\uff08\u4e00\u4e2a\u9876\u70b9\u5bf9\u5e94\u4e00\u4e2a\u50cf\u7d20\uff09\u6784\u6210\uff0c\u5176X\u548cZ\u5750\u6807\u7684\u8303\u56f4\u5982\u4e0b * X\u8f74\u7684\u8303\u56f4\u4e3a[-0.5, 0.5]\uff0c\u5373[ STARTX , -STARTX ]\u3002 * Z\u8f74\u7684\u8303\u56f4\u4e3a[-0.5, 0.5]\uff0c\u5373[ STARTZ , -STARTZ ]\u3002 \u4e0d\u7528\u592a\u8fc7\u62c5\u5fc3\u8fd9\u4e9b\u503c\uff0c\u7a0d\u540e\u5f97\u5230\u7684\u7f51\u683c\u53ef\u4ee5\u88ab\u7f29\u653e\u4ee5\u9002\u5e94\u4e16\u754c\u7684\u5927\u5c0f\u3002\u5173\u4e8eY\u8f74\uff0c\u6211\u4eec\u5c06\u8bbe\u7f6e minY \u548c maxY \u4e24\u4e2a\u53c2\u6570\uff0c\u7528\u4e8e\u8bbe\u7f6eY\u5750\u6807\u7684\u6700\u4f4e\u548c\u6700\u9ad8\u503c\u3002\u8fd9\u4e9b\u53c2\u6570\u5e76\u4e0d\u662f\u5e38\u6570\uff0c\u56e0\u4e3a\u6211\u4eec\u53ef\u80fd\u5e0c\u671b\u5728\u8fd0\u884c\u65f6\u66f4\u6539\u5b83\u4eec\uff0c\u800c\u4e0d\u4f7f\u7528\u7f29\u653e\u3002\u6700\u540e\uff0c\u5730\u5f62\u5c06\u5305\u542b\u5728\u8303\u56f4\u4e3a [STARTX, -STARTX] \uff0c [minY, maxY] \uff0c [STARTZ, -STARTZ] \u7684\u7acb\u65b9\u4f53\u5185\u3002 \u7f51\u683c\u5c06\u4f1a\u5728 HeightMapMesh \u7c7b\u7684\u6784\u9020\u51fd\u6570\u4e2d\u521b\u5efa\uff0c\u8be5\u7c7b\u7684\u5b9a\u4e49\u5982\u4e0b\u3002 public HeightMapMesh(float minY, float maxY, String heightMapFile, String textureFile, int textInc) throws Exception { \u5b83\u63a5\u6536Y\u8f74\u7684\u6700\u5c0f\u503c\u548c\u6700\u5927\u503c\uff0c\u88ab\u7528\u4f5c\u9ad8\u5ea6\u56fe\u7684\u56fe\u50cf\u6587\u4ef6\u540d\u548c\u8981\u4f7f\u7528\u7684\u7eb9\u7406\u6587\u4ef6\u540d\u3002\u5b83\u8fd8\u63a5\u53d7\u4e00\u4e2a\u540d\u4e3a textInc \u7684\u6574\u6570\uff0c\u8fd9\u7a0d\u540e\u518d\u8bf4\u660e\u3002 \u6211\u4eec\u5728\u6784\u9020\u51fd\u6570\u4e2d\u505a\u7684\u7b2c\u4e00\u4ef6\u4e8b\u5c31\u662f\u5c06\u9ad8\u5ea6\u56fe\u56fe\u50cf\u52a0\u8f7d\u5230 BufferedImage \u5b9e\u4f8b\u4e2d\u3002 this.minY = minY; this.maxY = maxY; PNGDecoder decoder = new PNGDecoder(getClass().getResourceAsStream(heightMapFile)); int height = decoder.getHeight(); int width = decoder.getWidth(); ByteBuffer buf = ByteBuffer.allocateDirect( 4 * decoder.getWidth() * decoder.getHeight()); decoder.decode(buf, decoder.getWidth() * 4, PNGDecoder.Format.RGBA); buf.flip(); \u7136\u540e\uff0c\u6211\u4eec\u5c06\u7eb9\u7406\u6587\u4ef6\u8f7d\u5165\u5230\u4e00\u4e2a ByteBuffer \u4e2d\uff0c\u5e76\u8bbe\u7f6e\u6784\u9020 Mesh \u6240\u9700\u7684\u53d8\u91cf\u3002 incx \u548c incz \u53d8\u91cf\u5c06\u50a8\u5b58\u6bcf\u4e2a\u9876\u70b9\u7684X\u6216Z\u5750\u6807\u4e4b\u95f4\u7684\u6700\u5c0f\u95f4\u9694\uff0c\u56e0\u6b64 Mesh \u5305\u542b\u5728\u4e0a\u8ff0\u533a\u57df\u4e2d\u3002 Texture texture = new Texture(textureFile); float incx = getWidth() / (width - 1); float incz = Math.abs(STARTZ * 2) / (height - 1); List<Float> positions = new ArrayList(); List<Float> textCoords = new ArrayList(); List<Integer> indices = new ArrayList(); \u4e4b\u540e\uff0c\u6211\u4eec\u5c06\u904d\u5386\u56fe\u50cf\uff0c\u4e3a\u6bcf\u4e2a\u50cf\u7d20\u521b\u5efa\u4e00\u4e2a\u9876\u70b9\uff0c\u8bbe\u7f6e\u5176\u7eb9\u7406\u5750\u6807\u4e0e\u7d22\u5f15\uff0c\u4ee5\u6b63\u786e\u5730\u5b9a\u4e49\u7ec4\u6210 Mesh \u7684\u4e09\u89d2\u5f62\u3002 for (int row = 0; row < height; row++) { for (int col = 0; col < width; col++) { // \u4e3a\u5f53\u524d\u4f4d\u7f6e\u521b\u5efa\u9876\u70b9 positions.add(STARTX + col * incx); // x positions.add(getHeight(col, row, width, buf)); // y positions.add(STARTZ + row * incz); // z // \u8bbe\u7f6e\u7eb9\u7406\u5750\u6807 textCoords.add((float) textInc * (float) col / (float) width); textCoords.add((float) textInc * (float) row / (float) height); // \u521b\u5efa\u7d22\u5f15 if (col < width - 1 && row < height - 1) { int leftTop = row * width + col; int leftBottom = (row + 1) * width + col; int rightBottom = (row + 1) * width + col + 1; int rightTop = row * width + col + 1; indices.add(rightTop); indices.add(leftBottom); indices.add(leftTop); indices.add(rightBottom); indices.add(leftBottom); indices.add(rightTop); } } } \u521b\u5efa\u9876\u70b9\u5750\u6807\u7684\u8fc7\u7a0b\u662f\u4e0d\u9700\u8981\u89e3\u91ca\u7684\u3002\u73b0\u5728\u5148\u522b\u7ba1\u4e3a\u4ec0\u4e48\u6211\u4eec\u7528\u4e00\u4e2a\u6570\u5b57\u4e58\u4ee5\u7eb9\u7406\u5750\u6807\u4ee5\u53ca\u5982\u4f55\u8ba1\u7b97\u9ad8\u5ea6\u3002\u4f60\u53ef\u4ee5\u770b\u5230\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u9876\u70b9\uff0c\u6211\u4eec\u5b9a\u4e49\u4e24\u4e2a\u4e09\u89d2\u5f62\u7684\u7d22\u5f15(\u9664\u975e\u73b0\u5728\u662f\u6700\u540e\u4e00\u884c\u6216\u6700\u540e\u4e00\u5217)\u3002\u8ba9\u6211\u4eec\u7528\u4e00\u4e2a 3\u00d73 \u7684\u56fe\u50cf\u6765\u60f3\u8c61\u5b83\u4eec\u662f\u5982\u4f55\u6784\u9020\u7684\u3002\u4e00\u4e2a 3\u00d73 \u7684\u56fe\u50cf\u5305\u542b9\u4e2a\u9876\u70b9\uff0c\u6bcf\u56e0\u6b64\u6709 2\u00d74 \u4e2a\u4e09\u89d2\u5f62\u7ec4\u62104\u4e2a\u6b63\u65b9\u5f62\u3002\u4e0b\u56fe\u5c55\u793a\u4e86\u7f51\u683c\uff0c\u6bcf\u4e2a\u9876\u70b9\u88ab\u547d\u540d\u4e3a Vrc (r\uff1a\u884c\uff0cc\uff1a\u5217)\u3002 \u5f53\u5904\u7406\u7b2c\u4e00\u4e2a\u9876\u70b9(V00)\u65f6\uff0c\u6211\u4eec\u5728\u7ea2\u8272\u9634\u5f71\u5904\u5b9a\u4e49\u4e86\u4e24\u4e2a\u4e09\u89d2\u5f62\u7684\u7d22\u5f15\u3002 \u5f53\u5904\u7406\u7b2c\u4e8c\u4e2a\u9876\u70b9(V01)\u65f6\uff0c\u6211\u4eec\u5728\u7ea2\u8272\u9634\u5f71\u5904\u53c8\u5b9a\u4e49\u4e86\u4e24\u4e2a\u4e09\u89d2\u5f62\u7684\u7d22\u5f15\u3002\u4f46\u5f53\u5904\u7406\u7b2c\u4e09\u4e2a\u9876\u70b9(V02)\u65f6\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u5b9a\u4e49\u66f4\u591a\u7684\u7d22\u5f15\uff0c\u8be5\u884c\u7684\u6240\u6709\u4e09\u89d2\u5f62\u90fd\u5df2\u88ab\u5b9a\u4e49\u3002 \u4f60\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u60f3\u5230\u5176\u4ed6\u9876\u70b9\u7684\u5904\u7406\u8fc7\u7a0b\u662f\u5982\u4f55\u8fdb\u884c\u7684\u3002\u73b0\u5728\uff0c\u4e00\u65e6\u521b\u5efa\u4e86\u6240\u6709\u7684\u9876\u70b9\u4f4d\u7f6e\u3001\u7eb9\u7406\u5750\u6807\u548c\u7d22\u5f15\uff0c\u6211\u4eec\u5c31\u53ea\u9700\u8981\u7528\u6240\u6709\u8fd9\u4e9b\u6570\u636e\u521b\u5efa Mesh \u548c\u76f8\u5173\u7684 Material \u3002 float[] posArr = Utils.listToArray(positions); int[] indicesArr = indices.stream().mapToInt(i -> i).toArray(); float[] textCoordsArr = Utils.listToArray(textCoords); float[] normalsArr = calcNormals(posArr, width, height); this.mesh = new Mesh(posArr, textCoordsArr, normalsArr, indicesArr); Material material = new Material(texture, 0.0f); mesh.setMaterial(material); \u4f60\u53ef\u4ee5\u770b\u5230\uff0c\u6211\u4eec\u6839\u636e\u9876\u70b9\u4f4d\u7f6e\u8ba1\u7b97\u6cd5\u7ebf\u3002\u5728\u770b\u5982\u4f55\u8ba1\u7b97\u6cd5\u7ebf\u4e4b\u524d\uff0c\u6765\u770b\u770b\u5982\u4f55\u83b7\u53d6\u9ad8\u5ea6\u5427\u3002\u6211\u4eec\u5df2\u7ecf\u521b\u5efa\u4e86\u4e00\u4e2a\u540d\u4e3a getHeight \u7684\u65b9\u6cd5\uff0c\u5b83\u8d1f\u8d23\u8ba1\u7b97\u9876\u70b9\u7684\u9ad8\u5ea6\u3002 private float getHeight(int x, int z, int width, ByteBuffer buffer) { byte r = buffer.get(x * 4 + 0 + z * 4 * width); byte g = buffer.get(x * 4 + 1 + z * 4 * width); byte b = buffer.get(x * 4 + 2 + z * 4 * width); byte a = buffer.get(x * 4 + 3 + z * 4 * width); int argb = ((0xFF & a) << 24) | ((0xFF & r) << 16) | ((0xFF & g) << 8) | (0xFF & b); return this.minY + Math.abs(this.maxY - this.minY) * ((float) argb / (float) MAX_COLOUR); } \u8be5\u65b9\u6cd5\u63a5\u53d7\u50cf\u7d20\u7684X\u548cY\u5750\u6807\uff0c\u56fe\u50cf\u7684\u5bbd\u5ea6\u4ee5\u53ca\u4e0e\u4e4b\u76f8\u5173\u7684 ByteBuffer \uff0c\u8fd4\u56deRGB\u989c\u8272(R\u3001G\u3001B\u5206\u91cf\u4e4b\u548c)\u5e76\u8ba1\u7b97\u5305\u542b\u5728 minY \u548c maxY \u4e4b\u95f4\u7684\u503c( minY \u4e3a\u9ed1\u8272\uff0c maxY \u4e3a\u767d\u8272)\u3002 \u4f60\u53ef\u4ee5\u4f7f\u7528 BufferedImage \u6765\u7f16\u5199\u4e00\u4e2a\u66f4\u7b80\u5355\u7684\u65b9\u6cd5\uff0c\u5b83\u6709\u66f4\u65b9\u4fbf\u7684\u65b9\u6cd5\u6765\u83b7\u5f97RGB\u503c\uff0c\u4f46\u8fd9\u5c06\u4f7f\u7528AWT\u3002\u8bb0\u4f4fAWT\u4e0d\u80fd\u5f88\u597d\u7684\u517c\u5bb9OSX\uff0c\u6240\u4ee5\u5c3d\u91cf\u907f\u514d\u4f7f\u7528\u5b83\u7684\u7c7b\u3002 \u73b0\u5728\u6765\u770b\u770b\u5982\u4f55\u8ba1\u7b97\u7eb9\u7406\u5750\u6807\u3002\u7b2c\u4e00\u4e2a\u65b9\u6cd5\u662f\u5c06\u7eb9\u7406\u8986\u76d6\u6574\u4e2a\u7f51\u683c\uff0c\u5de6\u4e0a\u89d2\u7684\u9876\u70b9\u7eb9\u7406\u5750\u6807\u4e3a(0, 0)\uff0c\u53f3\u4e0b\u89d2\u7684\u9876\u70b9\u7eb9\u7406\u5750\u6807\u4e3a(1, 1)\u3002\u8fd9\u79cd\u65b9\u6cd5\u7684\u95ee\u9898\u662f\uff0c\u7eb9\u7406\u5fc5\u987b\u662f\u5de8\u5927\u7684\uff0c\u4ee5\u4fbf\u83b7\u5f97\u826f\u597d\u7684\u6e32\u67d3\u6548\u679c\uff0c\u5426\u5219\u7eb9\u7406\u5c06\u4f1a\u88ab\u8fc7\u5ea6\u62c9\u4f38\u3002 \u4f46\u6211\u4eec\u4ecd\u7136\u53ef\u4ee5\u4f7f\u7528\u975e\u5e38\u5c0f\u7684\u7eb9\u7406\uff0c\u901a\u8fc7\u4f7f\u7528\u9ad8\u6548\u7684\u6280\u672f\u6765\u83b7\u5f97\u5f88\u597d\u7684\u6548\u679c\u3002\u5982\u679c\u6211\u4eec\u8bbe\u7f6e\u8d85\u51fa[1, 1]\u8303\u56f4\u7684\u7eb9\u7406\u5750\u6807\uff0c\u6211\u4eec\u5c06\u56de\u5230\u539f\u70b9\u5e76\u91cd\u65b0\u5f00\u59cb\u8ba1\u7b97\u3002\u4e0b\u56fe\u8868\u793a\u5728\u51e0\u4e2a\u6b63\u65b9\u5f62\u4e2d\u5e73\u94fa\u76f8\u540c\u7684\u7eb9\u7406\uff0c\u5e76\u8d85\u51fa\u4e86[1, 1]\u8303\u56f4\u3002 \u8fd9\u662f\u6211\u4eec\u5728\u8bbe\u7f6e\u7eb9\u7406\u5750\u6807\u65f6\u6240\u8981\u505a\u7684\u3002\u6211\u4eec\u5c06\u4e00\u4e2a\u53c2\u6570\u4e58\u4ee5\u7eb9\u7406\u5750\u6807(\u8ba1\u7b97\u597d\u50cf\u6574\u4e2a\u7f51\u683c\u88ab\u7eb9\u7406\u5305\u88f9\u7684\u60c5\u51b5)\uff0c\u5373 textInc \u53c2\u6570\uff0c\u4ee5\u589e\u52a0\u5728\u76f8\u90bb\u9876\u70b9\u4e4b\u95f4\u4f7f\u7528\u7684\u7eb9\u7406\u50cf\u7d20\u6570\u3002 \u76ee\u524d\u552f\u4e00\u6ca1\u6709\u89e3\u51b3\u7684\u662f\u6cd5\u7ebf\u8ba1\u7b97\u3002\u8bb0\u4f4f\u6211\u4eec\u9700\u8981\u6cd5\u7ebf\uff0c\u5149\u7167\u624d\u80fd\u6b63\u786e\u5730\u5e94\u7528\u4e8e\u5730\u5f62\u3002\u6ca1\u6709\u6cd5\u7ebf\uff0c\u65e0\u8bba\u5149\u7167\u5982\u4f55\uff0c\u5730\u5f62\u5c06\u4ee5\u76f8\u540c\u7684\u989c\u8272\u6e32\u67d3\u3002\u6211\u4eec\u5728\u8fd9\u91cc\u4f7f\u7528\u7684\u65b9\u6cd5\u4e0d\u4e00\u5b9a\u662f\u6700\u9ad8\u6548\u7684\uff0c\u4f46\u5b83\u5c06\u5e2e\u52a9\u4f60\u7406\u89e3\u5982\u4f55\u81ea\u52a8\u8ba1\u7b97\u6cd5\u7ebf\u3002\u5982\u679c\u4f60\u641c\u7d22\u5176\u4ed6\u89e3\u51b3\u65b9\u6848\uff0c\u53ef\u80fd\u4f1a\u53d1\u73b0\u66f4\u6709\u6548\u7684\u65b9\u6cd5\uff0c\u53ea\u4f7f\u7528\u76f8\u90bb\u70b9\u7684\u9ad8\u5ea6\u800c\u4e0d\u9700\u8981\u505a\u4ea4\u53c9\u76f8\u4e58\u64cd\u4f5c\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u8fd9\u4ec5\u9700\u8981\u5728\u542f\u52a8\u65f6\u5b8c\u6210\uff0c\u8fd9\u91cc\u7684\u65b9\u6cd5\u4e0d\u4f1a\u5bf9\u6027\u80fd\u9020\u6210\u592a\u5927\u7684\u635f\u5bb3\u3002 \u8ba9\u6211\u4eec\u7528\u56fe\u89e3\u7684\u65b9\u5f0f\u89e3\u91ca\u5982\u4f55\u8ba1\u7b97\u4e00\u4e2a\u6cd5\u7ebf\u503c\u3002\u5047\u8bbe\u6211\u4eec\u6709\u4e00\u4e2a\u540d\u4e3a P0 \u7684\u9876\u70b9\u3002\u6211\u4eec\u9996\u5148\u8ba1\u7b97\u5176\u5468\u56f4\u6bcf\u4e2a\u9876\u70b9( P1 , P2 , P3 , P4 )\u548c\u4e0e\u8fde\u63a5\u8fd9\u4e9b\u70b9\u7684\u9762\u76f8\u5207\u7684\u5411\u91cf\u3002\u8fd9\u4e9b\u5411\u91cf( V1 , V2 , V3 , V4 )\u662f\u901a\u8fc7\u5c06\u6bcf\u4e2a\u76f8\u90bb\u70b9\u4e0e P0 \u76f8\u51cf(\u4f8b\u5982 V1 = P1 - P0 )\u5f97\u5230\u7684\u3002 \u7136\u540e\uff0c\u6211\u4eec\u8ba1\u7b97\u8fde\u63a5\u6bcf\u4e00\u4e2a\u76f8\u90bb\u70b9\u7684\u5e73\u9762\u7684\u6cd5\u7ebf\u3002\u8fd9\u662f\u4e0e\u4e4b\u524d\u8ba1\u7b97\u5f97\u5230\u7684\u5411\u91cf\u4ea4\u53c9\u76f8\u4e58\u8ba1\u7b97\u7684\u3002\u4f8b\u5982\uff0c\u5411\u91cf V1 \u4e0e V2 \u6240\u5728\u7684\u5e73\u9762(\u84dd\u8272\u9634\u5f71\u90e8\u5206)\u7684\u6cd5\u7ebf\u662f\u7531 V1 \u548c V2 \u4ea4\u53c9\u76f8\u4e58\u5f97\u5230\u7684\uff0c\u5373 V12 = V1 \u00d7 V2 \u3002 \u5982\u679c\u6211\u4eec\u8ba1\u7b97\u5b8c\u6bd5\u5176\u4ed6\u5e73\u9762\u7684\u6cd5\u7ebf( V23 = V2 \u00d7 V3 \uff0c V34 = V3 \u00d7 V4 \uff0c V41 = V4 \u00d7 V1 )\uff0c\u5219\u6cd5\u7ebf P0 \u5c31\u662f\u5468\u56f4\u6240\u6709\u5e73\u9762\u6cd5\u7ebf(\u5f52\u4e00\u5316\u540e)\u4e4b\u548c\uff1a N0 = V12 + V23 + V34 + V41 \u3002 \u6cd5\u7ebf\u8ba1\u7b97\u7684\u65b9\u6cd5\u5b9e\u73b0\u5982\u4e0b\u6240\u793a\u3002 private float[] calcNormals(float[] posArr, int width, int height) { Vector3f v0 = new Vector3f(); Vector3f v1 = new Vector3f(); Vector3f v2 = new Vector3f(); Vector3f v3 = new Vector3f(); Vector3f v4 = new Vector3f(); Vector3f v12 = new Vector3f(); Vector3f v23 = new Vector3f(); Vector3f v34 = new Vector3f(); Vector3f v41 = new Vector3f(); List<Float> normals = new ArrayList<>(); Vector3f normal = new Vector3f(); for (int row = 0; row < height; row++) { for (int col = 0; col < width; col++) { if (row > 0 && row < height -1 && col > 0 && col < width -1) { int i0 = row*width*3 + col*3; v0.x = posArr[i0]; v0.y = posArr[i0 + 1]; v0.z = posArr[i0 + 2]; int i1 = row*width*3 + (col-1)*3; v1.x = posArr[i1]; v1.y = posArr[i1 + 1]; v1.z = posArr[i1 + 2]; v1 = v1.sub(v0); int i2 = (row+1)*width*3 + col*3; v2.x = posArr[i2]; v2.y = posArr[i2 + 1]; v2.z = posArr[i2 + 2]; v2 = v2.sub(v0); int i3 = (row)*width*3 + (col+1)*3; v3.x = posArr[i3]; v3.y = posArr[i3 + 1]; v3.z = posArr[i3 + 2]; v3 = v3.sub(v0); int i4 = (row-1)*width*3 + col*3; v4.x = posArr[i4]; v4.y = posArr[i4 + 1]; v4.z = posArr[i4 + 2]; v4 = v4.sub(v0); v1.cross(v2, v12); v12.normalize(); v2.cross(v3, v23); v23.normalize(); v3.cross(v4, v34); v34.normalize(); v4.cross(v1, v41); v41.normalize(); normal = v12.add(v23).add(v34).add(v41); normal.normalize(); } else { normal.x = 0; normal.y = 1; normal.z = 0; } normal.normalize(); normals.add(normal.x); normals.add(normal.y); normals.add(normal.z); } } return Utils.listToArray(normals); } \u6700\u540e\uff0c\u4e3a\u4e86\u521b\u5efa\u66f4\u5927\u7684\u5730\u5f62\uff0c\u6211\u4eec\u6709\u4e24\u4e2a\u9009\u62e9\uff1a * \u521b\u5efa\u66f4\u5927\u7684\u9ad8\u5ea6\u56fe * \u91cd\u7528\u9ad8\u5ea6\u56fe\u5e76\u5c06\u5176\u5e73\u94fa\u5728\u4e09\u7ef4\u7a7a\u95f4\u4e2d\u3002\u9ad8\u5ea6\u56fe\u5c06\u50cf\u4e00\u4e2a\u5730\u5f62\u5757\uff0c\u5728\u4e16\u754c\u4e0a\u50cf\u74f7\u7816\u4e00\u6837\u5e73\u79fb\u3002\u4e3a\u4e86\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u9ad8\u5ea6\u56fe\u8fb9\u7f18\u7684\u50cf\u7d20\u5fc5\u987b\u662f\u76f8\u540c\u7684(\u5de6\u4fa7\u8fb9\u7f18\u5fc5\u987b\u4e0e\u53f3\u4fa7\u76f8\u540c\uff0c\u4e0a\u4fa7\u8fb9\u7f18\u5fc5\u987b\u4e0e\u4e0b\u4fa7\u76f8\u540c)\uff0c\u4ee5\u907f\u514d\u5757\u4e4b\u95f4\u7684\u95f4\u9699\u3002 \u6211\u4eec\u5c06\u4f7f\u7528\u7b2c\u4e8c\u79cd\u65b9\u6cd5(\u5e76\u9009\u62e9\u9002\u5f53\u7684\u9ad8\u5ea6\u56fe)\u3002\u4e3a\u4e86\u505a\u5230\u5b83\uff0c\u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a Terrain \u7684\u7c7b\uff0c\u8be5\u7c7b\u5c06\u521b\u5efa\u4e00\u4e2a\u6b63\u65b9\u5f62\u7684\u9ad8\u5ea6\u56fe\u5757\uff0c\u5b9a\u4e49\u5982\u4e0b\u3002 package org.lwjglb.engine.items; import org.lwjglb.engine.graph.HeightMapMesh; public class Terrain { private final GameItem[] gameItems; public Terrain(int blocksPerRow, float scale, float minY, float maxY, String heightMap, String textureFile, int textInc) throws Exception { gameItems = new GameItem[blocksPerRow * blocksPerRow]; HeightMapMesh heightMapMesh = new HeightMapMesh(minY, maxY, heightMap, textureFile, textInc); for (int row = 0; row < blocksPerRow; row++) { for (int col = 0; col < blocksPerRow; col++) { float xDisplacement = (col - ((float) blocksPerRow - 1) / (float) 2) * scale * HeightMapMesh.getXLength(); float zDisplacement = (row - ((float) blocksPerRow - 1) / (float) 2) * scale * HeightMapMesh.getZLength(); GameItem terrainBlock = new GameItem(heightMapMesh.getMesh()); terrainBlock.setScale(scale); terrainBlock.setPosition(xDisplacement, 0, zDisplacement); gameItems[row * blocksPerRow + col] = terrainBlock; } } } public GameItem[] getGameItems() { return gameItems; } } \u8ba9\u6211\u4eec\u8be6\u89e3\u6574\u4e2a\u8fc7\u7a0b\uff0c\u6211\u4eec\u62e5\u6709\u7531\u4ee5\u4e0b\u5750\u6807\u5b9a\u4e49\u7684\u5757(X\u548cZ\u4f7f\u7528\u4e4b\u524d\u5b9a\u4e49\u7684\u5e38\u91cf)\u3002 \u5047\u8bbe\u6211\u4eec\u521b\u5efa\u4e86\u4e00\u4e2a\u75313\u00d73\u5757\u7f51\u683c\u6784\u6210\u7684\u5730\u5f62\u3002\u6211\u4eec\u5047\u8bbe\u6211\u4eec\u4e0d\u4f1a\u7f29\u653e\u5730\u5f62\u5757(\u4e5f\u5c31\u662f\u8bf4\uff0c\u53d8\u91cf blocksPerRow \u662f 3 \u800c\u53d8\u91cf scale \u5c06\u4f1a\u662f 1 )\u3002\u6211\u4eec\u5e0c\u671b\u7f51\u683c\u7684\u4e2d\u592e\u5728\u5750\u6807\u7cfb\u7684(0, 0)\u3002 \u6211\u4eec\u9700\u8981\u79fb\u52a8\u5757\uff0c\u8fd9\u6837\u9876\u70b9\u5c31\u53d8\u6210\u5982\u4e0b\u5750\u6807\u3002 \u79fb\u52a8\u662f\u901a\u8fc7\u8c03\u7528 setPosition \u65b9\u6cd5\u5b9e\u73b0\u7684\uff0c\u4f46\u8bb0\u4f4f\uff0c\u6211\u4eec\u6240\u8bbe\u7f6e\u7684\u662f\u4e00\u4e2a\u4f4d\u79fb\u800c\u4e0d\u662f\u4e00\u4e2a\u4f4d\u7f6e\u3002\u5982\u679c\u4f60\u770b\u5230\u4e0a\u56fe\uff0c\u4f60\u4f1a\u53d1\u73b0\u4e2d\u592e\u5757\u4e0d\u9700\u8981\u4efb\u4f55\u79fb\u52a8\uff0c\u5b83\u5df2\u7ecf\u5b9a\u4f4d\u5728\u9002\u5f53\u7684\u5750\u6807\u4e0a\u3002\u7ed8\u5236\u7eff\u8272\u9876\u70b9\u9700\u8981\u5728X\u8f74\u4e0a\u4f4d\u79fb -1 \uff0c\u800c\u7ed8\u5236\u84dd\u8272\u9876\u70b9\u9700\u8981\u5728X\u8f74\u4e0a\u4f4d\u79fb +1 \u3002\u8ba1\u7b97X\u4f4d\u79fb\u7684\u516c\u5f0f\uff0c\u8981\u8003\u8651\u5230\u7f29\u653e\u548c\u5757\u7684\u5bbd\u5ea6\uff0c\u516c\u5f0f\u5982\u4e0b\uff1a xDisplacement=(col - (blocksPerRow -1 ) / 2) \\times scale \\times width Z\u4f4d\u79fb\u7684\u516c\u5f0f\u4e3a\uff1a zDisplacement=(row - (blocksPerRow -1 ) / 2) \\times scale \\times height \u5982\u679c\u5728 DummyGame \u7c7b\u4e2d\u521b\u5efa\u4e00\u4e2a Terrain \u5b9e\u4f8b\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u5982\u56fe\u6240\u793a\u7684\u6548\u679c\u3002 \u4f60\u53ef\u4ee5\u5728\u5730\u5f62\u5468\u56f4\u79fb\u52a8\u76f8\u673a\uff0c\u770b\u770b\u5b83\u662f\u5982\u4f55\u6e32\u67d3\u7684\u3002\u7531\u4e8e\u8fd8\u6ca1\u6709\u5b9e\u73b0\u78b0\u649e\u68c0\u6d4b\uff0c\u4f60\u53ef\u4ee5\u7a7f\u8fc7\u5b83\u5e76\u4ece\u4e0a\u9762\u770b\u5b83\u3002\u7531\u4e8e\u6211\u4eec\u5df2\u7ecf\u542f\u7528\u4e86\u9762\u5254\u9664\uff0c\u5f53\u4ece\u4e0b\u9762\u89c2\u5bdf\u65f6\uff0c\u5730\u5f62\u7684\u67d0\u4e9b\u90e8\u5206\u4e0d\u4f1a\u6e32\u67d3\u3002","title":"\u9ad8\u5ea6\u56fe"},{"location":"14-height-maps/#height-maps","text":"\u672c\u7ae0\u4e2d\u6211\u4eec\u5c06\u5b66\u4e60\u5982\u4f55\u4f7f\u7528\u9ad8\u5ea6\u56fe\u521b\u5efa\u590d\u6742\u7684\u5730\u5f62\u3002\u5728\u5f00\u59cb\u524d\uff0c\u4f60\u4f1a\u6ce8\u610f\u5230\u6211\u4eec\u505a\u4e86\u4e00\u4e9b\u91cd\u6784\u3002\u6211\u4eec\u521b\u5efa\u4e86\u4e00\u4e9b\u65b0\u7684\u5305\u548c\u79fb\u52a8\u4e86\u4e00\u4e9b\u7c7b\u4ee5\u66f4\u597d\u5730\u7ec4\u7ec7\u5b83\u4eec\u3002\u4f60\u53ef\u4ee5\u5728\u6e90\u4ee3\u7801\u4e2d\u4e86\u89e3\u8fd9\u4e9b\u6539\u53d8\u3002 \u6240\u4ee5\u4ec0\u4e48\u662f\u9ad8\u5ea6\u56fe\uff1f\u9ad8\u5ea6\u56fe\u662f\u7528\u4e8e\u751f\u6210\u4e09\u7ef4\u5730\u5f62\u7684\u56fe\u50cf\uff0c\u5b83\u4f7f\u7528\u50cf\u7d20\u989c\u8272\u6765\u83b7\u53d6\u8868\u9762\u9ad8\u5ea6\u3002\u9ad8\u5ea6\u56fe\u56fe\u50cf\u901a\u5e38\u662f\u7070\u5ea6\u56fe\uff0c\u5b83\u53ef\u4ee5\u7531 Terragen \u7b49\u8f6f\u4ef6\u751f\u6210\u3002\u4e00\u5f20\u9ad8\u5ea6\u56fe\u56fe\u50cf\u770b\u8d77\u6765\u5c31\u50cf\u8fd9\u6837\u3002 \u4e0a\u56fe\u5c31\u50cf\u4f60\u4fef\u89c6\u4e00\u7247\u9646\u5730\u4e00\u6837\u3002\u5229\u7528\u4e0a\u56fe\uff0c\u6211\u4eec\u5c06\u6784\u5efa\u7531\u9876\u70b9\u7ec4\u6210\u7684\u4e09\u89d2\u5f62\u6240\u7ec4\u6210\u7684\u7f51\u683c\u3002\u6bcf\u4e2a\u9876\u70b9\u7684\u9ad8\u5ea6\u5c06\u6839\u636e\u56fe\u50cf\u7684\u6bcf\u4e2a\u50cf\u7d20\u7684\u989c\u8272\u6765\u8ba1\u7b97\u3002\u9ed1\u8272\u662f\u6700\u4f4e\uff0c\u767d\u8272\u662f\u6700\u9ad8\u3002 \u6211\u4eec\u5c06\u4e3a\u56fe\u50cf\u7684\u6bcf\u4e2a\u50cf\u7d20\u521b\u5efa\u4e00\u7ec4\u9876\u70b9\uff0c\u8fd9\u4e9b\u9876\u70b9\u5c06\u7ec4\u6210\u4e09\u89d2\u5f62\uff0c\u8fd9\u4e9b\u4e09\u89d2\u5f62\u5c06\u7ec4\u6210\u4e0b\u56fe\u6240\u793a\u7684\u7f51\u683c\u3002 \u7f51\u683c\u5c06\u7ec4\u6210\u4e00\u4e2a\u5de8\u5927\u7684\u56db\u8fb9\u5f62\uff0c\u5b83\u5c06\u4f1a\u5728X\u548cZ\u8f74\u4e0a\u6e32\u67d3\uff0c\u5e76\u6839\u636e\u50cf\u7d20\u989c\u8272\u6765\u6539\u53d8\u5b83\u7684Y\u8f74\u9ad8\u5ea6\u3002 \u7531\u9ad8\u5ea6\u56fe\u521b\u5efa\u4e09\u7ef4\u5730\u5f62\u7684\u8fc7\u7a0b\u53ef\u6982\u62ec\u4e3a\u4ee5\u4e0b\u6b65\u9aa4\uff1a * \u52a0\u8f7d\u50a8\u5b58\u9ad8\u5ea6\u56fe\u7684\u56fe\u50cf(\u6211\u4eec\u5c06\u4f7f\u7528\u4e00\u4e2a BufferedImage \u5b9e\u4f8b\u4ee5\u83b7\u53d6\u6bcf\u4e2a\u50cf\u7d20)\u3002 * \u4e3a\u6bcf\u4e2a\u56fe\u50cf\u50cf\u7d20\u521b\u5efa\u4e00\u4e2a\u9876\u70b9\uff0c\u5176\u9ad8\u5ea6\u57fa\u4e8e\u50cf\u7d20\u989c\u8272\u3002 * \u5c06\u6b63\u786e\u7684\u7eb9\u7406\u5750\u6807\u5206\u914d\u7ed9\u9876\u70b9\u3002 * \u8bbe\u7f6e\u7d22\u5f15\u4ee5\u7ed8\u5236\u4e0e\u9876\u70b9\u76f8\u5173\u7684\u4e09\u89d2\u5f62\u3002 \u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a HeightMapMesh \u7684\u7c7b\uff0c\u8be5\u7c7b\u5c06\u57fa\u4e8e\u9ad8\u5ea6\u56fe\u6309\u4ee5\u4e0a\u6b65\u9aa4\u521b\u5efa\u4e00\u4e2a Mesh \u3002\u8ba9\u6211\u4eec\u5148\u770b\u770b\u8be5\u7c7b\u5b9a\u4e49\u7684\u5e38\u91cf\uff1a private static final int MAX_COLOUR = 255 * 255 * 255; \u5982\u4e0a\u6240\u8ff0\uff0c\u6211\u4eec\u5c06\u57fa\u4e8e\u9ad8\u5ea6\u56fe\u56fe\u50cf\u7684\u6bcf\u4e2a\u50cf\u7d20\u7684\u989c\u8272\u6765\u8ba1\u7b97\u6bcf\u4e2a\u9876\u70b9\u7684\u9ad8\u5ea6\u3002\u56fe\u50cf\u901a\u5e38\u662f\u7070\u5ea6\u56fe\uff0c\u5bf9\u4e8ePNG\u56fe\u50cf\u6765\u8bf4\uff0c\u8fd9\u610f\u5473\u7740\u6bcf\u4e2a\u50cf\u7d20\u7684\u6bcf\u4e2aRGB\u503c\u53ef\u4ee5\u57280\u5230255\u4e4b\u95f4\u53d8\u5316\uff0c\u56e0\u6b64\u6211\u4eec\u6709256\u4e2a\u503c\u6765\u8868\u793a\u4e0d\u540c\u7684\u9ad8\u5ea6\u3002\u8fd9\u53ef\u80fd\u8db3\u591f\u4e86\uff0c\u4f46\u5982\u679c\u7cbe\u5ea6\u4e0d\u591f\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e09\u4e2aRGB\u503c\u4ee5\u6709\u66f4\u591a\u7684\u503c\uff0c\u5728\u6b64\u60c5\u51b5\u4e0b\uff0c\u9ad8\u5ea6\u8ba1\u7b97\u8303\u56f4\u4e3a0\u5230255^3\u3002\u6211\u4eec\u5c06\u4f7f\u7528\u7b2c\u4e8c\u79cd\u65b9\u6cd5\uff0c\u56e0\u6b64\u6211\u4eec\u4e0d\u5c40\u9650\u4e8e\u7070\u5ea6\u56fe\u3002 \u63a5\u4e0b\u6765\u7684\u5e38\u91cf\u662f\uff1a private static final float STARTX = -0.5f; private static final float STARTZ = -0.5f; \u7f51\u683c\u5c06\u7531\u4e00\u7ec4\u9876\u70b9\uff08\u4e00\u4e2a\u9876\u70b9\u5bf9\u5e94\u4e00\u4e2a\u50cf\u7d20\uff09\u6784\u6210\uff0c\u5176X\u548cZ\u5750\u6807\u7684\u8303\u56f4\u5982\u4e0b * X\u8f74\u7684\u8303\u56f4\u4e3a[-0.5, 0.5]\uff0c\u5373[ STARTX , -STARTX ]\u3002 * Z\u8f74\u7684\u8303\u56f4\u4e3a[-0.5, 0.5]\uff0c\u5373[ STARTZ , -STARTZ ]\u3002 \u4e0d\u7528\u592a\u8fc7\u62c5\u5fc3\u8fd9\u4e9b\u503c\uff0c\u7a0d\u540e\u5f97\u5230\u7684\u7f51\u683c\u53ef\u4ee5\u88ab\u7f29\u653e\u4ee5\u9002\u5e94\u4e16\u754c\u7684\u5927\u5c0f\u3002\u5173\u4e8eY\u8f74\uff0c\u6211\u4eec\u5c06\u8bbe\u7f6e minY \u548c maxY \u4e24\u4e2a\u53c2\u6570\uff0c\u7528\u4e8e\u8bbe\u7f6eY\u5750\u6807\u7684\u6700\u4f4e\u548c\u6700\u9ad8\u503c\u3002\u8fd9\u4e9b\u53c2\u6570\u5e76\u4e0d\u662f\u5e38\u6570\uff0c\u56e0\u4e3a\u6211\u4eec\u53ef\u80fd\u5e0c\u671b\u5728\u8fd0\u884c\u65f6\u66f4\u6539\u5b83\u4eec\uff0c\u800c\u4e0d\u4f7f\u7528\u7f29\u653e\u3002\u6700\u540e\uff0c\u5730\u5f62\u5c06\u5305\u542b\u5728\u8303\u56f4\u4e3a [STARTX, -STARTX] \uff0c [minY, maxY] \uff0c [STARTZ, -STARTZ] \u7684\u7acb\u65b9\u4f53\u5185\u3002 \u7f51\u683c\u5c06\u4f1a\u5728 HeightMapMesh \u7c7b\u7684\u6784\u9020\u51fd\u6570\u4e2d\u521b\u5efa\uff0c\u8be5\u7c7b\u7684\u5b9a\u4e49\u5982\u4e0b\u3002 public HeightMapMesh(float minY, float maxY, String heightMapFile, String textureFile, int textInc) throws Exception { \u5b83\u63a5\u6536Y\u8f74\u7684\u6700\u5c0f\u503c\u548c\u6700\u5927\u503c\uff0c\u88ab\u7528\u4f5c\u9ad8\u5ea6\u56fe\u7684\u56fe\u50cf\u6587\u4ef6\u540d\u548c\u8981\u4f7f\u7528\u7684\u7eb9\u7406\u6587\u4ef6\u540d\u3002\u5b83\u8fd8\u63a5\u53d7\u4e00\u4e2a\u540d\u4e3a textInc \u7684\u6574\u6570\uff0c\u8fd9\u7a0d\u540e\u518d\u8bf4\u660e\u3002 \u6211\u4eec\u5728\u6784\u9020\u51fd\u6570\u4e2d\u505a\u7684\u7b2c\u4e00\u4ef6\u4e8b\u5c31\u662f\u5c06\u9ad8\u5ea6\u56fe\u56fe\u50cf\u52a0\u8f7d\u5230 BufferedImage \u5b9e\u4f8b\u4e2d\u3002 this.minY = minY; this.maxY = maxY; PNGDecoder decoder = new PNGDecoder(getClass().getResourceAsStream(heightMapFile)); int height = decoder.getHeight(); int width = decoder.getWidth(); ByteBuffer buf = ByteBuffer.allocateDirect( 4 * decoder.getWidth() * decoder.getHeight()); decoder.decode(buf, decoder.getWidth() * 4, PNGDecoder.Format.RGBA); buf.flip(); \u7136\u540e\uff0c\u6211\u4eec\u5c06\u7eb9\u7406\u6587\u4ef6\u8f7d\u5165\u5230\u4e00\u4e2a ByteBuffer \u4e2d\uff0c\u5e76\u8bbe\u7f6e\u6784\u9020 Mesh \u6240\u9700\u7684\u53d8\u91cf\u3002 incx \u548c incz \u53d8\u91cf\u5c06\u50a8\u5b58\u6bcf\u4e2a\u9876\u70b9\u7684X\u6216Z\u5750\u6807\u4e4b\u95f4\u7684\u6700\u5c0f\u95f4\u9694\uff0c\u56e0\u6b64 Mesh \u5305\u542b\u5728\u4e0a\u8ff0\u533a\u57df\u4e2d\u3002 Texture texture = new Texture(textureFile); float incx = getWidth() / (width - 1); float incz = Math.abs(STARTZ * 2) / (height - 1); List<Float> positions = new ArrayList(); List<Float> textCoords = new ArrayList(); List<Integer> indices = new ArrayList(); \u4e4b\u540e\uff0c\u6211\u4eec\u5c06\u904d\u5386\u56fe\u50cf\uff0c\u4e3a\u6bcf\u4e2a\u50cf\u7d20\u521b\u5efa\u4e00\u4e2a\u9876\u70b9\uff0c\u8bbe\u7f6e\u5176\u7eb9\u7406\u5750\u6807\u4e0e\u7d22\u5f15\uff0c\u4ee5\u6b63\u786e\u5730\u5b9a\u4e49\u7ec4\u6210 Mesh \u7684\u4e09\u89d2\u5f62\u3002 for (int row = 0; row < height; row++) { for (int col = 0; col < width; col++) { // \u4e3a\u5f53\u524d\u4f4d\u7f6e\u521b\u5efa\u9876\u70b9 positions.add(STARTX + col * incx); // x positions.add(getHeight(col, row, width, buf)); // y positions.add(STARTZ + row * incz); // z // \u8bbe\u7f6e\u7eb9\u7406\u5750\u6807 textCoords.add((float) textInc * (float) col / (float) width); textCoords.add((float) textInc * (float) row / (float) height); // \u521b\u5efa\u7d22\u5f15 if (col < width - 1 && row < height - 1) { int leftTop = row * width + col; int leftBottom = (row + 1) * width + col; int rightBottom = (row + 1) * width + col + 1; int rightTop = row * width + col + 1; indices.add(rightTop); indices.add(leftBottom); indices.add(leftTop); indices.add(rightBottom); indices.add(leftBottom); indices.add(rightTop); } } } \u521b\u5efa\u9876\u70b9\u5750\u6807\u7684\u8fc7\u7a0b\u662f\u4e0d\u9700\u8981\u89e3\u91ca\u7684\u3002\u73b0\u5728\u5148\u522b\u7ba1\u4e3a\u4ec0\u4e48\u6211\u4eec\u7528\u4e00\u4e2a\u6570\u5b57\u4e58\u4ee5\u7eb9\u7406\u5750\u6807\u4ee5\u53ca\u5982\u4f55\u8ba1\u7b97\u9ad8\u5ea6\u3002\u4f60\u53ef\u4ee5\u770b\u5230\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u9876\u70b9\uff0c\u6211\u4eec\u5b9a\u4e49\u4e24\u4e2a\u4e09\u89d2\u5f62\u7684\u7d22\u5f15(\u9664\u975e\u73b0\u5728\u662f\u6700\u540e\u4e00\u884c\u6216\u6700\u540e\u4e00\u5217)\u3002\u8ba9\u6211\u4eec\u7528\u4e00\u4e2a 3\u00d73 \u7684\u56fe\u50cf\u6765\u60f3\u8c61\u5b83\u4eec\u662f\u5982\u4f55\u6784\u9020\u7684\u3002\u4e00\u4e2a 3\u00d73 \u7684\u56fe\u50cf\u5305\u542b9\u4e2a\u9876\u70b9\uff0c\u6bcf\u56e0\u6b64\u6709 2\u00d74 \u4e2a\u4e09\u89d2\u5f62\u7ec4\u62104\u4e2a\u6b63\u65b9\u5f62\u3002\u4e0b\u56fe\u5c55\u793a\u4e86\u7f51\u683c\uff0c\u6bcf\u4e2a\u9876\u70b9\u88ab\u547d\u540d\u4e3a Vrc (r\uff1a\u884c\uff0cc\uff1a\u5217)\u3002 \u5f53\u5904\u7406\u7b2c\u4e00\u4e2a\u9876\u70b9(V00)\u65f6\uff0c\u6211\u4eec\u5728\u7ea2\u8272\u9634\u5f71\u5904\u5b9a\u4e49\u4e86\u4e24\u4e2a\u4e09\u89d2\u5f62\u7684\u7d22\u5f15\u3002 \u5f53\u5904\u7406\u7b2c\u4e8c\u4e2a\u9876\u70b9(V01)\u65f6\uff0c\u6211\u4eec\u5728\u7ea2\u8272\u9634\u5f71\u5904\u53c8\u5b9a\u4e49\u4e86\u4e24\u4e2a\u4e09\u89d2\u5f62\u7684\u7d22\u5f15\u3002\u4f46\u5f53\u5904\u7406\u7b2c\u4e09\u4e2a\u9876\u70b9(V02)\u65f6\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u5b9a\u4e49\u66f4\u591a\u7684\u7d22\u5f15\uff0c\u8be5\u884c\u7684\u6240\u6709\u4e09\u89d2\u5f62\u90fd\u5df2\u88ab\u5b9a\u4e49\u3002 \u4f60\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u60f3\u5230\u5176\u4ed6\u9876\u70b9\u7684\u5904\u7406\u8fc7\u7a0b\u662f\u5982\u4f55\u8fdb\u884c\u7684\u3002\u73b0\u5728\uff0c\u4e00\u65e6\u521b\u5efa\u4e86\u6240\u6709\u7684\u9876\u70b9\u4f4d\u7f6e\u3001\u7eb9\u7406\u5750\u6807\u548c\u7d22\u5f15\uff0c\u6211\u4eec\u5c31\u53ea\u9700\u8981\u7528\u6240\u6709\u8fd9\u4e9b\u6570\u636e\u521b\u5efa Mesh \u548c\u76f8\u5173\u7684 Material \u3002 float[] posArr = Utils.listToArray(positions); int[] indicesArr = indices.stream().mapToInt(i -> i).toArray(); float[] textCoordsArr = Utils.listToArray(textCoords); float[] normalsArr = calcNormals(posArr, width, height); this.mesh = new Mesh(posArr, textCoordsArr, normalsArr, indicesArr); Material material = new Material(texture, 0.0f); mesh.setMaterial(material); \u4f60\u53ef\u4ee5\u770b\u5230\uff0c\u6211\u4eec\u6839\u636e\u9876\u70b9\u4f4d\u7f6e\u8ba1\u7b97\u6cd5\u7ebf\u3002\u5728\u770b\u5982\u4f55\u8ba1\u7b97\u6cd5\u7ebf\u4e4b\u524d\uff0c\u6765\u770b\u770b\u5982\u4f55\u83b7\u53d6\u9ad8\u5ea6\u5427\u3002\u6211\u4eec\u5df2\u7ecf\u521b\u5efa\u4e86\u4e00\u4e2a\u540d\u4e3a getHeight \u7684\u65b9\u6cd5\uff0c\u5b83\u8d1f\u8d23\u8ba1\u7b97\u9876\u70b9\u7684\u9ad8\u5ea6\u3002 private float getHeight(int x, int z, int width, ByteBuffer buffer) { byte r = buffer.get(x * 4 + 0 + z * 4 * width); byte g = buffer.get(x * 4 + 1 + z * 4 * width); byte b = buffer.get(x * 4 + 2 + z * 4 * width); byte a = buffer.get(x * 4 + 3 + z * 4 * width); int argb = ((0xFF & a) << 24) | ((0xFF & r) << 16) | ((0xFF & g) << 8) | (0xFF & b); return this.minY + Math.abs(this.maxY - this.minY) * ((float) argb / (float) MAX_COLOUR); } \u8be5\u65b9\u6cd5\u63a5\u53d7\u50cf\u7d20\u7684X\u548cY\u5750\u6807\uff0c\u56fe\u50cf\u7684\u5bbd\u5ea6\u4ee5\u53ca\u4e0e\u4e4b\u76f8\u5173\u7684 ByteBuffer \uff0c\u8fd4\u56deRGB\u989c\u8272(R\u3001G\u3001B\u5206\u91cf\u4e4b\u548c)\u5e76\u8ba1\u7b97\u5305\u542b\u5728 minY \u548c maxY \u4e4b\u95f4\u7684\u503c( minY \u4e3a\u9ed1\u8272\uff0c maxY \u4e3a\u767d\u8272)\u3002 \u4f60\u53ef\u4ee5\u4f7f\u7528 BufferedImage \u6765\u7f16\u5199\u4e00\u4e2a\u66f4\u7b80\u5355\u7684\u65b9\u6cd5\uff0c\u5b83\u6709\u66f4\u65b9\u4fbf\u7684\u65b9\u6cd5\u6765\u83b7\u5f97RGB\u503c\uff0c\u4f46\u8fd9\u5c06\u4f7f\u7528AWT\u3002\u8bb0\u4f4fAWT\u4e0d\u80fd\u5f88\u597d\u7684\u517c\u5bb9OSX\uff0c\u6240\u4ee5\u5c3d\u91cf\u907f\u514d\u4f7f\u7528\u5b83\u7684\u7c7b\u3002 \u73b0\u5728\u6765\u770b\u770b\u5982\u4f55\u8ba1\u7b97\u7eb9\u7406\u5750\u6807\u3002\u7b2c\u4e00\u4e2a\u65b9\u6cd5\u662f\u5c06\u7eb9\u7406\u8986\u76d6\u6574\u4e2a\u7f51\u683c\uff0c\u5de6\u4e0a\u89d2\u7684\u9876\u70b9\u7eb9\u7406\u5750\u6807\u4e3a(0, 0)\uff0c\u53f3\u4e0b\u89d2\u7684\u9876\u70b9\u7eb9\u7406\u5750\u6807\u4e3a(1, 1)\u3002\u8fd9\u79cd\u65b9\u6cd5\u7684\u95ee\u9898\u662f\uff0c\u7eb9\u7406\u5fc5\u987b\u662f\u5de8\u5927\u7684\uff0c\u4ee5\u4fbf\u83b7\u5f97\u826f\u597d\u7684\u6e32\u67d3\u6548\u679c\uff0c\u5426\u5219\u7eb9\u7406\u5c06\u4f1a\u88ab\u8fc7\u5ea6\u62c9\u4f38\u3002 \u4f46\u6211\u4eec\u4ecd\u7136\u53ef\u4ee5\u4f7f\u7528\u975e\u5e38\u5c0f\u7684\u7eb9\u7406\uff0c\u901a\u8fc7\u4f7f\u7528\u9ad8\u6548\u7684\u6280\u672f\u6765\u83b7\u5f97\u5f88\u597d\u7684\u6548\u679c\u3002\u5982\u679c\u6211\u4eec\u8bbe\u7f6e\u8d85\u51fa[1, 1]\u8303\u56f4\u7684\u7eb9\u7406\u5750\u6807\uff0c\u6211\u4eec\u5c06\u56de\u5230\u539f\u70b9\u5e76\u91cd\u65b0\u5f00\u59cb\u8ba1\u7b97\u3002\u4e0b\u56fe\u8868\u793a\u5728\u51e0\u4e2a\u6b63\u65b9\u5f62\u4e2d\u5e73\u94fa\u76f8\u540c\u7684\u7eb9\u7406\uff0c\u5e76\u8d85\u51fa\u4e86[1, 1]\u8303\u56f4\u3002 \u8fd9\u662f\u6211\u4eec\u5728\u8bbe\u7f6e\u7eb9\u7406\u5750\u6807\u65f6\u6240\u8981\u505a\u7684\u3002\u6211\u4eec\u5c06\u4e00\u4e2a\u53c2\u6570\u4e58\u4ee5\u7eb9\u7406\u5750\u6807(\u8ba1\u7b97\u597d\u50cf\u6574\u4e2a\u7f51\u683c\u88ab\u7eb9\u7406\u5305\u88f9\u7684\u60c5\u51b5)\uff0c\u5373 textInc \u53c2\u6570\uff0c\u4ee5\u589e\u52a0\u5728\u76f8\u90bb\u9876\u70b9\u4e4b\u95f4\u4f7f\u7528\u7684\u7eb9\u7406\u50cf\u7d20\u6570\u3002 \u76ee\u524d\u552f\u4e00\u6ca1\u6709\u89e3\u51b3\u7684\u662f\u6cd5\u7ebf\u8ba1\u7b97\u3002\u8bb0\u4f4f\u6211\u4eec\u9700\u8981\u6cd5\u7ebf\uff0c\u5149\u7167\u624d\u80fd\u6b63\u786e\u5730\u5e94\u7528\u4e8e\u5730\u5f62\u3002\u6ca1\u6709\u6cd5\u7ebf\uff0c\u65e0\u8bba\u5149\u7167\u5982\u4f55\uff0c\u5730\u5f62\u5c06\u4ee5\u76f8\u540c\u7684\u989c\u8272\u6e32\u67d3\u3002\u6211\u4eec\u5728\u8fd9\u91cc\u4f7f\u7528\u7684\u65b9\u6cd5\u4e0d\u4e00\u5b9a\u662f\u6700\u9ad8\u6548\u7684\uff0c\u4f46\u5b83\u5c06\u5e2e\u52a9\u4f60\u7406\u89e3\u5982\u4f55\u81ea\u52a8\u8ba1\u7b97\u6cd5\u7ebf\u3002\u5982\u679c\u4f60\u641c\u7d22\u5176\u4ed6\u89e3\u51b3\u65b9\u6848\uff0c\u53ef\u80fd\u4f1a\u53d1\u73b0\u66f4\u6709\u6548\u7684\u65b9\u6cd5\uff0c\u53ea\u4f7f\u7528\u76f8\u90bb\u70b9\u7684\u9ad8\u5ea6\u800c\u4e0d\u9700\u8981\u505a\u4ea4\u53c9\u76f8\u4e58\u64cd\u4f5c\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u8fd9\u4ec5\u9700\u8981\u5728\u542f\u52a8\u65f6\u5b8c\u6210\uff0c\u8fd9\u91cc\u7684\u65b9\u6cd5\u4e0d\u4f1a\u5bf9\u6027\u80fd\u9020\u6210\u592a\u5927\u7684\u635f\u5bb3\u3002 \u8ba9\u6211\u4eec\u7528\u56fe\u89e3\u7684\u65b9\u5f0f\u89e3\u91ca\u5982\u4f55\u8ba1\u7b97\u4e00\u4e2a\u6cd5\u7ebf\u503c\u3002\u5047\u8bbe\u6211\u4eec\u6709\u4e00\u4e2a\u540d\u4e3a P0 \u7684\u9876\u70b9\u3002\u6211\u4eec\u9996\u5148\u8ba1\u7b97\u5176\u5468\u56f4\u6bcf\u4e2a\u9876\u70b9( P1 , P2 , P3 , P4 )\u548c\u4e0e\u8fde\u63a5\u8fd9\u4e9b\u70b9\u7684\u9762\u76f8\u5207\u7684\u5411\u91cf\u3002\u8fd9\u4e9b\u5411\u91cf( V1 , V2 , V3 , V4 )\u662f\u901a\u8fc7\u5c06\u6bcf\u4e2a\u76f8\u90bb\u70b9\u4e0e P0 \u76f8\u51cf(\u4f8b\u5982 V1 = P1 - P0 )\u5f97\u5230\u7684\u3002 \u7136\u540e\uff0c\u6211\u4eec\u8ba1\u7b97\u8fde\u63a5\u6bcf\u4e00\u4e2a\u76f8\u90bb\u70b9\u7684\u5e73\u9762\u7684\u6cd5\u7ebf\u3002\u8fd9\u662f\u4e0e\u4e4b\u524d\u8ba1\u7b97\u5f97\u5230\u7684\u5411\u91cf\u4ea4\u53c9\u76f8\u4e58\u8ba1\u7b97\u7684\u3002\u4f8b\u5982\uff0c\u5411\u91cf V1 \u4e0e V2 \u6240\u5728\u7684\u5e73\u9762(\u84dd\u8272\u9634\u5f71\u90e8\u5206)\u7684\u6cd5\u7ebf\u662f\u7531 V1 \u548c V2 \u4ea4\u53c9\u76f8\u4e58\u5f97\u5230\u7684\uff0c\u5373 V12 = V1 \u00d7 V2 \u3002 \u5982\u679c\u6211\u4eec\u8ba1\u7b97\u5b8c\u6bd5\u5176\u4ed6\u5e73\u9762\u7684\u6cd5\u7ebf( V23 = V2 \u00d7 V3 \uff0c V34 = V3 \u00d7 V4 \uff0c V41 = V4 \u00d7 V1 )\uff0c\u5219\u6cd5\u7ebf P0 \u5c31\u662f\u5468\u56f4\u6240\u6709\u5e73\u9762\u6cd5\u7ebf(\u5f52\u4e00\u5316\u540e)\u4e4b\u548c\uff1a N0 = V12 + V23 + V34 + V41 \u3002 \u6cd5\u7ebf\u8ba1\u7b97\u7684\u65b9\u6cd5\u5b9e\u73b0\u5982\u4e0b\u6240\u793a\u3002 private float[] calcNormals(float[] posArr, int width, int height) { Vector3f v0 = new Vector3f(); Vector3f v1 = new Vector3f(); Vector3f v2 = new Vector3f(); Vector3f v3 = new Vector3f(); Vector3f v4 = new Vector3f(); Vector3f v12 = new Vector3f(); Vector3f v23 = new Vector3f(); Vector3f v34 = new Vector3f(); Vector3f v41 = new Vector3f(); List<Float> normals = new ArrayList<>(); Vector3f normal = new Vector3f(); for (int row = 0; row < height; row++) { for (int col = 0; col < width; col++) { if (row > 0 && row < height -1 && col > 0 && col < width -1) { int i0 = row*width*3 + col*3; v0.x = posArr[i0]; v0.y = posArr[i0 + 1]; v0.z = posArr[i0 + 2]; int i1 = row*width*3 + (col-1)*3; v1.x = posArr[i1]; v1.y = posArr[i1 + 1]; v1.z = posArr[i1 + 2]; v1 = v1.sub(v0); int i2 = (row+1)*width*3 + col*3; v2.x = posArr[i2]; v2.y = posArr[i2 + 1]; v2.z = posArr[i2 + 2]; v2 = v2.sub(v0); int i3 = (row)*width*3 + (col+1)*3; v3.x = posArr[i3]; v3.y = posArr[i3 + 1]; v3.z = posArr[i3 + 2]; v3 = v3.sub(v0); int i4 = (row-1)*width*3 + col*3; v4.x = posArr[i4]; v4.y = posArr[i4 + 1]; v4.z = posArr[i4 + 2]; v4 = v4.sub(v0); v1.cross(v2, v12); v12.normalize(); v2.cross(v3, v23); v23.normalize(); v3.cross(v4, v34); v34.normalize(); v4.cross(v1, v41); v41.normalize(); normal = v12.add(v23).add(v34).add(v41); normal.normalize(); } else { normal.x = 0; normal.y = 1; normal.z = 0; } normal.normalize(); normals.add(normal.x); normals.add(normal.y); normals.add(normal.z); } } return Utils.listToArray(normals); } \u6700\u540e\uff0c\u4e3a\u4e86\u521b\u5efa\u66f4\u5927\u7684\u5730\u5f62\uff0c\u6211\u4eec\u6709\u4e24\u4e2a\u9009\u62e9\uff1a * \u521b\u5efa\u66f4\u5927\u7684\u9ad8\u5ea6\u56fe * \u91cd\u7528\u9ad8\u5ea6\u56fe\u5e76\u5c06\u5176\u5e73\u94fa\u5728\u4e09\u7ef4\u7a7a\u95f4\u4e2d\u3002\u9ad8\u5ea6\u56fe\u5c06\u50cf\u4e00\u4e2a\u5730\u5f62\u5757\uff0c\u5728\u4e16\u754c\u4e0a\u50cf\u74f7\u7816\u4e00\u6837\u5e73\u79fb\u3002\u4e3a\u4e86\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u9ad8\u5ea6\u56fe\u8fb9\u7f18\u7684\u50cf\u7d20\u5fc5\u987b\u662f\u76f8\u540c\u7684(\u5de6\u4fa7\u8fb9\u7f18\u5fc5\u987b\u4e0e\u53f3\u4fa7\u76f8\u540c\uff0c\u4e0a\u4fa7\u8fb9\u7f18\u5fc5\u987b\u4e0e\u4e0b\u4fa7\u76f8\u540c)\uff0c\u4ee5\u907f\u514d\u5757\u4e4b\u95f4\u7684\u95f4\u9699\u3002 \u6211\u4eec\u5c06\u4f7f\u7528\u7b2c\u4e8c\u79cd\u65b9\u6cd5(\u5e76\u9009\u62e9\u9002\u5f53\u7684\u9ad8\u5ea6\u56fe)\u3002\u4e3a\u4e86\u505a\u5230\u5b83\uff0c\u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a Terrain \u7684\u7c7b\uff0c\u8be5\u7c7b\u5c06\u521b\u5efa\u4e00\u4e2a\u6b63\u65b9\u5f62\u7684\u9ad8\u5ea6\u56fe\u5757\uff0c\u5b9a\u4e49\u5982\u4e0b\u3002 package org.lwjglb.engine.items; import org.lwjglb.engine.graph.HeightMapMesh; public class Terrain { private final GameItem[] gameItems; public Terrain(int blocksPerRow, float scale, float minY, float maxY, String heightMap, String textureFile, int textInc) throws Exception { gameItems = new GameItem[blocksPerRow * blocksPerRow]; HeightMapMesh heightMapMesh = new HeightMapMesh(minY, maxY, heightMap, textureFile, textInc); for (int row = 0; row < blocksPerRow; row++) { for (int col = 0; col < blocksPerRow; col++) { float xDisplacement = (col - ((float) blocksPerRow - 1) / (float) 2) * scale * HeightMapMesh.getXLength(); float zDisplacement = (row - ((float) blocksPerRow - 1) / (float) 2) * scale * HeightMapMesh.getZLength(); GameItem terrainBlock = new GameItem(heightMapMesh.getMesh()); terrainBlock.setScale(scale); terrainBlock.setPosition(xDisplacement, 0, zDisplacement); gameItems[row * blocksPerRow + col] = terrainBlock; } } } public GameItem[] getGameItems() { return gameItems; } } \u8ba9\u6211\u4eec\u8be6\u89e3\u6574\u4e2a\u8fc7\u7a0b\uff0c\u6211\u4eec\u62e5\u6709\u7531\u4ee5\u4e0b\u5750\u6807\u5b9a\u4e49\u7684\u5757(X\u548cZ\u4f7f\u7528\u4e4b\u524d\u5b9a\u4e49\u7684\u5e38\u91cf)\u3002 \u5047\u8bbe\u6211\u4eec\u521b\u5efa\u4e86\u4e00\u4e2a\u75313\u00d73\u5757\u7f51\u683c\u6784\u6210\u7684\u5730\u5f62\u3002\u6211\u4eec\u5047\u8bbe\u6211\u4eec\u4e0d\u4f1a\u7f29\u653e\u5730\u5f62\u5757(\u4e5f\u5c31\u662f\u8bf4\uff0c\u53d8\u91cf blocksPerRow \u662f 3 \u800c\u53d8\u91cf scale \u5c06\u4f1a\u662f 1 )\u3002\u6211\u4eec\u5e0c\u671b\u7f51\u683c\u7684\u4e2d\u592e\u5728\u5750\u6807\u7cfb\u7684(0, 0)\u3002 \u6211\u4eec\u9700\u8981\u79fb\u52a8\u5757\uff0c\u8fd9\u6837\u9876\u70b9\u5c31\u53d8\u6210\u5982\u4e0b\u5750\u6807\u3002 \u79fb\u52a8\u662f\u901a\u8fc7\u8c03\u7528 setPosition \u65b9\u6cd5\u5b9e\u73b0\u7684\uff0c\u4f46\u8bb0\u4f4f\uff0c\u6211\u4eec\u6240\u8bbe\u7f6e\u7684\u662f\u4e00\u4e2a\u4f4d\u79fb\u800c\u4e0d\u662f\u4e00\u4e2a\u4f4d\u7f6e\u3002\u5982\u679c\u4f60\u770b\u5230\u4e0a\u56fe\uff0c\u4f60\u4f1a\u53d1\u73b0\u4e2d\u592e\u5757\u4e0d\u9700\u8981\u4efb\u4f55\u79fb\u52a8\uff0c\u5b83\u5df2\u7ecf\u5b9a\u4f4d\u5728\u9002\u5f53\u7684\u5750\u6807\u4e0a\u3002\u7ed8\u5236\u7eff\u8272\u9876\u70b9\u9700\u8981\u5728X\u8f74\u4e0a\u4f4d\u79fb -1 \uff0c\u800c\u7ed8\u5236\u84dd\u8272\u9876\u70b9\u9700\u8981\u5728X\u8f74\u4e0a\u4f4d\u79fb +1 \u3002\u8ba1\u7b97X\u4f4d\u79fb\u7684\u516c\u5f0f\uff0c\u8981\u8003\u8651\u5230\u7f29\u653e\u548c\u5757\u7684\u5bbd\u5ea6\uff0c\u516c\u5f0f\u5982\u4e0b\uff1a xDisplacement=(col - (blocksPerRow -1 ) / 2) \\times scale \\times width Z\u4f4d\u79fb\u7684\u516c\u5f0f\u4e3a\uff1a zDisplacement=(row - (blocksPerRow -1 ) / 2) \\times scale \\times height \u5982\u679c\u5728 DummyGame \u7c7b\u4e2d\u521b\u5efa\u4e00\u4e2a Terrain \u5b9e\u4f8b\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u5982\u56fe\u6240\u793a\u7684\u6548\u679c\u3002 \u4f60\u53ef\u4ee5\u5728\u5730\u5f62\u5468\u56f4\u79fb\u52a8\u76f8\u673a\uff0c\u770b\u770b\u5b83\u662f\u5982\u4f55\u6e32\u67d3\u7684\u3002\u7531\u4e8e\u8fd8\u6ca1\u6709\u5b9e\u73b0\u78b0\u649e\u68c0\u6d4b\uff0c\u4f60\u53ef\u4ee5\u7a7f\u8fc7\u5b83\u5e76\u4ece\u4e0a\u9762\u770b\u5b83\u3002\u7531\u4e8e\u6211\u4eec\u5df2\u7ecf\u542f\u7528\u4e86\u9762\u5254\u9664\uff0c\u5f53\u4ece\u4e0b\u9762\u89c2\u5bdf\u65f6\uff0c\u5730\u5f62\u7684\u67d0\u4e9b\u90e8\u5206\u4e0d\u4f1a\u6e32\u67d3\u3002","title":"\u9ad8\u5ea6\u56fe\uff08Height Maps\uff09"},{"location":"15-terrain-collisions/","text":"\u5730\u5f62\u78b0\u649e\uff08Terrain Collisions\uff09 \u6b64\u524d\u6211\u4eec\u521b\u5efa\u4e86\u4e00\u4e2a\u5730\u5f62\uff0c\u63a5\u4e0b\u6765\u5c31\u662f\u68c0\u6d4b\u78b0\u649e\u4ee5\u907f\u514d\u7a7f\u8fc7\u5b83\u3002\u56de\u5fc6\u4e00\u4e0b\u4e4b\u524d\u7684\u5185\u5bb9\uff0c\u4e00\u4e2a\u5730\u5f62\u662f\u7531\u5730\u5f62\u5757\u7ec4\u6210\u7684\uff0c\u6bcf\u4e2a\u5730\u5f62\u5757\u90fd\u662f\u7531\u9ad8\u5ea6\u56fe\u751f\u6210\u7684\uff0c\u9ad8\u5ea6\u56fe\u7528\u4e8e\u8bbe\u7f6e\u6784\u6210\u5730\u5f62\u7684\u4e09\u89d2\u5f62\u7684\u9876\u70b9\u9ad8\u5ea6\u3002 \u4e3a\u4e86\u68c0\u6d4b\u78b0\u649e\uff0c\u6211\u4eec\u5fc5\u987b\u5c06\u5f53\u524d\u6240\u5728\u4f4d\u7f6e\u7684 Y \u503c\u4e0e\u5f53\u524d\u5730\u5f62\u70b9\u7684 Y \u503c\u8fdb\u884c\u6bd4\u8f83\u3002\u5982\u679c\u6709\u78b0\u649e\uff0c\u6211\u4eec\u9700\u8981\u56de\u5230\u5730\u5f62\u4e0a\u65b9\u3002\u5f88\u7b80\u5355\u7684\u60f3\u6cd5\uff0c\u662f\u5417\uff1f\u786e\u5b9e\u662f\u8fd9\u6837\uff0c\u4f46\u5728\u6bd4\u8f83\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u8fdb\u884c\u51e0\u6b21\u8ba1\u7b97\u3002 \u9996\u5148\u8981\u5b9a\u4e49\u7684\u662f\u201c\u5f53\u524d\u4f4d\u7f6e\u201d\u8fd9\u4e2a\u8bcd\u7684\u6982\u5ff5\u3002\u7531\u4e8e\u6211\u4eec\u8fd8\u6ca1\u6709\u4e00\u4e2a\u201c\u73a9\u5bb6\u201d\u7684\u6982\u5ff5\uff0c\u5f53\u524d\u4f4d\u7f6e\u5c06\u662f\u6444\u50cf\u673a\u7684\u4f4d\u7f6e\u3002\u8fd9\u6837\u6211\u4eec\u5c31\u6709\u4e86\u6bd4\u8f83\u7684\u4e00\u65b9\uff0c\u56e0\u6b64\u63a5\u4e0b\u6765\u8981\u8ba1\u7b97\u5f53\u524d\u4f4d\u7f6e\u7684\u5730\u5f62\u9ad8\u5ea6\u3002 \u5982\u4e0a\u6240\u8ff0\uff0c\u5730\u5f62\u7531\u5730\u5f62\u5757\u7ec4\u6210\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002 \u6bcf\u4e2a\u5730\u5f62\u5757\u90fd\u662f\u7531\u76f8\u540c\u7684\u9ad8\u5ea6\u56fe\u7f51\u683c\u6784\u6210\uff0c\u4f46\u88ab\u7cbe\u786e\u5730\u7f29\u653e\u548c\u4f4d\u79fb\uff0c\u4ee5\u5f62\u6210\u770b\u8d77\u6765\u50cf\u662f\u8fde\u7eed\u7684\u666f\u89c2\u7684\u5730\u5f62\u7f51\u683c\u3002 \u6240\u4ee5\u9996\u5148\u8981\u505a\u7684\u662f\u786e\u5b9a\u5f53\u524d\u4f4d\u7f6e(\u6444\u50cf\u673a\u4f4d\u7f6e)\u5728\u54ea\u4e2a\u5730\u5f62\u5757\u3002\u4e3a\u4e86\u5f97\u5230\u5b83\uff0c\u6211\u4eec\u5c06\u57fa\u4e8e\u4f4d\u79fb\u548c\u7f29\u653e\u6765\u8ba1\u7b97\u6bcf\u4e2a\u5730\u5f62\u5757\u7684\u5305\u56f4\u76d2( BoundingBox )\u3002\u56e0\u4e3a\u5730\u5f62\u5728\u8fd0\u884c\u65f6\u4e0d\u4f1a\u79fb\u52a8\u6216\u7f29\u653e\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5728 Terrain \u7c7b\u7684\u6784\u9020\u65b9\u6cd5\u4e2d\u8ba1\u7b97\u3002\u8fd9\u6837\u5c31\u53ef\u4ee5\u5728\u4efb\u4f55\u65f6\u5019\u8bbf\u95ee\u5b83\u4eec\uff0c\u800c\u4e0d\u9700\u8981\u5728\u6bcf\u4e2a\u6e38\u620f\u5faa\u73af\u5468\u671f\u4e2d\u91cd\u590d\u8fd9\u4e9b\u8ba1\u7b97\u3002 \u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u65b9\u6cd5\u6765\u8ba1\u7b97\u4e00\u4e2a\u5730\u5f62\u5757\u7684\u5305\u56f4\u76d2\uff0c\u540d\u4e3a getBoundingBox \u3002 private Box2D getBoundingBox(GameItem terrainBlock) { float scale = terrainBlock.getScale(); Vector3f position = terrainBlock.getPosition(); float topLeftX = HeightMapMesh.STARTX * scale + position.x; float topLeftZ = HeightMapMesh.STARTZ * scale + position.z; float width = Math.abs(HeightMapMesh.STARTX * 2) * scale; float height = Math.abs(HeightMapMesh.STARTZ * 2) * scale; Box2D boundingBox = new Box2D(topLeftX, topLeftZ, width, height); return boundingBox; } Box2D \u662f java.awt.Rectangle2D.Float \u7c7b\u7684\u7b80\u5316\u7248\u672c\uff0c\u4e3a\u4e86\u907f\u514d\u4f7f\u7528AWT\u800c\u521b\u5efa\u3002 \u9650\u5236\u6211\u4eec\u9700\u8981\u8ba1\u7b97\u5730\u5f62\u5757\u7684\u4e16\u754c\u5750\u6807\u3002\u5728\u4e0a\u4e00\u7ae0\u4e2d\uff0c\u4f60\u770b\u5230\u6240\u6709\u7684\u5730\u5f62\u7f51\u683c\u90fd\u662f\u5728\u4e00\u4e2a\u6b63\u65b9\u5f62\u4e2d\u521b\u5efa\u7684\uff0c\u5b83\u7684\u539f\u70b9\u8bbe\u7f6e\u4e3a [STARTX, STARTZ] \u3002\u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u628a\u8fd9\u4e9b\u5750\u6807\u8f6c\u6362\u4e3a\u4e16\u754c\u5750\u6807\uff0c\u8fd9\u8981\u8003\u8651\u4e0b\u56fe\u6240\u793a\u7684\u4f4d\u79fb\u4e0e\u7f29\u653e\u3002 \u5982\u4e0a\u6240\u8ff0\uff0c\u8fd9\u53ef\u4ee5\u5728 Terrain \u7c7b\u6784\u9020\u65b9\u6cd5\u4e2d\u8ba1\u7b97\uff0c\u56e0\u4e3a\u5b83\u4e0d\u4f1a\u5728\u8fd0\u884c\u65f6\u53d1\u751f\u53d8\u5316\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u6dfb\u52a0\u4e00\u4e2a\u65b0\u7684\u5c5e\u6027\u6765\u4fdd\u5b58\u5305\u56f4\u76d2\uff1a private final Box2D[][] boundingBoxes; \u5728 Terrain \u7c7b\u7684\u6784\u9020\u65b9\u6cd5\u4e2d\uff0c\u5f53\u6211\u4eec\u521b\u5efa\u5730\u5f62\u5757\u65f6\uff0c\u53ea\u9700\u8c03\u7528\u8ba1\u7b97\u5305\u56f4\u76d2\u7684\u65b9\u6cd5\u3002 public Terrain(int terrainSize, float scale, float minY, float maxY, String heightMapFile, String textureFile, int textInc) throws Exception { this.terrainSize = terrainSize; gameItems = new GameItem[terrainSize * terrainSize]; PNGDecoder decoder = new PNGDecoder(getClass().getResourceAsStream(heightMapFile)); int height = decoder.getHeight(); int width = decoder.getWidth(); ByteBuffer buf = ByteBuffer.allocateDirect( 4 * decoder.getWidth() * decoder.getHeight()); decoder.decode(buf, decoder.getWidth() * 4, PNGDecoder.Format.RGBA); buf.flip(); // \u6bcf\u884c\u4e0e\u6bcf\u5217\u7684\u9876\u70b9\u6570 verticesPerCol = heightMapImage.getWidth(); verticesPerRow = heightMapImage.getHeight(); heightMapMesh = new HeightMapMesh(minY, maxY, buf, width, textureFile, textInc); boundingBoxes = new Box2D[terrainSize][terrainSize]; for (int row = 0; row < terrainSize; row++) { for (int col = 0; col < terrainSize; col++) { float xDisplacement = (col - ((float) terrainSize - 1) / (float) 2) * scale * HeightMapMesh.getXLength(); float zDisplacement = (row - ((float) terrainSize - 1) / (float) 2) * scale * HeightMapMesh.getZLength(); GameItem terrainBlock = new GameItem(heightMapMesh.getMesh()); terrainBlock.setScale(scale); terrainBlock.setPosition(xDisplacement, 0, zDisplacement); gameItems[row * terrainSize + col] = terrainBlock; boundingBoxes[row][col] = getBoundingBox(terrainBlock); } } } \u56e0\u6b64\uff0c\u6709\u4e86\u6240\u6709\u9884\u5148\u8ba1\u7b97\u7684\u5305\u56f4\u76d2\uff0c\u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u65b9\u6cd5\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u5c06\u4ee5\u5f53\u524d\u4f4d\u7f6e\u4e3a\u53c2\u6570\uff0c\u8fd4\u56de\u5bf9\u5e94\u5730\u5f62\u9ad8\u5ea6\u3002\u8be5\u65b9\u6cd5\u540d\u4e3a getHeight \uff0c\u5176\u5b9a\u4e49\u5982\u4e0b\u3002 public float getHeight(Vector3f position) { float result = Float.MIN_VALUE; // \u5bf9\u4e8e\u6bcf\u4e2a\u5730\u5f62\u5757\uff0c\u6211\u4eec\u83b7\u53d6\u5305\u56f4\u76d2\uff0c\u5c06\u5176\u8f6c\u6362\u5230\u89c2\u5bdf\u5750\u6807\u7cfb // \u68c0\u67e5\u5750\u6807\u662f\u5426\u5305\u542b\u5728\u5305\u56f4\u76d2\u4e2d Box2D boundingBox = null; boolean found = false; GameItem terrainBlock = null; for (int row = 0; row < terrainSize && !found; row++) { for (int col = 0; col < terrainSize && !found; col++) { terrainBlock = gameItems[row * terrainSize + col]; boundingBox = boundingBoxes[row][col]; found = boundingBox.contains(position.x, position.z); } } // \u5982\u679c\u6211\u4eec\u627e\u5230\u4e86\u4e00\u4e2a\u5305\u542b\u6211\u4eec\u4f4d\u7f6e\u7684\u5730\u5f62\u5757 // \u8ba1\u7b97\u8be5\u4f4d\u7f6e\u7684\u5730\u5f62\u9ad8\u5ea6 if (found) { Vector3f[] triangle = getTriangle(position, boundingBox, terrainBlock); result = interpolateHeight(triangle[0], triangle[1], triangle[2], position.x, position.z); } return result; } \u5728\u6b64\u65b9\u6cd5\u4e2d\u7b2c\u4e00\u4ef6\u4e8b\u662f\u786e\u5b9a\u6211\u4eec\u6240\u5728\u7684\u5730\u5f62\u5757\u3002\u7531\u4e8e\u6211\u4eec\u5df2\u7ecf\u6709\u4e86\u6bcf\u4e2a\u5730\u5f62\u5757\u7684\u5305\u56f4\u76d2\uff0c\u6240\u4ee5\u7b97\u6cd5\u5f88\u7b80\u5355\u3002\u6211\u4eec\u53ea\u9700\u8981\u8fed\u4ee3\u5305\u56f4\u76d2\u6570\u7ec4\uff0c\u5e76\u68c0\u67e5\u5f53\u524d\u4f4d\u7f6e\u662f\u5426\u4f4d\u4e8e\u5176\u4e2d( Box2D \u63d0\u4f9b\u4e86\u8be5\u65b9\u6cd5)\u3002 \u4e00\u65e6\u627e\u5230\u4e86\u5730\u5f62\u5757\uff0c\u6211\u4eec\u9700\u8981\u8ba1\u7b97\u6240\u5904\u7684\u4e09\u89d2\u5f62\uff0c\u8fd9\u662f\u7531\u4e4b\u540e\u7684 getTriangle \u65b9\u6cd5\u8ba1\u7b97\u7684\u3002\u4e4b\u540e\uff0c\u6211\u4eec\u5f97\u5230\u4e86\u6240\u5728\u4e09\u89d2\u5f62\u7684\u5750\u6807\uff0c\u5305\u62ec\u5b83\u7684\u9ad8\u5ea6\u3002\u4f46\u662f\uff0c\u6211\u4eec\u9700\u8981\u7684\u662f\u4e00\u4e2a\u70b9\u7684\u9ad8\u5ea6\uff0c\u8fd9\u4e2a\u70b9\u4e0d\u4f4d\u4e8e\u8fd9\u4e9b\u9876\u70b9\u4e2d\u7684\u4efb\u4f55\u4e00\u70b9\uff0c\u800c\u4f4d\u4e8e\u5b83\u4eec\u4e4b\u95f4\u7684\u4f4d\u7f6e\u3002\u8fd9\u5c06\u5728 interpolateHeight \u65b9\u6cd5\u4e2d\u8ba1\u7b97\uff0c\u6211\u4eec\u4e5f\u5c06\u89e3\u91ca\u8fd9\u662f\u5982\u4f55\u8ba1\u7b97\u7684\u3002 \u8ba9\u6211\u4eec\u5148\u4ece\u786e\u5b9a\u6240\u5904\u7684\u4e09\u89d2\u5f62\u5f00\u59cb\u3002\u6784\u6210\u5730\u5f62\u5757\u7684\u6b63\u65b9\u5f62\u53ef\u4ee5\u770b\u4f5c\u4e00\u4e2a\u7f51\u683c\uff0c\u5176\u4e2d\u6bcf\u4e2a\u5355\u5143\u7531\u4e24\u4e2a\u4e09\u89d2\u5f62\u7ec4\u6210\u3002\u9996\u5148\u6211\u4eec\u5b9a\u4e49\u4e00\u4e9b\u53d8\u91cf\uff1a boundingBox.x \u662f\u4e0e\u5305\u56f4\u76d2\u76f8\u5173\u8054\u7684\u5730\u5f62\u5757\u7684\u539f x \u5750\u6807\u3002 boundingBox.y \u662f\u4e0e\u5305\u56f4\u76d2\u76f8\u5173\u8054\u7684\u5730\u5f62\u5757\u7684\u539f z \u5750\u6807(\u5373\u4f7f\u4f60\u770b\u5230\u4e00\u4e2a y \uff0c\u4f46\u5b83\u662f\u5728 z \u8f74\u7684)\u3002 boundingBox.width \u662f\u5730\u5f62\u5757\u6b63\u65b9\u5f62\u7684\u5bbd\u5ea6\u3002 boundingBox.height \u662f\u5730\u5f62\u5757\u6b63\u65b9\u5f62\u7684\u9ad8\u5ea6\u3002 cellWidth \u662f\u4e00\u4e2a\u5355\u5143\u7684\u5bbd\u5ea6\u3002 cellHeight \u662f\u4e00\u4e2a\u5355\u5143\u7684\u9ad8\u5ea6\u3002 \u4e0a\u9762\u5b9a\u4e49\u7684\u6240\u6709\u53d8\u91cf\u90fd\u7528\u4e16\u754c\u5750\u6807\u6765\u8868\u793a\u3002\u4e3a\u4e86\u8ba1\u7b97\u5355\u5143\u7684\u5bbd\u5ea6\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5c06\u5305\u56f4\u76d2\u5bbd\u5ea6\u9664\u4ee5\u6bcf\u5217\u7684\u9876\u70b9\u6570\uff1a cellWidth = \\frac{boundingBox.width}{verticesPerCol} cellHeight \u7684\u8ba1\u7b97\u4e5f\u76f8\u4f3c\uff1a cellHeight = \\frac{boundingBox.height}{verticesPerRow} \u4e00\u65e6\u6709\u4e86\u8fd9\u4e9b\u53d8\u91cf\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u8ba1\u7b97\u6240\u5728\u7684\u5355\u5143\u683c\u7684\u884c\u548c\u5217\u4e86\uff1a col = \\frac{position.x - boundingBox.x}{boundingBox.width} row = \\frac{position.z - boundingBox.y}{boundingBox.height} \u4e0b\u56fe\u5728\u793a\u4f8b\u5730\u5f62\u5757\u5c55\u793a\u4e86\u6b64\u524d\u63cf\u8ff0\u7684\u6240\u6709\u53d8\u91cf\u3002 \u6709\u4e86\u8fd9\u4e9b\u4fe1\u606f\uff0c\u5c31\u53ef\u4ee5\u8ba1\u7b97\u5355\u5143\u683c\u4e2d\u5305\u542b\u7684\u4e09\u89d2\u5f62\u9876\u70b9\u7684\u4f4d\u7f6e\u3002\u6211\u4eec\u600e\u4e48\u624d\u80fd\u505a\u5230\u5462\uff1f\u8ba9\u6211\u4eec\u6765\u770b\u770b\u7ec4\u6210\u4e00\u4e2a\u5355\u5143\u683c\u7684\u4e09\u89d2\u5f62\u3002 \u4f60\u53ef\u4ee5\u770b\u5230\uff0c\u5355\u5143\u683c\u662f\u88ab\u4e00\u4e2a\u5bf9\u89d2\u7ebf\u5206\u5f00\u4e3a\u4e24\u4e2a\u4e09\u89d2\u5f62\u7684\u3002\u786e\u5b9a\u4e0e\u5f53\u524d\u4f4d\u7f6e\u76f8\u5173\u7684\u4e09\u89d2\u5f62\u7684\u65b9\u6cd5\uff0c\u662f\u68c0\u67e5 z \u5750\u6807\u5728\u5bf9\u89d2\u7ebf\u7684\u4e0a\u65b9\u8fd8\u662f\u4e0b\u65b9\u3002\u5728\u672c\u4f8b\u4e2d\uff0c\u5c06\u5bf9\u89d2\u7ebf\u7684 x \u503c\u8bbe\u7f6e\u4e3a\u5f53\u524d\u4f4d\u7f6e\u7684 x \u503c\uff0c\u6c42\u51fa\u5bf9\u5e94\u7684\u5bf9\u89d2\u7ebf z \u503c\uff0c\u5982\u679c\u5f53\u524d\u4f4d\u7f6e\u7684 z \u503c\u5c0f\u4e8e\u5bf9\u89d2\u7ebf\u7684 z \u503c\uff0c\u90a3\u4e48\u6211\u4eec\u5728 T1 \u4e2d\u3002\u53cd\u4e4b\u5982\u679c\u5f53\u524d\u4f4d\u7f6e\u7684 z \u503c\u5927\u4e8e\u5bf9\u89d2\u7ebf\u7684 z \u503c\uff0c\u6211\u4eec\u5c31\u5728 T2 \u4e2d\u3002 \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8ba1\u7b97\u4e0e\u5bf9\u89d2\u7ebf\u76f8\u5339\u914d\u7684\u76f4\u7ebf\u65b9\u7a0b\u6765\u786e\u5b9a\u3002 \u5982\u679c\u4f60\u8fd8\u8bb0\u5f97\u5b66\u6821\u7684\u6570\u5b66\u8bfe\uff0c\u4ece\u4e24\u70b9\u901a\u8fc7\u7684\u76f4\u7ebf(\u5728\u4e8c\u7ef4\u4e2d)\u7684\u65b9\u7a0b\u4e3a: y-y1=m\\cdot(x-x1) \u5176\u4e2dm\u662f\u76f4\u7ebf\u7684\u659c\u7387\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5f53\u6cbf x \u8f74\u79fb\u52a8\u65f6\uff0c\u5176\u9ad8\u5ea6\u4f1a\u53d1\u751f\u53d8\u5316\u3002\u8bf7\u6ce8\u610f\uff0c\u5728\u672c\u4f8b\u4e2d\uff0c y \u5750\u6807\u5176\u5b9e\u662f\u4e00\u4e2a z \u3002\u8fd8\u8981\u6ce8\u610f\u7684\u662f\uff0c\u6211\u4eec\u4f7f\u7528\u7684\u662f\u4e8c\u7ef4\u5750\u6807\uff0c\u56e0\u4e3a\u5728\u8fd9\u91cc\u4e0d\u8ba1\u7b97\u9ad8\u5ea6\uff0c\u53ea\u8981 x \u5750\u6807\u548c z \u5750\u6807\u5c31\u8db3\u591f\u4e86\u3002\u56e0\u6b64\uff0c\u5728\u672c\u4f8b\u4e2d\uff0c\u76f4\u7ebf\u65b9\u7a0b\u5e94\u8be5\u662f\u8fd9\u6837\u3002 z-z1=m\\cdot(x-x1) \u659c\u7387\u53ef\u4ee5\u6309\u5982\u4e0b\u65b9\u5f0f\u8ba1\u7b97\uff1a m=\\frac{z1-z2}{x1-x2} \u6240\u4ee5\u7ed9\u5b9a\u4e00\u4e2a x \u5750\u6807\u5f97\u5230\u4e00\u4e2a z \u503c\u7684\u5bf9\u89d2\u7ebf\u65b9\u7a0b\u5c31\u50cf\u8fd9\u6837\uff1a z=m\\cdot(xpos-x1)+z1=\\frac{z1-z2}{x1-x2}\\cdot(zpos-x1)+z1 \u5176\u4e2d x1 \u3001 x2 \u3001 z1 \u548c z2 \u5206\u522b\u662f\u9876\u70b9 V1 \u548c V2 \u7684 x \u548c z \u5750\u6807\u3002 \u56e0\u6b64\uff0c\u901a\u8fc7\u4e0a\u8ff0\u65b9\u5f0f\u6765\u83b7\u5f97\u5f53\u524d\u4f4d\u7f6e\u6240\u5728\u7684\u4e09\u89d2\u5f62\u7684\u65b9\u6cd5\uff0c\u540d\u4e3a getTriangle \uff0c\u5176\u5b9e\u73b0\u5982\u4e0b\uff1a protected Vector3f[] getTriangle(Vector3f position, Box2D boundingBox, GameItem terrainBlock) { // \u83b7\u5f97\u4e0e\u5f53\u524d\u4f4d\u7f6e\u76f8\u5173\u7684\u9ad8\u5ea6\u56fe\u7684\u884c\u5217 float cellWidth = boundingBox.width / (float) verticesPerCol; float cellHeight = boundingBox.height / (float) verticesPerRow; int col = (int) ((position.x - boundingBox.x) / cellWidth); int row = (int) ((position.z - boundingBox.y) / cellHeight); Vector3f[] triangle = new Vector3f[3]; triangle[1] = new Vector3f( boundingBox.x + col * cellWidth, getWorldHeight(row + 1, col, terrainBlock), boundingBox.y + (row + 1) * cellHeight); triangle[2] = new Vector3f( boundingBox.x + (col + 1) * cellWidth, getWorldHeight(row, col + 1, terrainBlock), boundingBox.y + row * cellHeight); if (position.z < getDiagonalZCoord(triangle[1].x, triangle[1].z, triangle[2].x, triangle[2].z, position.x)) { triangle[0] = new Vector3f( boundingBox.x + col * cellWidth, getWorldHeight(row, col, terrainBlock), boundingBox.y + row * cellHeight); } else { triangle[0] = new Vector3f( boundingBox.x + (col + 1) * cellWidth, getWorldHeight(row + 2, col + 1, terrainBlock), boundingBox.y + (row + 1) * cellHeight); } return triangle; } protected float getDiagonalZCoord(float x1, float z1, float x2, float z2, float x) { float z = ((z1 - z2) / (x1 - x2)) * (x - x1) + z1; return z; } protected float getWorldHeight(int row, int col, GameItem gameItem) { float y = heightMapMesh.getHeight(row, col); return y * gameItem.getScale() + gameItem.getPosition().y; } \u4f60\u53ef\u4ee5\u770b\u5230\u6211\u4eec\u6709\u53e6\u5916\u4e24\u4e2a\u53cd\u590d\u3002\u7b2c\u4e00\u4e2a\u540d\u4e3a getDiagonalZCoord \uff0c\u7ed9\u5b9a x \u4f4d\u7f6e\u548c\u4e24\u4e2a\u9876\u70b9\u8ba1\u7b97\u5bf9\u89d2\u7ebf\u7684 z \u5750\u6807\u3002\u53e6\u4e00\u4e2a\u540d\u4e3a getWorldHeight \uff0c\u7528\u6765\u83b7\u5f97\u4e09\u89d2\u5f62\u9876\u70b9\u7684\u9ad8\u5ea6(\u5373 y \u5750\u6807)\u3002\u5f53\u5730\u5f62\u7f51\u683c\u88ab\u521b\u5efa\u65f6\uff0c\u6bcf\u4e2a\u9876\u70b9\u7684\u9ad8\u5ea6\u90fd\u88ab\u9884\u5148\u8ba1\u7b97\u548c\u50a8\u5b58\uff0c\u6211\u4eec\u53ea\u9700\u5c06\u5176\u8f6c\u6362\u4e3a\u4e16\u754c\u5750\u6807\u3002 \u597d\uff0c\u6211\u4eec\u6709\u5f53\u524d\u4f4d\u7f6e\u7684\u4e09\u89d2\u5f62\u5750\u6807\u3002\u6700\u540e\uff0c\u6211\u4eec\u51c6\u5907\u5728\u5f53\u524d\u4f4d\u7f6e\u8ba1\u7b97\u5730\u5f62\u9ad8\u5ea6\u3002\u600e\u4e48\u505a\u5462\uff1f\u6211\u4eec\u7684\u4e09\u89d2\u5f62\u5728\u4e00\u4e2a\u5e73\u9762\u4e0a\uff0c\u4e00\u4e2a\u5e73\u9762\u53ef\u4ee5\u7531\u4e09\u4e2a\u70b9\u5b9a\u4e49\uff0c\u5728\u672c\u4f8b\u4e2d\uff0c\u4e09\u4e2a\u9876\u70b9\u5b9a\u4e49\u4e86\u4e00\u4e2a\u4e09\u89d2\u5f62\u3002 \u5e73\u9762\u65b9\u7a0b\u5982\u4e0b\uff1a a\\cdot x+b\\cdot y+c\\cdot z+d=0 \u4e0a\u8ff0\u65b9\u7a0b\u7684\u5e38\u6570\u503c\u662f\uff1a a=(B_{y}-A_{y}) \\cdot (C_{z} - A_{z}) - (C_{y} - A_{y}) \\cdot (B_{z}-A_{z}) b=(B_{z}-A_{z}) \\cdot (C_{x} - A_{x}) - (C_{z} - A_{z}) \\cdot (B_{z}-A_{z}) c=(B_{x}-A_{x}) \\cdot (C_{y} - A_{y}) - (C_{x} - A_{x}) \\cdot (B_{y}-A_{y}) \u5176\u4e2d A \u3001 B \u548c C \u662f\u5b9a\u4e49\u5e73\u9762\u6240\u9700\u7684\u4e09\u4e2a\u9876\u70b9\u3002 \u7136\u540e\uff0c\u5229\u7528\u4e4b\u524d\u7684\u65b9\u7a0b\u4ee5\u53ca\u5f53\u524d\u4f4d\u7f6e\u7684 x \u548c z \u5750\u6807\u503c\uff0c\u6211\u4eec\u80fd\u591f\u8ba1\u7b97 y \u503c\uff0c\u5373\u5f53\u524d\u4f4d\u7f6e\u7684\u5730\u5f62\u9ad8\u5ea6\uff1a y = (-d - a \\cdot x - c \\cdot z) / b \u5b9e\u73b0\u4e86\u5982\u4e0a\u8fd0\u7b97\u7684\u65b9\u6cd5\u5982\u4e0b\uff1a protected float interpolateHeight(Vector3f pA, Vector3f pB, Vector3f pC, float x, float z) { // \u5e73\u9762\u65b9\u7a0b ax+by+cz+d=0 float a = (pB.y - pA.y) * (pC.z - pA.z) - (pC.y - pA.y) * (pB.z - pA.z); float b = (pB.z - pA.z) * (pC.x - pA.x) - (pC.z - pA.z) * (pB.x - pA.x); float c = (pB.x - pA.x) * (pC.y - pA.y) - (pC.x - pA.x) * (pB.y - pA.y); float d = -(a * pA.x + b * pA.y + c * pA.z); // y = (-d -ax -cz) / b float y = (-d - a * x - c * z) / b; return y; } \u8fd9\u5c31\u5b8c\u4e86\uff01\u73b0\u5728\u6211\u4eec\u80fd\u591f\u68c0\u6d4b\u78b0\u649e\uff0c\u6240\u4ee5\u5728 DummyGame \u7c7b\u4e2d\uff0c\u5728\u66f4\u65b0\u6444\u50cf\u673a\u4f4d\u7f6e\u65f6\uff0c\u4fee\u6539\u5982\u4e0b\u4ee3\u7801\uff1a // \u66f4\u65b0\u6444\u50cf\u673a\u4f4d\u7f6e Vector3f prevPos = new Vector3f(camera.getPosition()); camera.movePosition(cameraInc.x * CAMERA_POS_STEP, cameraInc.y * CAMERA_POS_STEP, cameraInc.z * CAMERA_POS_STEP); // \u68c0\u67e5\u662f\u5426\u53d1\u751f\u78b0\u649e\u3002\u5982\u679c\u4e3atrue\uff0c\u5c06y\u5750\u6807\u8bbe\u7f6e\u4e3a // \u6700\u5927\u9ad8\u5ea6 float height = terrain.getHeight(camera.getPosition()); if ( camera.getPosition().y <= height ) { camera.setPosition(prevPos.x, prevPos.y, prevPos.z); } \u5982\u4f60\u6240\u89c1\uff0c\u68c0\u6d4b\u5730\u5f62\u78b0\u649e\u7684\u6982\u5ff5\u5f88\u5bb9\u6613\u7406\u89e3\uff0c\u4f46\u662f\u6211\u4eec\u9700\u8981\u4ed4\u7ec6\u5730\u8fdb\u884c\u8ba1\u7b97\u5e76\u4e86\u89e3\u6b63\u5904\u7406\u7684\u4e0d\u540c\u5750\u6807\u7cfb\u3002 \u6b64\u5916\uff0c\u867d\u7136\u8fd9\u91cc\u7ed9\u51fa\u7684\u7b97\u6cd5\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u90fd\u662f\u53ef\u7528\u7684\uff0c\u4f46\u4ecd\u5b58\u5728\u9700\u8981\u4ed4\u7ec6\u5904\u7406\u7684\u60c5\u51b5\u3002\u4f60\u53ef\u4ee5\u53d1\u73b0\u7684\u4e00\u4e2a\u95ee\u9898\u662f\u96a7\u9053\u6548\u5e94( Tunnelling )\u3002\u8bbe\u60f3\u4e00\u4e2a\u60c5\u51b5\uff0c\u6211\u4eec\u6b63\u4ee5\u9ad8\u901f\u7a7f\u8fc7\u5730\u5f62\uff0c\u6b63\u56e0\u5982\u6b64\uff0c\u4f4d\u7f6e\u589e\u91cf\u503c\u8f83\u9ad8\u3002\u8fd9\u4e2a\u503c\u53d8\u5f97\u5982\u6b64\u4e4b\u9ad8\uff0c\u4ee5\u81f3\u4e8e\u56e0\u4e3a\u6211\u4eec\u68c0\u6d4b\u7684\u662f\u6700\u7ec8\u4f4d\u7f6e\u7684\u78b0\u649e\uff0c\u6240\u4ee5\u53ef\u80fd\u5df2\u7ecf\u7a7f\u8fc7\u4e86\u4f4d\u4e8e\u4e24\u70b9\u4e4b\u95f4\u7684\u969c\u788d\u3002 \u6709\u8bb8\u591a\u53ef\u884c\u7684\u89e3\u51b3\u65b9\u6848\u53ef\u4ee5\u907f\u514d\u8fd9\u4e2a\u6548\u5e94\uff0c\u6700\u7b80\u5355\u7684\u89e3\u51b3\u65b9\u6cd5\u662f\u5c06\u8981\u8fdb\u884c\u7684\u8ba1\u7b97\u5206\u6210\u589e\u91cf\u8f83\u5c0f\u7684\u591a\u4efd\u3002","title":"\u5730\u5f62\u78b0\u649e"},{"location":"15-terrain-collisions/#terrain-collisions","text":"\u6b64\u524d\u6211\u4eec\u521b\u5efa\u4e86\u4e00\u4e2a\u5730\u5f62\uff0c\u63a5\u4e0b\u6765\u5c31\u662f\u68c0\u6d4b\u78b0\u649e\u4ee5\u907f\u514d\u7a7f\u8fc7\u5b83\u3002\u56de\u5fc6\u4e00\u4e0b\u4e4b\u524d\u7684\u5185\u5bb9\uff0c\u4e00\u4e2a\u5730\u5f62\u662f\u7531\u5730\u5f62\u5757\u7ec4\u6210\u7684\uff0c\u6bcf\u4e2a\u5730\u5f62\u5757\u90fd\u662f\u7531\u9ad8\u5ea6\u56fe\u751f\u6210\u7684\uff0c\u9ad8\u5ea6\u56fe\u7528\u4e8e\u8bbe\u7f6e\u6784\u6210\u5730\u5f62\u7684\u4e09\u89d2\u5f62\u7684\u9876\u70b9\u9ad8\u5ea6\u3002 \u4e3a\u4e86\u68c0\u6d4b\u78b0\u649e\uff0c\u6211\u4eec\u5fc5\u987b\u5c06\u5f53\u524d\u6240\u5728\u4f4d\u7f6e\u7684 Y \u503c\u4e0e\u5f53\u524d\u5730\u5f62\u70b9\u7684 Y \u503c\u8fdb\u884c\u6bd4\u8f83\u3002\u5982\u679c\u6709\u78b0\u649e\uff0c\u6211\u4eec\u9700\u8981\u56de\u5230\u5730\u5f62\u4e0a\u65b9\u3002\u5f88\u7b80\u5355\u7684\u60f3\u6cd5\uff0c\u662f\u5417\uff1f\u786e\u5b9e\u662f\u8fd9\u6837\uff0c\u4f46\u5728\u6bd4\u8f83\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u8fdb\u884c\u51e0\u6b21\u8ba1\u7b97\u3002 \u9996\u5148\u8981\u5b9a\u4e49\u7684\u662f\u201c\u5f53\u524d\u4f4d\u7f6e\u201d\u8fd9\u4e2a\u8bcd\u7684\u6982\u5ff5\u3002\u7531\u4e8e\u6211\u4eec\u8fd8\u6ca1\u6709\u4e00\u4e2a\u201c\u73a9\u5bb6\u201d\u7684\u6982\u5ff5\uff0c\u5f53\u524d\u4f4d\u7f6e\u5c06\u662f\u6444\u50cf\u673a\u7684\u4f4d\u7f6e\u3002\u8fd9\u6837\u6211\u4eec\u5c31\u6709\u4e86\u6bd4\u8f83\u7684\u4e00\u65b9\uff0c\u56e0\u6b64\u63a5\u4e0b\u6765\u8981\u8ba1\u7b97\u5f53\u524d\u4f4d\u7f6e\u7684\u5730\u5f62\u9ad8\u5ea6\u3002 \u5982\u4e0a\u6240\u8ff0\uff0c\u5730\u5f62\u7531\u5730\u5f62\u5757\u7ec4\u6210\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002 \u6bcf\u4e2a\u5730\u5f62\u5757\u90fd\u662f\u7531\u76f8\u540c\u7684\u9ad8\u5ea6\u56fe\u7f51\u683c\u6784\u6210\uff0c\u4f46\u88ab\u7cbe\u786e\u5730\u7f29\u653e\u548c\u4f4d\u79fb\uff0c\u4ee5\u5f62\u6210\u770b\u8d77\u6765\u50cf\u662f\u8fde\u7eed\u7684\u666f\u89c2\u7684\u5730\u5f62\u7f51\u683c\u3002 \u6240\u4ee5\u9996\u5148\u8981\u505a\u7684\u662f\u786e\u5b9a\u5f53\u524d\u4f4d\u7f6e(\u6444\u50cf\u673a\u4f4d\u7f6e)\u5728\u54ea\u4e2a\u5730\u5f62\u5757\u3002\u4e3a\u4e86\u5f97\u5230\u5b83\uff0c\u6211\u4eec\u5c06\u57fa\u4e8e\u4f4d\u79fb\u548c\u7f29\u653e\u6765\u8ba1\u7b97\u6bcf\u4e2a\u5730\u5f62\u5757\u7684\u5305\u56f4\u76d2( BoundingBox )\u3002\u56e0\u4e3a\u5730\u5f62\u5728\u8fd0\u884c\u65f6\u4e0d\u4f1a\u79fb\u52a8\u6216\u7f29\u653e\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5728 Terrain \u7c7b\u7684\u6784\u9020\u65b9\u6cd5\u4e2d\u8ba1\u7b97\u3002\u8fd9\u6837\u5c31\u53ef\u4ee5\u5728\u4efb\u4f55\u65f6\u5019\u8bbf\u95ee\u5b83\u4eec\uff0c\u800c\u4e0d\u9700\u8981\u5728\u6bcf\u4e2a\u6e38\u620f\u5faa\u73af\u5468\u671f\u4e2d\u91cd\u590d\u8fd9\u4e9b\u8ba1\u7b97\u3002 \u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u65b9\u6cd5\u6765\u8ba1\u7b97\u4e00\u4e2a\u5730\u5f62\u5757\u7684\u5305\u56f4\u76d2\uff0c\u540d\u4e3a getBoundingBox \u3002 private Box2D getBoundingBox(GameItem terrainBlock) { float scale = terrainBlock.getScale(); Vector3f position = terrainBlock.getPosition(); float topLeftX = HeightMapMesh.STARTX * scale + position.x; float topLeftZ = HeightMapMesh.STARTZ * scale + position.z; float width = Math.abs(HeightMapMesh.STARTX * 2) * scale; float height = Math.abs(HeightMapMesh.STARTZ * 2) * scale; Box2D boundingBox = new Box2D(topLeftX, topLeftZ, width, height); return boundingBox; } Box2D \u662f java.awt.Rectangle2D.Float \u7c7b\u7684\u7b80\u5316\u7248\u672c\uff0c\u4e3a\u4e86\u907f\u514d\u4f7f\u7528AWT\u800c\u521b\u5efa\u3002 \u9650\u5236\u6211\u4eec\u9700\u8981\u8ba1\u7b97\u5730\u5f62\u5757\u7684\u4e16\u754c\u5750\u6807\u3002\u5728\u4e0a\u4e00\u7ae0\u4e2d\uff0c\u4f60\u770b\u5230\u6240\u6709\u7684\u5730\u5f62\u7f51\u683c\u90fd\u662f\u5728\u4e00\u4e2a\u6b63\u65b9\u5f62\u4e2d\u521b\u5efa\u7684\uff0c\u5b83\u7684\u539f\u70b9\u8bbe\u7f6e\u4e3a [STARTX, STARTZ] \u3002\u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u628a\u8fd9\u4e9b\u5750\u6807\u8f6c\u6362\u4e3a\u4e16\u754c\u5750\u6807\uff0c\u8fd9\u8981\u8003\u8651\u4e0b\u56fe\u6240\u793a\u7684\u4f4d\u79fb\u4e0e\u7f29\u653e\u3002 \u5982\u4e0a\u6240\u8ff0\uff0c\u8fd9\u53ef\u4ee5\u5728 Terrain \u7c7b\u6784\u9020\u65b9\u6cd5\u4e2d\u8ba1\u7b97\uff0c\u56e0\u4e3a\u5b83\u4e0d\u4f1a\u5728\u8fd0\u884c\u65f6\u53d1\u751f\u53d8\u5316\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u6dfb\u52a0\u4e00\u4e2a\u65b0\u7684\u5c5e\u6027\u6765\u4fdd\u5b58\u5305\u56f4\u76d2\uff1a private final Box2D[][] boundingBoxes; \u5728 Terrain \u7c7b\u7684\u6784\u9020\u65b9\u6cd5\u4e2d\uff0c\u5f53\u6211\u4eec\u521b\u5efa\u5730\u5f62\u5757\u65f6\uff0c\u53ea\u9700\u8c03\u7528\u8ba1\u7b97\u5305\u56f4\u76d2\u7684\u65b9\u6cd5\u3002 public Terrain(int terrainSize, float scale, float minY, float maxY, String heightMapFile, String textureFile, int textInc) throws Exception { this.terrainSize = terrainSize; gameItems = new GameItem[terrainSize * terrainSize]; PNGDecoder decoder = new PNGDecoder(getClass().getResourceAsStream(heightMapFile)); int height = decoder.getHeight(); int width = decoder.getWidth(); ByteBuffer buf = ByteBuffer.allocateDirect( 4 * decoder.getWidth() * decoder.getHeight()); decoder.decode(buf, decoder.getWidth() * 4, PNGDecoder.Format.RGBA); buf.flip(); // \u6bcf\u884c\u4e0e\u6bcf\u5217\u7684\u9876\u70b9\u6570 verticesPerCol = heightMapImage.getWidth(); verticesPerRow = heightMapImage.getHeight(); heightMapMesh = new HeightMapMesh(minY, maxY, buf, width, textureFile, textInc); boundingBoxes = new Box2D[terrainSize][terrainSize]; for (int row = 0; row < terrainSize; row++) { for (int col = 0; col < terrainSize; col++) { float xDisplacement = (col - ((float) terrainSize - 1) / (float) 2) * scale * HeightMapMesh.getXLength(); float zDisplacement = (row - ((float) terrainSize - 1) / (float) 2) * scale * HeightMapMesh.getZLength(); GameItem terrainBlock = new GameItem(heightMapMesh.getMesh()); terrainBlock.setScale(scale); terrainBlock.setPosition(xDisplacement, 0, zDisplacement); gameItems[row * terrainSize + col] = terrainBlock; boundingBoxes[row][col] = getBoundingBox(terrainBlock); } } } \u56e0\u6b64\uff0c\u6709\u4e86\u6240\u6709\u9884\u5148\u8ba1\u7b97\u7684\u5305\u56f4\u76d2\uff0c\u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u65b9\u6cd5\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u5c06\u4ee5\u5f53\u524d\u4f4d\u7f6e\u4e3a\u53c2\u6570\uff0c\u8fd4\u56de\u5bf9\u5e94\u5730\u5f62\u9ad8\u5ea6\u3002\u8be5\u65b9\u6cd5\u540d\u4e3a getHeight \uff0c\u5176\u5b9a\u4e49\u5982\u4e0b\u3002 public float getHeight(Vector3f position) { float result = Float.MIN_VALUE; // \u5bf9\u4e8e\u6bcf\u4e2a\u5730\u5f62\u5757\uff0c\u6211\u4eec\u83b7\u53d6\u5305\u56f4\u76d2\uff0c\u5c06\u5176\u8f6c\u6362\u5230\u89c2\u5bdf\u5750\u6807\u7cfb // \u68c0\u67e5\u5750\u6807\u662f\u5426\u5305\u542b\u5728\u5305\u56f4\u76d2\u4e2d Box2D boundingBox = null; boolean found = false; GameItem terrainBlock = null; for (int row = 0; row < terrainSize && !found; row++) { for (int col = 0; col < terrainSize && !found; col++) { terrainBlock = gameItems[row * terrainSize + col]; boundingBox = boundingBoxes[row][col]; found = boundingBox.contains(position.x, position.z); } } // \u5982\u679c\u6211\u4eec\u627e\u5230\u4e86\u4e00\u4e2a\u5305\u542b\u6211\u4eec\u4f4d\u7f6e\u7684\u5730\u5f62\u5757 // \u8ba1\u7b97\u8be5\u4f4d\u7f6e\u7684\u5730\u5f62\u9ad8\u5ea6 if (found) { Vector3f[] triangle = getTriangle(position, boundingBox, terrainBlock); result = interpolateHeight(triangle[0], triangle[1], triangle[2], position.x, position.z); } return result; } \u5728\u6b64\u65b9\u6cd5\u4e2d\u7b2c\u4e00\u4ef6\u4e8b\u662f\u786e\u5b9a\u6211\u4eec\u6240\u5728\u7684\u5730\u5f62\u5757\u3002\u7531\u4e8e\u6211\u4eec\u5df2\u7ecf\u6709\u4e86\u6bcf\u4e2a\u5730\u5f62\u5757\u7684\u5305\u56f4\u76d2\uff0c\u6240\u4ee5\u7b97\u6cd5\u5f88\u7b80\u5355\u3002\u6211\u4eec\u53ea\u9700\u8981\u8fed\u4ee3\u5305\u56f4\u76d2\u6570\u7ec4\uff0c\u5e76\u68c0\u67e5\u5f53\u524d\u4f4d\u7f6e\u662f\u5426\u4f4d\u4e8e\u5176\u4e2d( Box2D \u63d0\u4f9b\u4e86\u8be5\u65b9\u6cd5)\u3002 \u4e00\u65e6\u627e\u5230\u4e86\u5730\u5f62\u5757\uff0c\u6211\u4eec\u9700\u8981\u8ba1\u7b97\u6240\u5904\u7684\u4e09\u89d2\u5f62\uff0c\u8fd9\u662f\u7531\u4e4b\u540e\u7684 getTriangle \u65b9\u6cd5\u8ba1\u7b97\u7684\u3002\u4e4b\u540e\uff0c\u6211\u4eec\u5f97\u5230\u4e86\u6240\u5728\u4e09\u89d2\u5f62\u7684\u5750\u6807\uff0c\u5305\u62ec\u5b83\u7684\u9ad8\u5ea6\u3002\u4f46\u662f\uff0c\u6211\u4eec\u9700\u8981\u7684\u662f\u4e00\u4e2a\u70b9\u7684\u9ad8\u5ea6\uff0c\u8fd9\u4e2a\u70b9\u4e0d\u4f4d\u4e8e\u8fd9\u4e9b\u9876\u70b9\u4e2d\u7684\u4efb\u4f55\u4e00\u70b9\uff0c\u800c\u4f4d\u4e8e\u5b83\u4eec\u4e4b\u95f4\u7684\u4f4d\u7f6e\u3002\u8fd9\u5c06\u5728 interpolateHeight \u65b9\u6cd5\u4e2d\u8ba1\u7b97\uff0c\u6211\u4eec\u4e5f\u5c06\u89e3\u91ca\u8fd9\u662f\u5982\u4f55\u8ba1\u7b97\u7684\u3002 \u8ba9\u6211\u4eec\u5148\u4ece\u786e\u5b9a\u6240\u5904\u7684\u4e09\u89d2\u5f62\u5f00\u59cb\u3002\u6784\u6210\u5730\u5f62\u5757\u7684\u6b63\u65b9\u5f62\u53ef\u4ee5\u770b\u4f5c\u4e00\u4e2a\u7f51\u683c\uff0c\u5176\u4e2d\u6bcf\u4e2a\u5355\u5143\u7531\u4e24\u4e2a\u4e09\u89d2\u5f62\u7ec4\u6210\u3002\u9996\u5148\u6211\u4eec\u5b9a\u4e49\u4e00\u4e9b\u53d8\u91cf\uff1a boundingBox.x \u662f\u4e0e\u5305\u56f4\u76d2\u76f8\u5173\u8054\u7684\u5730\u5f62\u5757\u7684\u539f x \u5750\u6807\u3002 boundingBox.y \u662f\u4e0e\u5305\u56f4\u76d2\u76f8\u5173\u8054\u7684\u5730\u5f62\u5757\u7684\u539f z \u5750\u6807(\u5373\u4f7f\u4f60\u770b\u5230\u4e00\u4e2a y \uff0c\u4f46\u5b83\u662f\u5728 z \u8f74\u7684)\u3002 boundingBox.width \u662f\u5730\u5f62\u5757\u6b63\u65b9\u5f62\u7684\u5bbd\u5ea6\u3002 boundingBox.height \u662f\u5730\u5f62\u5757\u6b63\u65b9\u5f62\u7684\u9ad8\u5ea6\u3002 cellWidth \u662f\u4e00\u4e2a\u5355\u5143\u7684\u5bbd\u5ea6\u3002 cellHeight \u662f\u4e00\u4e2a\u5355\u5143\u7684\u9ad8\u5ea6\u3002 \u4e0a\u9762\u5b9a\u4e49\u7684\u6240\u6709\u53d8\u91cf\u90fd\u7528\u4e16\u754c\u5750\u6807\u6765\u8868\u793a\u3002\u4e3a\u4e86\u8ba1\u7b97\u5355\u5143\u7684\u5bbd\u5ea6\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5c06\u5305\u56f4\u76d2\u5bbd\u5ea6\u9664\u4ee5\u6bcf\u5217\u7684\u9876\u70b9\u6570\uff1a cellWidth = \\frac{boundingBox.width}{verticesPerCol} cellHeight \u7684\u8ba1\u7b97\u4e5f\u76f8\u4f3c\uff1a cellHeight = \\frac{boundingBox.height}{verticesPerRow} \u4e00\u65e6\u6709\u4e86\u8fd9\u4e9b\u53d8\u91cf\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u8ba1\u7b97\u6240\u5728\u7684\u5355\u5143\u683c\u7684\u884c\u548c\u5217\u4e86\uff1a col = \\frac{position.x - boundingBox.x}{boundingBox.width} row = \\frac{position.z - boundingBox.y}{boundingBox.height} \u4e0b\u56fe\u5728\u793a\u4f8b\u5730\u5f62\u5757\u5c55\u793a\u4e86\u6b64\u524d\u63cf\u8ff0\u7684\u6240\u6709\u53d8\u91cf\u3002 \u6709\u4e86\u8fd9\u4e9b\u4fe1\u606f\uff0c\u5c31\u53ef\u4ee5\u8ba1\u7b97\u5355\u5143\u683c\u4e2d\u5305\u542b\u7684\u4e09\u89d2\u5f62\u9876\u70b9\u7684\u4f4d\u7f6e\u3002\u6211\u4eec\u600e\u4e48\u624d\u80fd\u505a\u5230\u5462\uff1f\u8ba9\u6211\u4eec\u6765\u770b\u770b\u7ec4\u6210\u4e00\u4e2a\u5355\u5143\u683c\u7684\u4e09\u89d2\u5f62\u3002 \u4f60\u53ef\u4ee5\u770b\u5230\uff0c\u5355\u5143\u683c\u662f\u88ab\u4e00\u4e2a\u5bf9\u89d2\u7ebf\u5206\u5f00\u4e3a\u4e24\u4e2a\u4e09\u89d2\u5f62\u7684\u3002\u786e\u5b9a\u4e0e\u5f53\u524d\u4f4d\u7f6e\u76f8\u5173\u7684\u4e09\u89d2\u5f62\u7684\u65b9\u6cd5\uff0c\u662f\u68c0\u67e5 z \u5750\u6807\u5728\u5bf9\u89d2\u7ebf\u7684\u4e0a\u65b9\u8fd8\u662f\u4e0b\u65b9\u3002\u5728\u672c\u4f8b\u4e2d\uff0c\u5c06\u5bf9\u89d2\u7ebf\u7684 x \u503c\u8bbe\u7f6e\u4e3a\u5f53\u524d\u4f4d\u7f6e\u7684 x \u503c\uff0c\u6c42\u51fa\u5bf9\u5e94\u7684\u5bf9\u89d2\u7ebf z \u503c\uff0c\u5982\u679c\u5f53\u524d\u4f4d\u7f6e\u7684 z \u503c\u5c0f\u4e8e\u5bf9\u89d2\u7ebf\u7684 z \u503c\uff0c\u90a3\u4e48\u6211\u4eec\u5728 T1 \u4e2d\u3002\u53cd\u4e4b\u5982\u679c\u5f53\u524d\u4f4d\u7f6e\u7684 z \u503c\u5927\u4e8e\u5bf9\u89d2\u7ebf\u7684 z \u503c\uff0c\u6211\u4eec\u5c31\u5728 T2 \u4e2d\u3002 \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8ba1\u7b97\u4e0e\u5bf9\u89d2\u7ebf\u76f8\u5339\u914d\u7684\u76f4\u7ebf\u65b9\u7a0b\u6765\u786e\u5b9a\u3002 \u5982\u679c\u4f60\u8fd8\u8bb0\u5f97\u5b66\u6821\u7684\u6570\u5b66\u8bfe\uff0c\u4ece\u4e24\u70b9\u901a\u8fc7\u7684\u76f4\u7ebf(\u5728\u4e8c\u7ef4\u4e2d)\u7684\u65b9\u7a0b\u4e3a: y-y1=m\\cdot(x-x1) \u5176\u4e2dm\u662f\u76f4\u7ebf\u7684\u659c\u7387\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5f53\u6cbf x \u8f74\u79fb\u52a8\u65f6\uff0c\u5176\u9ad8\u5ea6\u4f1a\u53d1\u751f\u53d8\u5316\u3002\u8bf7\u6ce8\u610f\uff0c\u5728\u672c\u4f8b\u4e2d\uff0c y \u5750\u6807\u5176\u5b9e\u662f\u4e00\u4e2a z \u3002\u8fd8\u8981\u6ce8\u610f\u7684\u662f\uff0c\u6211\u4eec\u4f7f\u7528\u7684\u662f\u4e8c\u7ef4\u5750\u6807\uff0c\u56e0\u4e3a\u5728\u8fd9\u91cc\u4e0d\u8ba1\u7b97\u9ad8\u5ea6\uff0c\u53ea\u8981 x \u5750\u6807\u548c z \u5750\u6807\u5c31\u8db3\u591f\u4e86\u3002\u56e0\u6b64\uff0c\u5728\u672c\u4f8b\u4e2d\uff0c\u76f4\u7ebf\u65b9\u7a0b\u5e94\u8be5\u662f\u8fd9\u6837\u3002 z-z1=m\\cdot(x-x1) \u659c\u7387\u53ef\u4ee5\u6309\u5982\u4e0b\u65b9\u5f0f\u8ba1\u7b97\uff1a m=\\frac{z1-z2}{x1-x2} \u6240\u4ee5\u7ed9\u5b9a\u4e00\u4e2a x \u5750\u6807\u5f97\u5230\u4e00\u4e2a z \u503c\u7684\u5bf9\u89d2\u7ebf\u65b9\u7a0b\u5c31\u50cf\u8fd9\u6837\uff1a z=m\\cdot(xpos-x1)+z1=\\frac{z1-z2}{x1-x2}\\cdot(zpos-x1)+z1 \u5176\u4e2d x1 \u3001 x2 \u3001 z1 \u548c z2 \u5206\u522b\u662f\u9876\u70b9 V1 \u548c V2 \u7684 x \u548c z \u5750\u6807\u3002 \u56e0\u6b64\uff0c\u901a\u8fc7\u4e0a\u8ff0\u65b9\u5f0f\u6765\u83b7\u5f97\u5f53\u524d\u4f4d\u7f6e\u6240\u5728\u7684\u4e09\u89d2\u5f62\u7684\u65b9\u6cd5\uff0c\u540d\u4e3a getTriangle \uff0c\u5176\u5b9e\u73b0\u5982\u4e0b\uff1a protected Vector3f[] getTriangle(Vector3f position, Box2D boundingBox, GameItem terrainBlock) { // \u83b7\u5f97\u4e0e\u5f53\u524d\u4f4d\u7f6e\u76f8\u5173\u7684\u9ad8\u5ea6\u56fe\u7684\u884c\u5217 float cellWidth = boundingBox.width / (float) verticesPerCol; float cellHeight = boundingBox.height / (float) verticesPerRow; int col = (int) ((position.x - boundingBox.x) / cellWidth); int row = (int) ((position.z - boundingBox.y) / cellHeight); Vector3f[] triangle = new Vector3f[3]; triangle[1] = new Vector3f( boundingBox.x + col * cellWidth, getWorldHeight(row + 1, col, terrainBlock), boundingBox.y + (row + 1) * cellHeight); triangle[2] = new Vector3f( boundingBox.x + (col + 1) * cellWidth, getWorldHeight(row, col + 1, terrainBlock), boundingBox.y + row * cellHeight); if (position.z < getDiagonalZCoord(triangle[1].x, triangle[1].z, triangle[2].x, triangle[2].z, position.x)) { triangle[0] = new Vector3f( boundingBox.x + col * cellWidth, getWorldHeight(row, col, terrainBlock), boundingBox.y + row * cellHeight); } else { triangle[0] = new Vector3f( boundingBox.x + (col + 1) * cellWidth, getWorldHeight(row + 2, col + 1, terrainBlock), boundingBox.y + (row + 1) * cellHeight); } return triangle; } protected float getDiagonalZCoord(float x1, float z1, float x2, float z2, float x) { float z = ((z1 - z2) / (x1 - x2)) * (x - x1) + z1; return z; } protected float getWorldHeight(int row, int col, GameItem gameItem) { float y = heightMapMesh.getHeight(row, col); return y * gameItem.getScale() + gameItem.getPosition().y; } \u4f60\u53ef\u4ee5\u770b\u5230\u6211\u4eec\u6709\u53e6\u5916\u4e24\u4e2a\u53cd\u590d\u3002\u7b2c\u4e00\u4e2a\u540d\u4e3a getDiagonalZCoord \uff0c\u7ed9\u5b9a x \u4f4d\u7f6e\u548c\u4e24\u4e2a\u9876\u70b9\u8ba1\u7b97\u5bf9\u89d2\u7ebf\u7684 z \u5750\u6807\u3002\u53e6\u4e00\u4e2a\u540d\u4e3a getWorldHeight \uff0c\u7528\u6765\u83b7\u5f97\u4e09\u89d2\u5f62\u9876\u70b9\u7684\u9ad8\u5ea6(\u5373 y \u5750\u6807)\u3002\u5f53\u5730\u5f62\u7f51\u683c\u88ab\u521b\u5efa\u65f6\uff0c\u6bcf\u4e2a\u9876\u70b9\u7684\u9ad8\u5ea6\u90fd\u88ab\u9884\u5148\u8ba1\u7b97\u548c\u50a8\u5b58\uff0c\u6211\u4eec\u53ea\u9700\u5c06\u5176\u8f6c\u6362\u4e3a\u4e16\u754c\u5750\u6807\u3002 \u597d\uff0c\u6211\u4eec\u6709\u5f53\u524d\u4f4d\u7f6e\u7684\u4e09\u89d2\u5f62\u5750\u6807\u3002\u6700\u540e\uff0c\u6211\u4eec\u51c6\u5907\u5728\u5f53\u524d\u4f4d\u7f6e\u8ba1\u7b97\u5730\u5f62\u9ad8\u5ea6\u3002\u600e\u4e48\u505a\u5462\uff1f\u6211\u4eec\u7684\u4e09\u89d2\u5f62\u5728\u4e00\u4e2a\u5e73\u9762\u4e0a\uff0c\u4e00\u4e2a\u5e73\u9762\u53ef\u4ee5\u7531\u4e09\u4e2a\u70b9\u5b9a\u4e49\uff0c\u5728\u672c\u4f8b\u4e2d\uff0c\u4e09\u4e2a\u9876\u70b9\u5b9a\u4e49\u4e86\u4e00\u4e2a\u4e09\u89d2\u5f62\u3002 \u5e73\u9762\u65b9\u7a0b\u5982\u4e0b\uff1a a\\cdot x+b\\cdot y+c\\cdot z+d=0 \u4e0a\u8ff0\u65b9\u7a0b\u7684\u5e38\u6570\u503c\u662f\uff1a a=(B_{y}-A_{y}) \\cdot (C_{z} - A_{z}) - (C_{y} - A_{y}) \\cdot (B_{z}-A_{z}) b=(B_{z}-A_{z}) \\cdot (C_{x} - A_{x}) - (C_{z} - A_{z}) \\cdot (B_{z}-A_{z}) c=(B_{x}-A_{x}) \\cdot (C_{y} - A_{y}) - (C_{x} - A_{x}) \\cdot (B_{y}-A_{y}) \u5176\u4e2d A \u3001 B \u548c C \u662f\u5b9a\u4e49\u5e73\u9762\u6240\u9700\u7684\u4e09\u4e2a\u9876\u70b9\u3002 \u7136\u540e\uff0c\u5229\u7528\u4e4b\u524d\u7684\u65b9\u7a0b\u4ee5\u53ca\u5f53\u524d\u4f4d\u7f6e\u7684 x \u548c z \u5750\u6807\u503c\uff0c\u6211\u4eec\u80fd\u591f\u8ba1\u7b97 y \u503c\uff0c\u5373\u5f53\u524d\u4f4d\u7f6e\u7684\u5730\u5f62\u9ad8\u5ea6\uff1a y = (-d - a \\cdot x - c \\cdot z) / b \u5b9e\u73b0\u4e86\u5982\u4e0a\u8fd0\u7b97\u7684\u65b9\u6cd5\u5982\u4e0b\uff1a protected float interpolateHeight(Vector3f pA, Vector3f pB, Vector3f pC, float x, float z) { // \u5e73\u9762\u65b9\u7a0b ax+by+cz+d=0 float a = (pB.y - pA.y) * (pC.z - pA.z) - (pC.y - pA.y) * (pB.z - pA.z); float b = (pB.z - pA.z) * (pC.x - pA.x) - (pC.z - pA.z) * (pB.x - pA.x); float c = (pB.x - pA.x) * (pC.y - pA.y) - (pC.x - pA.x) * (pB.y - pA.y); float d = -(a * pA.x + b * pA.y + c * pA.z); // y = (-d -ax -cz) / b float y = (-d - a * x - c * z) / b; return y; } \u8fd9\u5c31\u5b8c\u4e86\uff01\u73b0\u5728\u6211\u4eec\u80fd\u591f\u68c0\u6d4b\u78b0\u649e\uff0c\u6240\u4ee5\u5728 DummyGame \u7c7b\u4e2d\uff0c\u5728\u66f4\u65b0\u6444\u50cf\u673a\u4f4d\u7f6e\u65f6\uff0c\u4fee\u6539\u5982\u4e0b\u4ee3\u7801\uff1a // \u66f4\u65b0\u6444\u50cf\u673a\u4f4d\u7f6e Vector3f prevPos = new Vector3f(camera.getPosition()); camera.movePosition(cameraInc.x * CAMERA_POS_STEP, cameraInc.y * CAMERA_POS_STEP, cameraInc.z * CAMERA_POS_STEP); // \u68c0\u67e5\u662f\u5426\u53d1\u751f\u78b0\u649e\u3002\u5982\u679c\u4e3atrue\uff0c\u5c06y\u5750\u6807\u8bbe\u7f6e\u4e3a // \u6700\u5927\u9ad8\u5ea6 float height = terrain.getHeight(camera.getPosition()); if ( camera.getPosition().y <= height ) { camera.setPosition(prevPos.x, prevPos.y, prevPos.z); } \u5982\u4f60\u6240\u89c1\uff0c\u68c0\u6d4b\u5730\u5f62\u78b0\u649e\u7684\u6982\u5ff5\u5f88\u5bb9\u6613\u7406\u89e3\uff0c\u4f46\u662f\u6211\u4eec\u9700\u8981\u4ed4\u7ec6\u5730\u8fdb\u884c\u8ba1\u7b97\u5e76\u4e86\u89e3\u6b63\u5904\u7406\u7684\u4e0d\u540c\u5750\u6807\u7cfb\u3002 \u6b64\u5916\uff0c\u867d\u7136\u8fd9\u91cc\u7ed9\u51fa\u7684\u7b97\u6cd5\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u90fd\u662f\u53ef\u7528\u7684\uff0c\u4f46\u4ecd\u5b58\u5728\u9700\u8981\u4ed4\u7ec6\u5904\u7406\u7684\u60c5\u51b5\u3002\u4f60\u53ef\u4ee5\u53d1\u73b0\u7684\u4e00\u4e2a\u95ee\u9898\u662f\u96a7\u9053\u6548\u5e94( Tunnelling )\u3002\u8bbe\u60f3\u4e00\u4e2a\u60c5\u51b5\uff0c\u6211\u4eec\u6b63\u4ee5\u9ad8\u901f\u7a7f\u8fc7\u5730\u5f62\uff0c\u6b63\u56e0\u5982\u6b64\uff0c\u4f4d\u7f6e\u589e\u91cf\u503c\u8f83\u9ad8\u3002\u8fd9\u4e2a\u503c\u53d8\u5f97\u5982\u6b64\u4e4b\u9ad8\uff0c\u4ee5\u81f3\u4e8e\u56e0\u4e3a\u6211\u4eec\u68c0\u6d4b\u7684\u662f\u6700\u7ec8\u4f4d\u7f6e\u7684\u78b0\u649e\uff0c\u6240\u4ee5\u53ef\u80fd\u5df2\u7ecf\u7a7f\u8fc7\u4e86\u4f4d\u4e8e\u4e24\u70b9\u4e4b\u95f4\u7684\u969c\u788d\u3002 \u6709\u8bb8\u591a\u53ef\u884c\u7684\u89e3\u51b3\u65b9\u6848\u53ef\u4ee5\u907f\u514d\u8fd9\u4e2a\u6548\u5e94\uff0c\u6700\u7b80\u5355\u7684\u89e3\u51b3\u65b9\u6cd5\u662f\u5c06\u8981\u8fdb\u884c\u7684\u8ba1\u7b97\u5206\u6210\u589e\u91cf\u8f83\u5c0f\u7684\u591a\u4efd\u3002","title":"\u5730\u5f62\u78b0\u649e\uff08Terrain Collisions\uff09"},{"location":"16-fog/","text":"\u96fe\uff08Fog\uff09 \u5728\u5904\u7406\u66f4\u590d\u6742\u7684\u95ee\u9898\u4e4b\u524d\uff0c\u6211\u4eec\u5c06\u5b66\u4e60\u5982\u4f55\u5728\u6e38\u620f\u5f15\u64ce\u4e2d\u521b\u5efa\u96fe\u7279\u6548\u3002\u6709\u4e86\u8fd9\u4e2a\u7279\u6548\uff0c\u5c31\u53ef\u4ee5\u6a21\u62df\u9065\u8fdc\u7684\u7269\u4f53\u53d8\u6697\uff0c\u4f3c\u4e4e\u6d88\u5931\u5728\u6d53\u96fe\u4e2d\u3002 \u8ba9\u6211\u4eec\u6765\u786e\u5b9a\u5b9a\u4e49\u96fe\u7684\u5c5e\u6027\u662f\u4ec0\u4e48\u3002\u7b2c\u4e00\u4e2a\u662f\u96fe\u7684\u989c\u8272\u3002\u5728\u73b0\u5b9e\u4e16\u754c\u4e2d\uff0c\u96fe\u662f\u7070\u8272\u7684\uff0c\u4f46\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u8fd9\u4e2a\u7279\u6548\u6765\u6a21\u62df\u4e0d\u540c\u989c\u8272\u7684\u96fe\u8986\u76d6\u7684\u533a\u57df\u3002\u8fd8\u6709\u4e00\u4e2a\u5c5e\u6027\u662f\u96fe\u7684\u6d53\u5ea6\u3002 \u56e0\u6b64\uff0c\u4e3a\u4e86\u4f7f\u7528\u96fe\u7279\u6548\uff0c\u6211\u4eec\u9700\u8981\u627e\u5230\u4e00\u79cd\u65b9\u6cd5\uff0c\u5f533D\u573a\u666f\u7684\u7269\u4f53\u8fdc\u79bb\u6444\u50cf\u673a\u65f6\uff0c\u4f7f\u5b83\u4eec\u892a\u8272\u5230\u96fe\u7684\u989c\u8272\u3002\u9760\u8fd1\u6444\u50cf\u673a\u7684\u7269\u4f53\u4e0d\u4f1a\u53d7\u5230\u96fe\u7684\u5f71\u54cd\uff0c\u4f46\u8fdc\u5904\u7684\u7269\u4f53\u5c06\u65e0\u6cd5\u5206\u8fa8\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u8ba1\u7b97\u4e00\u4e2a\u53c2\u6570\uff0c\u53ef\u4ee5\u7528\u6765\u6df7\u5408\u96fe\u7684\u989c\u8272\u4e0e\u6bcf\u4e2a\u7247\u5143\u7684\u989c\u8272\uff0c\u4ee5\u6a21\u62df\u96fe\u7279\u6548\u3002\u8fd9\u4e2a\u53c2\u6570\u53d6\u51b3\u4e8e\u4e0e\u6444\u50cf\u673a\u76f8\u8ddd\u7684\u8ddd\u79bb\u3002 \u8ba9\u6211\u4eec\u628a\u8fd9\u4e2a\u53c2\u6570\u547d\u540d\u4e3a fogFactor \uff0c\u5e76\u8bbe\u5b9a\u5b83\u7684\u8303\u56f4\u4e3a0\u52301\u3002\u5f53 fogFactor \u4e3a1\u65f6\uff0c\u610f\u5473\u7740\u7269\u4f53\u5b8c\u5168\u4e0d\u4f1a\u53d7\u5230\u96fe\u7684\u5f71\u54cd\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5b83\u662f\u8f83\u8fd1\u7684\u7269\u4f53\u3002\u5f53 fogFactor \u4e3a0\u65f6\uff0c\u610f\u5473\u7740\u7269\u4f53\u5b8c\u5168\u9690\u85cf\u5728\u96fe\u4e2d\u3002 \u7136\u540e\uff0c\u8ba1\u7b97\u96fe\u8272\u7684\u65b9\u7a0b\u5982\u4e0b\uff1a finalColour = (1 - fogFactor) \\cdot fogColour + fogFactor \\cdot framentColour finalColour \u662f\u4f7f\u7528\u96fe\u7279\u6548\u7684\u6700\u7ec8\u989c\u8272\u3002 fogFactor \u662f\u63a7\u5236\u96fe\u7684\u989c\u8272\u4e0e\u7247\u5143\u7684\u989c\u8272\u5982\u4f55\u6df7\u5408\u7684\u53c2\u6570\uff0c\u5b83\u57fa\u672c\u4e0a\u63a7\u5236\u7269\u4f53\u7684\u53ef\u89c1\u6027\u3002 fogColour \u662f\u96fe\u7684\u989c\u8272\u3002 fragmentColour \u6ca1\u6709\u4f7f\u7528\u96fe\u7279\u6548\u7684\u7247\u5143\u989c\u8272\u3002 \u73b0\u5728\u6211\u4eec\u9700\u8981\u627e\u5230\u4e00\u79cd\u65b9\u6cd5\u6765\u57fa\u4e8e\u8ddd\u79bb\u8ba1\u7b97 fogFactor \u3002\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u4e0d\u540c\u7684\u6a21\u578b\uff0c\u9996\u5148\u4f7f\u7528\u7ebf\u6027\u6a21\u578b\u3002\u8fd9\u662f\u4e00\u4e2a\u7ed9\u5b9a\u8ddd\u79bb\u4ee5\u7ebf\u6027\u65b9\u5f0f\u6539\u53d8 fogFactor \u7684\u6a21\u578b\u3002 \u7ebf\u6027\u6a21\u578b\u7531\u4ee5\u4e0b\u53c2\u6570\u5b9a\u4e49\uff1a fogStart : \u5f00\u59cb\u4f7f\u7528\u96fe\u7279\u6548\u7684\u8ddd\u79bb\u3002 fogFinish : \u96fe\u7279\u6548\u8fbe\u5230\u6700\u5927\u503c\u7684\u8ddd\u79bb\u3002 distance : \u5230\u6444\u50cf\u673a\u7684\u8ddd\u79bb\u3002 \u6709\u4e86\u8fd9\u4e9b\u53c2\u6570\uff0c\u65b9\u7a0b\u5c31\u4f1a\u662f\u8fd9\u6837\u7684\uff1a \\displaystyle fogFactor = \\frac{(fogFinish - distance)}{(fogFinish - fogStart)} \u5bf9\u4e8e\u8ddd\u79bb\u4f4e\u4e8e fogStart \u7684\u7269\u4f53\u6211\u4eec\u7b80\u5355\u5730\u8bbe\u7f6e fogFactor \u4e3a 1 \u3002\u4e0b\u56fe\u8868\u660e\u4e86 fogFactor \u662f\u5982\u4f55\u968f\u7740\u8ddd\u79bb\u53d8\u5316\u800c\u53d8\u5316\u7684\u3002 \u7ebf\u6027\u6a21\u578b\u6613\u4e8e\u8ba1\u7b97\uff0c\u4f46\u4e0d\u592a\u771f\u5b9e\uff0c\u56e0\u4e3a\u5b83\u4e0d\u8003\u8651\u96fe\u6c14\u6d53\u5ea6\u3002\u5b9e\u9645\u4e0a\u96fe\u5f80\u5f80\u4ee5\u66f4\u5e73\u6ed1\u7684\u65b9\u5f0f\u589e\u52a0\u3002\u6240\u4ee5\u4e0b\u4e00\u4e2a\u5408\u9002\u7684\u6a21\u578b\u662f\u6307\u6570\u6a21\u578b\u3002\u8be5\u6a21\u578b\u7684\u65b9\u7a0b\u5982\u4e0b\uff1a \\displaystyle focFactor = e^{-(distance \\cdot fogDensity)^{exponent}} = \\frac{1}{e^{(distance \\cdot fogDensity)^{exponent}}} \u5176\u4e2d\u7684\u65b0\u53d8\u91cf\u5982\u4e0b\u6240\u8ff0\uff1a fogDensity \u662f\u96fe\u7684\u539a\u5ea6\u6216\u6d53\u5ea6\u3002 exponent \u7528\u6765\u63a7\u5236\u96fe\u968f\u7740\u8ddd\u79bb\u7684\u589e\u52a0\u589e\u957f\u7684\u901f\u5ea6\u3002 \u4e0b\u56fe\u663e\u793a\u4e86\u4e24\u4e2a\u56fe\u5f62\uff0c\u5206\u522b\u8bbe\u7f6e\u4e86\u4e0d\u540c\u7684 exponent \u503c\uff08\u84dd\u7ebf\u4e3a 2 \uff0c\u7ea2\u7ebf\u4e3a 4 \uff09\u3002 \u5728\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u4e00\u4e2a\u516c\u5f0f\uff0c\u8ba9\u5b83\u53ef\u4ee5\u4e3a exponent \u8bbe\u7f6e\u4e0d\u540c\u7684\u503c\uff08\u4f60\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u4fee\u6539\u793a\u4f8b\u4ee5\u4f7f\u7528\u4e0d\u540c\u7684\u503c\uff09\u3002 \u65e2\u7136\u5df2\u7ecf\u89e3\u91ca\u8fc7\u8fd9\u4e2a\u539f\u7406\u4e86\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5b9e\u73b0\u5b83\u3002\u6211\u4eec\u5c06\u5728\u573a\u666f\u7684\u7247\u5143\u7740\u8272\u5668\u4e2d\u5b9e\u73b0\u96fe\u7279\u6548\uff0c\u56e0\u4e3a\u8fd9\u6709\u6211\u4eec\u9700\u8981\u7684\u6240\u6709\u53d8\u91cf\u3002\u6211\u4eec\u5c06\u9996\u5148\u5b9a\u4e49\u4e00\u4e2a\u50a8\u5b58\u96fe\u5c5e\u6027\u7684\u7ed3\u6784\u4f53\u3002 struct Fog { int active; vec3 colour; float density; }; active \u5c5e\u6027\u7528\u4e8e\u6fc0\u6d3b\u6216\u5173\u95ed\u96fe\u7279\u6548\u3002\u96fe\u5c5e\u6027\u5c06\u901a\u8fc7\u53e6\u4e00\u4e2a\u88ab\u79f0\u4f5c fog \u7684Uniform\u4f20\u9012\u7ed9\u7740\u8272\u5668\u3002 uniform Fog fog; \u6211\u4eec\u8fd8\u5c06\u521b\u5efa\u4e00\u4e2a\u5305\u542b\u7740\u96fe\u5c5e\u6027\u7684\u540d\u4e3a Fog \u7684\u65b0\u7c7b\uff0c\u5b83\u662f\u53e6\u4e00\u4e2aPOJO\uff08Plain Ordinary Java Object\uff0c\u7b80\u5355\u7684Java\u5bf9\u8c61\uff09\u3002 package org.lwjglb.engine.graph.weather; import org.joml.Vector3f; public class Fog { private boolean active; private Vector3f colour; private float density; public static Fog NOFOG = new Fog(); public Fog() { active = false; this.colour = new Vector3f(0, 0, 0); this.density = 0; } public Fog(boolean active, Vector3f colour, float density) { this.colour = colour; this.density = density; this.active = active; } // Getters and setters here\u2026. \u6211\u4eec\u5c06\u5728 Scene \u7c7b\u4e2d\u6dfb\u52a0\u4e00\u4e2a Fog \u793a\u4f8b\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c Scene \u7c7b\u5c06\u521d\u59cb\u5316\u4e00\u4e2a Fog \u793a\u4f8b\u5230\u5e38\u91cf NOFOG \uff0c\u7528\u4e8e\u6a21\u62df\u5173\u95ed\u96fe\u7279\u6548\u7684\u60c5\u51b5\u3002 \u56e0\u4e3a\u6dfb\u52a0\u4e86\u4e00\u4e2a\u65b0\u7684Uniform\u7c7b\u578b\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u4fee\u6539 ShaderProgram \u7c7b\u6765\u521b\u5efa\u548c\u521d\u59cb\u5316\u96fe\u7684Uniform\u3002 public void createFogUniform(String uniformName) throws Exception { createUniform(uniformName + \".active\"); createUniform(uniformName + \".colour\"); createUniform(uniformName + \".density\"); } public void setUniform(String uniformName, Fog fog) { setUniform(uniformName + \".activeFog\", fog.isActive() ? 1 : 0); setUniform(uniformName + \".colour\", fog.getColour() ); setUniform(uniformName + \".density\", fog.getDensity()); } \u5728 Renderer \u7c7b\u4e2d\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5728 setupSceneShader \u65b9\u6cd5\u4e2d\u521b\u5efaUniform\uff1a sceneShaderProgram.createFogUniform(\"fog\"); \u7136\u540e\u5728 renderScene \u65b9\u6cd5\u4e2d\u4f7f\u7528\u5b83\uff1a sceneShaderProgram.setUniform(\"fog\", scene.getFog()); \u6211\u4eec\u73b0\u5728\u53ef\u4ee5\u5728\u6e38\u620f\u4e2d\u5b9a\u4e49\u96fe\u7279\u6548\uff0c\u4f46\u662f\u9700\u8981\u56de\u5230\u7247\u5143\u7740\u8272\u5668\u4e2d\u5e94\u7528\u96fe\u7279\u6548\u3002\u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a calcFog \u7684\u51fd\u6570\uff0c\u51fd\u6570\u5b9a\u4e49\u5982\u4e0b\u3002 vec4 calcFog(vec3 pos, vec4 colour, Fog fog) { float distance = length(pos); float fogFactor = 1.0 / exp( (distance * fog.density)* (distance * fog.density)); fogFactor = clamp( fogFactor, 0.0, 1.0 ); vec3 resultColour = mix(fog.colour, colour.xyz, fogFactor); return vec4(resultColour.xyz, colour.w); } \u5982\u4f60\u6240\u89c1\uff0c\u6211\u4eec\u9996\u5148\u8ba1\u7b97\u5230\u9876\u70b9\u7684\u8ddd\u79bb\u3002\u9876\u70b9\u5750\u6807\u5b9a\u4e49\u5728 pos \u53d8\u91cf\u4e2d\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8ba1\u7b97\u957f\u5ea6\u3002\u7136\u540e\u5229\u7528 exponent \u4e3a2\u7684\u6307\u6570\u6a21\u578b\uff08\u76f8\u5f53\u4e8e\u4e58\u4ee5\u4e24\u6b21\uff09\u8ba1\u7b97\u96fe\u53c2\u6570\u3002\u6211\u4eec\u5f97\u5230\u7684 fogFactor \u7684\u8303\u56f4\u5728 0 \u5230 1 \u4e4b\u95f4\uff0c\u5e76\u4f7f\u7528 mix \u51fd\u6570\u3002\u5728GLSL\u4e2d\uff0c min \u51fd\u6570\u88ab\u7528\u4e8e\u6df7\u5408\u96fe\u8272\u548c\u56fe\u5143\u989c\u8272\uff08\u7531\u989c\u8272\u53d8\u91cf\u5b9a\u4e49\uff09\u3002\u76f8\u5f53\u4e8e\u4f7f\u7528\u5982\u4e0b\u65b9\u7a0b\uff1a resultColour = (1 - fogFactor) \\cdot fog.colour + fogFactor \\cdot colour \u6211\u4eec\u8fd8\u4e3a\u989c\u8272\u4fdd\u7559\u4e86 w \u5143\u7d20\uff0c\u5373\u900f\u660e\u5ea6\u3002\u6211\u4eec\u4e0d\u5e0c\u671b\u8fd9\u4e2a\u5143\u7d20\u53d7\u5230\u5f71\u54cd\uff0c\u7247\u5143\u5e94\u8be5\u4fdd\u6301\u5b83\u7684\u900f\u660e\u7a0b\u5ea6\u4e0d\u53d8\u3002 \u5728\u5e94\u7528\u4e86\u6240\u6709\u7684\u5149\u6548\u4e4b\u540e\uff0c\u5728\u7247\u5143\u7740\u8272\u5668\u7684\u6700\u540e\uff0c\u5982\u679c\u96fe\u7279\u6548\u542f\u7528\u7684\u8bdd\uff0c\u6211\u4eec\u5c06\u7b80\u5355\u5730\u628a\u8fd4\u56de\u503c\u8bbe\u7f6e\u4e3a\u7247\u5143\u989c\u8272\u3002 if ( fog.activeFog == 1 ) { fragColor = calcFog(mvVertexPos, fragColor, fog); } \u6240\u6709\u8fd9\u4e9b\u4ee3\u7801\u5b8c\u6210\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u4e0b\u9762\u7684\u6570\u636e\u8bbe\u7f6e\u4e00\u4e2a\u96fe\u7279\u6548\uff1a scene.setFog(new Fog(true, new Vector3f(0.5f, 0.5f, 0.5f), 0.15f)); \u7136\u540e\u6211\u4eec\u5c06\u83b7\u5f97\u50cf\u8fd9\u6837\u7684\u6548\u679c\uff1a \u4f60\u4f1a\u770b\u5230\u8fdc\u5904\u7684\u7269\u4f53\u892a\u8272\uff0c\u5f53\u4f60\u9760\u8fd1\u5b83\u4eec\u65f6\uff0c\u96fe\u5f00\u59cb\u6d88\u5931\u3002\u4f46\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u5929\u7a7a\u76d2\u770b\u8d77\u6765\u6709\u70b9\u5947\u602a\uff0c\u5730\u5e73\u7ebf\u4e0d\u53d7\u96fe\u7684\u5f71\u54cd\u3002\u6709\u51e0\u79cd\u65b9\u6cd5\u53ef\u4ee5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff1a \u4f7f\u7528\u53ea\u80fd\u770b\u5230\u5929\u7a7a\u7684\u53e6\u4e00\u4e2a\u4e0d\u540c\u7684\u5929\u7a7a\u76d2\u3002 \u5220\u9664\u5929\u7a7a\u76d2\uff0c\u56e0\u4e3a\u6709\u6d53\u96fe\uff0c\u4f60\u4e0d\u5e94\u8be5\u80fd\u591f\u770b\u5230\u4e00\u4e2a\u80cc\u666f\u3002 \u4e5f\u53ef\u80fd\u8fd9\u4e24\u4e2a\u89e3\u51b3\u65b9\u6848\u6ca1\u6709\u9002\u5408\u4f60\u7684\uff0c\u4f60\u53ef\u4ee5\u8bd5\u7740\u5c06\u96fe\u8272\u4e0e\u5929\u7a7a\u76d2\u7684\u80cc\u666f\u76f8\u5339\u914d\uff0c\u4f46\u8fd9\u6837\u4f60\u4f1a\u505a\u590d\u6742\u7684\u8ba1\u7b97\uff0c\u7ed3\u679c\u4e5f\u8bb8\u4e0d\u4f1a\u66f4\u597d\u3002 \u5982\u679c\u4f60\u8fd0\u884c\u8fd9\u4e2a\u793a\u4f8b\uff0c\u4f60\u4f1a\u611f\u5230\u5e73\u884c\u5149\u53d8\u5f97\u6697\u6de1\uff0c\u573a\u666f\u53d8\u6697\uff0c\u4f46\u96fe\u770b\u8d77\u6765\u6709\u95ee\u9898\uff0c\u56e0\u4e3a\u5b83\u4e0d\u53d7\u5149\u7684\u5f71\u54cd\uff0c\u4f1a\u770b\u5230\u5982\u4e0b\u56fe\u6240\u793a\u7684\u7ed3\u679c\u3002 \u8fdc\u5904\u7684\u7269\u4f53\u53d8\u4e3a\u96fe\u8272\uff0c\u8fd9\u662f\u4e00\u4e2a\u4e0d\u53d7\u5149\u5f71\u54cd\u7684\u5e38\u6570\u3002\u8fd9\u9020\u6210\u4e86\u4e00\u4e2a\u5728\u9ed1\u6697\u4e2d\u53d1\u5149\u7684\u6548\u679c\uff08\u8fd9\u53ef\u80fd\u5e76\u4e0d\u597d\uff09\u3002\u6211\u4eec\u9700\u8981\u4fee\u6539\u8ba1\u7b97\u96fe\u7684\u51fd\u6570\uff0c\u8ba9\u5176\u8003\u8651\u5149\u7167\u3002\u8be5\u51fd\u6570\u5c06\u63a5\u6536\u73af\u5883\u5149\u548c\u5e73\u884c\u5149\u6765\u8c03\u6574\u96fe\u8272\u3002 vec4 calcFog(vec3 pos, vec4 colour, Fog fog, vec3 ambientLight, DirectionalLight dirLight) { vec3 fogColor = fog.colour * (ambientLight + dirLight.colour * dirLight.intensity); float distance = length(pos); float fogFactor = 1.0 / exp( (distance * fog.density)* (distance * fog.density)); fogFactor = clamp( fogFactor, 0.0, 1.0 ); vec3 resultColour = mix(fogColor, colour.xyz, fogFactor); return vec4(resultColour.xyz, 1); } \u5982\u4f60\u6240\u89c1\uff0c\u5e73\u884c\u5149\u6211\u4eec\u4ec5\u4f7f\u7528\u4e86\u989c\u8272\u548c\u5f3a\u5ea6\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u5173\u6ce8\u5b83\u7684\u65b9\u5411\u3002\u8fd9\u6837\uff0c\u6211\u4eec\u53ea\u9700\u8981\u7a0d\u5fae\u4fee\u6539\u51fd\u6570\u7684\u8c03\u7528\uff1a if ( fog.active == 1 ) { fragColor = calcFog(mvVertexPos, fragColor, fog, ambientLight, directionalLight); } \u5728\u591c\u665a\u65f6\uff0c\u6211\u4eec\u4f1a\u770b\u5230\u8fd9\u6837\u7684\u6548\u679c\u3002 \u4e00\u4e2a\u8981\u5f3a\u8c03\u7684\u91cd\u8981\u7684\u4e8b\u60c5\u662f\uff0c\u6211\u4eec\u5fc5\u987b\u806a\u660e\u5730\u9009\u62e9\u96fe\u8272\u3002\u8fd9\u662f\u5f88\u91cd\u8981\u7684\uff0c\u5f53\u6211\u4eec\u6ca1\u6709\u5929\u7a7a\u76d2\uff0c\u4f46\u6709\u56fa\u5b9a\u7684\u989c\u8272\u80cc\u666f\uff0c\u5e94\u8be5\u628a\u96fe\u8272\u8bbe\u7f6e\u4e3a\u80cc\u666f\u8272\u3002\u5982\u679c\u4f60\u5220\u9664\u4e86\u5929\u7a7a\u76d2\u7684\u4ee3\u7801\u5e76\u91cd\u65b0\u8fd0\u884c\u793a\u4f8b\u4ee3\u7801\uff0c\u4f60\u4f1a\u5f97\u5230\u8fd9\u6837\u7684\u7ed3\u679c\u3002 \u4f46\u5982\u679c\u6211\u4eec\u628a\u80cc\u666f\u8272\u4fee\u6539\u4e3a\uff080.5, 0.5, 0.5\uff09\uff0c\u6700\u7ec8\u7ed3\u679c\u770b\u8d77\u6765\u5c31\u662f\u5982\u4e0b\u6240\u793a\u3002","title":"\u96fe"},{"location":"16-fog/#fog","text":"\u5728\u5904\u7406\u66f4\u590d\u6742\u7684\u95ee\u9898\u4e4b\u524d\uff0c\u6211\u4eec\u5c06\u5b66\u4e60\u5982\u4f55\u5728\u6e38\u620f\u5f15\u64ce\u4e2d\u521b\u5efa\u96fe\u7279\u6548\u3002\u6709\u4e86\u8fd9\u4e2a\u7279\u6548\uff0c\u5c31\u53ef\u4ee5\u6a21\u62df\u9065\u8fdc\u7684\u7269\u4f53\u53d8\u6697\uff0c\u4f3c\u4e4e\u6d88\u5931\u5728\u6d53\u96fe\u4e2d\u3002 \u8ba9\u6211\u4eec\u6765\u786e\u5b9a\u5b9a\u4e49\u96fe\u7684\u5c5e\u6027\u662f\u4ec0\u4e48\u3002\u7b2c\u4e00\u4e2a\u662f\u96fe\u7684\u989c\u8272\u3002\u5728\u73b0\u5b9e\u4e16\u754c\u4e2d\uff0c\u96fe\u662f\u7070\u8272\u7684\uff0c\u4f46\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u8fd9\u4e2a\u7279\u6548\u6765\u6a21\u62df\u4e0d\u540c\u989c\u8272\u7684\u96fe\u8986\u76d6\u7684\u533a\u57df\u3002\u8fd8\u6709\u4e00\u4e2a\u5c5e\u6027\u662f\u96fe\u7684\u6d53\u5ea6\u3002 \u56e0\u6b64\uff0c\u4e3a\u4e86\u4f7f\u7528\u96fe\u7279\u6548\uff0c\u6211\u4eec\u9700\u8981\u627e\u5230\u4e00\u79cd\u65b9\u6cd5\uff0c\u5f533D\u573a\u666f\u7684\u7269\u4f53\u8fdc\u79bb\u6444\u50cf\u673a\u65f6\uff0c\u4f7f\u5b83\u4eec\u892a\u8272\u5230\u96fe\u7684\u989c\u8272\u3002\u9760\u8fd1\u6444\u50cf\u673a\u7684\u7269\u4f53\u4e0d\u4f1a\u53d7\u5230\u96fe\u7684\u5f71\u54cd\uff0c\u4f46\u8fdc\u5904\u7684\u7269\u4f53\u5c06\u65e0\u6cd5\u5206\u8fa8\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u8ba1\u7b97\u4e00\u4e2a\u53c2\u6570\uff0c\u53ef\u4ee5\u7528\u6765\u6df7\u5408\u96fe\u7684\u989c\u8272\u4e0e\u6bcf\u4e2a\u7247\u5143\u7684\u989c\u8272\uff0c\u4ee5\u6a21\u62df\u96fe\u7279\u6548\u3002\u8fd9\u4e2a\u53c2\u6570\u53d6\u51b3\u4e8e\u4e0e\u6444\u50cf\u673a\u76f8\u8ddd\u7684\u8ddd\u79bb\u3002 \u8ba9\u6211\u4eec\u628a\u8fd9\u4e2a\u53c2\u6570\u547d\u540d\u4e3a fogFactor \uff0c\u5e76\u8bbe\u5b9a\u5b83\u7684\u8303\u56f4\u4e3a0\u52301\u3002\u5f53 fogFactor \u4e3a1\u65f6\uff0c\u610f\u5473\u7740\u7269\u4f53\u5b8c\u5168\u4e0d\u4f1a\u53d7\u5230\u96fe\u7684\u5f71\u54cd\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5b83\u662f\u8f83\u8fd1\u7684\u7269\u4f53\u3002\u5f53 fogFactor \u4e3a0\u65f6\uff0c\u610f\u5473\u7740\u7269\u4f53\u5b8c\u5168\u9690\u85cf\u5728\u96fe\u4e2d\u3002 \u7136\u540e\uff0c\u8ba1\u7b97\u96fe\u8272\u7684\u65b9\u7a0b\u5982\u4e0b\uff1a finalColour = (1 - fogFactor) \\cdot fogColour + fogFactor \\cdot framentColour finalColour \u662f\u4f7f\u7528\u96fe\u7279\u6548\u7684\u6700\u7ec8\u989c\u8272\u3002 fogFactor \u662f\u63a7\u5236\u96fe\u7684\u989c\u8272\u4e0e\u7247\u5143\u7684\u989c\u8272\u5982\u4f55\u6df7\u5408\u7684\u53c2\u6570\uff0c\u5b83\u57fa\u672c\u4e0a\u63a7\u5236\u7269\u4f53\u7684\u53ef\u89c1\u6027\u3002 fogColour \u662f\u96fe\u7684\u989c\u8272\u3002 fragmentColour \u6ca1\u6709\u4f7f\u7528\u96fe\u7279\u6548\u7684\u7247\u5143\u989c\u8272\u3002 \u73b0\u5728\u6211\u4eec\u9700\u8981\u627e\u5230\u4e00\u79cd\u65b9\u6cd5\u6765\u57fa\u4e8e\u8ddd\u79bb\u8ba1\u7b97 fogFactor \u3002\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u4e0d\u540c\u7684\u6a21\u578b\uff0c\u9996\u5148\u4f7f\u7528\u7ebf\u6027\u6a21\u578b\u3002\u8fd9\u662f\u4e00\u4e2a\u7ed9\u5b9a\u8ddd\u79bb\u4ee5\u7ebf\u6027\u65b9\u5f0f\u6539\u53d8 fogFactor \u7684\u6a21\u578b\u3002 \u7ebf\u6027\u6a21\u578b\u7531\u4ee5\u4e0b\u53c2\u6570\u5b9a\u4e49\uff1a fogStart : \u5f00\u59cb\u4f7f\u7528\u96fe\u7279\u6548\u7684\u8ddd\u79bb\u3002 fogFinish : \u96fe\u7279\u6548\u8fbe\u5230\u6700\u5927\u503c\u7684\u8ddd\u79bb\u3002 distance : \u5230\u6444\u50cf\u673a\u7684\u8ddd\u79bb\u3002 \u6709\u4e86\u8fd9\u4e9b\u53c2\u6570\uff0c\u65b9\u7a0b\u5c31\u4f1a\u662f\u8fd9\u6837\u7684\uff1a \\displaystyle fogFactor = \\frac{(fogFinish - distance)}{(fogFinish - fogStart)} \u5bf9\u4e8e\u8ddd\u79bb\u4f4e\u4e8e fogStart \u7684\u7269\u4f53\u6211\u4eec\u7b80\u5355\u5730\u8bbe\u7f6e fogFactor \u4e3a 1 \u3002\u4e0b\u56fe\u8868\u660e\u4e86 fogFactor \u662f\u5982\u4f55\u968f\u7740\u8ddd\u79bb\u53d8\u5316\u800c\u53d8\u5316\u7684\u3002 \u7ebf\u6027\u6a21\u578b\u6613\u4e8e\u8ba1\u7b97\uff0c\u4f46\u4e0d\u592a\u771f\u5b9e\uff0c\u56e0\u4e3a\u5b83\u4e0d\u8003\u8651\u96fe\u6c14\u6d53\u5ea6\u3002\u5b9e\u9645\u4e0a\u96fe\u5f80\u5f80\u4ee5\u66f4\u5e73\u6ed1\u7684\u65b9\u5f0f\u589e\u52a0\u3002\u6240\u4ee5\u4e0b\u4e00\u4e2a\u5408\u9002\u7684\u6a21\u578b\u662f\u6307\u6570\u6a21\u578b\u3002\u8be5\u6a21\u578b\u7684\u65b9\u7a0b\u5982\u4e0b\uff1a \\displaystyle focFactor = e^{-(distance \\cdot fogDensity)^{exponent}} = \\frac{1}{e^{(distance \\cdot fogDensity)^{exponent}}} \u5176\u4e2d\u7684\u65b0\u53d8\u91cf\u5982\u4e0b\u6240\u8ff0\uff1a fogDensity \u662f\u96fe\u7684\u539a\u5ea6\u6216\u6d53\u5ea6\u3002 exponent \u7528\u6765\u63a7\u5236\u96fe\u968f\u7740\u8ddd\u79bb\u7684\u589e\u52a0\u589e\u957f\u7684\u901f\u5ea6\u3002 \u4e0b\u56fe\u663e\u793a\u4e86\u4e24\u4e2a\u56fe\u5f62\uff0c\u5206\u522b\u8bbe\u7f6e\u4e86\u4e0d\u540c\u7684 exponent \u503c\uff08\u84dd\u7ebf\u4e3a 2 \uff0c\u7ea2\u7ebf\u4e3a 4 \uff09\u3002 \u5728\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u4e00\u4e2a\u516c\u5f0f\uff0c\u8ba9\u5b83\u53ef\u4ee5\u4e3a exponent \u8bbe\u7f6e\u4e0d\u540c\u7684\u503c\uff08\u4f60\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u4fee\u6539\u793a\u4f8b\u4ee5\u4f7f\u7528\u4e0d\u540c\u7684\u503c\uff09\u3002 \u65e2\u7136\u5df2\u7ecf\u89e3\u91ca\u8fc7\u8fd9\u4e2a\u539f\u7406\u4e86\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5b9e\u73b0\u5b83\u3002\u6211\u4eec\u5c06\u5728\u573a\u666f\u7684\u7247\u5143\u7740\u8272\u5668\u4e2d\u5b9e\u73b0\u96fe\u7279\u6548\uff0c\u56e0\u4e3a\u8fd9\u6709\u6211\u4eec\u9700\u8981\u7684\u6240\u6709\u53d8\u91cf\u3002\u6211\u4eec\u5c06\u9996\u5148\u5b9a\u4e49\u4e00\u4e2a\u50a8\u5b58\u96fe\u5c5e\u6027\u7684\u7ed3\u6784\u4f53\u3002 struct Fog { int active; vec3 colour; float density; }; active \u5c5e\u6027\u7528\u4e8e\u6fc0\u6d3b\u6216\u5173\u95ed\u96fe\u7279\u6548\u3002\u96fe\u5c5e\u6027\u5c06\u901a\u8fc7\u53e6\u4e00\u4e2a\u88ab\u79f0\u4f5c fog \u7684Uniform\u4f20\u9012\u7ed9\u7740\u8272\u5668\u3002 uniform Fog fog; \u6211\u4eec\u8fd8\u5c06\u521b\u5efa\u4e00\u4e2a\u5305\u542b\u7740\u96fe\u5c5e\u6027\u7684\u540d\u4e3a Fog \u7684\u65b0\u7c7b\uff0c\u5b83\u662f\u53e6\u4e00\u4e2aPOJO\uff08Plain Ordinary Java Object\uff0c\u7b80\u5355\u7684Java\u5bf9\u8c61\uff09\u3002 package org.lwjglb.engine.graph.weather; import org.joml.Vector3f; public class Fog { private boolean active; private Vector3f colour; private float density; public static Fog NOFOG = new Fog(); public Fog() { active = false; this.colour = new Vector3f(0, 0, 0); this.density = 0; } public Fog(boolean active, Vector3f colour, float density) { this.colour = colour; this.density = density; this.active = active; } // Getters and setters here\u2026. \u6211\u4eec\u5c06\u5728 Scene \u7c7b\u4e2d\u6dfb\u52a0\u4e00\u4e2a Fog \u793a\u4f8b\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c Scene \u7c7b\u5c06\u521d\u59cb\u5316\u4e00\u4e2a Fog \u793a\u4f8b\u5230\u5e38\u91cf NOFOG \uff0c\u7528\u4e8e\u6a21\u62df\u5173\u95ed\u96fe\u7279\u6548\u7684\u60c5\u51b5\u3002 \u56e0\u4e3a\u6dfb\u52a0\u4e86\u4e00\u4e2a\u65b0\u7684Uniform\u7c7b\u578b\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u4fee\u6539 ShaderProgram \u7c7b\u6765\u521b\u5efa\u548c\u521d\u59cb\u5316\u96fe\u7684Uniform\u3002 public void createFogUniform(String uniformName) throws Exception { createUniform(uniformName + \".active\"); createUniform(uniformName + \".colour\"); createUniform(uniformName + \".density\"); } public void setUniform(String uniformName, Fog fog) { setUniform(uniformName + \".activeFog\", fog.isActive() ? 1 : 0); setUniform(uniformName + \".colour\", fog.getColour() ); setUniform(uniformName + \".density\", fog.getDensity()); } \u5728 Renderer \u7c7b\u4e2d\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5728 setupSceneShader \u65b9\u6cd5\u4e2d\u521b\u5efaUniform\uff1a sceneShaderProgram.createFogUniform(\"fog\"); \u7136\u540e\u5728 renderScene \u65b9\u6cd5\u4e2d\u4f7f\u7528\u5b83\uff1a sceneShaderProgram.setUniform(\"fog\", scene.getFog()); \u6211\u4eec\u73b0\u5728\u53ef\u4ee5\u5728\u6e38\u620f\u4e2d\u5b9a\u4e49\u96fe\u7279\u6548\uff0c\u4f46\u662f\u9700\u8981\u56de\u5230\u7247\u5143\u7740\u8272\u5668\u4e2d\u5e94\u7528\u96fe\u7279\u6548\u3002\u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a calcFog \u7684\u51fd\u6570\uff0c\u51fd\u6570\u5b9a\u4e49\u5982\u4e0b\u3002 vec4 calcFog(vec3 pos, vec4 colour, Fog fog) { float distance = length(pos); float fogFactor = 1.0 / exp( (distance * fog.density)* (distance * fog.density)); fogFactor = clamp( fogFactor, 0.0, 1.0 ); vec3 resultColour = mix(fog.colour, colour.xyz, fogFactor); return vec4(resultColour.xyz, colour.w); } \u5982\u4f60\u6240\u89c1\uff0c\u6211\u4eec\u9996\u5148\u8ba1\u7b97\u5230\u9876\u70b9\u7684\u8ddd\u79bb\u3002\u9876\u70b9\u5750\u6807\u5b9a\u4e49\u5728 pos \u53d8\u91cf\u4e2d\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8ba1\u7b97\u957f\u5ea6\u3002\u7136\u540e\u5229\u7528 exponent \u4e3a2\u7684\u6307\u6570\u6a21\u578b\uff08\u76f8\u5f53\u4e8e\u4e58\u4ee5\u4e24\u6b21\uff09\u8ba1\u7b97\u96fe\u53c2\u6570\u3002\u6211\u4eec\u5f97\u5230\u7684 fogFactor \u7684\u8303\u56f4\u5728 0 \u5230 1 \u4e4b\u95f4\uff0c\u5e76\u4f7f\u7528 mix \u51fd\u6570\u3002\u5728GLSL\u4e2d\uff0c min \u51fd\u6570\u88ab\u7528\u4e8e\u6df7\u5408\u96fe\u8272\u548c\u56fe\u5143\u989c\u8272\uff08\u7531\u989c\u8272\u53d8\u91cf\u5b9a\u4e49\uff09\u3002\u76f8\u5f53\u4e8e\u4f7f\u7528\u5982\u4e0b\u65b9\u7a0b\uff1a resultColour = (1 - fogFactor) \\cdot fog.colour + fogFactor \\cdot colour \u6211\u4eec\u8fd8\u4e3a\u989c\u8272\u4fdd\u7559\u4e86 w \u5143\u7d20\uff0c\u5373\u900f\u660e\u5ea6\u3002\u6211\u4eec\u4e0d\u5e0c\u671b\u8fd9\u4e2a\u5143\u7d20\u53d7\u5230\u5f71\u54cd\uff0c\u7247\u5143\u5e94\u8be5\u4fdd\u6301\u5b83\u7684\u900f\u660e\u7a0b\u5ea6\u4e0d\u53d8\u3002 \u5728\u5e94\u7528\u4e86\u6240\u6709\u7684\u5149\u6548\u4e4b\u540e\uff0c\u5728\u7247\u5143\u7740\u8272\u5668\u7684\u6700\u540e\uff0c\u5982\u679c\u96fe\u7279\u6548\u542f\u7528\u7684\u8bdd\uff0c\u6211\u4eec\u5c06\u7b80\u5355\u5730\u628a\u8fd4\u56de\u503c\u8bbe\u7f6e\u4e3a\u7247\u5143\u989c\u8272\u3002 if ( fog.activeFog == 1 ) { fragColor = calcFog(mvVertexPos, fragColor, fog); } \u6240\u6709\u8fd9\u4e9b\u4ee3\u7801\u5b8c\u6210\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u4e0b\u9762\u7684\u6570\u636e\u8bbe\u7f6e\u4e00\u4e2a\u96fe\u7279\u6548\uff1a scene.setFog(new Fog(true, new Vector3f(0.5f, 0.5f, 0.5f), 0.15f)); \u7136\u540e\u6211\u4eec\u5c06\u83b7\u5f97\u50cf\u8fd9\u6837\u7684\u6548\u679c\uff1a \u4f60\u4f1a\u770b\u5230\u8fdc\u5904\u7684\u7269\u4f53\u892a\u8272\uff0c\u5f53\u4f60\u9760\u8fd1\u5b83\u4eec\u65f6\uff0c\u96fe\u5f00\u59cb\u6d88\u5931\u3002\u4f46\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u5929\u7a7a\u76d2\u770b\u8d77\u6765\u6709\u70b9\u5947\u602a\uff0c\u5730\u5e73\u7ebf\u4e0d\u53d7\u96fe\u7684\u5f71\u54cd\u3002\u6709\u51e0\u79cd\u65b9\u6cd5\u53ef\u4ee5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff1a \u4f7f\u7528\u53ea\u80fd\u770b\u5230\u5929\u7a7a\u7684\u53e6\u4e00\u4e2a\u4e0d\u540c\u7684\u5929\u7a7a\u76d2\u3002 \u5220\u9664\u5929\u7a7a\u76d2\uff0c\u56e0\u4e3a\u6709\u6d53\u96fe\uff0c\u4f60\u4e0d\u5e94\u8be5\u80fd\u591f\u770b\u5230\u4e00\u4e2a\u80cc\u666f\u3002 \u4e5f\u53ef\u80fd\u8fd9\u4e24\u4e2a\u89e3\u51b3\u65b9\u6848\u6ca1\u6709\u9002\u5408\u4f60\u7684\uff0c\u4f60\u53ef\u4ee5\u8bd5\u7740\u5c06\u96fe\u8272\u4e0e\u5929\u7a7a\u76d2\u7684\u80cc\u666f\u76f8\u5339\u914d\uff0c\u4f46\u8fd9\u6837\u4f60\u4f1a\u505a\u590d\u6742\u7684\u8ba1\u7b97\uff0c\u7ed3\u679c\u4e5f\u8bb8\u4e0d\u4f1a\u66f4\u597d\u3002 \u5982\u679c\u4f60\u8fd0\u884c\u8fd9\u4e2a\u793a\u4f8b\uff0c\u4f60\u4f1a\u611f\u5230\u5e73\u884c\u5149\u53d8\u5f97\u6697\u6de1\uff0c\u573a\u666f\u53d8\u6697\uff0c\u4f46\u96fe\u770b\u8d77\u6765\u6709\u95ee\u9898\uff0c\u56e0\u4e3a\u5b83\u4e0d\u53d7\u5149\u7684\u5f71\u54cd\uff0c\u4f1a\u770b\u5230\u5982\u4e0b\u56fe\u6240\u793a\u7684\u7ed3\u679c\u3002 \u8fdc\u5904\u7684\u7269\u4f53\u53d8\u4e3a\u96fe\u8272\uff0c\u8fd9\u662f\u4e00\u4e2a\u4e0d\u53d7\u5149\u5f71\u54cd\u7684\u5e38\u6570\u3002\u8fd9\u9020\u6210\u4e86\u4e00\u4e2a\u5728\u9ed1\u6697\u4e2d\u53d1\u5149\u7684\u6548\u679c\uff08\u8fd9\u53ef\u80fd\u5e76\u4e0d\u597d\uff09\u3002\u6211\u4eec\u9700\u8981\u4fee\u6539\u8ba1\u7b97\u96fe\u7684\u51fd\u6570\uff0c\u8ba9\u5176\u8003\u8651\u5149\u7167\u3002\u8be5\u51fd\u6570\u5c06\u63a5\u6536\u73af\u5883\u5149\u548c\u5e73\u884c\u5149\u6765\u8c03\u6574\u96fe\u8272\u3002 vec4 calcFog(vec3 pos, vec4 colour, Fog fog, vec3 ambientLight, DirectionalLight dirLight) { vec3 fogColor = fog.colour * (ambientLight + dirLight.colour * dirLight.intensity); float distance = length(pos); float fogFactor = 1.0 / exp( (distance * fog.density)* (distance * fog.density)); fogFactor = clamp( fogFactor, 0.0, 1.0 ); vec3 resultColour = mix(fogColor, colour.xyz, fogFactor); return vec4(resultColour.xyz, 1); } \u5982\u4f60\u6240\u89c1\uff0c\u5e73\u884c\u5149\u6211\u4eec\u4ec5\u4f7f\u7528\u4e86\u989c\u8272\u548c\u5f3a\u5ea6\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u5173\u6ce8\u5b83\u7684\u65b9\u5411\u3002\u8fd9\u6837\uff0c\u6211\u4eec\u53ea\u9700\u8981\u7a0d\u5fae\u4fee\u6539\u51fd\u6570\u7684\u8c03\u7528\uff1a if ( fog.active == 1 ) { fragColor = calcFog(mvVertexPos, fragColor, fog, ambientLight, directionalLight); } \u5728\u591c\u665a\u65f6\uff0c\u6211\u4eec\u4f1a\u770b\u5230\u8fd9\u6837\u7684\u6548\u679c\u3002 \u4e00\u4e2a\u8981\u5f3a\u8c03\u7684\u91cd\u8981\u7684\u4e8b\u60c5\u662f\uff0c\u6211\u4eec\u5fc5\u987b\u806a\u660e\u5730\u9009\u62e9\u96fe\u8272\u3002\u8fd9\u662f\u5f88\u91cd\u8981\u7684\uff0c\u5f53\u6211\u4eec\u6ca1\u6709\u5929\u7a7a\u76d2\uff0c\u4f46\u6709\u56fa\u5b9a\u7684\u989c\u8272\u80cc\u666f\uff0c\u5e94\u8be5\u628a\u96fe\u8272\u8bbe\u7f6e\u4e3a\u80cc\u666f\u8272\u3002\u5982\u679c\u4f60\u5220\u9664\u4e86\u5929\u7a7a\u76d2\u7684\u4ee3\u7801\u5e76\u91cd\u65b0\u8fd0\u884c\u793a\u4f8b\u4ee3\u7801\uff0c\u4f60\u4f1a\u5f97\u5230\u8fd9\u6837\u7684\u7ed3\u679c\u3002 \u4f46\u5982\u679c\u6211\u4eec\u628a\u80cc\u666f\u8272\u4fee\u6539\u4e3a\uff080.5, 0.5, 0.5\uff09\uff0c\u6700\u7ec8\u7ed3\u679c\u770b\u8d77\u6765\u5c31\u662f\u5982\u4e0b\u6240\u793a\u3002","title":"\u96fe\uff08Fog\uff09"},{"location":"17-normal-mapping/","text":"\u6cd5\u7ebf\u8d34\u56fe\uff08Normal Mapping\uff09 \u672c\u7ae0\u4e2d\u5c06\u8bb2\u89e3\u4e00\u9879\u6280\u672f\uff0c\u5b83\u5c06\u6781\u5927\u5730\u6539\u5584\u6211\u4eec\u76843D\u6a21\u578b\u7684\u5916\u89c2\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u5df2\u7ecf\u80fd\u591f\u5c06\u7eb9\u7406\u4f7f\u7528\u5230\u590d\u6742\u76843D\u6a21\u578b\u4e0a\uff0c\u4f46\u8fd9\u8fd8\u79bb\u771f\u5b9e\u7269\u4f53\u7684\u6837\u5b50\u5f88\u8fdc\u3002\u73b0\u5b9e\u4e16\u754c\u4e2d\u7684\u7269\u4f53\u8868\u9762\u4e0d\u662f\u5b8c\u5168\u5149\u6ed1\u7684\uff0c\u5b83\u4eec\u6709\u6211\u4eec\u76843D\u6a21\u578b\u76ee\u524d\u6240\u4e0d\u5177\u6709\u7684\u7455\u75b5\u3002 \u4e3a\u4e86\u6e32\u67d3\u66f4\u771f\u5b9e\u7684\u573a\u666f\uff0c\u6211\u4eec\u5c06\u6e32\u67d3 \u6cd5\u7ebf\u8d34\u56fe(Normal Mapping) \u3002\u5982\u679c\u4f60\u5728\u73b0\u5b9e\u4e16\u754c\u4e2d\u770b\u5230\u4e00\u4e2a\u5e73\u9762\uff0c\u4f60\u4f1a\u53d1\u73b0\u90a3\u4e9b\u7455\u75b5\u751a\u81f3\u53ef\u4ee5\u5728\u5f88\u8fdc\u7684\u8ddd\u79bb\u770b\u5230\u3002\u57283D\u573a\u666f\u4e2d\uff0c\u5e73\u9762\u6ca1\u6709\u7455\u75b5\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u7eb9\u7406\u5e94\u7528\u5728\u5b83\u4e4b\u4e0a\uff0c\u4f46\u8fd9\u4e0d\u4f1a\u6539\u53d8\u5149\u53cd\u5c04\u7684\u65b9\u5f0f\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u4e0e\u73b0\u5b9e\u6709\u533a\u522b\u7684\u539f\u56e0\u3002 \u6211\u4eec\u53ef\u4ee5\u8003\u8651\u901a\u8fc7\u589e\u52a0\u4e09\u89d2\u5f62\u6570\u91cf\u6765\u589e\u52a0\u6a21\u578b\u7684\u7ec6\u8282\u5e76\u53cd\u6620\u51fa\u8fd9\u4e9b\u7455\u75b5\uff0c\u4f46\u6027\u80fd\u4f1a\u4e0b\u964d\u3002\u6211\u4eec\u9700\u8981\u7684\u662f\u6539\u53d8\u8868\u9762\u5149\u53cd\u5c04\u7684\u65b9\u5f0f\u6765\u589e\u52a0\u771f\u5b9e\u611f\u3002\u8fd9\u5c31\u662f\u7528\u6cd5\u7ebf\u8d34\u56fe\u6280\u672f\u5b9e\u73b0\u7684\u3002 \u8ba9\u6211\u4eec\u770b\u770b\u5149\u6ed1\u5e73\u9762\u7684\u4f8b\u5b50\uff0c\u4e00\u4e2a\u5e73\u9762\u7531\u4e24\u4e2a\u4e09\u89d2\u5f62\u7ec4\u6210\u4e3a\u4e00\u4e2a\u56db\u8fb9\u5f62\u3002\u56de\u5fc6\u4e4b\u524d\u7684\u5149\u7167\u7ae0\u8282\uff0c\u6a21\u578b\u7684\u5149\u53cd\u5c04\u7684\u8981\u7d20\u662f\u5e73\u9762\u6cd5\u7ebf\u3002\u5728\u6b64\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u6574\u4e2a\u5e73\u9762\u4ec5\u6709\u5355\u4e00\u7684\u6cd5\u7ebf\uff0c\u5f53\u8ba1\u7b97\u5149\u5982\u4f55\u5f71\u54cd\u7247\u5143\u65f6\uff0c\u6bcf\u4e2a\u7247\u5143\u90fd\u4f7f\u7528\u76f8\u540c\u7684\u6cd5\u7ebf\u3002\u770b\u8d77\u6765\u5c31\u50cf\u4e0b\u56fe\u90a3\u6837\u3002 \u5982\u679c\u53ef\u4ee5\u6539\u53d8\u5e73\u9762\u7684\u6bcf\u4e2a\u7247\u5143\u7684\u6cd5\u7ebf\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u6a21\u62df\u5e73\u9762\u7684\u7455\u75b5\uff0c\u4f7f\u5b83\u4eec\u66f4\u903c\u771f\u3002\u770b\u8d77\u6765\u5c31\u50cf\u4e0b\u56fe\u90a3\u6837\u3002 \u8981\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u8981\u52a0\u8f7d\u53e6\u4e00\u4e2a\u7eb9\u7406\uff0c\u5b83\u50a8\u5b58\u9762\u7684\u6cd5\u7ebf\u3002\u6cd5\u7ebf\u7eb9\u7406\u7684\u6bcf\u4e2a\u50cf\u7d20\u5c06\u4ee5RGB\u503c\u50a8\u5b58\u6cd5\u7ebf\u7684 x \u3001 y \u548c z \u5750\u6807\u503c\u3002 \u8ba9\u6211\u4eec\u7528\u4e0b\u9762\u7684\u7eb9\u7406\u7ed8\u5236\u4e00\u4e2a\u56db\u8fb9\u5f62\u3002 \u4e0a\u56fe\u7684\u6cd5\u7ebf\u7eb9\u7406\u5982\u4e0b\u6240\u793a\u3002 \u5982\u4f60\u6240\u89c1\uff0c\u5982\u679c\u6211\u4eec\u628a\u989c\u8272\u53d8\u6362\u5e94\u7528\u5230\u539f\u59cb\u7eb9\u7406\uff0c\u6bcf\u4e2a\u50cf\u7d20\u4f7f\u7528\u989c\u8272\u5206\u91cf\u50a8\u5b58\u6cd5\u7ebf\u4fe1\u606f\u3002\u5728\u770b\u5230\u6cd5\u7ebf\u8d34\u56fe\u65f6\uff0c\u4f60\u5e38\u5e38\u4f1a\u770b\u5230\u4e3b\u8272\u8c03\u503e\u5411\u4e8e\u84dd\u8272\uff0c\u8fd9\u662f\u7531\u4e8e\u5927\u591a\u6570\u6cd5\u7ebf\u6307\u5411\u8f6c\u6362\u6b63 z \u8f74\u6240\u81f4\u3002\u5728\u4e00\u4e2a\u5e73\u9762\u8868\u9762\u7684\u77e2\u91cf\u4e2d\uff0c z \u5206\u91cf\u901a\u5e38\u6bd4 x \u548c y \u5206\u91cf\u7684\u503c\u9ad8\u5f97\u591a\u3002\u7531\u4e8e x \u3001 y \u3001 z \u5750\u6807\u88ab\u6620\u5c04\u5230RGB\uff0c\u5bfc\u81f4\u84dd\u8272\u5206\u91cf\u4e5f\u6709\u7740\u66f4\u9ad8\u7684\u503c\u3002 \u56e0\u6b64\uff0c\u4f7f\u7528\u6cd5\u7ebf\u8d34\u56fe\u6e32\u67d3\u5bf9\u8c61\u53ea\u9700\u8981\u4e00\u4e2a\u989d\u5916\u7684\u7eb9\u7406\uff0c\u5e76\u540c\u65f6\u4f7f\u7528\u5b83\u6e32\u67d3\u7247\u5143\u4ee5\u83b7\u5f97\u9002\u5f53\u7684\u6cd5\u7ebf\u503c\u3002 \u8ba9\u6211\u4eec\u5f00\u59cb\u4fee\u6539\u4ee3\u7801\uff0c\u4ee5\u652f\u6301\u6cd5\u7ebf\u8d34\u56fe\u3002\u6211\u4eec\u5c06\u6dfb\u52a0\u4e00\u4e2a\u65b0\u7684 Texture \u5b9e\u4f8b\u5230 Material \u7c7b\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u628a\u4e00\u4e2a\u6cd5\u7ebf\u8d34\u56fe\u7eb9\u7406\u6dfb\u52a0\u5230\u6e38\u620f\u9879\u76ee\u4e0a\u3002\u6b64\u5b9e\u4f8b\u5c06\u6709\u81ea\u5df1\u7684 get \u548c set \u65b9\u6cd5\uff0c\u5e76\u6709\u65b9\u6cd5\u53ef\u4ee5\u68c0\u67e5 Material \u662f\u5426\u6709\u6cd5\u7ebf\u8d34\u56fe\u3002 public class Material { private static final Vector4f DEFAULT_COLOUR = new Vector3f(1.0f, 1.0f, 1.0f, 10.f); private Vector3f ambientColour; private Vector3f diffuseColour; private Vector3f specularColour; private float reflectance; private Texture texture; private Texture normalMap; // \u2026 Previous code here public boolean hasNormalMap() { return this.normalMap != null; } public Texture getNormalMap() { return normalMap; } public void setNormalMap(Texture normalMap) { this.normalMap = normalMap; } } \u6211\u4eec\u5c06\u5728\u573a\u666f\u7684\u7247\u5143\u7740\u8272\u5668\u4e2d\u4f7f\u7528\u6cd5\u7ebf\u8d34\u56fe\u7eb9\u7406\u3002\u4f46\u662f\uff0c\u7531\u4e8e\u6211\u4eec\u5728\u89c2\u5bdf\u5750\u6807\u7a7a\u95f4\u64cd\u4f5c\uff0c\u6240\u4ee5\u9700\u8981\u901a\u8fc7\u6a21\u578b\u89c2\u5bdf\u77e9\u9635\u6765\u8fdb\u884c\u9002\u5f53\u7684\u53d8\u6362\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u4fee\u6539\u573a\u666f\u7684\u9876\u70b9\u7740\u8272\u5668\u3002 #version 330 layout (location=0) in vec3 position; layout (location=1) in vec2 texCoord; layout (location=2) in vec3 vertexNormal; out vec2 outTexCoord; out vec3 mvVertexNormal; out vec3 mvVertexPos; out mat4 outModelViewMatrix; uniform mat4 modelViewMatrix; uniform mat4 projectionMatrix; void main() { vec4 mvPos = modelViewMatrix * vec4(position, 1.0); gl_Position = projectionMatrix * mvPos; outTexCoord = texCoord; mvVertexNormal = normalize(modelViewMatrix * vec4(vertexNormal, 0.0)).xyz; mvVertexPos = mvPos.xyz; outModelViewMatrix = modelViewMatrix; } \u5728\u573a\u666f\u7684\u7247\u5143\u7740\u8272\u5668\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u6dfb\u52a0\u53e6\u4e00\u4e2a\u8f93\u5165\u53c2\u6570\u3002 in mat4 outModelViewMatrix; \u5728\u7247\u5143\u7740\u8272\u5668\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u4e3a\u6cd5\u7ebf\u8d34\u56fe\u7eb9\u7406\u91c7\u6837\u5668\u4f20\u9012\u4e00\u4e2a\u65b0\u7684Uniform\uff1a uniform sampler2D texture_sampler; \u6b64\u5916\uff0c\u5728\u7247\u5143\u7740\u8272\u5668\u4e2d\uff0c\u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a\u65b0\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u8ba1\u7b97\u5f53\u524d\u7247\u5143\u7684\u6cd5\u7ebf\u3002 vec3 calcNormal(Material material, vec3 normal, vec2 text_coord, mat4 modelViewMatrix) { vec3 newNormal = normal; if ( material.hasNormalMap == 1 ) { newNormal = texture(normalMap, text_coord).rgb; newNormal = normalize(newNormal * 2 - 1); newNormal = normalize(modelViewMatrix * vec4(newNormal, 0.0)).xyz; } return newNormal; } \u8be5\u51fd\u6570\u6709\u4ee5\u4e0b\u53c2\u6570\uff1a * Material \u5b9e\u4f8b\u3002 * \u9876\u70b9\u6cd5\u7ebf\u3002 * \u7eb9\u7406\u5750\u6807\u3002 * \u6a21\u578b\u89c6\u56fe\u77e9\u9635\u3002 \u6211\u4eec\u5728\u6b64\u51fd\u6570\u4e2d\u505a\u7684\u7b2c\u4e00\u4ef6\u4e8b\u662f\u68c0\u67e5\u8fd9\u4e2a Material \u5b9e\u4f8b\u662f\u5426\u6709\u6cd5\u7ebf\u8d34\u56fe\u3002\u5982\u679c\u6ca1\u6709\uff0c\u6211\u4eec\u5c31\u50cf\u5e73\u5e38\u4e00\u6837\u7b80\u5355\u5730\u4f7f\u7528\u9876\u70b9\u6cd5\u7ebf\u3002\u5982\u679c\u5b83\u6709\u6cd5\u7ebf\u8d34\u56fe\uff0c\u6211\u4eec\u4f7f\u7528\u50a8\u5b58\u7740\u6cd5\u7ebf\u6570\u636e\u7684\u6cd5\u7ebf\u7eb9\u7406\u5173\u8054\u5230\u5f53\u524d\u7eb9\u7406\u5750\u6807\u3002 \u8bb0\u4f4f\u6211\u4eec\u53d6\u5f97\u7684\u989c\u8272\u662f\u6cd5\u7ebf\u5750\u6807\uff0c\u4f46\u56e0\u4e3a\u5b83\u4eec\u88ab\u50a8\u5b58\u4e3aRGB\u503c\uff0c\u6240\u4ee5\u5b83\u4eec\u7684\u503c\u5728\u8303\u56f4 0, 1 \u4e2d\u3002\u6211\u4eec\u9700\u8981\u5c06\u5176\u8303\u56f4\u8f6c\u6362\u4e3a -1, 1 \uff0c\u6240\u4ee5\u6211\u4eec\u5c06\u5176\u4e58\u4ee52\u7136\u540e\u51cf\u53bb1\u3002\u7136\u540e\uff0c\u6211\u4eec\u5c06\u5b83\u5f52\u4e00\u5316\uff0c\u5e76\u5c06\u5176\u8f6c\u6362\u5230\u6a21\u578b\u89c2\u5bdf\u5750\u6807\u7cfb\uff08\u5c31\u50cf\u9876\u70b9\u6cd5\u7ebf\u90a3\u6837\uff09\u3002 \u5c31\u8fd9\u6837\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u8fd4\u56de\u503c\u4f5c\u4e3a\u7247\u5143\u6240\u6709\u5149\u7167\u8ba1\u7b97\u4e2d\u7684\u6cd5\u7ebf\u3002 \u5728 Renderer \u7c7b\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u521b\u5efa\u6cd5\u7ebf\u8d34\u56fe\uff0c\u5728 renderScene \u65b9\u6cd5\u4e2d\uff0c\u6211\u4eec\u505a\u5982\u4e0b\u8bbe\u7f6e\uff1a //... sceneShaderProgram.setUniform(\"fog\", scene.getFog()); sceneShaderProgram.setUniform(\"texture_sampler\", 0); sceneShaderProgram.setUniform(\"normalMap\", 1); //... \u4e0a\u8ff0\u4ee3\u7801\u4e2d\u4f60\u53ef\u80fd\u6ce8\u610f\u5230\u4e00\u4e9b\u6709\u8da3\u7684\u4e8b\u60c5\u3002\u6211\u4eec\u5c06\u6750\u8d28\u7eb9\u7406Uniform\uff08 texture_sampler \uff09\u8bbe\u7f6e\u4e3a 0 \uff0c\u7136\u540e\u5c06\u6cd5\u7ebf\u8d34\u56fe\u7eb9\u7406\uff08 normalMap \uff09\u8bbe\u7f6e\u4e3a 1 \u3002\u5982\u679c\u4f60\u56de\u60f3\u7eb9\u7406\u7ae0\u8282\uff0c\u6211\u4eec\u4e0d\u6b62\u4f7f\u7528\u4e00\u4e2a\u7eb9\u7406\uff0c\u6240\u4ee5\u6211\u4eec\u5fc5\u987b\u4e3a\u6bcf\u4e2a\u5355\u72ec\u7684\u7eb9\u7406\u8bbe\u7f6e\u7eb9\u7406\u5355\u5143\u3002 \u5f53\u6211\u4eec\u6e32\u67d3 Mesh \u65f6\uff0c\u4e5f\u9700\u8981\u8003\u8651\u8fd9\u4e00\u70b9\u3002 private void initRender() { Texture texture = material.getTexture(); if (texture != null) { // \u6fc0\u6d3b\u7b2c\u4e00\u7eb9\u7406\u5e93 glActiveTexture(GL_TEXTURE0); // \u7ed1\u5b9a\u7eb9\u7406 glBindTexture(GL_TEXTURE_2D, texture.getId()); } Texture normalMap = material.getNormalMap(); if ( normalMap != null ) { // \u6fc0\u6d3b\u7b2c\u4e8c\u7eb9\u7406\u5e93 glActiveTexture(GL_TEXTURE1); // \u7ed1\u5b9a\u7eb9\u7406 glBindTexture(GL_TEXTURE_2D, normalMap.getId()); } // \u7ed8\u5236\u7f51\u683c glBindVertexArray(getVaoId()); glEnableVertexAttribArray(0); glEnableVertexAttribArray(1); glEnableVertexAttribArray(2); } \u5982\u4f60\u6240\u89c1\uff0c\u6211\u4eec\u9700\u8981\u7ed1\u5b9a\u6bcf\u4e2a\u53ef\u7528\u7684\u7eb9\u7406\uff0c\u5e76\u6fc0\u6d3b\u76f8\u5173\u7684\u7eb9\u7406\u5355\u5143\uff0c\u4ee5\u4fbf\u591a\u4e2a\u7eb9\u7406\u80fd\u591f\u540c\u65f6\u5de5\u4f5c\u3002\u5728 Renderer \u7c7b\u7684 renderScene \u65b9\u6cd5\u4e2d\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u663e\u5f0f\u8bbe\u7f6e\u7eb9\u7406\u7684Uniform\uff0c\u56e0\u4e3a\u5b83\u5df2\u7ecf\u5305\u542b\u5728 Material \u4e2d\u3002 \u4e3a\u4e86\u5c55\u793a\u6cd5\u7ebf\u8d34\u56fe\u5e26\u6765\u7684\u63d0\u5347\uff0c\u6211\u5df2\u7ecf\u521b\u5efa\u4e86\u4e24\u4e2a\u5e76\u6392\u663e\u793a\u7684\u56db\u8fb9\u5f62\u793a\u4f8b\u3002\u53f3\u8fb9\u7684\u6709\u4e00\u5f20\u6cd5\u7ebf\u8d34\u56fe\uff0c\u800c\u5de6\u8fb9\u6ca1\u6709\u3002\u6211\u4eec\u8fd8\u5220\u9664\u4e86\u5730\u5f62\u3001\u5929\u7a7a\u76d2\u548cHUD\uff0c\u5e76\u8bbe\u7f6e\u4e86\u5e73\u884c\u5149\u7167\uff0c\u53ef\u4ee5\u7528\u9f20\u6807\u5de6\u53f3\u952e\u6539\u53d8\u65b9\u5411\uff0c\u8fd9\u6837\u4f60\u5c31\u53ef\u4ee5\u770b\u5230\u6548\u679c\u4e86\u3002\u6211\u5df2\u7ecf\u4fee\u6539\u4e86\u57fa\u672c\u6e90\u4ee3\u7801\uff0c\u4ee5\u652f\u6301\u5173\u95ed\u5929\u7a7a\u76d2\u548c\u5730\u5f62\u3002\u6211\u4eec\u8fd8\u5728\u7247\u5143\u7740\u8272\u5668\u4e2d\u8bbe\u7f6e\u4e86\u5149\u6548\u679c\u7684\u8303\u56f4\u4e3a 0, 1 \uff0c\u4ee5\u907f\u514d\u56fe\u50cf\u8fc7\u5ea6\u66dd\u5149\u3002 \u7ed3\u679c\u5982\u4e0b\u56fe\u6240\u793a\u3002 \u5982\u4f60\u6240\u89c1\uff0c\u5177\u6709\u6cd5\u7ebf\u8d34\u56fe\u7684\u56db\u8fb9\u5f62\u611f\u89c9\u66f4\u5927\u3002\u867d\u7136\u5b83\u672c\u8d28\u4e0a\u662f\u4e00\u4e2a\u50cf\u5176\u4ed6\u56db\u8fb9\u5f62\u4e00\u6837\u7684\u5e73\u9762\uff0c\u4f46\u4f60\u53ef\u4ee5\u770b\u5230\u5149\u7ebf\u662f\u5982\u4f55\u53cd\u5c04\u7684\u3002 \u5c3d\u7ba1\u6211\u4eec\u5df2\u7ecf\u7f16\u5199\u7684\u4ee3\u7801\u5b8c\u5168\u7b26\u5408\u8fd9\u4e2a\u793a\u4f8b\uff0c\u4f46\u4f60\u9700\u8981\u77e5\u9053\u5b83\u7684\u5c40\u9650\u6027\u3002\u8be5\u4ee3\u7801\u4ec5\u9002\u7528\u4e0e\u4f7f\u7528\u6a21\u578b\u5750\u6807\u7a7a\u95f4\u521b\u5efa\u7684\u6cd5\u7ebf\u8d34\u56fe\u7eb9\u7406\u3002\u5982\u679c\u662f\u8fd9\u79cd\u60c5\u51b5\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u6a21\u578b\u89c6\u56fe\u77e9\u9635\u6765\u5c06\u6cd5\u7ebf\u5750\u6807\u8f6c\u6362\u5230\u89c2\u5bdf\u7a7a\u95f4\u3002 \u4f46\u901a\u5e38\u6cd5\u7ebf\u8d34\u56fe\u4e0d\u662f\u8fd9\u6837\u5b9a\u4e49\u7684\u3002\u5b83\u4eec\u901a\u5e38\u88ab\u5b9a\u4e49\u5728\u6240\u8c13\u7684 \u5207\u7ebf\u7a7a\u95f4\uff08 Tangent Space \uff09 \u4e2d\u3002\u5207\u7ebf\u7a7a\u95f4\u662f\u4e00\u4e2a\u5750\u6807\u7cfb\uff0c\u5b83\u5b9a\u4f4d\u5728\u6a21\u578b\u7684\u6bcf\u4e2a\u4e09\u89d2\u5f62\uff0c\u5176\u5750\u6807\u7cfb\u7684 z \u8f74\u603b\u662f\u5782\u76f4\u4e8e\u8868\u9762\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u5f53\u4f60\u770b\u4e00\u4e2a\u6cd5\u7ebf\u8d34\u56fe\u65f6\uff0c\u5b83\u901a\u5e38\u662f\u84dd\u8272\u7684\uff0c\u751a\u81f3\u5bf9\u4e8e\u9762\u76f8\u5bf9\u590d\u6742\u7684\u6a21\u578b\u4e5f\u662f\u5982\u6b64\u3002 \u6211\u4eec\u73b0\u5728\u4ecd\u4f7f\u7528\u8fd9\u4e2a\u7b80\u5355\u7684\u5b9e\u73b0\uff0c\u4f46\u8bf7\u8bb0\u4f4f\uff0c\u4f60\u5fc5\u987b\u603b\u662f\u4f7f\u7528\u5728\u6a21\u578b\u7a7a\u95f4\u4e2d\u5b9a\u4e49\u7684\u6cd5\u7ebf\u8d34\u56fe\u3002\u5982\u679c\u4f7f\u7528\u5207\u7ebf\u7a7a\u95f4\u4e2d\u5b9a\u4e49\u7684\u8d34\u56fe\uff0c\u5c31\u4f1a\u53d8\u5f97\u5f88\u5947\u602a\u3002\u4e3a\u4e86\u80fd\u591f\u8ba9\u5b83\u4eec\u4e00\u540c\u5de5\u4f5c\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528\u7279\u5b9a\u7684\u77e9\u9635\u6765\u5c06\u5750\u6807\u53d8\u6362\u5230\u5207\u7ebf\u7a7a\u95f4\u3002","title":"\u6cd5\u7ebf\u8d34\u56fe"},{"location":"17-normal-mapping/#normal-mapping","text":"\u672c\u7ae0\u4e2d\u5c06\u8bb2\u89e3\u4e00\u9879\u6280\u672f\uff0c\u5b83\u5c06\u6781\u5927\u5730\u6539\u5584\u6211\u4eec\u76843D\u6a21\u578b\u7684\u5916\u89c2\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u5df2\u7ecf\u80fd\u591f\u5c06\u7eb9\u7406\u4f7f\u7528\u5230\u590d\u6742\u76843D\u6a21\u578b\u4e0a\uff0c\u4f46\u8fd9\u8fd8\u79bb\u771f\u5b9e\u7269\u4f53\u7684\u6837\u5b50\u5f88\u8fdc\u3002\u73b0\u5b9e\u4e16\u754c\u4e2d\u7684\u7269\u4f53\u8868\u9762\u4e0d\u662f\u5b8c\u5168\u5149\u6ed1\u7684\uff0c\u5b83\u4eec\u6709\u6211\u4eec\u76843D\u6a21\u578b\u76ee\u524d\u6240\u4e0d\u5177\u6709\u7684\u7455\u75b5\u3002 \u4e3a\u4e86\u6e32\u67d3\u66f4\u771f\u5b9e\u7684\u573a\u666f\uff0c\u6211\u4eec\u5c06\u6e32\u67d3 \u6cd5\u7ebf\u8d34\u56fe(Normal Mapping) \u3002\u5982\u679c\u4f60\u5728\u73b0\u5b9e\u4e16\u754c\u4e2d\u770b\u5230\u4e00\u4e2a\u5e73\u9762\uff0c\u4f60\u4f1a\u53d1\u73b0\u90a3\u4e9b\u7455\u75b5\u751a\u81f3\u53ef\u4ee5\u5728\u5f88\u8fdc\u7684\u8ddd\u79bb\u770b\u5230\u3002\u57283D\u573a\u666f\u4e2d\uff0c\u5e73\u9762\u6ca1\u6709\u7455\u75b5\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u7eb9\u7406\u5e94\u7528\u5728\u5b83\u4e4b\u4e0a\uff0c\u4f46\u8fd9\u4e0d\u4f1a\u6539\u53d8\u5149\u53cd\u5c04\u7684\u65b9\u5f0f\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u4e0e\u73b0\u5b9e\u6709\u533a\u522b\u7684\u539f\u56e0\u3002 \u6211\u4eec\u53ef\u4ee5\u8003\u8651\u901a\u8fc7\u589e\u52a0\u4e09\u89d2\u5f62\u6570\u91cf\u6765\u589e\u52a0\u6a21\u578b\u7684\u7ec6\u8282\u5e76\u53cd\u6620\u51fa\u8fd9\u4e9b\u7455\u75b5\uff0c\u4f46\u6027\u80fd\u4f1a\u4e0b\u964d\u3002\u6211\u4eec\u9700\u8981\u7684\u662f\u6539\u53d8\u8868\u9762\u5149\u53cd\u5c04\u7684\u65b9\u5f0f\u6765\u589e\u52a0\u771f\u5b9e\u611f\u3002\u8fd9\u5c31\u662f\u7528\u6cd5\u7ebf\u8d34\u56fe\u6280\u672f\u5b9e\u73b0\u7684\u3002 \u8ba9\u6211\u4eec\u770b\u770b\u5149\u6ed1\u5e73\u9762\u7684\u4f8b\u5b50\uff0c\u4e00\u4e2a\u5e73\u9762\u7531\u4e24\u4e2a\u4e09\u89d2\u5f62\u7ec4\u6210\u4e3a\u4e00\u4e2a\u56db\u8fb9\u5f62\u3002\u56de\u5fc6\u4e4b\u524d\u7684\u5149\u7167\u7ae0\u8282\uff0c\u6a21\u578b\u7684\u5149\u53cd\u5c04\u7684\u8981\u7d20\u662f\u5e73\u9762\u6cd5\u7ebf\u3002\u5728\u6b64\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u6574\u4e2a\u5e73\u9762\u4ec5\u6709\u5355\u4e00\u7684\u6cd5\u7ebf\uff0c\u5f53\u8ba1\u7b97\u5149\u5982\u4f55\u5f71\u54cd\u7247\u5143\u65f6\uff0c\u6bcf\u4e2a\u7247\u5143\u90fd\u4f7f\u7528\u76f8\u540c\u7684\u6cd5\u7ebf\u3002\u770b\u8d77\u6765\u5c31\u50cf\u4e0b\u56fe\u90a3\u6837\u3002 \u5982\u679c\u53ef\u4ee5\u6539\u53d8\u5e73\u9762\u7684\u6bcf\u4e2a\u7247\u5143\u7684\u6cd5\u7ebf\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u6a21\u62df\u5e73\u9762\u7684\u7455\u75b5\uff0c\u4f7f\u5b83\u4eec\u66f4\u903c\u771f\u3002\u770b\u8d77\u6765\u5c31\u50cf\u4e0b\u56fe\u90a3\u6837\u3002 \u8981\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u8981\u52a0\u8f7d\u53e6\u4e00\u4e2a\u7eb9\u7406\uff0c\u5b83\u50a8\u5b58\u9762\u7684\u6cd5\u7ebf\u3002\u6cd5\u7ebf\u7eb9\u7406\u7684\u6bcf\u4e2a\u50cf\u7d20\u5c06\u4ee5RGB\u503c\u50a8\u5b58\u6cd5\u7ebf\u7684 x \u3001 y \u548c z \u5750\u6807\u503c\u3002 \u8ba9\u6211\u4eec\u7528\u4e0b\u9762\u7684\u7eb9\u7406\u7ed8\u5236\u4e00\u4e2a\u56db\u8fb9\u5f62\u3002 \u4e0a\u56fe\u7684\u6cd5\u7ebf\u7eb9\u7406\u5982\u4e0b\u6240\u793a\u3002 \u5982\u4f60\u6240\u89c1\uff0c\u5982\u679c\u6211\u4eec\u628a\u989c\u8272\u53d8\u6362\u5e94\u7528\u5230\u539f\u59cb\u7eb9\u7406\uff0c\u6bcf\u4e2a\u50cf\u7d20\u4f7f\u7528\u989c\u8272\u5206\u91cf\u50a8\u5b58\u6cd5\u7ebf\u4fe1\u606f\u3002\u5728\u770b\u5230\u6cd5\u7ebf\u8d34\u56fe\u65f6\uff0c\u4f60\u5e38\u5e38\u4f1a\u770b\u5230\u4e3b\u8272\u8c03\u503e\u5411\u4e8e\u84dd\u8272\uff0c\u8fd9\u662f\u7531\u4e8e\u5927\u591a\u6570\u6cd5\u7ebf\u6307\u5411\u8f6c\u6362\u6b63 z \u8f74\u6240\u81f4\u3002\u5728\u4e00\u4e2a\u5e73\u9762\u8868\u9762\u7684\u77e2\u91cf\u4e2d\uff0c z \u5206\u91cf\u901a\u5e38\u6bd4 x \u548c y \u5206\u91cf\u7684\u503c\u9ad8\u5f97\u591a\u3002\u7531\u4e8e x \u3001 y \u3001 z \u5750\u6807\u88ab\u6620\u5c04\u5230RGB\uff0c\u5bfc\u81f4\u84dd\u8272\u5206\u91cf\u4e5f\u6709\u7740\u66f4\u9ad8\u7684\u503c\u3002 \u56e0\u6b64\uff0c\u4f7f\u7528\u6cd5\u7ebf\u8d34\u56fe\u6e32\u67d3\u5bf9\u8c61\u53ea\u9700\u8981\u4e00\u4e2a\u989d\u5916\u7684\u7eb9\u7406\uff0c\u5e76\u540c\u65f6\u4f7f\u7528\u5b83\u6e32\u67d3\u7247\u5143\u4ee5\u83b7\u5f97\u9002\u5f53\u7684\u6cd5\u7ebf\u503c\u3002 \u8ba9\u6211\u4eec\u5f00\u59cb\u4fee\u6539\u4ee3\u7801\uff0c\u4ee5\u652f\u6301\u6cd5\u7ebf\u8d34\u56fe\u3002\u6211\u4eec\u5c06\u6dfb\u52a0\u4e00\u4e2a\u65b0\u7684 Texture \u5b9e\u4f8b\u5230 Material \u7c7b\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u628a\u4e00\u4e2a\u6cd5\u7ebf\u8d34\u56fe\u7eb9\u7406\u6dfb\u52a0\u5230\u6e38\u620f\u9879\u76ee\u4e0a\u3002\u6b64\u5b9e\u4f8b\u5c06\u6709\u81ea\u5df1\u7684 get \u548c set \u65b9\u6cd5\uff0c\u5e76\u6709\u65b9\u6cd5\u53ef\u4ee5\u68c0\u67e5 Material \u662f\u5426\u6709\u6cd5\u7ebf\u8d34\u56fe\u3002 public class Material { private static final Vector4f DEFAULT_COLOUR = new Vector3f(1.0f, 1.0f, 1.0f, 10.f); private Vector3f ambientColour; private Vector3f diffuseColour; private Vector3f specularColour; private float reflectance; private Texture texture; private Texture normalMap; // \u2026 Previous code here public boolean hasNormalMap() { return this.normalMap != null; } public Texture getNormalMap() { return normalMap; } public void setNormalMap(Texture normalMap) { this.normalMap = normalMap; } } \u6211\u4eec\u5c06\u5728\u573a\u666f\u7684\u7247\u5143\u7740\u8272\u5668\u4e2d\u4f7f\u7528\u6cd5\u7ebf\u8d34\u56fe\u7eb9\u7406\u3002\u4f46\u662f\uff0c\u7531\u4e8e\u6211\u4eec\u5728\u89c2\u5bdf\u5750\u6807\u7a7a\u95f4\u64cd\u4f5c\uff0c\u6240\u4ee5\u9700\u8981\u901a\u8fc7\u6a21\u578b\u89c2\u5bdf\u77e9\u9635\u6765\u8fdb\u884c\u9002\u5f53\u7684\u53d8\u6362\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u4fee\u6539\u573a\u666f\u7684\u9876\u70b9\u7740\u8272\u5668\u3002 #version 330 layout (location=0) in vec3 position; layout (location=1) in vec2 texCoord; layout (location=2) in vec3 vertexNormal; out vec2 outTexCoord; out vec3 mvVertexNormal; out vec3 mvVertexPos; out mat4 outModelViewMatrix; uniform mat4 modelViewMatrix; uniform mat4 projectionMatrix; void main() { vec4 mvPos = modelViewMatrix * vec4(position, 1.0); gl_Position = projectionMatrix * mvPos; outTexCoord = texCoord; mvVertexNormal = normalize(modelViewMatrix * vec4(vertexNormal, 0.0)).xyz; mvVertexPos = mvPos.xyz; outModelViewMatrix = modelViewMatrix; } \u5728\u573a\u666f\u7684\u7247\u5143\u7740\u8272\u5668\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u6dfb\u52a0\u53e6\u4e00\u4e2a\u8f93\u5165\u53c2\u6570\u3002 in mat4 outModelViewMatrix; \u5728\u7247\u5143\u7740\u8272\u5668\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u4e3a\u6cd5\u7ebf\u8d34\u56fe\u7eb9\u7406\u91c7\u6837\u5668\u4f20\u9012\u4e00\u4e2a\u65b0\u7684Uniform\uff1a uniform sampler2D texture_sampler; \u6b64\u5916\uff0c\u5728\u7247\u5143\u7740\u8272\u5668\u4e2d\uff0c\u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a\u65b0\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u8ba1\u7b97\u5f53\u524d\u7247\u5143\u7684\u6cd5\u7ebf\u3002 vec3 calcNormal(Material material, vec3 normal, vec2 text_coord, mat4 modelViewMatrix) { vec3 newNormal = normal; if ( material.hasNormalMap == 1 ) { newNormal = texture(normalMap, text_coord).rgb; newNormal = normalize(newNormal * 2 - 1); newNormal = normalize(modelViewMatrix * vec4(newNormal, 0.0)).xyz; } return newNormal; } \u8be5\u51fd\u6570\u6709\u4ee5\u4e0b\u53c2\u6570\uff1a * Material \u5b9e\u4f8b\u3002 * \u9876\u70b9\u6cd5\u7ebf\u3002 * \u7eb9\u7406\u5750\u6807\u3002 * \u6a21\u578b\u89c6\u56fe\u77e9\u9635\u3002 \u6211\u4eec\u5728\u6b64\u51fd\u6570\u4e2d\u505a\u7684\u7b2c\u4e00\u4ef6\u4e8b\u662f\u68c0\u67e5\u8fd9\u4e2a Material \u5b9e\u4f8b\u662f\u5426\u6709\u6cd5\u7ebf\u8d34\u56fe\u3002\u5982\u679c\u6ca1\u6709\uff0c\u6211\u4eec\u5c31\u50cf\u5e73\u5e38\u4e00\u6837\u7b80\u5355\u5730\u4f7f\u7528\u9876\u70b9\u6cd5\u7ebf\u3002\u5982\u679c\u5b83\u6709\u6cd5\u7ebf\u8d34\u56fe\uff0c\u6211\u4eec\u4f7f\u7528\u50a8\u5b58\u7740\u6cd5\u7ebf\u6570\u636e\u7684\u6cd5\u7ebf\u7eb9\u7406\u5173\u8054\u5230\u5f53\u524d\u7eb9\u7406\u5750\u6807\u3002 \u8bb0\u4f4f\u6211\u4eec\u53d6\u5f97\u7684\u989c\u8272\u662f\u6cd5\u7ebf\u5750\u6807\uff0c\u4f46\u56e0\u4e3a\u5b83\u4eec\u88ab\u50a8\u5b58\u4e3aRGB\u503c\uff0c\u6240\u4ee5\u5b83\u4eec\u7684\u503c\u5728\u8303\u56f4 0, 1 \u4e2d\u3002\u6211\u4eec\u9700\u8981\u5c06\u5176\u8303\u56f4\u8f6c\u6362\u4e3a -1, 1 \uff0c\u6240\u4ee5\u6211\u4eec\u5c06\u5176\u4e58\u4ee52\u7136\u540e\u51cf\u53bb1\u3002\u7136\u540e\uff0c\u6211\u4eec\u5c06\u5b83\u5f52\u4e00\u5316\uff0c\u5e76\u5c06\u5176\u8f6c\u6362\u5230\u6a21\u578b\u89c2\u5bdf\u5750\u6807\u7cfb\uff08\u5c31\u50cf\u9876\u70b9\u6cd5\u7ebf\u90a3\u6837\uff09\u3002 \u5c31\u8fd9\u6837\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u8fd4\u56de\u503c\u4f5c\u4e3a\u7247\u5143\u6240\u6709\u5149\u7167\u8ba1\u7b97\u4e2d\u7684\u6cd5\u7ebf\u3002 \u5728 Renderer \u7c7b\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u521b\u5efa\u6cd5\u7ebf\u8d34\u56fe\uff0c\u5728 renderScene \u65b9\u6cd5\u4e2d\uff0c\u6211\u4eec\u505a\u5982\u4e0b\u8bbe\u7f6e\uff1a //... sceneShaderProgram.setUniform(\"fog\", scene.getFog()); sceneShaderProgram.setUniform(\"texture_sampler\", 0); sceneShaderProgram.setUniform(\"normalMap\", 1); //... \u4e0a\u8ff0\u4ee3\u7801\u4e2d\u4f60\u53ef\u80fd\u6ce8\u610f\u5230\u4e00\u4e9b\u6709\u8da3\u7684\u4e8b\u60c5\u3002\u6211\u4eec\u5c06\u6750\u8d28\u7eb9\u7406Uniform\uff08 texture_sampler \uff09\u8bbe\u7f6e\u4e3a 0 \uff0c\u7136\u540e\u5c06\u6cd5\u7ebf\u8d34\u56fe\u7eb9\u7406\uff08 normalMap \uff09\u8bbe\u7f6e\u4e3a 1 \u3002\u5982\u679c\u4f60\u56de\u60f3\u7eb9\u7406\u7ae0\u8282\uff0c\u6211\u4eec\u4e0d\u6b62\u4f7f\u7528\u4e00\u4e2a\u7eb9\u7406\uff0c\u6240\u4ee5\u6211\u4eec\u5fc5\u987b\u4e3a\u6bcf\u4e2a\u5355\u72ec\u7684\u7eb9\u7406\u8bbe\u7f6e\u7eb9\u7406\u5355\u5143\u3002 \u5f53\u6211\u4eec\u6e32\u67d3 Mesh \u65f6\uff0c\u4e5f\u9700\u8981\u8003\u8651\u8fd9\u4e00\u70b9\u3002 private void initRender() { Texture texture = material.getTexture(); if (texture != null) { // \u6fc0\u6d3b\u7b2c\u4e00\u7eb9\u7406\u5e93 glActiveTexture(GL_TEXTURE0); // \u7ed1\u5b9a\u7eb9\u7406 glBindTexture(GL_TEXTURE_2D, texture.getId()); } Texture normalMap = material.getNormalMap(); if ( normalMap != null ) { // \u6fc0\u6d3b\u7b2c\u4e8c\u7eb9\u7406\u5e93 glActiveTexture(GL_TEXTURE1); // \u7ed1\u5b9a\u7eb9\u7406 glBindTexture(GL_TEXTURE_2D, normalMap.getId()); } // \u7ed8\u5236\u7f51\u683c glBindVertexArray(getVaoId()); glEnableVertexAttribArray(0); glEnableVertexAttribArray(1); glEnableVertexAttribArray(2); } \u5982\u4f60\u6240\u89c1\uff0c\u6211\u4eec\u9700\u8981\u7ed1\u5b9a\u6bcf\u4e2a\u53ef\u7528\u7684\u7eb9\u7406\uff0c\u5e76\u6fc0\u6d3b\u76f8\u5173\u7684\u7eb9\u7406\u5355\u5143\uff0c\u4ee5\u4fbf\u591a\u4e2a\u7eb9\u7406\u80fd\u591f\u540c\u65f6\u5de5\u4f5c\u3002\u5728 Renderer \u7c7b\u7684 renderScene \u65b9\u6cd5\u4e2d\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u663e\u5f0f\u8bbe\u7f6e\u7eb9\u7406\u7684Uniform\uff0c\u56e0\u4e3a\u5b83\u5df2\u7ecf\u5305\u542b\u5728 Material \u4e2d\u3002 \u4e3a\u4e86\u5c55\u793a\u6cd5\u7ebf\u8d34\u56fe\u5e26\u6765\u7684\u63d0\u5347\uff0c\u6211\u5df2\u7ecf\u521b\u5efa\u4e86\u4e24\u4e2a\u5e76\u6392\u663e\u793a\u7684\u56db\u8fb9\u5f62\u793a\u4f8b\u3002\u53f3\u8fb9\u7684\u6709\u4e00\u5f20\u6cd5\u7ebf\u8d34\u56fe\uff0c\u800c\u5de6\u8fb9\u6ca1\u6709\u3002\u6211\u4eec\u8fd8\u5220\u9664\u4e86\u5730\u5f62\u3001\u5929\u7a7a\u76d2\u548cHUD\uff0c\u5e76\u8bbe\u7f6e\u4e86\u5e73\u884c\u5149\u7167\uff0c\u53ef\u4ee5\u7528\u9f20\u6807\u5de6\u53f3\u952e\u6539\u53d8\u65b9\u5411\uff0c\u8fd9\u6837\u4f60\u5c31\u53ef\u4ee5\u770b\u5230\u6548\u679c\u4e86\u3002\u6211\u5df2\u7ecf\u4fee\u6539\u4e86\u57fa\u672c\u6e90\u4ee3\u7801\uff0c\u4ee5\u652f\u6301\u5173\u95ed\u5929\u7a7a\u76d2\u548c\u5730\u5f62\u3002\u6211\u4eec\u8fd8\u5728\u7247\u5143\u7740\u8272\u5668\u4e2d\u8bbe\u7f6e\u4e86\u5149\u6548\u679c\u7684\u8303\u56f4\u4e3a 0, 1 \uff0c\u4ee5\u907f\u514d\u56fe\u50cf\u8fc7\u5ea6\u66dd\u5149\u3002 \u7ed3\u679c\u5982\u4e0b\u56fe\u6240\u793a\u3002 \u5982\u4f60\u6240\u89c1\uff0c\u5177\u6709\u6cd5\u7ebf\u8d34\u56fe\u7684\u56db\u8fb9\u5f62\u611f\u89c9\u66f4\u5927\u3002\u867d\u7136\u5b83\u672c\u8d28\u4e0a\u662f\u4e00\u4e2a\u50cf\u5176\u4ed6\u56db\u8fb9\u5f62\u4e00\u6837\u7684\u5e73\u9762\uff0c\u4f46\u4f60\u53ef\u4ee5\u770b\u5230\u5149\u7ebf\u662f\u5982\u4f55\u53cd\u5c04\u7684\u3002 \u5c3d\u7ba1\u6211\u4eec\u5df2\u7ecf\u7f16\u5199\u7684\u4ee3\u7801\u5b8c\u5168\u7b26\u5408\u8fd9\u4e2a\u793a\u4f8b\uff0c\u4f46\u4f60\u9700\u8981\u77e5\u9053\u5b83\u7684\u5c40\u9650\u6027\u3002\u8be5\u4ee3\u7801\u4ec5\u9002\u7528\u4e0e\u4f7f\u7528\u6a21\u578b\u5750\u6807\u7a7a\u95f4\u521b\u5efa\u7684\u6cd5\u7ebf\u8d34\u56fe\u7eb9\u7406\u3002\u5982\u679c\u662f\u8fd9\u79cd\u60c5\u51b5\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u6a21\u578b\u89c6\u56fe\u77e9\u9635\u6765\u5c06\u6cd5\u7ebf\u5750\u6807\u8f6c\u6362\u5230\u89c2\u5bdf\u7a7a\u95f4\u3002 \u4f46\u901a\u5e38\u6cd5\u7ebf\u8d34\u56fe\u4e0d\u662f\u8fd9\u6837\u5b9a\u4e49\u7684\u3002\u5b83\u4eec\u901a\u5e38\u88ab\u5b9a\u4e49\u5728\u6240\u8c13\u7684 \u5207\u7ebf\u7a7a\u95f4\uff08 Tangent Space \uff09 \u4e2d\u3002\u5207\u7ebf\u7a7a\u95f4\u662f\u4e00\u4e2a\u5750\u6807\u7cfb\uff0c\u5b83\u5b9a\u4f4d\u5728\u6a21\u578b\u7684\u6bcf\u4e2a\u4e09\u89d2\u5f62\uff0c\u5176\u5750\u6807\u7cfb\u7684 z \u8f74\u603b\u662f\u5782\u76f4\u4e8e\u8868\u9762\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u5f53\u4f60\u770b\u4e00\u4e2a\u6cd5\u7ebf\u8d34\u56fe\u65f6\uff0c\u5b83\u901a\u5e38\u662f\u84dd\u8272\u7684\uff0c\u751a\u81f3\u5bf9\u4e8e\u9762\u76f8\u5bf9\u590d\u6742\u7684\u6a21\u578b\u4e5f\u662f\u5982\u6b64\u3002 \u6211\u4eec\u73b0\u5728\u4ecd\u4f7f\u7528\u8fd9\u4e2a\u7b80\u5355\u7684\u5b9e\u73b0\uff0c\u4f46\u8bf7\u8bb0\u4f4f\uff0c\u4f60\u5fc5\u987b\u603b\u662f\u4f7f\u7528\u5728\u6a21\u578b\u7a7a\u95f4\u4e2d\u5b9a\u4e49\u7684\u6cd5\u7ebf\u8d34\u56fe\u3002\u5982\u679c\u4f7f\u7528\u5207\u7ebf\u7a7a\u95f4\u4e2d\u5b9a\u4e49\u7684\u8d34\u56fe\uff0c\u5c31\u4f1a\u53d8\u5f97\u5f88\u5947\u602a\u3002\u4e3a\u4e86\u80fd\u591f\u8ba9\u5b83\u4eec\u4e00\u540c\u5de5\u4f5c\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528\u7279\u5b9a\u7684\u77e9\u9635\u6765\u5c06\u5750\u6807\u53d8\u6362\u5230\u5207\u7ebf\u7a7a\u95f4\u3002","title":"\u6cd5\u7ebf\u8d34\u56fe\uff08Normal Mapping\uff09"},{"location":"18-shadows/","text":"\u9634\u5f71\uff08Shadows\uff09 \u9634\u5f71\u6620\u5c04 \u76ee\u524d\uff0c\u6211\u4eec\u80fd\u591f\u8868\u73b0\u5149\u7ebf\u5982\u4f55\u5f71\u54cd\u4e09\u7ef4\u573a\u666f\u4e2d\u7684\u5bf9\u8c61\u3002\u63a5\u6536\u5230\u66f4\u591a\u5149\u7684\u7269\u4f53\u6bd4\u6ca1\u6709\u63a5\u6536\u5149\u7684\u7269\u4f53\u66f4\u4eae\u3002\u7136\u800c\uff0c\u6211\u4eec\u4ecd\u65e0\u6cd5\u6295\u5c04\u9634\u5f71\u3002\u9634\u5f71\u80fd\u589e\u52a03D\u573a\u666f\u7684\u771f\u5b9e\u5ea6\uff0c\u56e0\u6b64\u6211\u4eec\u5c06\u5728\u672c\u7ae0\u4e2d\u6dfb\u52a0\u5bf9\u5b83\u7684\u652f\u6301\u3002 \u6211\u4eec\u5c06\u4f7f\u7528\u4e00\u79cd\u88ab\u79f0\u4e3a\u9634\u5f71\u6620\u5c04\uff08Shadow Mapping\uff09\u7684\u6280\u672f\uff0c\u8fd9\u79cd\u6280\u672f\u88ab\u5e7f\u6cdb\u4f7f\u7528\u4e8e\u6e38\u620f\u4e2d\uff0c\u4e14\u4e0d\u4f1a\u4e25\u91cd\u5f71\u54cd\u5f15\u64ce\u6027\u80fd\u3002\u9634\u5f71\u6620\u5c04\u770b\u8d77\u6765\u5f88\u5bb9\u6613\u7406\u89e3\uff0c\u4f46\u662f\u5f88\u96be\u6b63\u786e\u5730\u5b9e\u73b0\u5b83\u3002\u6216\u8005\u66f4\u51c6\u786e\u5730\u8bf4\uff0c\u5f88\u96be\u7528\u4e00\u79cd\u901a\u7528\u7684\uff0c\u6db5\u76d6\u4e86\u4e00\u5207\u53ef\u80fd\u5e76\u4ea7\u751f\u4e00\u81f4\u7684\u6548\u679c\u7684\u65b9\u6cd5\u53bb\u5b9e\u73b0\u5b83\u3002 \u6211\u4eec\u5c06\u5728\u6b64\u8bf4\u660e\u4e00\u79cd\u65b9\u6cd5\uff0c\u5b83\u53ef\u4ee5\u4e3a\u4f60\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u6dfb\u52a0\u9634\u5f71\uff0c\u4f46\u66f4\u91cd\u8981\u7684\u662f\uff0c\u5b83\u5c06\u5e2e\u52a9\u4f60\u4e86\u89e3\u5176\u5c40\u9650\u6027\u3002\u8fd9\u91cc\u4ecb\u7ecd\u7684\u4ee3\u7801\u8fdc\u4e0d\u662f\u5b8c\u7f8e\u7684\uff0c\u4f46\u6211\u8ba4\u4e3a\u5b83\u5f88\u5bb9\u6613\u7406\u89e3\u3002\u5b83\u8fd8\u88ab\u8bbe\u8ba1\u7528\u4e8e\u652f\u6301\u6709\u5411\u5149\uff08\u8fd9\u6211\u8ba4\u4e3a\u662f\u66f4\u590d\u6742\u7684\u60c5\u51b5\uff09\uff0c\u4f46\u4f60\u5c06\u4e86\u89e3\u5982\u4f55\u5c06\u5176\u6269\u5c55\u4ee5\u652f\u6301\u5176\u4ed6\u7c7b\u578b\u7684\u5149\u7167\uff08\u4f8b\u5982\u70b9\u5149\u6e90\uff09\u3002\u5982\u679c\u60f3\u83b7\u5f97\u66f4\u9ad8\u7ea7\u7684\u6548\u679c\uff0c\u4f60\u5e94\u8be5\u4f7f\u7528\u66f4\u9ad8\u7ea7\u7684\u6280\u672f\uff0c\u4f8b\u5982\u7ea7\u8054\u9634\u5f71\u6620\u5c04\uff08Cascaded Shadow Maps\uff09\u3002\u5728\u4efb\u4f55\u60c5\u51b5\u4e0b\uff0c\u8fd9\u91cc\u89e3\u91ca\u7684\u6982\u5ff5\u90fd\u4ec5\u4ec5\u4f5c\u4e3a\u57fa\u7840\u3002 \u6240\u4ee5\uff0c\u8ba9\u6211\u4eec\u4ece\u601d\u8003\u5982\u4f55\u68c0\u67e5\u7279\u5b9a\u533a\u57df\uff08\u5b9e\u9645\u4e0a\u662f\u7247\u5143\uff09\u662f\u5426\u5728\u9634\u5f71\u4e2d\u5f00\u59cb\u3002\u5728\u7ed8\u5236\u8fd9\u4e2a\u533a\u57df\u7684\u65f6\u5019\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u51fa\u5c04\u7ebf\u6295\u5c04\u5230\u5149\u6e90\u4e0a\uff0c\u5982\u679c\u6211\u4eec\u53ef\u4ee5\u5728\u4e0d\u53d1\u751f\u4efb\u4f55\u78b0\u649e\u7684\u60c5\u51b5\u4e0b\u5230\u8fbe\u5149\u6e90\uff0c\u90a3\u4e48\u50cf\u7d20\u5c31\u5728\u5149\u7167\u4e2d\uff0c\u53cd\u4e4b\uff0c\u50cf\u7d20\u5904\u4e8e\u9634\u5f71\u4e2d\u3002 \u4e0b\u56fe\u5c55\u793a\u4e86\u70b9\u5149\u6e90\u7684\u60c5\u51b5\uff0c\u70b9PA\u53ef\u4ee5\u5230\u8fbe\u5149\u6e90\uff0c\u4f46\u70b9PB\u548cPC\u4e0d\u884c\uff0c\u56e0\u6b64\u5b83\u4eec\u4f4d\u4e8e\u9634\u5f71\u4e2d\u3002 \u90a3\u4e48\uff0c\u6211\u4eec\u5982\u4f55\u624d\u80fd\u68c0\u67e5\u662f\u5426\u80fd\u4ee5\u4e00\u79cd\u6709\u6548\u7684\u65b9\u5f0f\u53d1\u5c04\u51fa\u4e0d\u53d1\u751f\u78b0\u649e\u7684\u5c04\u7ebf\u5462\uff1f\u7406\u8bba\u4e0a\uff0c\u5149\u6e90\u53ef\u4ee5\u6295\u5c04\u51fa\u65e0\u9650\u7684\u5149\u7ebf\uff0cName\u6211\u4eec\u5982\u4f55\u68c0\u67e5\u5149\u7ebf\u662f\u5426\u88ab\u906e\u6321\uff1f \u6211\u4eec\u80fd\u505a\u7684\u4e0d\u662f\u6295\u5c04\u5149\u7ebf\uff0c\u800c\u662f\u4ece\u5149\u7ebf\u900f\u89c6\u56fe\u4e2d\u89c2\u5bdf3D\u573a\u666f\uff0c\u5e76\u4ece\u8be5\u4f4d\u7f6e\u6e32\u67d3\u573a\u666f\u3002\u6211\u4eec\u53ef\u4ee5\u5c06\u76f8\u673a\u8bbe\u7f6e\u5728\u5149\u6e90\u4f4d\u7f6e\u5e76\u6e32\u67d3\u573a\u666f\uff0c\u4ee5\u4fbf\u50a8\u5b58\u6bcf\u4e2a\u7247\u5143\u7684\u6df1\u5ea6\u3002\u8fd9\u76f8\u5f53\u4e8e\u8ba1\u7b97\u6bcf\u4e2a\u7247\u5143\u5230\u5149\u6e90\u7684\u8ddd\u79bb\u3002\u6700\u540e\uff0c\u6211\u4eec\u8981\u505a\u7684\u662f\u5c06\u5149\u7167\u6240\u53ca\u7684\u6700\u5c0f\u8ddd\u79bb\u50a8\u5b58\u4e3a\u9634\u5f71\u56fe\u3002 \u4e0b\u56fe\u5c55\u793a\u4e86\u4e00\u4e2a\u60ac\u6d6e\u5728\u5e73\u9762\u4e0a\u5e76\u5782\u76f4\u4e8e\u5149\u7ebf\u7684\u7acb\u65b9\u4f53\u3002 \u4ece\u5149\u6e90\u7684\u89d2\u5ea6\u770b\uff0c\u60c5\u51b5\u662f\u8fd9\u6837\u7684\uff08\u989c\u8272\u8d8a\u6df1\uff0c\u8d8a\u63a5\u8fd1\u5149\u6e90\uff09\u3002 \u5229\u7528\u8fd9\u4e9b\u4fe1\u606f\u3002\u6211\u4eec\u53ef\u4ee5\u50cf\u5f80\u5e38\u4e00\u6837\u6e32\u67d33D\u573a\u666f\uff0c\u5e76\u4ee5\u6700\u5c0f\u50a8\u5b58\u8ddd\u79bb\u68c0\u67e5\u6bcf\u4e2a\u6bcf\u4e2a\u7247\u5143\u5230\u5149\u6e90\u7684\u8ddd\u79bb\u3002\u5982\u679c\u8ddd\u79bb\u5c0f\u4e8e\u9634\u5f71\u8d34\u56fe\u4e2d\u50a8\u5b58\u7684\u503c\uff0c\u5219\u5bf9\u8c61\u4f4d\u4e8e\u5149\u7167\u4e2d\uff0c\u5426\u5219\u4f4d\u4e8e\u9634\u5f71\u4e2d\u3002\u6211\u4eec\u53ef\u4ee5\u8ba9\u51e0\u4e2a\u7269\u4f53\u88ab\u540c\u4e00\u5149\u7167\u7167\u5c04\uff0c\u4f46\u6211\u4eec\u50a8\u5b58\u6700\u5c0f\u8ddd\u79bb\u3002 \u56e0\u6b64\uff0c\u9634\u5f71\u6620\u5c04\u5206\u4e3a\u4e24\u6b65\uff1a \u9996\u5148\uff0c\u6211\u4eec\u5c06\u573a\u666f\u4ece\u5149\u7167\u7a7a\u95f4\u6e32\u67d3\u4e3a\u9634\u5f71\u56fe\uff0c\u4ee5\u83b7\u5f97\u6700\u5c0f\u8ddd\u79bb\u3002 \u5176\u6b21\uff0c\u6211\u4eec\u4ece\u6444\u50cf\u673a\u7684\u89c6\u89d2\u6e32\u67d3\u573a\u666f\u3002\u5e76\u4f7f\u7528\u6df1\u5ea6\u56fe\u8ba1\u7b97\u5bf9\u8c61\u662f\u5426\u4f4d\u4e8e\u9634\u5f71\u4e2d\u3002 \u4e3a\u4e86\u6e32\u67d3\u6df1\u5ea6\u56fe\uff0c\u6211\u4eec\u9700\u8981\u8bf4\u8bf4\u6df1\u5ea6\u7f13\u51b2\u533a\uff08Depth-buffer\uff09\u3002\u5f53\u6211\u4eec\u6e32\u67d3\u4e00\u4e2a\u573a\u666f\u65f6\uff0c\u6240\u6709\u6df1\u5ea6\u4fe1\u606f\u90fd\u50a8\u5b58\u5728\u4e00\u4e2a\u540d\u4e3a\u201c\u6df1\u5ea6\u7f13\u51b2\u533a\u201d\uff08\u53c8\u79f0\u201cZ\u7f13\u51b2\u533a\uff08Z-buffer\uff09\u201d\uff09\u7684\u7f13\u51b2\u533a\u4e2d\u3002\u6df1\u5ea6\u4fe1\u606f\u662f\u6e32\u67d3\u7684\u6bcf\u4e2a\u7247\u5143\u7684 z \u503c\u3002\u5982\u679c\u4f60\u4ece\u7b2c\u4e00\u7ae0\u56de\u5fc6\u6211\u4eec\u5728\u6e32\u67d3\u573a\u666f\u65f6\uff0c\u5c06\u6b63\u5728\u6e32\u67d3\u7684\u573a\u666f\u4ece\u4e16\u754c\u5750\u6807\u8f6c\u6362\u4e3a\u5c4f\u5e55\u5750\u6807\u3002\u6211\u4eec\u6240\u7ed8\u5236\u7684\u5750\u6807\u7a7a\u95f4\uff0c\u5bf9\u4e8e x \u548c y \u8f74\u6765\u8bf4\uff0c\u5750\u6807\u7684\u8303\u56f4\u4e3a 0 \u5230 1 \u3002\u5982\u679c\u4e00\u4e2a\u7269\u4f53\u6bd4\u5176\u4ed6\u5bf9\u8c61\u539f\uff0c\u6211\u4eec\u5fc5\u987b\u901a\u8fc7\u900f\u89c6\u6295\u5f71\u77e9\u9635\u8ba1\u7b97\u5b83\u5982\u4f55\u5f71\u54cd\u5176 x \u548c y \u5750\u6807\u3002\u8fd9\u4e0d\u662f\u6839\u636e z \u503c\u81ea\u52a8\u8ba1\u7b97\u7684\uff0c\u5b83\u5fc5\u987b\u7531\u6211\u4eec\u6765\u505a\u3002\u5b9e\u9645\u50a8\u5b58\u5728 z \u5750\u6807\u4e2d\u7684\u662f\u5b83\u5728\u7247\u5143\u7684\u6df1\u5ea6\uff0c\u4ec5\u6b64\u800c\u5df2\u3002 \u6b64\u5916\uff0c\u5728\u6e90\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u542f\u7528\u4e86\u6df1\u5ea6\u6d4b\u8bd5\u3002\u5728 Window \u7c7b\u4e2d\uff0c\u6211\u4eec\u6dfb\u52a0\u5982\u4e0b\u884c\uff1a glEnable(GL_DEPTH_TEST); \u901a\u8fc7\u6dfb\u52a0\u8fd9\u884c\uff0c\u6211\u4eec\u53ef\u4ee5\u9632\u6b62\u65e0\u6cd5\u770b\u5230\u7684\u7247\u5143\u88ab\u7ed8\u5236\u51fa\u6765\uff0c\u56e0\u4e3a\u4ed6\u4eec\u4f4d\u4e8e\u5176\u4ed6\u5bf9\u8c61\u4e4b\u540e\u3002\u5728\u7ed8\u5236\u7247\u5143\u4e4b\u524d\uff0c\u5b83\u7684 z \u503c\u5c06\u4e0eZ\u7f13\u51b2\u533a\u4e2d\u7684 z \u503c\u8fdb\u884c\u6bd4\u8f83\u3002\u5982\u679c\u5b83\u7684 z \u503c\uff08\u5b83\u7684\u8ddd\u79bb\uff09\u5927\u4e8e\u7f13\u51b2\u533a\u7684 z \u503c\uff0c\u5219\u4f1a\u88ab\u4e22\u5f03\u3002\u8bf7\u8bb0\u4f4f\uff0c\u8fd9\u662f\u5728\u5c4f\u5e55\u7a7a\u95f4\u4e2d\u5b8c\u6210\u7684\uff0c\u56e0\u6b64\uff0c\u7ed9\u5b9a\u4e00\u5bf9\u5c4f\u5e55\u7a7a\u95f4\u4e2d\u8303\u56f4\u4e3a [0, 1] \u7684 x \u548c y \u5750\u6807\uff0c\u6211\u4eec\u6bd4\u8f83\u5176\u7247\u5143\u7684 z \u503c\u3002\u540c\u6837\uff0c z \u503c\u4e5f\u5728\u6b64\u8303\u56f4\u5185\u3002 \u6df1\u5ea6\u7f13\u51b2\u533a\u7684\u5b58\u5728\u662f\u6211\u4eec\u5728\u6267\u884c\u4efb\u4f55\u6e32\u67d3\u64cd\u4f5c\u4e4b\u524d\u9700\u8981\u6e05\u9664\u5c4f\u5e55\u7684\u539f\u56e0\u3002\u6211\u4eec\u4e0d\u4ec5\u9700\u8981\u6e05\u9664\u989c\u8272\uff0c\u8fd8\u8981\u6e05\u9664\u6df1\u5ea6\u4fe1\u606f\uff1a public void clear() { glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT); } \u4e3a\u4e86\u5f00\u59cb\u6784\u5efa\u6df1\u5ea6\u56fe\uff0c\u6211\u4eec\u5e0c\u671b\u4ece\u5149\u6e90\u7684\u89d2\u5ea6\u83b7\u5f97\u6df1\u5ea6\u4fe1\u606f\u3002\u6211\u4eec\u9700\u8981\u5728\u5149\u6e90\u4f4d\u7f6e\u8bbe\u7f6e\u4e00\u4e2a\u6444\u50cf\u5934\uff0c\u6e32\u67d3\u573a\u666f\u5e76\u5c06\u6df1\u5ea6\u4fe1\u606f\u50a8\u5b58\u5230\u7eb9\u7406\u4e2d\uff0c\u4ee5\u4fbf\u7a0d\u540e\u8bbf\u95ee\u5b83\u3002 \u56e0\u6b64\uff0c\u6211\u4eec\u9996\u5148\u9700\u8981\u505a\u7684\u662f\u6dfb\u52a0\u5bf9\u521b\u5efa\u8fd9\u4e9b\u7eb9\u7406\u7684\u652f\u6301\u3002\u6211\u4eec\u5c06\u4fee\u6539 Texture \u7c7b\uff0c\u901a\u8fc7\u6dfb\u52a0\u65b0\u7684\u6784\u9020\u51fd\u6570\u6765\u652f\u6301\u521b\u5efa\u7a7a\u7eb9\u7406\u3002\u6b64\u6784\u9020\u51fd\u6570\u9700\u8981\u7eb9\u7406\u7684\u5c3a\u5bf8\u4ee5\u53ca\u5b83\u50a8\u5b58\u7684\u50cf\u7d20\u7684\u683c\u5f0f\u3002 public Texture(int width, int height, int pixelFormat) throws Exception { this.id = glGenTextures(); this.width = width; this.height = height; glBindTexture(GL_TEXTURE_2D, this.id); glTexImage2D(GL_TEXTURE_2D, 0, GL_DEPTH_COMPONENT, this.width, this.height, 0, pixelFormat, GL_FLOAT, (ByteBuffer) null); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_CLAMP_TO_EDGE); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_CLAMP_TO_EDGE); } \u6211\u4eec\u5c06\u7eb9\u7406\u73af\u7ed5\u65b9\u5f0f\u8bbe\u7f6e\u4e3a GL_CLAMP_TO_EDGE \uff0c\u56e0\u4e3a\u6211\u4eec\u4e0d\u5e0c\u671b\u5728\u8d85\u51fa [0, 1] \u8303\u56f4\u65f6\u91cd\u590d\u7eb9\u7406\u3002 \u6240\u4ee5\uff0c\u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u521b\u5efa\u7a7a\u7684\u7eb9\u7406\uff0c\u6211\u4eec\u9700\u8981\u80fd\u591f\u5728\u5176\u4e2d\u6e32\u67d3\u4e00\u4e2a\u573a\u666f\u3002\u4e3a\u4e86\u505a\u5230\u5b83\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528\u5e27\u7f13\u51b2\u533a\u5bf9\u8c61\uff08Frame Buffers Objects\uff0c\u6216\u79f0FBOs\uff09\u3002\u5e27\u7f13\u51b2\u533a\u662f\u53ef\u4ee5\u4f5c\u4e3a\u6e32\u67d3\u7ec8\u70b9\u7684\u7f13\u51b2\u533a\u96c6\u5408\u3002\u5f53\u6211\u4eec\u6e32\u67d3\u5230\u5c4f\u5e55\u4e0a\u65f6\uff0c\u6211\u4eec\u4f7f\u7528\u7684\u662fOpenGL\u7684\u9ed8\u8ba4\u7f13\u51b2\u533a\u3002OpenGL\u5141\u8bb8\u6211\u4eec\u4f7f\u7528FBO\u6e32\u67d3\u5230\u7528\u6237\u5b9a\u4e49\u7684\u7f13\u51b2\u533a\u3002\u6211\u4eec\u5c06\u901a\u8fc7\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a ShadowMap \u7684\u65b0\u7c7b\uff0c\u6765\u9694\u79bb\u4e3a\u9634\u5f71\u6620\u5c04\u521b\u5efaFBO\u8fc7\u7a0b\u7684\u5176\u4f59\u4ee3\u7801\u3002\u5982\u4e0b\u5c31\u662f\u90a3\u4e2a\u7c7b\u7684\u5b9a\u4e49\u3002 package org.lwjglb.engine.graph; import static org.lwjgl.opengl.GL11.*; import static org.lwjgl.opengl.GL30.*; public class ShadowMap { public static final int SHADOW_MAP_WIDTH = 1024; public static final int SHADOW_MAP_HEIGHT = 1024; private final int depthMapFBO; private final Texture depthMap; public ShadowMap() throws Exception { // \u521b\u5efaFBO\u4ee5\u6e32\u67d3\u6df1\u5ea6\u56fe depthMapFBO = glGenFramebuffers(); // \u521b\u5efa\u6df1\u5ea6\u56fe\u7eb9\u7406 depthMap = new Texture(SHADOW_MAP_WIDTH, SHADOW_MAP_HEIGHT, GL_DEPTH_COMPONENT); // \u7ed1\u5b9a\u6df1\u5ea6\u56fe\u7eb9\u7406\u5230FBO glBindFramebuffer(GL_FRAMEBUFFER, depthMapFBO); glFramebufferTexture2D(GL_FRAMEBUFFER, GL_DEPTH_ATTACHMENT, GL_TEXTURE_2D, depthMap.getId(), 0); // \u4ec5\u8bbe\u7f6e\u6df1\u5ea6 glDrawBuffer(GL_NONE); glReadBuffer(GL_NONE); if (glCheckFramebufferStatus(GL_FRAMEBUFFER) != GL_FRAMEBUFFER_COMPLETE) { throw new Exception(\"Could not create FrameBuffer\"); } // \u89e3\u7ed1 glBindFramebuffer(GL_FRAMEBUFFER, 0); } public Texture getDepthMapTexture() { return depthMap; } public int getDepthMapFBO() { return depthMapFBO; } public void cleanup() { glDeleteFramebuffers(depthMapFBO); depthMap.cleanup(); } } ShadowMap \u7c7b\u5b9a\u4e49\u4e86\u4e24\u4e2a\u5e38\u91cf\uff0c\u7528\u4e8e\u786e\u5b9a\u50a8\u5b58\u6df1\u5ea6\u56fe\u7684\u7eb9\u7406\u7684\u5927\u5c0f\u3002\u5b83\u8fd8\u5b9a\u4e49\u4e86\u4e24\u4e2a\u5c5e\u6027\uff0c\u4e00\u4e2a\u7528\u4e8eFBO\uff0c\u4e00\u4e2a\u7528\u4e8e\u7eb9\u7406\u3002\u5728\u6784\u9020\u51fd\u6570\u4e2d\uff0c\u521b\u5efa\u4e00\u4e2a\u65b0\u7684FBO\u548c\u4e00\u4e2a\u65b0\u7684 Texture \u3002\u5bf9\u4e8eFBO\uff0c\u5c06\u4f7f\u7528\u5e38\u91cf GL_DEPTH_COMPONENT \u4f5c\u4e3a\u50cf\u7d20\u683c\u5f0f\uff0c\u56e0\u4e3a\u6211\u4eec\u53ea\u5bf9\u50a8\u5b58\u6df1\u5ea6\u503c\u611f\u5174\u8da3\uff0c\u7136\u540e\u5c06FBO\u7ed1\u5b9a\u5230\u7eb9\u7406\u5b9e\u4f8b\u3002 \u4ee5\u4e0b\u51e0\u884c\u4ee3\u7801\u663e\u5f0f\u5730\u5c06FBO\u8bbe\u7f6e\u4e3a\u4e0d\u6e32\u67d3\u4efb\u4f55\u989c\u8272\u3002FBO\u9700\u8981\u989c\u8272\u7f13\u51b2\u533a\uff0c\u4f46\u6211\u4eec\u4e0d\u9700\u8981\uff0c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u4eec\u5c06\u989c\u8272\u7f13\u51b2\u533a\u8bbe\u7f6e\u4e3a GL_NONE \u3002 glDrawBuffer(GL_NONE); glReadBuffer(GL_NONE); \u73b0\u5728\uff0c\u6211\u4eec\u51c6\u5907\u5728 Renderer \u7c7b\u4e2d\u5c06\u573a\u666f\u4ece\u706f\u5149\u900f\u89c6\u6e32\u67d3\u4e3aFBO\u3002\u4e3a\u4e86\u505a\u5230\u5b83\uff0c\u6211\u4eec\u5c06\u521b\u5efa\u4e00\u7ec4\u7279\u6b8a\u7684\u9876\u70b9\u548c\u7247\u5143\u7740\u8272\u5668\u3002 \u540d\u4e3a depth_vertex.vs \u7684\u9876\u70b9\u7740\u8272\u5668\u7684\u5b9a\u4e49\u5982\u4e0b\uff1a #version 330 layout (location=0) in vec3 position; layout (location=1) in vec2 texCoord; layout (location=2) in vec3 vertexNormal; uniform mat4 modelLightViewMatrix; uniform mat4 orthoProjectionMatrix; void main() { gl_Position = orthoProjectionMatrix * modelLightViewMatrix * vec4(position, 1.0f); } \u6211\u4eec\u5e0c\u671b\u63a5\u6536\u4e0e\u573a\u666f\u7740\u8272\u5668\u76f8\u540c\u7684\u8f93\u5165\u6570\u636e\u3002\u4f46\u5b9e\u9645\u4e0a\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5750\u6807\uff0c\u4f46\u662f\u4e3a\u4e86\u5c3d\u53ef\u80fd\u591a\u5730\u91cd\u7528\u4ee3\u7801\uff0c\u6211\u4eec\u8fd8\u662f\u8981\u4f20\u9001\u5176\u4ed6\u6570\u636e\u3002\u6211\u4eec\u8fd8\u9700\u8981\u4e00\u5bf9\u77e9\u9635\u3002\u8bb0\u4f4f\uff0c\u6211\u4eec\u5fc5\u987b\u4ee5\u5149\u6e90\u7684\u89d2\u5ea6\u6e32\u67d3\u573a\u666f\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5c06\u6a21\u578b\u8f6c\u6362\u5230\u5149\u6e90\u7684\u5750\u6807\u7a7a\u95f4\u3002\u8fd9\u662f\u901a\u8fc7 modelLightViewMatrix \u77e9\u9635\u5b8c\u6210\u7684\uff0c\u8be5\u77e9\u9635\u7c7b\u4f3c\u4e8e\u7528\u4e8e\u6444\u50cf\u673a\u7684\u6a21\u578b\u89c2\u5bdf\u77e9\u9635\u3002\u73b0\u5728\u5149\u6e90\u662f\u6211\u4eec\u7684\u6444\u50cf\u673a\u3002 \u7136\u540e\u6211\u4eec\u9700\u8981\u5c06\u8fd9\u4e9b\u5750\u6807\u8f6c\u6362\u5230\u5c4f\u5e55\u7a7a\u95f4\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u9700\u8981\u6295\u5f71\u5b83\u4eec\u3002\u8fd9\u662f\u8ba1\u7b97\u5e73\u884c\u5149\u4e0e\u70b9\u5149\u6e90\u7684\u9634\u5f71\u56fe\u65f6\u7684\u533a\u522b\u4e4b\u4e00\u3002\u5bf9\u4e8e\u5730\u6602\u626c\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u900f\u89c6\u6295\u5f71\uff08Perspective Projection\uff09\u77e9\u9635\uff0c\u5c31\u50cf\u6211\u4eec\u6b63\u5e38\u6e32\u67d3\u573a\u666f\u4e00\u6837\u3002\u76f8\u53cd\uff0c\u5e73\u884c\u5149\u4ee5\u76f8\u540c\u65b9\u5f0f\u5f71\u54cd\u6240\u6709\u5bf9\u8c61\uff0c\u800c\u4e0e\u8ddd\u79bb\u65e0\u5173\u3002\u5e73\u884c\u5149\u6e90\u4f4d\u4e8e\u65e0\u7a77\u8fdc\u7684\u70b9\u4e0a\uff0c\u6ca1\u6709\u4f4d\u7f6e\uff0c\u53ea\u6709\u65b9\u5411\u3002\u6b63\u4ea4\u6295\u5f71\uff08Orthographic Projection\uff09\u4e0d\u4f1a\u4f7f\u8fdc\u5904\u7684\u7269\u4f53\u53d8\u5c0f\uff0c\u56e0\u6b64\uff0c\u6b63\u4ea4\u6295\u5f71\u6700\u9002\u5408\u5e73\u884c\u5149\u3002 \u7247\u5143\u7740\u8272\u5668\u66f4\u7b80\u5355\u3002\u5b83\u53ea\u8f93\u51fa z \u5750\u6807\u4f5c\u4e3a\u6df1\u5ea6\u503c\u3002 #version 330 void main() { gl_FragDepth = gl_FragCoord.z; } \u5b9e\u9645\u4e0a\uff0c\u4f60\u53ef\u4ee5\u5220\u6389\u8be5\u884c\uff0c\u56e0\u4e3a\u6211\u4eec\u53ea\u751f\u6210\u6df1\u5ea6\u503c\uff0c\u6df1\u5ea6\u503c\u5c06\u81ea\u52a8\u8fd4\u56de\u3002 \u4e00\u65e6\u6211\u4eec\u4e3a\u6df1\u5ea6\u6e32\u67d3\u5b9a\u4e49\u4e86\u65b0\u7684\u7740\u8272\u5668\uff0c\u5c31\u53ef\u4ee5\u5728 Renderer \u7c7b\u4e2d\u4f7f\u7528\u5b83\u4eec\u3002\u6211\u4eec\u4e3a\u521d\u59cb\u5316\u8fd9\u4e9b\u7740\u8272\u5668\u5b9a\u4e49\u4e86\u4e00\u4e2a\u65b0\u65b9\u6cd5\uff0c\u540d\u4e3a setupDepthShader \uff0c\u5b83\u5c06\u5728\u5176\u4ed6\u7740\u8272\u5668\u88ab\u521d\u59cb\u5316\u65f6\u8c03\u7528\u3002 private void setupDepthShader() throws Exception { depthShaderProgram = new ShaderProgram(); depthShaderProgram.createVertexShader(Utils.loadResource(\"/shaders/depth_vertex.vs\")); depthShaderProgram.createFragmentShader(Utils.loadResource(\"/shaders/depth_fragment.fs\")); depthShaderProgram.link(); depthShaderProgram.createUniform(\"orthoProjectionMatrix\"); depthShaderProgram.createUniform(\"modelLightViewMatrix\"); } \u73b0\u5728\uff0c\u6211\u4eec\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u65b9\u6cd5\uff0c\u4f7f\u7528\u90a3\u4e9b\u540d\u4e3a renderDepthMap \u7684\u7740\u8272\u5668\u3002\u8be5\u65b9\u6cd5\u5c06\u5728\u4e3b\u6e32\u67d3\u65b9\u6cd5\u4e2d\u8c03\u7528\u3002 public void render(Window window, Camera camera, Scene scene, IHud hud) { clear(); // \u5728\u8bbe\u7f6e\u89c6\u53e3\u4e4b\u524d\u6e32\u67d3\u6df1\u5ea6\u56fe renderDepthMap(window, camera, scene); glViewport(0, 0, window.getWidth(), window.getHeight()); // \u5176\u4f59\u7684\u4ee3\u7801\u5728\u8fd9... \u5982\u679c\u4f60\u6d4f\u89c8\u4e0a\u8ff0\u4ee3\u7801\uff0c\u5c06\u770b\u5230\u5728\u8bbe\u7f6e\u89c6\u53e3\u4e4b\u524d\uff0c\u65b0\u65b9\u6cd5\u5c31\u5df2\u7ecf\u88ab\u8c03\u7528\u3002\u8fd9\u662f\u56e0\u4e3a\u8fd9\u4e2a\u65b0\u65b9\u6cd5\u5c06\u66f4\u9ad8\u89c6\u53e3\u4ee5\u5339\u914d\u4fdd\u5b58\u6df1\u5ea6\u56fe\u7684\u7eb9\u7406\u7684\u5c3a\u5bf8\u3002\u56e0\u6b64\uff0c\u5728\u5b8c\u6210 renderDepthMap \u4e4b\u540e\uff0c\u6211\u4eec\u5c06\u59cb\u7ec8\u9700\u8981\u8bbe\u7f6e\u5c4f\u5e55\u5c3a\u5bf8\u7684\u89c6\u53e3\uff08\u4e0d\u68c0\u67e5\u7a97\u53e3\u662f\u5426\u5df2\u8c03\u6574\u5927\u5c0f\uff09\u3002 \u73b0\u5728\u8ba9\u6211\u4eec\u5b9a\u4e49\u4e00\u4e0b renderDepthMap \u65b9\u6cd5\u3002\u7b2c\u4e00\u4ef6\u4e8b\u662f\u7ed1\u5b9a\u5728 ShadowMap \u7c7b\u4e2d\u521b\u5efa\u7684FBO\uff0c\u5e76\u8bbe\u7f6e\u89c6\u53e3\u4ee5\u5339\u914d\u7eb9\u7406\u5c3a\u5bf8\u3002 glBindFramebuffer(GL_FRAMEBUFFER, shadowMap.getDepthMapFBO()); glViewport(0, 0, ShadowMap.SHADOW_MAP_WIDTH, ShadowMap.SHADOW_MAP_HEIGHT); \u7136\u540e\uff0c\u6e05\u9664\u6df1\u5ea6\u7f13\u51b2\u533a\u5185\u5bb9\u5e76\u7ed1\u5b9a\u6df1\u5ea6\u7740\u8272\u5668\u3002\u56e0\u4e3a\u6211\u4eec\u53ea\u5904\u7406\u6df1\u5ea6\u503c\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u6e05\u9664\u989c\u8272\u4fe1\u606f\u3002 glClear(GL_DEPTH_BUFFER_BIT); depthShaderProgram.bind(); \u73b0\u5728\u6211\u4eec\u9700\u8981\u8bbe\u7f6e\u77e9\u9635\uff0c\u63a5\u4e0b\u6765\u662f\u68d8\u624b\u7684\u90e8\u5206\u3002\u6211\u4eec\u4f7f\u7528\u5149\u6e90\u4f5c\u4e3a\u6444\u50cf\u673a\uff0c\u6240\u4ee5\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u9700\u8981\u4e00\u4e2a\u5750\u6807\u548c\u4e09\u4e2a\u89d2\u7684\u89c2\u5bdf\u77e9\u9635\u3002\u6b63\u5982\u672c\u7ae0\u5f00\u5934\u6240\u8bf4\uff0c\u6211\u4eec\u53ea\u5b9e\u73b0\u5e73\u884c\u5149\uff0c\u8fd9\u79cd\u7c7b\u578b\u7684\u5149\u4e0d\u5b9a\u4e49\u4f4d\u7f6e\uff0c\u800c\u662f\u5b9a\u4e49\u65b9\u5411\u3002\u5982\u679c\u6211\u4eec\u4f7f\u7528\u70b9\u5149\u6e90\uff0c\u8fd9\u5f88\u5bb9\u6613\uff0c\u5149\u6e90\u7684\u4f4d\u7f6e\u5c31\u662f\u89c2\u5bdf\u77e9\u9635\u7684\u4f4d\u7f6e\uff0c\u4f46\u6211\u4eec\u6ca1\u6709\u4f4d\u7f6e\u3002 \u6211\u4eec\u5c06\u91c7\u7528\u4e00\u79cd\u7b80\u5355\u7684\u65b9\u6cd5\u6765\u8ba1\u7b97\u5149\u7684\u4f4d\u7f6e\u3002\u5e73\u884c\u5149\u662f\u7531\u4e00\u4e2a\u5411\u91cf\u5b9a\u4e49\u7684\uff0c\u901a\u5e38\u662f\u5f52\u4e00\u5316\u7684\uff0c\u5b83\u6307\u5411\u5149\u6e90\u6240\u5728\u7684\u65b9\u5411\u3002\u6211\u4eec\u628a\u8fd9\u4e2a\u65b9\u5411\u5411\u91cf\u4e58\u4ee5\u4e00\u4e2a\u53ef\u914d\u7f6e\u7684\u56e0\u5b50\uff0c\u5728\u8fd9\u6837\u5b83\u5c31\u4e3a\u8981\u7ed8\u5236\u7684\u573a\u666f\u5b9a\u4e49\u4e86\u4e00\u4e2a\u5408\u7406\u8ddd\u79bb\u7684\u70b9\u3002\u6211\u4eec\u5c06\u4f7f\u7528\u8be5\u65b9\u5411\u6765\u8ba1\u7b97\u8be5\u89c2\u5bdf\u77e9\u9635\u7684\u65cb\u8f6c\u89d2\u5ea6\u3002 \u8fd9\u662f\u8ba1\u7b97\u706f\u5149\u4f4d\u7f6e\u4e0e\u65cb\u8f6c\u89d2\u5ea6\u7684\u4ee3\u7801\u7247\u6bb5\uff1a float lightAngleX = (float)Math.toDegrees(Math.acos(lightDirection.z)); float lightAngleY = (float)Math.toDegrees(Math.asin(lightDirection.x)); float lightAngleZ = 0; Matrix4f lightViewMatrix = transformation.updateLightViewMatrix(new Vector3f(lightDirection).mul(light.getShadowPosMult()), new Vector3f(lightAngleX, lightAngleY, lightAngleZ)); \u63a5\u4e0b\u6211\u4eec\u9700\u8981\u8ba1\u7b97\u6b63\u4ea4\u6295\u5f71\u77e9\u9635\uff1a Matrix4f orthoProjMatrix = transformation.updateOrthoProjectionMatrix(orthCoords.left, orthCoords.right, orthCoords.bottom, orthCoords.top, orthCoords.near, orthCoords.far); \u6211\u4eec\u5df2\u7ecf\u4fee\u6539\u4e86 Transformation \u7c7b\uff0c\u4ee5\u56ca\u62ec\u5149\u7167\u89c2\u5bdf\u77e9\u9635\u548c\u6b63\u4ea4\u6295\u5f71\u77e9\u9635\u3002\u6b64\u4eec\u6709\u4e00\u4e2a\u6b63\u4ea4\u7684\u4e8c\u7ef4\u6295\u5f71\u77e9\u9635\uff0c\u6240\u4ee5\u6211\u4eec\u91cd\u547d\u540d\u4e86\u6b64\u524d\u7684\u65b9\u6cd5\u548c\u5c5e\u6027\uff0c\u4f60\u53ef\u4ee5\u76f4\u63a5\u67e5\u770b\u6e90\u4ee3\u7801\u4e2d\u7684\u5b9a\u4e49\u3002 \u7136\u540e\uff0c\u6211\u4eec\u6309\u7167 renderScene \u65b9\u6cd5\u6e32\u67d3\u573a\u666f\u5bf9\u8c61\uff0c\u4f46\u5728\u5149\u7167\u7a7a\u95f4\u5750\u6807\u7cfb\u4e2d\u4f7f\u7528\u4e0a\u8ff0\u77e9\u9635\u5de5\u4f5c\u3002 depthShaderProgram.setUniform(\"orthoProjectionMatrix\", orthoProjMatrix); Map<Mesh, List<GameItem>> mapMeshes = scene.getGameMeshes(); for (Mesh mesh : mapMeshes.keySet()) { mesh.renderList(mapMeshes.get(mesh), (GameItem gameItem) -> { Matrix4f modelLightViewMatrix = transformation.buildModelViewMatrix(gameItem, lightViewMatrix); depthShaderProgram.setUniform(\"modelLightViewMatrix\", modelLightViewMatrix); } ); } // \u89e3\u7ed1 depthShaderProgram.unbind(); glBindFramebuffer(GL_FRAMEBUFFER, 0); \u6b63\u4ea4\u6295\u5f71\u77e9\u9635\u7684\u53c2\u6570\u662f\u5728\u5e73\u884c\u5149\u4e2d\u5b9a\u4e49\u7684\u3002\u5c06\u6b63\u4ea4\u6295\u5f71\u77e9\u9635\u60f3\u8c61\u4e3a\u4e00\u4e2a\u8fb9\u754c\u6846\uff0c\u5176\u4e2d\u5305\u542b\u6211\u4eec\u8981\u6e32\u67d3\u7684\u6240\u6709\u5bf9\u8c61\u3002\u5f53\u53ea\u6295\u5f71\u9002\u5408\u8be5\u8fb9\u754c\u6846\u7684\u5bf9\u8c61\u65f6\uff0c\u5bf9\u8c61\u5c06\u53ef\u89c6\u3002\u8be5\u8fb9\u754c\u6846\u75316\u4e2a\u53c2\u6570\u5b9a\u4e49\uff1a\u5de6\u3001\u53f3\u3001\u4e0a\u3001\u4e0b\u3001\u8fd1\u3001\u8fdc\u3002\u7531\u4e8e\u5149\u6e90\u4f4d\u7f6e\u73b0\u5728\u662f\u539f\u70b9\uff0c\u56e0\u6b64\u8fd9\u4e9b\u53c2\u6570\u5b9a\u4e49\u4e3a\u539f\u70b9\u5230\u5de6\u6216\u53f3\uff08x\u8f74\uff09\u6216\u4e0a\u6216\u4e0b\uff08y\u8f74\uff09\u6216\u8fdc\u6216\u8fd1\uff08z\u8f74\uff09\u7684\u8ddd\u79bb\u3002 \u8981\u4f7f\u9634\u5f71\u56fe\u6b63\u5e38\u5de5\u4f5c\uff0c\u6700\u68d8\u624b\u7684\u4e00\u70b9\u662f\u786e\u5b9a\u706f\u5149\u4f4d\u7f6e\u548c\u6b63\u4ea4\u6295\u5f71\u77e9\u9635\u7684\u53c2\u6570\u3002\u8fd9\u5c31\u662f\u6240\u6709\u8fd9\u4e9b\u53c2\u6570\u73b0\u5728\u5728 DirectionalLight \u7c7b\u4e2d\u5b9a\u4e49\u7684\u65b9\u5f0f\uff0c\u56e0\u6b64\u53ef\u4ee5\u6839\u636e\u6bcf\u4e2a\u573a\u666f\u6b63\u786e\u8bbe\u7f6e\u8fd9\u4e9b\u53c2\u6570\u3002 \u4f60\u53ef\u4ee5\u5b9e\u73b0\u4e00\u4e2a\u66f4\u81ea\u52a8\u7684\u65b9\u6cd5\uff0c\u901a\u8fc7\u8ba1\u7b97\u6444\u50cf\u673a\u622a\u9525\uff08Frustum\uff09\u7684\u4e2d\u5fc3\uff0c\u56de\u5230\u5149\u7684\u65b9\u5411\uff0c\u5efa\u7acb\u4e00\u4e2a\u5305\u542b\u573a\u666f\u4e2d\u6240\u6709\u5bf9\u8c61\u7684\u6b63\u4ea4\u6295\u5f71\u3002\u4e0b\u56fe\u5c55\u793a\u4e86\u5982\u4e0a\u6240\u8ff0\u7684\u4e09\u7ef4\u573a\u666f\u3001\u76f8\u673a\u4f4d\u7f6e\u3001\u622a\u9525\uff08\u84dd\u8272\uff09\u3001\u6700\u4f73\u5149\u6e90\u4f4d\u7f6e\u4ee5\u53ca\u7ea2\u8272\u7684\u8fb9\u754c\u6846\u3002 \u4e0a\u8ff0\u65b9\u6cd5\u7684\u95ee\u9898\u662f\u5f88\u96be\u8ba1\u7b97\uff0c\u5982\u679c\u4f60\u6709\u5f88\u5c0f\u7684\u7269\u4f53\uff0c\u5e76\u4e14\u8fb9\u754c\u6846\u5f88\u5927\uff0c\u4f60\u53ef\u4ee5\u4f1a\u5f97\u5230\u5947\u602a\u7684\u7ed3\u679c\u3002\u8fd9\u91cc\u4ecb\u7ecd\u7684\u65b9\u6cd5\u5bf9\u4e8e\u5c0f\u573a\u666f\u66f4\u7b80\u5355\uff0c\u4f60\u53ef\u4ee5\u8c03\u6574\u5b83\u4ee5\u5339\u914d\u4f60\u7684\u6a21\u578b\uff08\u5373\u4f7f\u4f60\u53ef\u4ee5\u9009\u62e9\u663e\u5f0f\u8bbe\u7f6e\u706f\u5149\u7684\u4f4d\u7f6e\uff0c\u4ee5\u907f\u514d\u76f8\u673a\u8fdc\u79bb\u539f\u70b9\u79fb\u52a8\u65f6\u4ea7\u751f\u5947\u602a\u7684\u6548\u679c\uff09\u3002\u5982\u679c\u4f60\u60f3\u8981\u4e00\u4e2a\u66f4\u901a\u7528\u7684\u6a21\u677f\uff0c\u53ef\u4ee5\u5e94\u7528\u5230\u4efb\u4f55\u573a\u666f\uff0c\u4f60\u5e94\u8be5\u6269\u5c55\u5b83\uff0c\u4ee5\u652f\u6301\u5c42\u53e0\u9634\u5f71\u56fe\u3002 \u8ba9\u6211\u4eec\u7ee7\u7eed\u3002\u5728\u4f7f\u7528\u6df1\u5ea6\u56fe\u5b9e\u9645\u8ba1\u7b97\u9634\u5f71\u4e4b\u524d\uff0c\u53ef\u4ee5\u4f7f\u7528\u751f\u6210\u7684\u7eb9\u7406\u6e32\u67d3\u4e00\u4e2a\u6b63\u65b9\u5f62\uff0c\u4ee5\u89c2\u5bdf\u6df1\u5ea6\u56fe\u7684\u5b9e\u9645\u5916\u89c2\u3002\u5728\u6709\u4e00\u4e2a\u65cb\u8f6c\u7acb\u65b9\u4f53\u6f02\u6d6e\u5728\u4e00\u4e2a\u6709\u5782\u76f4\u5e73\u884c\u5149\u7684\u5e73\u9762\u4e0a\u7684\u573a\u666f\u4e2d\uff0c\u4f60\u53ef\u4ee5\u5f97\u5230\u5982\u4e0b\u7ed3\u679c\u3002 \u5982\u4e0a\u6240\u8ff0\uff0c\u989c\u8272\u8d8a\u6df1\uff0c\u79bb\u5149\u6e90\u7684\u4f4d\u7f6e\u8d8a\u8fd1\u3002\u6df1\u5ea6\u56fe\u4e2d\u5149\u6e90\u4f4d\u7f6e\u7684\u5f71\u54cd\u662f\u4ec0\u4e48\uff1f\u4f60\u53ef\u4ee5\u4fee\u6539\u5e73\u884c\u5149\u7167\u7684\u500d\u589e\u56e0\u5b50\uff0c\u5c06\u770b\u5230\u5728\u7eb9\u7406\u4e2d\u6e32\u67d3\u7684\u5bf9\u8c61\u7684\u5927\u5c0f\u4e0d\u4f1a\u53d8\u5c0f\u3002\u8bb0\u4f4f\uff0c\u6211\u4eec\u4f7f\u7528\u7684\u662f\u6b63\u4ea4\u6295\u5f71\u77e9\u9635\uff0c\u7269\u4f53\u4e0d\u4f1a\u968f\u7740\u8ddd\u79bb\u589e\u5927\u800c\u53d8\u5c0f\u3002\u4f60\u5c06\u770b\u5230\u7684\u662f\uff0c\u6240\u6709\u7684\u989c\u8272\u90fd\u4f1a\u53d8\u5f97\u66f4\u4eae\uff0c\u5982\u4e0b\u6240\u793a\uff1a \u8fd9\u662f\u5426\u610f\u5473\u7740\u6211\u4eec\u53ef\u4ee5\u4e3a\u5149\u6e90\u9009\u62e9\u4e00\u4e2a\u8f83\u8fdc\u7684\u4f4d\u7f6e\u800c\u4e0d\u9020\u6210\u4efb\u4f55\u540e\u679c\u5462\uff1f\u7b54\u6848\u662f\u4e0d\u884c\u3002\u5982\u679c\u5149\u6e90\u79bb\u6211\u4eec\u8981\u6e32\u67d3\u7684\u5bf9\u8c61\u592a\u8fdc\uff0c\u8fd9\u4e9b\u5bf9\u8c61\u4f1a\u8d85\u51fa\u6b63\u4ea4\u6295\u5f71\u77e9\u9635\u5b9a\u4e49\u7684\u8fb9\u754c\u6846\u3002\u5728\u6b64\u60c5\u51b5\u4e0b\uff0c\u4f60\u4f1a\u5f97\u5230\u4e00\u4e2a\u4e0d\u9519\u7684\u767d\u8272\u7eb9\u7406\uff0c\u4f46\u8fd9\u662f\u6ca1\u7528\u7684\u9634\u5f71\u56fe\u3002\u597d\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u589e\u52a0\u8fb9\u754c\u6846\u7684\u5927\u5c0f\uff0c\u4e00\u5207\u90fd\u4f1a\u597d\u7684\uff0c\u5bf9\u5417\uff1f\u7b54\u6848\u4e5f\u662f\u4e0d\u884c\u3002\u5982\u679c\u4f60\u4e3a\u6b63\u4ea4\u6295\u5f71\u77e9\u9635\u9009\u7528\u4e86\u5de8\u5927\u7684\u5c3a\u5bf8\uff0c\u4f60\u7684\u7269\u4f53\u5728\u7eb9\u7406\u4e2d\u4f1a\u88ab\u7ed8\u5236\u5f97\u5f88\u5c0f\uff0c\u6df1\u5ea6\u503c\u751a\u81f3\u4f1a\u91cd\u53e0\uff0c\u9020\u6210\u5947\u602a\u7684\u7ed3\u679c\u3002\u597d\u5427\uff0c\u6240\u4ee5\u4f60\u53ef\u4ee5\u8003\u8651\u589e\u52a0\u7eb9\u7406\u5927\u5c0f\uff0c\u4f46\u5728\u6b64\u60c5\u51b5\u4e0b\uff0c\u4f60\u662f\u6709\u9650\u5236\u7684\uff0c\u7eb9\u7406\u4e0d\u80fd\u56e0\u4f7f\u7528\u5de8\u5927\u7684\u7f16\u8f91\u6846\u800c\u65e0\u9650\u589e\u5927\u3002 \u56e0\u6b64\uff0c\u53ef\u4ee5\u770b\u5230\uff0c\u9009\u62e9\u5149\u6e90\u7684\u4f4d\u7f6e\u548c\u6b63\u4ea4\u6295\u5f71\u7684\u53c2\u6570\u662f\u4e00\u4e2a\u590d\u6742\u7684\u5e73\u8861\uff0c\u8fd9\u4f7f\u5f97\u4f7f\u7528\u9634\u5f71\u56fe\u5f88\u96be\u5f97\u5230\u6b63\u786e\u7684\u6548\u679c\u3002 \u8ba9\u6211\u4eec\u56de\u5230\u6e32\u67d3\u8fc7\u7a0b\uff0c\u4e00\u65e6\u8ba1\u7b97\u4e86\u6df1\u5ea6\u56fe\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5728\u6e32\u67d3\u573a\u666f\u65f6\u4f7f\u7528\u5b83\u3002\u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u4fee\u6539\u573a\u666f\u7684\u9876\u70b9\u7740\u8272\u5668\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u9876\u70b9\u7740\u8272\u5668\u4f7f\u7528\u900f\u89c6\u77e9\u9635\u5c06\u9876\u70b9\u5750\u6807\u4ece\u6a21\u578b\u89c2\u5bdf\u7a7a\u95f4\u6295\u5f71\u5230\u5c4f\u5e55\u7a7a\u95f4\u3002\u73b0\u5728\u8fd8\u9700\u8981\u4f7f\u7528\u6295\u5f71\u77e9\u9635\u4ece\u5149\u7167\u7a7a\u95f4\u5750\u6807\u6295\u5f71\u9876\u70b9\u5750\u6807\uff0c\u4ee5\u7528\u4e8e\u7247\u5143\u7740\u8272\u5668\u4e2d\u8ba1\u7b97\u9634\u5f71\u3002 \u9876\u70b9\u7740\u8272\u5668\u662f\u8fd9\u6837\u4fee\u6539\u7684\uff1a #version 330 layout (location=0) in vec3 position; layout (location=1) in vec2 texCoord; layout (location=2) in vec3 vertexNormal; out vec2 outTexCoord; out vec3 mvVertexNormal; out vec3 mvVertexPos; out vec4 mlightviewVertexPos; out mat4 outModelViewMatrix; uniform mat4 modelViewMatrix; uniform mat4 projectionMatrix; uniform mat4 modelLightViewMatrix; uniform mat4 orthoProjectionMatrix; void main() { vec4 mvPos = modelViewMatrix * vec4(position, 1.0); gl_Position = projectionMatrix * mvPos; outTexCoord = texCoord; mvVertexNormal = normalize(modelViewMatrix * vec4(vertexNormal, 0.0)).xyz; mvVertexPos = mvPos.xyz; mlightviewVertexPos = orthoProjectionMatrix * modelLightViewMatrix * vec4(position, 1.0); outModelViewMatrix = modelViewMatrix; } \u6211\u4eec\u4e3a\u5149\u7167\u89c2\u5bdf\u77e9\u9635\u548c\u6b63\u4ea4\u6295\u5f71\u77e9\u9635\u4f7f\u7528\u4e86\u65b0\u7684Uniform\u3002 \u5728\u7247\u5143\u7740\u8272\u5668\u4e2d\uff0c\u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u51fd\u6570\u6765\u8ba1\u7b97\u9634\u5f71\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a float calcShadow(vec4 position) { float shadowFactor = 1.0; vec3 projCoords = position.xyz; // \u4ece\u5c4f\u5e55\u5750\u6807\u53d8\u6362\u5230\u7eb9\u7406\u5750\u6807 projCoords = projCoords * 0.5 + 0.5; if ( projCoords.z < texture(shadowMap, projCoords.xy).r ) { // \u5f53\u524d\u7247\u5143\u4e0d\u5728\u9634\u5f71\u4e2d shadowFactor = 0; } return 1 - shadowFactor; } \u8be5\u51fd\u6570\u63a5\u6536\u4f7f\u7528\u6b63\u4ea4\u6295\u5f71\u77e9\u9635\u6295\u5f71\u7684\u5149\u7167\u89c2\u5bdf\u7a7a\u95f4\u7684\u5750\u6807\u3002\u5982\u679c\u5750\u6807\u5728\u9634\u5f71\u4e2d\uff0c\u5219\u8fd4\u56de 0 \uff0c\u5982\u679c\u4e0d\u5728\u9634\u5f71\u4e2d\uff0c\u5219\u8fd4\u56de 1 \u3002\u9996\u5148\uff0c\u5c06\u5750\u6807\u8f6c\u6362\u4e3a\u7eb9\u7406\u5750\u6807\u3002\u5c4f\u5e55\u5750\u6807\u5728 [-1, 1] \u8303\u56f4\u5185\uff0c\u4f46\u7eb9\u7406\u5750\u6807\u5728 [0, 1] \u8303\u56f4\u5185\u3002\u6211\u4eec\u901a\u8fc7\u5750\u6807\u4ece\u7eb9\u7406\u4e2d\u83b7\u53d6\u6df1\u5ea6\u503c\uff0c\u5e76\u5c06\u5176\u4e0e\u7247\u5143\u5750\u6807\u7684 z \u503c\u6bd4\u8f83\u3002\u5982\u679c z \u503c\u4f4e\u4e8e\u50a8\u5b58\u5728\u7eb9\u7406\u4e2d\u7684\u503c\uff0c\u5219\u8868\u793a\u7247\u5143\u4e0d\u518d\u9634\u5f71\u4e2d\u3002 \u5728\u7247\u5143\u7740\u8272\u5668\u4e2d\uff0c calcShadow \u51fd\u6570\u7684\u8fd4\u56de\u503c\uff0c\u7528\u4e8e\u8c03\u8282\u70b9\u5149\u6e90\u3001\u805a\u5149\u6e90\u548c\u5e73\u884c\u5149\u5bf9\u5149\u7167\u989c\u8272\u7684\u5171\u4eab\u3002\u73af\u5883\u5149\u4e0d\u53d7\u9634\u5f71\u7684\u5f71\u54cd\u3002 float shadow = calcShadow(mlightviewVertexPos); fragColor = clamp(ambientC * vec4(ambientLight, 1) + diffuseSpecularComp * shadow, 0, 1); \u5728 Renderer \u7c7b\u7684 renderScene \u65b9\u6cd5\u4e2d\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4f20\u9012\u6b63\u4ea4\u6295\u5f71\u548c\u5149\u7167\u89c2\u5bdf\u77e9\u9635\u5230Uniform\uff08\u6211\u4eec\u8fd8\u9700\u8981\u4fee\u6539\u7740\u8272\u5668\u7684\u521d\u59cb\u5316\u65b9\u6cd5\u4ee5\u521b\u5efa\u65b0\u7684Uniform\uff09\u3002\u4f60\u53ef\u4ee5\u5728\u672c\u4e66\u7684\u6e90\u4ee3\u7801\u4e2d\u4e86\u89e3\u3002 \u5982\u679c\u8fd0\u884c DummyGame \u7c7b\uff0c\u8be5\u7c7b\u5df2\u88ab\u4fee\u6539\u4e3a\u5728\u5e26\u6709\u5e73\u884c\u5149\u7684\u5e73\u9762\u4e0a\u8bbe\u7f6e\u6709\u60ac\u6d6e\u7684\u7acb\u65b9\u4f53\uff0c\u5e76\u53ef\u4f7f\u7528\u4e0a\u4e0b\u952e\u4fee\u6539\u89d2\u5ea6\uff0c\u5219\u5e94\u8be5\u770b\u5230\u5982\u4e0b\u60c5\u51b5\u3002 \u867d\u7136\u9634\u5f71\u5df2\u7ecf\u5de5\u4f5c\u4e86\uff08\u4f60\u53ef\u4ee5\u901a\u8fc7\u79fb\u52a8\u5149\u7167\u65b9\u5411\u6765\u68c0\u67e5\uff09\uff0c\u4f46\u662f\u5b9e\u9645\u4f1a\u51fa\u73b0\u4e00\u4e9b\u95ee\u9898\u3002\u9996\u5148\uff0c\u88ab\u7167\u4eae\u7684\u7269\u4f53\u4e2d\u6709\u5947\u602a\u7684\u7ebf\u6761\u3002\u8fd9\u79cd\u60c5\u51b5\u88ab\u79f0\u4e3a\u9634\u5f71\u5931\u771f\uff08Shadow Acne\uff09\uff0c\u5b83\u662f\u7531\u50a8\u5b58\u6df1\u5ea6\u56fe\u7684\u7eb9\u7406\u7684\u5206\u8fa8\u7387\u6709\u9650\u9020\u6210\u7684\u3002\u7b2c\u4e8c\u4e2a\u95ee\u9898\u662f\uff0c\u9634\u5f71\u7684\u8fb9\u754c\u4e0d\u5e73\u6ed1\uff0c\u770b\u8d77\u6765\u5f88\u7c97\u7cd9\u3002\u539f\u56e0\u540c\u6837\uff0c\u7eb9\u7406\u5206\u8fa8\u7387\u3002\u6211\u4eec\u5c06\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\uff0c\u4ee5\u63d0\u9ad8\u9634\u5f71\u8d28\u91cf\u3002 \u6539\u8fdb\u9634\u5f71\u6620\u5c04 \u65e2\u7136\u6211\u4eec\u5df2\u7ecf\u6709\u4e86\u9634\u5f71\u6620\u5c04\u673a\u5236\uff0c\u90a3\u4e48\u8ba9\u6211\u4eec\u6765\u89e3\u51b3\u73b0\u6709\u7684\u95ee\u9898\u3002\u6211\u4eec\u5148\u4ece\u5931\u771f\u95ee\u9898\u5f00\u59cb\u3002\u6df1\u5ea6\u56fe\u7eb9\u7406\u5927\u5c0f\u6709\u9650\uff0c\u56e0\u6b64\uff0c\u53ef\u4ee5\u5c06\u591a\u4e2a\u7247\u5143\u6620\u5c04\u5230\u8be5\u7eb9\u7406\u6df1\u5ea6\u4e2d\u7684\u540c\u4e00\u50cf\u7d20\u3002\u7eb9\u7406\u6df1\u5ea6\u50a8\u5b58\u6700\u5c0f\u6df1\u5ea6\uff0c\u56e0\u6b64\u5230\u6700\u540e\uff0c\u6211\u4eec\u6709\u51e0\u4e2a\u7247\u5143\u5171\u4eab\u76f8\u540c\u7684\u6df1\u5ea6\uff0c\u5c3d\u7ba1\u5b83\u4eec\u7684\u8ddd\u79bb\u4e0d\u540c\u3002 \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u589e\u52a0\u7247\u5143\u7740\u8272\u5668\u4e2d\u7684\u6df1\u5ea6\u6bd4\u8f83\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u6dfb\u52a0\u4e86\u4e00\u4e2a\u504f\u79fb\u3002 float bias = 0.05; if ( projCoords.z - bias < texture(shadowMap, projCoords.xy).r ) { // \u5f53\u524d\u7247\u5143\u4e0d\u5728\u9634\u5f71\u4e2d shadowFactor = 0; } \u73b0\u5728\uff0c\u9634\u5f71\u5931\u771f\u6d88\u5931\u4e86\u3002 \u8bd1\u8005\u6ce8\uff1a\u4f7f\u7528\u504f\u79fb\u6765\u6d88\u9664\u9634\u5f71\u5931\u771f\u53c8\u4f1a\u9020\u6210\u60ac\u6d6e\uff08Peter Panning\uff09\u95ee\u9898\uff0c\u53e6\u8bf7\u53c2\u9605 LearnOpenGL\u9634\u5f71\u6620\u5c04 \u4e00\u6587\u3002 \u73b0\u5728\u6211\u4eec\u8981\u89e3\u51b3\u7684\u662f\u53bb\u9634\u5f71\u8fb9\u7f18\u95ee\u9898\uff0c\u8fd9\u4e5f\u662f\u7531\u7eb9\u7406\u5206\u8fa8\u7387\u5f15\u8d77\u7684\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u7247\u5143\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u7247\u5143\u7684\u5750\u6807\u503c\u548c\u5468\u56f4\u7684\u503c\u5bf9\u6df1\u5ea6\u56fe\u8fdb\u884c\u91c7\u6837\u3002\u7136\u540e\u6211\u4eec\u5c06\u8ba1\u7b97\u5e73\u5747\u503c\u5e76\u5c06\u8be5\u503c\u6307\u5b9a\u4e3a\u9634\u5f71\u503c\u3002\u5728\u6b64\u60c5\u51b5\u4e0b\uff0c\u5b83\u7684\u503c\u4e0d\u4f1a\u662f 0 \u548c 1 \u4f46\u53ef\u4ee5\u5728\u4e24\u8005\u95f4\u53d6\u503c\uff0c\u4ee5\u83b7\u5f97\u66f4\u5e73\u6ed1\u7684\u8fb9\u7f18\u3002 \u5728\u7eb9\u7406\u5750\u6807\u4e2d\uff0c\u5468\u56f4\u503c\u5fc5\u987b\u4e0e\u5f53\u524d\u7247\u5143\u4f4d\u7f6e\u4fdd\u6301\u4e00\u4e2a\u50cf\u7d20\u8ddd\u79bb\u3002\u6240\u4ee5\u6211\u4eec\u9700\u8981\u8ba1\u7b97\u7eb9\u7406\u5750\u6807\u4e2d\u4e00\u4e2a\u50cf\u7d20\u7684\u589e\u91cf\uff0c\u5b83\u7b49\u4e8e 1 / \u7eb9\u7406\u5927\u5c0f \u3002 \u5728\u7247\u5143\u7740\u8272\u5668\u4e2d\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4fee\u6539\u9634\u5f71\u94f6\u5b50\u7684\u8ba1\u7b97\u6765\u5f97\u5230\u4e00\u4e2a\u5e73\u5747\u503c\u3002 float shadowFactor = 0.0; vec2 inc = 1.0 / textureSize(shadowMap, 0); for(int row = -1; row <= 1; ++row) { for(int col = -1; col <= 1; ++col) { float textDepth = texture(shadowMap, projCoords.xy + vec2(row, col) * inc).r; shadowFactor += projCoords.z - bias > textDepth ? 1.0 : 0.0; } } shadowFactor /= 9.0; \u73b0\u5728\u7ed3\u679c\u770b\u8d77\u6765\u66f4\u5e73\u6ed1\u4e86\u3002 \u73b0\u5728\u6211\u4eec\u7684\u793a\u4f8b\u770b\u8d77\u6765\u597d\u591a\u4e86\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u8fd9\u91cc\u4ecb\u7ecd\u7684\u9634\u5f71\u6620\u5c04\u6280\u672f\u4ecd\u6709\u5f88\u5927\u7684\u6539\u8fdb\u7a7a\u95f4\u3002\u4f60\u53ef\u4ee5\u67e5\u770b\u5982\u4f55\u89e3\u51b3\u60ac\u6d6e\uff08Peter Panning\uff09\u6548\u679c\uff08\u56e0\u504f\u79fb\u5f15\u8d77\uff09\u548c\u5176\u4ed6\u6539\u8fdb\u9634\u5f71\u8fb9\u7f18\u7684\u8ba1\u7b97\u3002\u65e0\u8bba\u5982\u4f55\uff0c\u6709\u4e86\u8fd9\u91cc\u6240\u8bb2\u89e3\u7684\u6982\u5ff5\uff0c\u4f60\u5c31\u6709\u4e86\u5f00\u59cb\u4fee\u6539\u793a\u4f8b\u7684\u826f\u597d\u57fa\u7840\u3002 \u4e3a\u4e86\u6e32\u67d3\u591a\u4e2a\u5149\u6e90\uff0c\u4f60\u53ea\u9700\u8981\u4e3a\u6bcf\u4e2a\u5149\u6e90\u6e32\u67d3\u4e00\u4e2a\u6df1\u5ea6\u56fe\u3002\u5728\u6e32\u67d3\u573a\u666f\u65f6\uff0c\u4f60\u9700\u8981\u91c7\u6837\u6240\u6709\u7684\u6df1\u5ea6\u56fe\u6765\u8ba1\u7b97\u5408\u9002\u7684\u9634\u5f71\u7cfb\u6570\u3002","title":"\u9634\u5f71"},{"location":"18-shadows/#shadows","text":"","title":"\u9634\u5f71\uff08Shadows\uff09"},{"location":"18-shadows/#_1","text":"\u76ee\u524d\uff0c\u6211\u4eec\u80fd\u591f\u8868\u73b0\u5149\u7ebf\u5982\u4f55\u5f71\u54cd\u4e09\u7ef4\u573a\u666f\u4e2d\u7684\u5bf9\u8c61\u3002\u63a5\u6536\u5230\u66f4\u591a\u5149\u7684\u7269\u4f53\u6bd4\u6ca1\u6709\u63a5\u6536\u5149\u7684\u7269\u4f53\u66f4\u4eae\u3002\u7136\u800c\uff0c\u6211\u4eec\u4ecd\u65e0\u6cd5\u6295\u5c04\u9634\u5f71\u3002\u9634\u5f71\u80fd\u589e\u52a03D\u573a\u666f\u7684\u771f\u5b9e\u5ea6\uff0c\u56e0\u6b64\u6211\u4eec\u5c06\u5728\u672c\u7ae0\u4e2d\u6dfb\u52a0\u5bf9\u5b83\u7684\u652f\u6301\u3002 \u6211\u4eec\u5c06\u4f7f\u7528\u4e00\u79cd\u88ab\u79f0\u4e3a\u9634\u5f71\u6620\u5c04\uff08Shadow Mapping\uff09\u7684\u6280\u672f\uff0c\u8fd9\u79cd\u6280\u672f\u88ab\u5e7f\u6cdb\u4f7f\u7528\u4e8e\u6e38\u620f\u4e2d\uff0c\u4e14\u4e0d\u4f1a\u4e25\u91cd\u5f71\u54cd\u5f15\u64ce\u6027\u80fd\u3002\u9634\u5f71\u6620\u5c04\u770b\u8d77\u6765\u5f88\u5bb9\u6613\u7406\u89e3\uff0c\u4f46\u662f\u5f88\u96be\u6b63\u786e\u5730\u5b9e\u73b0\u5b83\u3002\u6216\u8005\u66f4\u51c6\u786e\u5730\u8bf4\uff0c\u5f88\u96be\u7528\u4e00\u79cd\u901a\u7528\u7684\uff0c\u6db5\u76d6\u4e86\u4e00\u5207\u53ef\u80fd\u5e76\u4ea7\u751f\u4e00\u81f4\u7684\u6548\u679c\u7684\u65b9\u6cd5\u53bb\u5b9e\u73b0\u5b83\u3002 \u6211\u4eec\u5c06\u5728\u6b64\u8bf4\u660e\u4e00\u79cd\u65b9\u6cd5\uff0c\u5b83\u53ef\u4ee5\u4e3a\u4f60\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u6dfb\u52a0\u9634\u5f71\uff0c\u4f46\u66f4\u91cd\u8981\u7684\u662f\uff0c\u5b83\u5c06\u5e2e\u52a9\u4f60\u4e86\u89e3\u5176\u5c40\u9650\u6027\u3002\u8fd9\u91cc\u4ecb\u7ecd\u7684\u4ee3\u7801\u8fdc\u4e0d\u662f\u5b8c\u7f8e\u7684\uff0c\u4f46\u6211\u8ba4\u4e3a\u5b83\u5f88\u5bb9\u6613\u7406\u89e3\u3002\u5b83\u8fd8\u88ab\u8bbe\u8ba1\u7528\u4e8e\u652f\u6301\u6709\u5411\u5149\uff08\u8fd9\u6211\u8ba4\u4e3a\u662f\u66f4\u590d\u6742\u7684\u60c5\u51b5\uff09\uff0c\u4f46\u4f60\u5c06\u4e86\u89e3\u5982\u4f55\u5c06\u5176\u6269\u5c55\u4ee5\u652f\u6301\u5176\u4ed6\u7c7b\u578b\u7684\u5149\u7167\uff08\u4f8b\u5982\u70b9\u5149\u6e90\uff09\u3002\u5982\u679c\u60f3\u83b7\u5f97\u66f4\u9ad8\u7ea7\u7684\u6548\u679c\uff0c\u4f60\u5e94\u8be5\u4f7f\u7528\u66f4\u9ad8\u7ea7\u7684\u6280\u672f\uff0c\u4f8b\u5982\u7ea7\u8054\u9634\u5f71\u6620\u5c04\uff08Cascaded Shadow Maps\uff09\u3002\u5728\u4efb\u4f55\u60c5\u51b5\u4e0b\uff0c\u8fd9\u91cc\u89e3\u91ca\u7684\u6982\u5ff5\u90fd\u4ec5\u4ec5\u4f5c\u4e3a\u57fa\u7840\u3002 \u6240\u4ee5\uff0c\u8ba9\u6211\u4eec\u4ece\u601d\u8003\u5982\u4f55\u68c0\u67e5\u7279\u5b9a\u533a\u57df\uff08\u5b9e\u9645\u4e0a\u662f\u7247\u5143\uff09\u662f\u5426\u5728\u9634\u5f71\u4e2d\u5f00\u59cb\u3002\u5728\u7ed8\u5236\u8fd9\u4e2a\u533a\u57df\u7684\u65f6\u5019\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u51fa\u5c04\u7ebf\u6295\u5c04\u5230\u5149\u6e90\u4e0a\uff0c\u5982\u679c\u6211\u4eec\u53ef\u4ee5\u5728\u4e0d\u53d1\u751f\u4efb\u4f55\u78b0\u649e\u7684\u60c5\u51b5\u4e0b\u5230\u8fbe\u5149\u6e90\uff0c\u90a3\u4e48\u50cf\u7d20\u5c31\u5728\u5149\u7167\u4e2d\uff0c\u53cd\u4e4b\uff0c\u50cf\u7d20\u5904\u4e8e\u9634\u5f71\u4e2d\u3002 \u4e0b\u56fe\u5c55\u793a\u4e86\u70b9\u5149\u6e90\u7684\u60c5\u51b5\uff0c\u70b9PA\u53ef\u4ee5\u5230\u8fbe\u5149\u6e90\uff0c\u4f46\u70b9PB\u548cPC\u4e0d\u884c\uff0c\u56e0\u6b64\u5b83\u4eec\u4f4d\u4e8e\u9634\u5f71\u4e2d\u3002 \u90a3\u4e48\uff0c\u6211\u4eec\u5982\u4f55\u624d\u80fd\u68c0\u67e5\u662f\u5426\u80fd\u4ee5\u4e00\u79cd\u6709\u6548\u7684\u65b9\u5f0f\u53d1\u5c04\u51fa\u4e0d\u53d1\u751f\u78b0\u649e\u7684\u5c04\u7ebf\u5462\uff1f\u7406\u8bba\u4e0a\uff0c\u5149\u6e90\u53ef\u4ee5\u6295\u5c04\u51fa\u65e0\u9650\u7684\u5149\u7ebf\uff0cName\u6211\u4eec\u5982\u4f55\u68c0\u67e5\u5149\u7ebf\u662f\u5426\u88ab\u906e\u6321\uff1f \u6211\u4eec\u80fd\u505a\u7684\u4e0d\u662f\u6295\u5c04\u5149\u7ebf\uff0c\u800c\u662f\u4ece\u5149\u7ebf\u900f\u89c6\u56fe\u4e2d\u89c2\u5bdf3D\u573a\u666f\uff0c\u5e76\u4ece\u8be5\u4f4d\u7f6e\u6e32\u67d3\u573a\u666f\u3002\u6211\u4eec\u53ef\u4ee5\u5c06\u76f8\u673a\u8bbe\u7f6e\u5728\u5149\u6e90\u4f4d\u7f6e\u5e76\u6e32\u67d3\u573a\u666f\uff0c\u4ee5\u4fbf\u50a8\u5b58\u6bcf\u4e2a\u7247\u5143\u7684\u6df1\u5ea6\u3002\u8fd9\u76f8\u5f53\u4e8e\u8ba1\u7b97\u6bcf\u4e2a\u7247\u5143\u5230\u5149\u6e90\u7684\u8ddd\u79bb\u3002\u6700\u540e\uff0c\u6211\u4eec\u8981\u505a\u7684\u662f\u5c06\u5149\u7167\u6240\u53ca\u7684\u6700\u5c0f\u8ddd\u79bb\u50a8\u5b58\u4e3a\u9634\u5f71\u56fe\u3002 \u4e0b\u56fe\u5c55\u793a\u4e86\u4e00\u4e2a\u60ac\u6d6e\u5728\u5e73\u9762\u4e0a\u5e76\u5782\u76f4\u4e8e\u5149\u7ebf\u7684\u7acb\u65b9\u4f53\u3002 \u4ece\u5149\u6e90\u7684\u89d2\u5ea6\u770b\uff0c\u60c5\u51b5\u662f\u8fd9\u6837\u7684\uff08\u989c\u8272\u8d8a\u6df1\uff0c\u8d8a\u63a5\u8fd1\u5149\u6e90\uff09\u3002 \u5229\u7528\u8fd9\u4e9b\u4fe1\u606f\u3002\u6211\u4eec\u53ef\u4ee5\u50cf\u5f80\u5e38\u4e00\u6837\u6e32\u67d33D\u573a\u666f\uff0c\u5e76\u4ee5\u6700\u5c0f\u50a8\u5b58\u8ddd\u79bb\u68c0\u67e5\u6bcf\u4e2a\u6bcf\u4e2a\u7247\u5143\u5230\u5149\u6e90\u7684\u8ddd\u79bb\u3002\u5982\u679c\u8ddd\u79bb\u5c0f\u4e8e\u9634\u5f71\u8d34\u56fe\u4e2d\u50a8\u5b58\u7684\u503c\uff0c\u5219\u5bf9\u8c61\u4f4d\u4e8e\u5149\u7167\u4e2d\uff0c\u5426\u5219\u4f4d\u4e8e\u9634\u5f71\u4e2d\u3002\u6211\u4eec\u53ef\u4ee5\u8ba9\u51e0\u4e2a\u7269\u4f53\u88ab\u540c\u4e00\u5149\u7167\u7167\u5c04\uff0c\u4f46\u6211\u4eec\u50a8\u5b58\u6700\u5c0f\u8ddd\u79bb\u3002 \u56e0\u6b64\uff0c\u9634\u5f71\u6620\u5c04\u5206\u4e3a\u4e24\u6b65\uff1a \u9996\u5148\uff0c\u6211\u4eec\u5c06\u573a\u666f\u4ece\u5149\u7167\u7a7a\u95f4\u6e32\u67d3\u4e3a\u9634\u5f71\u56fe\uff0c\u4ee5\u83b7\u5f97\u6700\u5c0f\u8ddd\u79bb\u3002 \u5176\u6b21\uff0c\u6211\u4eec\u4ece\u6444\u50cf\u673a\u7684\u89c6\u89d2\u6e32\u67d3\u573a\u666f\u3002\u5e76\u4f7f\u7528\u6df1\u5ea6\u56fe\u8ba1\u7b97\u5bf9\u8c61\u662f\u5426\u4f4d\u4e8e\u9634\u5f71\u4e2d\u3002 \u4e3a\u4e86\u6e32\u67d3\u6df1\u5ea6\u56fe\uff0c\u6211\u4eec\u9700\u8981\u8bf4\u8bf4\u6df1\u5ea6\u7f13\u51b2\u533a\uff08Depth-buffer\uff09\u3002\u5f53\u6211\u4eec\u6e32\u67d3\u4e00\u4e2a\u573a\u666f\u65f6\uff0c\u6240\u6709\u6df1\u5ea6\u4fe1\u606f\u90fd\u50a8\u5b58\u5728\u4e00\u4e2a\u540d\u4e3a\u201c\u6df1\u5ea6\u7f13\u51b2\u533a\u201d\uff08\u53c8\u79f0\u201cZ\u7f13\u51b2\u533a\uff08Z-buffer\uff09\u201d\uff09\u7684\u7f13\u51b2\u533a\u4e2d\u3002\u6df1\u5ea6\u4fe1\u606f\u662f\u6e32\u67d3\u7684\u6bcf\u4e2a\u7247\u5143\u7684 z \u503c\u3002\u5982\u679c\u4f60\u4ece\u7b2c\u4e00\u7ae0\u56de\u5fc6\u6211\u4eec\u5728\u6e32\u67d3\u573a\u666f\u65f6\uff0c\u5c06\u6b63\u5728\u6e32\u67d3\u7684\u573a\u666f\u4ece\u4e16\u754c\u5750\u6807\u8f6c\u6362\u4e3a\u5c4f\u5e55\u5750\u6807\u3002\u6211\u4eec\u6240\u7ed8\u5236\u7684\u5750\u6807\u7a7a\u95f4\uff0c\u5bf9\u4e8e x \u548c y \u8f74\u6765\u8bf4\uff0c\u5750\u6807\u7684\u8303\u56f4\u4e3a 0 \u5230 1 \u3002\u5982\u679c\u4e00\u4e2a\u7269\u4f53\u6bd4\u5176\u4ed6\u5bf9\u8c61\u539f\uff0c\u6211\u4eec\u5fc5\u987b\u901a\u8fc7\u900f\u89c6\u6295\u5f71\u77e9\u9635\u8ba1\u7b97\u5b83\u5982\u4f55\u5f71\u54cd\u5176 x \u548c y \u5750\u6807\u3002\u8fd9\u4e0d\u662f\u6839\u636e z \u503c\u81ea\u52a8\u8ba1\u7b97\u7684\uff0c\u5b83\u5fc5\u987b\u7531\u6211\u4eec\u6765\u505a\u3002\u5b9e\u9645\u50a8\u5b58\u5728 z \u5750\u6807\u4e2d\u7684\u662f\u5b83\u5728\u7247\u5143\u7684\u6df1\u5ea6\uff0c\u4ec5\u6b64\u800c\u5df2\u3002 \u6b64\u5916\uff0c\u5728\u6e90\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u542f\u7528\u4e86\u6df1\u5ea6\u6d4b\u8bd5\u3002\u5728 Window \u7c7b\u4e2d\uff0c\u6211\u4eec\u6dfb\u52a0\u5982\u4e0b\u884c\uff1a glEnable(GL_DEPTH_TEST); \u901a\u8fc7\u6dfb\u52a0\u8fd9\u884c\uff0c\u6211\u4eec\u53ef\u4ee5\u9632\u6b62\u65e0\u6cd5\u770b\u5230\u7684\u7247\u5143\u88ab\u7ed8\u5236\u51fa\u6765\uff0c\u56e0\u4e3a\u4ed6\u4eec\u4f4d\u4e8e\u5176\u4ed6\u5bf9\u8c61\u4e4b\u540e\u3002\u5728\u7ed8\u5236\u7247\u5143\u4e4b\u524d\uff0c\u5b83\u7684 z \u503c\u5c06\u4e0eZ\u7f13\u51b2\u533a\u4e2d\u7684 z \u503c\u8fdb\u884c\u6bd4\u8f83\u3002\u5982\u679c\u5b83\u7684 z \u503c\uff08\u5b83\u7684\u8ddd\u79bb\uff09\u5927\u4e8e\u7f13\u51b2\u533a\u7684 z \u503c\uff0c\u5219\u4f1a\u88ab\u4e22\u5f03\u3002\u8bf7\u8bb0\u4f4f\uff0c\u8fd9\u662f\u5728\u5c4f\u5e55\u7a7a\u95f4\u4e2d\u5b8c\u6210\u7684\uff0c\u56e0\u6b64\uff0c\u7ed9\u5b9a\u4e00\u5bf9\u5c4f\u5e55\u7a7a\u95f4\u4e2d\u8303\u56f4\u4e3a [0, 1] \u7684 x \u548c y \u5750\u6807\uff0c\u6211\u4eec\u6bd4\u8f83\u5176\u7247\u5143\u7684 z \u503c\u3002\u540c\u6837\uff0c z \u503c\u4e5f\u5728\u6b64\u8303\u56f4\u5185\u3002 \u6df1\u5ea6\u7f13\u51b2\u533a\u7684\u5b58\u5728\u662f\u6211\u4eec\u5728\u6267\u884c\u4efb\u4f55\u6e32\u67d3\u64cd\u4f5c\u4e4b\u524d\u9700\u8981\u6e05\u9664\u5c4f\u5e55\u7684\u539f\u56e0\u3002\u6211\u4eec\u4e0d\u4ec5\u9700\u8981\u6e05\u9664\u989c\u8272\uff0c\u8fd8\u8981\u6e05\u9664\u6df1\u5ea6\u4fe1\u606f\uff1a public void clear() { glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT); } \u4e3a\u4e86\u5f00\u59cb\u6784\u5efa\u6df1\u5ea6\u56fe\uff0c\u6211\u4eec\u5e0c\u671b\u4ece\u5149\u6e90\u7684\u89d2\u5ea6\u83b7\u5f97\u6df1\u5ea6\u4fe1\u606f\u3002\u6211\u4eec\u9700\u8981\u5728\u5149\u6e90\u4f4d\u7f6e\u8bbe\u7f6e\u4e00\u4e2a\u6444\u50cf\u5934\uff0c\u6e32\u67d3\u573a\u666f\u5e76\u5c06\u6df1\u5ea6\u4fe1\u606f\u50a8\u5b58\u5230\u7eb9\u7406\u4e2d\uff0c\u4ee5\u4fbf\u7a0d\u540e\u8bbf\u95ee\u5b83\u3002 \u56e0\u6b64\uff0c\u6211\u4eec\u9996\u5148\u9700\u8981\u505a\u7684\u662f\u6dfb\u52a0\u5bf9\u521b\u5efa\u8fd9\u4e9b\u7eb9\u7406\u7684\u652f\u6301\u3002\u6211\u4eec\u5c06\u4fee\u6539 Texture \u7c7b\uff0c\u901a\u8fc7\u6dfb\u52a0\u65b0\u7684\u6784\u9020\u51fd\u6570\u6765\u652f\u6301\u521b\u5efa\u7a7a\u7eb9\u7406\u3002\u6b64\u6784\u9020\u51fd\u6570\u9700\u8981\u7eb9\u7406\u7684\u5c3a\u5bf8\u4ee5\u53ca\u5b83\u50a8\u5b58\u7684\u50cf\u7d20\u7684\u683c\u5f0f\u3002 public Texture(int width, int height, int pixelFormat) throws Exception { this.id = glGenTextures(); this.width = width; this.height = height; glBindTexture(GL_TEXTURE_2D, this.id); glTexImage2D(GL_TEXTURE_2D, 0, GL_DEPTH_COMPONENT, this.width, this.height, 0, pixelFormat, GL_FLOAT, (ByteBuffer) null); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_CLAMP_TO_EDGE); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_CLAMP_TO_EDGE); } \u6211\u4eec\u5c06\u7eb9\u7406\u73af\u7ed5\u65b9\u5f0f\u8bbe\u7f6e\u4e3a GL_CLAMP_TO_EDGE \uff0c\u56e0\u4e3a\u6211\u4eec\u4e0d\u5e0c\u671b\u5728\u8d85\u51fa [0, 1] \u8303\u56f4\u65f6\u91cd\u590d\u7eb9\u7406\u3002 \u6240\u4ee5\uff0c\u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u521b\u5efa\u7a7a\u7684\u7eb9\u7406\uff0c\u6211\u4eec\u9700\u8981\u80fd\u591f\u5728\u5176\u4e2d\u6e32\u67d3\u4e00\u4e2a\u573a\u666f\u3002\u4e3a\u4e86\u505a\u5230\u5b83\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528\u5e27\u7f13\u51b2\u533a\u5bf9\u8c61\uff08Frame Buffers Objects\uff0c\u6216\u79f0FBOs\uff09\u3002\u5e27\u7f13\u51b2\u533a\u662f\u53ef\u4ee5\u4f5c\u4e3a\u6e32\u67d3\u7ec8\u70b9\u7684\u7f13\u51b2\u533a\u96c6\u5408\u3002\u5f53\u6211\u4eec\u6e32\u67d3\u5230\u5c4f\u5e55\u4e0a\u65f6\uff0c\u6211\u4eec\u4f7f\u7528\u7684\u662fOpenGL\u7684\u9ed8\u8ba4\u7f13\u51b2\u533a\u3002OpenGL\u5141\u8bb8\u6211\u4eec\u4f7f\u7528FBO\u6e32\u67d3\u5230\u7528\u6237\u5b9a\u4e49\u7684\u7f13\u51b2\u533a\u3002\u6211\u4eec\u5c06\u901a\u8fc7\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a ShadowMap \u7684\u65b0\u7c7b\uff0c\u6765\u9694\u79bb\u4e3a\u9634\u5f71\u6620\u5c04\u521b\u5efaFBO\u8fc7\u7a0b\u7684\u5176\u4f59\u4ee3\u7801\u3002\u5982\u4e0b\u5c31\u662f\u90a3\u4e2a\u7c7b\u7684\u5b9a\u4e49\u3002 package org.lwjglb.engine.graph; import static org.lwjgl.opengl.GL11.*; import static org.lwjgl.opengl.GL30.*; public class ShadowMap { public static final int SHADOW_MAP_WIDTH = 1024; public static final int SHADOW_MAP_HEIGHT = 1024; private final int depthMapFBO; private final Texture depthMap; public ShadowMap() throws Exception { // \u521b\u5efaFBO\u4ee5\u6e32\u67d3\u6df1\u5ea6\u56fe depthMapFBO = glGenFramebuffers(); // \u521b\u5efa\u6df1\u5ea6\u56fe\u7eb9\u7406 depthMap = new Texture(SHADOW_MAP_WIDTH, SHADOW_MAP_HEIGHT, GL_DEPTH_COMPONENT); // \u7ed1\u5b9a\u6df1\u5ea6\u56fe\u7eb9\u7406\u5230FBO glBindFramebuffer(GL_FRAMEBUFFER, depthMapFBO); glFramebufferTexture2D(GL_FRAMEBUFFER, GL_DEPTH_ATTACHMENT, GL_TEXTURE_2D, depthMap.getId(), 0); // \u4ec5\u8bbe\u7f6e\u6df1\u5ea6 glDrawBuffer(GL_NONE); glReadBuffer(GL_NONE); if (glCheckFramebufferStatus(GL_FRAMEBUFFER) != GL_FRAMEBUFFER_COMPLETE) { throw new Exception(\"Could not create FrameBuffer\"); } // \u89e3\u7ed1 glBindFramebuffer(GL_FRAMEBUFFER, 0); } public Texture getDepthMapTexture() { return depthMap; } public int getDepthMapFBO() { return depthMapFBO; } public void cleanup() { glDeleteFramebuffers(depthMapFBO); depthMap.cleanup(); } } ShadowMap \u7c7b\u5b9a\u4e49\u4e86\u4e24\u4e2a\u5e38\u91cf\uff0c\u7528\u4e8e\u786e\u5b9a\u50a8\u5b58\u6df1\u5ea6\u56fe\u7684\u7eb9\u7406\u7684\u5927\u5c0f\u3002\u5b83\u8fd8\u5b9a\u4e49\u4e86\u4e24\u4e2a\u5c5e\u6027\uff0c\u4e00\u4e2a\u7528\u4e8eFBO\uff0c\u4e00\u4e2a\u7528\u4e8e\u7eb9\u7406\u3002\u5728\u6784\u9020\u51fd\u6570\u4e2d\uff0c\u521b\u5efa\u4e00\u4e2a\u65b0\u7684FBO\u548c\u4e00\u4e2a\u65b0\u7684 Texture \u3002\u5bf9\u4e8eFBO\uff0c\u5c06\u4f7f\u7528\u5e38\u91cf GL_DEPTH_COMPONENT \u4f5c\u4e3a\u50cf\u7d20\u683c\u5f0f\uff0c\u56e0\u4e3a\u6211\u4eec\u53ea\u5bf9\u50a8\u5b58\u6df1\u5ea6\u503c\u611f\u5174\u8da3\uff0c\u7136\u540e\u5c06FBO\u7ed1\u5b9a\u5230\u7eb9\u7406\u5b9e\u4f8b\u3002 \u4ee5\u4e0b\u51e0\u884c\u4ee3\u7801\u663e\u5f0f\u5730\u5c06FBO\u8bbe\u7f6e\u4e3a\u4e0d\u6e32\u67d3\u4efb\u4f55\u989c\u8272\u3002FBO\u9700\u8981\u989c\u8272\u7f13\u51b2\u533a\uff0c\u4f46\u6211\u4eec\u4e0d\u9700\u8981\uff0c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u4eec\u5c06\u989c\u8272\u7f13\u51b2\u533a\u8bbe\u7f6e\u4e3a GL_NONE \u3002 glDrawBuffer(GL_NONE); glReadBuffer(GL_NONE); \u73b0\u5728\uff0c\u6211\u4eec\u51c6\u5907\u5728 Renderer \u7c7b\u4e2d\u5c06\u573a\u666f\u4ece\u706f\u5149\u900f\u89c6\u6e32\u67d3\u4e3aFBO\u3002\u4e3a\u4e86\u505a\u5230\u5b83\uff0c\u6211\u4eec\u5c06\u521b\u5efa\u4e00\u7ec4\u7279\u6b8a\u7684\u9876\u70b9\u548c\u7247\u5143\u7740\u8272\u5668\u3002 \u540d\u4e3a depth_vertex.vs \u7684\u9876\u70b9\u7740\u8272\u5668\u7684\u5b9a\u4e49\u5982\u4e0b\uff1a #version 330 layout (location=0) in vec3 position; layout (location=1) in vec2 texCoord; layout (location=2) in vec3 vertexNormal; uniform mat4 modelLightViewMatrix; uniform mat4 orthoProjectionMatrix; void main() { gl_Position = orthoProjectionMatrix * modelLightViewMatrix * vec4(position, 1.0f); } \u6211\u4eec\u5e0c\u671b\u63a5\u6536\u4e0e\u573a\u666f\u7740\u8272\u5668\u76f8\u540c\u7684\u8f93\u5165\u6570\u636e\u3002\u4f46\u5b9e\u9645\u4e0a\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5750\u6807\uff0c\u4f46\u662f\u4e3a\u4e86\u5c3d\u53ef\u80fd\u591a\u5730\u91cd\u7528\u4ee3\u7801\uff0c\u6211\u4eec\u8fd8\u662f\u8981\u4f20\u9001\u5176\u4ed6\u6570\u636e\u3002\u6211\u4eec\u8fd8\u9700\u8981\u4e00\u5bf9\u77e9\u9635\u3002\u8bb0\u4f4f\uff0c\u6211\u4eec\u5fc5\u987b\u4ee5\u5149\u6e90\u7684\u89d2\u5ea6\u6e32\u67d3\u573a\u666f\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5c06\u6a21\u578b\u8f6c\u6362\u5230\u5149\u6e90\u7684\u5750\u6807\u7a7a\u95f4\u3002\u8fd9\u662f\u901a\u8fc7 modelLightViewMatrix \u77e9\u9635\u5b8c\u6210\u7684\uff0c\u8be5\u77e9\u9635\u7c7b\u4f3c\u4e8e\u7528\u4e8e\u6444\u50cf\u673a\u7684\u6a21\u578b\u89c2\u5bdf\u77e9\u9635\u3002\u73b0\u5728\u5149\u6e90\u662f\u6211\u4eec\u7684\u6444\u50cf\u673a\u3002 \u7136\u540e\u6211\u4eec\u9700\u8981\u5c06\u8fd9\u4e9b\u5750\u6807\u8f6c\u6362\u5230\u5c4f\u5e55\u7a7a\u95f4\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u9700\u8981\u6295\u5f71\u5b83\u4eec\u3002\u8fd9\u662f\u8ba1\u7b97\u5e73\u884c\u5149\u4e0e\u70b9\u5149\u6e90\u7684\u9634\u5f71\u56fe\u65f6\u7684\u533a\u522b\u4e4b\u4e00\u3002\u5bf9\u4e8e\u5730\u6602\u626c\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u900f\u89c6\u6295\u5f71\uff08Perspective Projection\uff09\u77e9\u9635\uff0c\u5c31\u50cf\u6211\u4eec\u6b63\u5e38\u6e32\u67d3\u573a\u666f\u4e00\u6837\u3002\u76f8\u53cd\uff0c\u5e73\u884c\u5149\u4ee5\u76f8\u540c\u65b9\u5f0f\u5f71\u54cd\u6240\u6709\u5bf9\u8c61\uff0c\u800c\u4e0e\u8ddd\u79bb\u65e0\u5173\u3002\u5e73\u884c\u5149\u6e90\u4f4d\u4e8e\u65e0\u7a77\u8fdc\u7684\u70b9\u4e0a\uff0c\u6ca1\u6709\u4f4d\u7f6e\uff0c\u53ea\u6709\u65b9\u5411\u3002\u6b63\u4ea4\u6295\u5f71\uff08Orthographic Projection\uff09\u4e0d\u4f1a\u4f7f\u8fdc\u5904\u7684\u7269\u4f53\u53d8\u5c0f\uff0c\u56e0\u6b64\uff0c\u6b63\u4ea4\u6295\u5f71\u6700\u9002\u5408\u5e73\u884c\u5149\u3002 \u7247\u5143\u7740\u8272\u5668\u66f4\u7b80\u5355\u3002\u5b83\u53ea\u8f93\u51fa z \u5750\u6807\u4f5c\u4e3a\u6df1\u5ea6\u503c\u3002 #version 330 void main() { gl_FragDepth = gl_FragCoord.z; } \u5b9e\u9645\u4e0a\uff0c\u4f60\u53ef\u4ee5\u5220\u6389\u8be5\u884c\uff0c\u56e0\u4e3a\u6211\u4eec\u53ea\u751f\u6210\u6df1\u5ea6\u503c\uff0c\u6df1\u5ea6\u503c\u5c06\u81ea\u52a8\u8fd4\u56de\u3002 \u4e00\u65e6\u6211\u4eec\u4e3a\u6df1\u5ea6\u6e32\u67d3\u5b9a\u4e49\u4e86\u65b0\u7684\u7740\u8272\u5668\uff0c\u5c31\u53ef\u4ee5\u5728 Renderer \u7c7b\u4e2d\u4f7f\u7528\u5b83\u4eec\u3002\u6211\u4eec\u4e3a\u521d\u59cb\u5316\u8fd9\u4e9b\u7740\u8272\u5668\u5b9a\u4e49\u4e86\u4e00\u4e2a\u65b0\u65b9\u6cd5\uff0c\u540d\u4e3a setupDepthShader \uff0c\u5b83\u5c06\u5728\u5176\u4ed6\u7740\u8272\u5668\u88ab\u521d\u59cb\u5316\u65f6\u8c03\u7528\u3002 private void setupDepthShader() throws Exception { depthShaderProgram = new ShaderProgram(); depthShaderProgram.createVertexShader(Utils.loadResource(\"/shaders/depth_vertex.vs\")); depthShaderProgram.createFragmentShader(Utils.loadResource(\"/shaders/depth_fragment.fs\")); depthShaderProgram.link(); depthShaderProgram.createUniform(\"orthoProjectionMatrix\"); depthShaderProgram.createUniform(\"modelLightViewMatrix\"); } \u73b0\u5728\uff0c\u6211\u4eec\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u65b9\u6cd5\uff0c\u4f7f\u7528\u90a3\u4e9b\u540d\u4e3a renderDepthMap \u7684\u7740\u8272\u5668\u3002\u8be5\u65b9\u6cd5\u5c06\u5728\u4e3b\u6e32\u67d3\u65b9\u6cd5\u4e2d\u8c03\u7528\u3002 public void render(Window window, Camera camera, Scene scene, IHud hud) { clear(); // \u5728\u8bbe\u7f6e\u89c6\u53e3\u4e4b\u524d\u6e32\u67d3\u6df1\u5ea6\u56fe renderDepthMap(window, camera, scene); glViewport(0, 0, window.getWidth(), window.getHeight()); // \u5176\u4f59\u7684\u4ee3\u7801\u5728\u8fd9... \u5982\u679c\u4f60\u6d4f\u89c8\u4e0a\u8ff0\u4ee3\u7801\uff0c\u5c06\u770b\u5230\u5728\u8bbe\u7f6e\u89c6\u53e3\u4e4b\u524d\uff0c\u65b0\u65b9\u6cd5\u5c31\u5df2\u7ecf\u88ab\u8c03\u7528\u3002\u8fd9\u662f\u56e0\u4e3a\u8fd9\u4e2a\u65b0\u65b9\u6cd5\u5c06\u66f4\u9ad8\u89c6\u53e3\u4ee5\u5339\u914d\u4fdd\u5b58\u6df1\u5ea6\u56fe\u7684\u7eb9\u7406\u7684\u5c3a\u5bf8\u3002\u56e0\u6b64\uff0c\u5728\u5b8c\u6210 renderDepthMap \u4e4b\u540e\uff0c\u6211\u4eec\u5c06\u59cb\u7ec8\u9700\u8981\u8bbe\u7f6e\u5c4f\u5e55\u5c3a\u5bf8\u7684\u89c6\u53e3\uff08\u4e0d\u68c0\u67e5\u7a97\u53e3\u662f\u5426\u5df2\u8c03\u6574\u5927\u5c0f\uff09\u3002 \u73b0\u5728\u8ba9\u6211\u4eec\u5b9a\u4e49\u4e00\u4e0b renderDepthMap \u65b9\u6cd5\u3002\u7b2c\u4e00\u4ef6\u4e8b\u662f\u7ed1\u5b9a\u5728 ShadowMap \u7c7b\u4e2d\u521b\u5efa\u7684FBO\uff0c\u5e76\u8bbe\u7f6e\u89c6\u53e3\u4ee5\u5339\u914d\u7eb9\u7406\u5c3a\u5bf8\u3002 glBindFramebuffer(GL_FRAMEBUFFER, shadowMap.getDepthMapFBO()); glViewport(0, 0, ShadowMap.SHADOW_MAP_WIDTH, ShadowMap.SHADOW_MAP_HEIGHT); \u7136\u540e\uff0c\u6e05\u9664\u6df1\u5ea6\u7f13\u51b2\u533a\u5185\u5bb9\u5e76\u7ed1\u5b9a\u6df1\u5ea6\u7740\u8272\u5668\u3002\u56e0\u4e3a\u6211\u4eec\u53ea\u5904\u7406\u6df1\u5ea6\u503c\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u6e05\u9664\u989c\u8272\u4fe1\u606f\u3002 glClear(GL_DEPTH_BUFFER_BIT); depthShaderProgram.bind(); \u73b0\u5728\u6211\u4eec\u9700\u8981\u8bbe\u7f6e\u77e9\u9635\uff0c\u63a5\u4e0b\u6765\u662f\u68d8\u624b\u7684\u90e8\u5206\u3002\u6211\u4eec\u4f7f\u7528\u5149\u6e90\u4f5c\u4e3a\u6444\u50cf\u673a\uff0c\u6240\u4ee5\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u9700\u8981\u4e00\u4e2a\u5750\u6807\u548c\u4e09\u4e2a\u89d2\u7684\u89c2\u5bdf\u77e9\u9635\u3002\u6b63\u5982\u672c\u7ae0\u5f00\u5934\u6240\u8bf4\uff0c\u6211\u4eec\u53ea\u5b9e\u73b0\u5e73\u884c\u5149\uff0c\u8fd9\u79cd\u7c7b\u578b\u7684\u5149\u4e0d\u5b9a\u4e49\u4f4d\u7f6e\uff0c\u800c\u662f\u5b9a\u4e49\u65b9\u5411\u3002\u5982\u679c\u6211\u4eec\u4f7f\u7528\u70b9\u5149\u6e90\uff0c\u8fd9\u5f88\u5bb9\u6613\uff0c\u5149\u6e90\u7684\u4f4d\u7f6e\u5c31\u662f\u89c2\u5bdf\u77e9\u9635\u7684\u4f4d\u7f6e\uff0c\u4f46\u6211\u4eec\u6ca1\u6709\u4f4d\u7f6e\u3002 \u6211\u4eec\u5c06\u91c7\u7528\u4e00\u79cd\u7b80\u5355\u7684\u65b9\u6cd5\u6765\u8ba1\u7b97\u5149\u7684\u4f4d\u7f6e\u3002\u5e73\u884c\u5149\u662f\u7531\u4e00\u4e2a\u5411\u91cf\u5b9a\u4e49\u7684\uff0c\u901a\u5e38\u662f\u5f52\u4e00\u5316\u7684\uff0c\u5b83\u6307\u5411\u5149\u6e90\u6240\u5728\u7684\u65b9\u5411\u3002\u6211\u4eec\u628a\u8fd9\u4e2a\u65b9\u5411\u5411\u91cf\u4e58\u4ee5\u4e00\u4e2a\u53ef\u914d\u7f6e\u7684\u56e0\u5b50\uff0c\u5728\u8fd9\u6837\u5b83\u5c31\u4e3a\u8981\u7ed8\u5236\u7684\u573a\u666f\u5b9a\u4e49\u4e86\u4e00\u4e2a\u5408\u7406\u8ddd\u79bb\u7684\u70b9\u3002\u6211\u4eec\u5c06\u4f7f\u7528\u8be5\u65b9\u5411\u6765\u8ba1\u7b97\u8be5\u89c2\u5bdf\u77e9\u9635\u7684\u65cb\u8f6c\u89d2\u5ea6\u3002 \u8fd9\u662f\u8ba1\u7b97\u706f\u5149\u4f4d\u7f6e\u4e0e\u65cb\u8f6c\u89d2\u5ea6\u7684\u4ee3\u7801\u7247\u6bb5\uff1a float lightAngleX = (float)Math.toDegrees(Math.acos(lightDirection.z)); float lightAngleY = (float)Math.toDegrees(Math.asin(lightDirection.x)); float lightAngleZ = 0; Matrix4f lightViewMatrix = transformation.updateLightViewMatrix(new Vector3f(lightDirection).mul(light.getShadowPosMult()), new Vector3f(lightAngleX, lightAngleY, lightAngleZ)); \u63a5\u4e0b\u6211\u4eec\u9700\u8981\u8ba1\u7b97\u6b63\u4ea4\u6295\u5f71\u77e9\u9635\uff1a Matrix4f orthoProjMatrix = transformation.updateOrthoProjectionMatrix(orthCoords.left, orthCoords.right, orthCoords.bottom, orthCoords.top, orthCoords.near, orthCoords.far); \u6211\u4eec\u5df2\u7ecf\u4fee\u6539\u4e86 Transformation \u7c7b\uff0c\u4ee5\u56ca\u62ec\u5149\u7167\u89c2\u5bdf\u77e9\u9635\u548c\u6b63\u4ea4\u6295\u5f71\u77e9\u9635\u3002\u6b64\u4eec\u6709\u4e00\u4e2a\u6b63\u4ea4\u7684\u4e8c\u7ef4\u6295\u5f71\u77e9\u9635\uff0c\u6240\u4ee5\u6211\u4eec\u91cd\u547d\u540d\u4e86\u6b64\u524d\u7684\u65b9\u6cd5\u548c\u5c5e\u6027\uff0c\u4f60\u53ef\u4ee5\u76f4\u63a5\u67e5\u770b\u6e90\u4ee3\u7801\u4e2d\u7684\u5b9a\u4e49\u3002 \u7136\u540e\uff0c\u6211\u4eec\u6309\u7167 renderScene \u65b9\u6cd5\u6e32\u67d3\u573a\u666f\u5bf9\u8c61\uff0c\u4f46\u5728\u5149\u7167\u7a7a\u95f4\u5750\u6807\u7cfb\u4e2d\u4f7f\u7528\u4e0a\u8ff0\u77e9\u9635\u5de5\u4f5c\u3002 depthShaderProgram.setUniform(\"orthoProjectionMatrix\", orthoProjMatrix); Map<Mesh, List<GameItem>> mapMeshes = scene.getGameMeshes(); for (Mesh mesh : mapMeshes.keySet()) { mesh.renderList(mapMeshes.get(mesh), (GameItem gameItem) -> { Matrix4f modelLightViewMatrix = transformation.buildModelViewMatrix(gameItem, lightViewMatrix); depthShaderProgram.setUniform(\"modelLightViewMatrix\", modelLightViewMatrix); } ); } // \u89e3\u7ed1 depthShaderProgram.unbind(); glBindFramebuffer(GL_FRAMEBUFFER, 0); \u6b63\u4ea4\u6295\u5f71\u77e9\u9635\u7684\u53c2\u6570\u662f\u5728\u5e73\u884c\u5149\u4e2d\u5b9a\u4e49\u7684\u3002\u5c06\u6b63\u4ea4\u6295\u5f71\u77e9\u9635\u60f3\u8c61\u4e3a\u4e00\u4e2a\u8fb9\u754c\u6846\uff0c\u5176\u4e2d\u5305\u542b\u6211\u4eec\u8981\u6e32\u67d3\u7684\u6240\u6709\u5bf9\u8c61\u3002\u5f53\u53ea\u6295\u5f71\u9002\u5408\u8be5\u8fb9\u754c\u6846\u7684\u5bf9\u8c61\u65f6\uff0c\u5bf9\u8c61\u5c06\u53ef\u89c6\u3002\u8be5\u8fb9\u754c\u6846\u75316\u4e2a\u53c2\u6570\u5b9a\u4e49\uff1a\u5de6\u3001\u53f3\u3001\u4e0a\u3001\u4e0b\u3001\u8fd1\u3001\u8fdc\u3002\u7531\u4e8e\u5149\u6e90\u4f4d\u7f6e\u73b0\u5728\u662f\u539f\u70b9\uff0c\u56e0\u6b64\u8fd9\u4e9b\u53c2\u6570\u5b9a\u4e49\u4e3a\u539f\u70b9\u5230\u5de6\u6216\u53f3\uff08x\u8f74\uff09\u6216\u4e0a\u6216\u4e0b\uff08y\u8f74\uff09\u6216\u8fdc\u6216\u8fd1\uff08z\u8f74\uff09\u7684\u8ddd\u79bb\u3002 \u8981\u4f7f\u9634\u5f71\u56fe\u6b63\u5e38\u5de5\u4f5c\uff0c\u6700\u68d8\u624b\u7684\u4e00\u70b9\u662f\u786e\u5b9a\u706f\u5149\u4f4d\u7f6e\u548c\u6b63\u4ea4\u6295\u5f71\u77e9\u9635\u7684\u53c2\u6570\u3002\u8fd9\u5c31\u662f\u6240\u6709\u8fd9\u4e9b\u53c2\u6570\u73b0\u5728\u5728 DirectionalLight \u7c7b\u4e2d\u5b9a\u4e49\u7684\u65b9\u5f0f\uff0c\u56e0\u6b64\u53ef\u4ee5\u6839\u636e\u6bcf\u4e2a\u573a\u666f\u6b63\u786e\u8bbe\u7f6e\u8fd9\u4e9b\u53c2\u6570\u3002 \u4f60\u53ef\u4ee5\u5b9e\u73b0\u4e00\u4e2a\u66f4\u81ea\u52a8\u7684\u65b9\u6cd5\uff0c\u901a\u8fc7\u8ba1\u7b97\u6444\u50cf\u673a\u622a\u9525\uff08Frustum\uff09\u7684\u4e2d\u5fc3\uff0c\u56de\u5230\u5149\u7684\u65b9\u5411\uff0c\u5efa\u7acb\u4e00\u4e2a\u5305\u542b\u573a\u666f\u4e2d\u6240\u6709\u5bf9\u8c61\u7684\u6b63\u4ea4\u6295\u5f71\u3002\u4e0b\u56fe\u5c55\u793a\u4e86\u5982\u4e0a\u6240\u8ff0\u7684\u4e09\u7ef4\u573a\u666f\u3001\u76f8\u673a\u4f4d\u7f6e\u3001\u622a\u9525\uff08\u84dd\u8272\uff09\u3001\u6700\u4f73\u5149\u6e90\u4f4d\u7f6e\u4ee5\u53ca\u7ea2\u8272\u7684\u8fb9\u754c\u6846\u3002 \u4e0a\u8ff0\u65b9\u6cd5\u7684\u95ee\u9898\u662f\u5f88\u96be\u8ba1\u7b97\uff0c\u5982\u679c\u4f60\u6709\u5f88\u5c0f\u7684\u7269\u4f53\uff0c\u5e76\u4e14\u8fb9\u754c\u6846\u5f88\u5927\uff0c\u4f60\u53ef\u4ee5\u4f1a\u5f97\u5230\u5947\u602a\u7684\u7ed3\u679c\u3002\u8fd9\u91cc\u4ecb\u7ecd\u7684\u65b9\u6cd5\u5bf9\u4e8e\u5c0f\u573a\u666f\u66f4\u7b80\u5355\uff0c\u4f60\u53ef\u4ee5\u8c03\u6574\u5b83\u4ee5\u5339\u914d\u4f60\u7684\u6a21\u578b\uff08\u5373\u4f7f\u4f60\u53ef\u4ee5\u9009\u62e9\u663e\u5f0f\u8bbe\u7f6e\u706f\u5149\u7684\u4f4d\u7f6e\uff0c\u4ee5\u907f\u514d\u76f8\u673a\u8fdc\u79bb\u539f\u70b9\u79fb\u52a8\u65f6\u4ea7\u751f\u5947\u602a\u7684\u6548\u679c\uff09\u3002\u5982\u679c\u4f60\u60f3\u8981\u4e00\u4e2a\u66f4\u901a\u7528\u7684\u6a21\u677f\uff0c\u53ef\u4ee5\u5e94\u7528\u5230\u4efb\u4f55\u573a\u666f\uff0c\u4f60\u5e94\u8be5\u6269\u5c55\u5b83\uff0c\u4ee5\u652f\u6301\u5c42\u53e0\u9634\u5f71\u56fe\u3002 \u8ba9\u6211\u4eec\u7ee7\u7eed\u3002\u5728\u4f7f\u7528\u6df1\u5ea6\u56fe\u5b9e\u9645\u8ba1\u7b97\u9634\u5f71\u4e4b\u524d\uff0c\u53ef\u4ee5\u4f7f\u7528\u751f\u6210\u7684\u7eb9\u7406\u6e32\u67d3\u4e00\u4e2a\u6b63\u65b9\u5f62\uff0c\u4ee5\u89c2\u5bdf\u6df1\u5ea6\u56fe\u7684\u5b9e\u9645\u5916\u89c2\u3002\u5728\u6709\u4e00\u4e2a\u65cb\u8f6c\u7acb\u65b9\u4f53\u6f02\u6d6e\u5728\u4e00\u4e2a\u6709\u5782\u76f4\u5e73\u884c\u5149\u7684\u5e73\u9762\u4e0a\u7684\u573a\u666f\u4e2d\uff0c\u4f60\u53ef\u4ee5\u5f97\u5230\u5982\u4e0b\u7ed3\u679c\u3002 \u5982\u4e0a\u6240\u8ff0\uff0c\u989c\u8272\u8d8a\u6df1\uff0c\u79bb\u5149\u6e90\u7684\u4f4d\u7f6e\u8d8a\u8fd1\u3002\u6df1\u5ea6\u56fe\u4e2d\u5149\u6e90\u4f4d\u7f6e\u7684\u5f71\u54cd\u662f\u4ec0\u4e48\uff1f\u4f60\u53ef\u4ee5\u4fee\u6539\u5e73\u884c\u5149\u7167\u7684\u500d\u589e\u56e0\u5b50\uff0c\u5c06\u770b\u5230\u5728\u7eb9\u7406\u4e2d\u6e32\u67d3\u7684\u5bf9\u8c61\u7684\u5927\u5c0f\u4e0d\u4f1a\u53d8\u5c0f\u3002\u8bb0\u4f4f\uff0c\u6211\u4eec\u4f7f\u7528\u7684\u662f\u6b63\u4ea4\u6295\u5f71\u77e9\u9635\uff0c\u7269\u4f53\u4e0d\u4f1a\u968f\u7740\u8ddd\u79bb\u589e\u5927\u800c\u53d8\u5c0f\u3002\u4f60\u5c06\u770b\u5230\u7684\u662f\uff0c\u6240\u6709\u7684\u989c\u8272\u90fd\u4f1a\u53d8\u5f97\u66f4\u4eae\uff0c\u5982\u4e0b\u6240\u793a\uff1a \u8fd9\u662f\u5426\u610f\u5473\u7740\u6211\u4eec\u53ef\u4ee5\u4e3a\u5149\u6e90\u9009\u62e9\u4e00\u4e2a\u8f83\u8fdc\u7684\u4f4d\u7f6e\u800c\u4e0d\u9020\u6210\u4efb\u4f55\u540e\u679c\u5462\uff1f\u7b54\u6848\u662f\u4e0d\u884c\u3002\u5982\u679c\u5149\u6e90\u79bb\u6211\u4eec\u8981\u6e32\u67d3\u7684\u5bf9\u8c61\u592a\u8fdc\uff0c\u8fd9\u4e9b\u5bf9\u8c61\u4f1a\u8d85\u51fa\u6b63\u4ea4\u6295\u5f71\u77e9\u9635\u5b9a\u4e49\u7684\u8fb9\u754c\u6846\u3002\u5728\u6b64\u60c5\u51b5\u4e0b\uff0c\u4f60\u4f1a\u5f97\u5230\u4e00\u4e2a\u4e0d\u9519\u7684\u767d\u8272\u7eb9\u7406\uff0c\u4f46\u8fd9\u662f\u6ca1\u7528\u7684\u9634\u5f71\u56fe\u3002\u597d\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u589e\u52a0\u8fb9\u754c\u6846\u7684\u5927\u5c0f\uff0c\u4e00\u5207\u90fd\u4f1a\u597d\u7684\uff0c\u5bf9\u5417\uff1f\u7b54\u6848\u4e5f\u662f\u4e0d\u884c\u3002\u5982\u679c\u4f60\u4e3a\u6b63\u4ea4\u6295\u5f71\u77e9\u9635\u9009\u7528\u4e86\u5de8\u5927\u7684\u5c3a\u5bf8\uff0c\u4f60\u7684\u7269\u4f53\u5728\u7eb9\u7406\u4e2d\u4f1a\u88ab\u7ed8\u5236\u5f97\u5f88\u5c0f\uff0c\u6df1\u5ea6\u503c\u751a\u81f3\u4f1a\u91cd\u53e0\uff0c\u9020\u6210\u5947\u602a\u7684\u7ed3\u679c\u3002\u597d\u5427\uff0c\u6240\u4ee5\u4f60\u53ef\u4ee5\u8003\u8651\u589e\u52a0\u7eb9\u7406\u5927\u5c0f\uff0c\u4f46\u5728\u6b64\u60c5\u51b5\u4e0b\uff0c\u4f60\u662f\u6709\u9650\u5236\u7684\uff0c\u7eb9\u7406\u4e0d\u80fd\u56e0\u4f7f\u7528\u5de8\u5927\u7684\u7f16\u8f91\u6846\u800c\u65e0\u9650\u589e\u5927\u3002 \u56e0\u6b64\uff0c\u53ef\u4ee5\u770b\u5230\uff0c\u9009\u62e9\u5149\u6e90\u7684\u4f4d\u7f6e\u548c\u6b63\u4ea4\u6295\u5f71\u7684\u53c2\u6570\u662f\u4e00\u4e2a\u590d\u6742\u7684\u5e73\u8861\uff0c\u8fd9\u4f7f\u5f97\u4f7f\u7528\u9634\u5f71\u56fe\u5f88\u96be\u5f97\u5230\u6b63\u786e\u7684\u6548\u679c\u3002 \u8ba9\u6211\u4eec\u56de\u5230\u6e32\u67d3\u8fc7\u7a0b\uff0c\u4e00\u65e6\u8ba1\u7b97\u4e86\u6df1\u5ea6\u56fe\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5728\u6e32\u67d3\u573a\u666f\u65f6\u4f7f\u7528\u5b83\u3002\u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u4fee\u6539\u573a\u666f\u7684\u9876\u70b9\u7740\u8272\u5668\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u9876\u70b9\u7740\u8272\u5668\u4f7f\u7528\u900f\u89c6\u77e9\u9635\u5c06\u9876\u70b9\u5750\u6807\u4ece\u6a21\u578b\u89c2\u5bdf\u7a7a\u95f4\u6295\u5f71\u5230\u5c4f\u5e55\u7a7a\u95f4\u3002\u73b0\u5728\u8fd8\u9700\u8981\u4f7f\u7528\u6295\u5f71\u77e9\u9635\u4ece\u5149\u7167\u7a7a\u95f4\u5750\u6807\u6295\u5f71\u9876\u70b9\u5750\u6807\uff0c\u4ee5\u7528\u4e8e\u7247\u5143\u7740\u8272\u5668\u4e2d\u8ba1\u7b97\u9634\u5f71\u3002 \u9876\u70b9\u7740\u8272\u5668\u662f\u8fd9\u6837\u4fee\u6539\u7684\uff1a #version 330 layout (location=0) in vec3 position; layout (location=1) in vec2 texCoord; layout (location=2) in vec3 vertexNormal; out vec2 outTexCoord; out vec3 mvVertexNormal; out vec3 mvVertexPos; out vec4 mlightviewVertexPos; out mat4 outModelViewMatrix; uniform mat4 modelViewMatrix; uniform mat4 projectionMatrix; uniform mat4 modelLightViewMatrix; uniform mat4 orthoProjectionMatrix; void main() { vec4 mvPos = modelViewMatrix * vec4(position, 1.0); gl_Position = projectionMatrix * mvPos; outTexCoord = texCoord; mvVertexNormal = normalize(modelViewMatrix * vec4(vertexNormal, 0.0)).xyz; mvVertexPos = mvPos.xyz; mlightviewVertexPos = orthoProjectionMatrix * modelLightViewMatrix * vec4(position, 1.0); outModelViewMatrix = modelViewMatrix; } \u6211\u4eec\u4e3a\u5149\u7167\u89c2\u5bdf\u77e9\u9635\u548c\u6b63\u4ea4\u6295\u5f71\u77e9\u9635\u4f7f\u7528\u4e86\u65b0\u7684Uniform\u3002 \u5728\u7247\u5143\u7740\u8272\u5668\u4e2d\uff0c\u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u51fd\u6570\u6765\u8ba1\u7b97\u9634\u5f71\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a float calcShadow(vec4 position) { float shadowFactor = 1.0; vec3 projCoords = position.xyz; // \u4ece\u5c4f\u5e55\u5750\u6807\u53d8\u6362\u5230\u7eb9\u7406\u5750\u6807 projCoords = projCoords * 0.5 + 0.5; if ( projCoords.z < texture(shadowMap, projCoords.xy).r ) { // \u5f53\u524d\u7247\u5143\u4e0d\u5728\u9634\u5f71\u4e2d shadowFactor = 0; } return 1 - shadowFactor; } \u8be5\u51fd\u6570\u63a5\u6536\u4f7f\u7528\u6b63\u4ea4\u6295\u5f71\u77e9\u9635\u6295\u5f71\u7684\u5149\u7167\u89c2\u5bdf\u7a7a\u95f4\u7684\u5750\u6807\u3002\u5982\u679c\u5750\u6807\u5728\u9634\u5f71\u4e2d\uff0c\u5219\u8fd4\u56de 0 \uff0c\u5982\u679c\u4e0d\u5728\u9634\u5f71\u4e2d\uff0c\u5219\u8fd4\u56de 1 \u3002\u9996\u5148\uff0c\u5c06\u5750\u6807\u8f6c\u6362\u4e3a\u7eb9\u7406\u5750\u6807\u3002\u5c4f\u5e55\u5750\u6807\u5728 [-1, 1] \u8303\u56f4\u5185\uff0c\u4f46\u7eb9\u7406\u5750\u6807\u5728 [0, 1] \u8303\u56f4\u5185\u3002\u6211\u4eec\u901a\u8fc7\u5750\u6807\u4ece\u7eb9\u7406\u4e2d\u83b7\u53d6\u6df1\u5ea6\u503c\uff0c\u5e76\u5c06\u5176\u4e0e\u7247\u5143\u5750\u6807\u7684 z \u503c\u6bd4\u8f83\u3002\u5982\u679c z \u503c\u4f4e\u4e8e\u50a8\u5b58\u5728\u7eb9\u7406\u4e2d\u7684\u503c\uff0c\u5219\u8868\u793a\u7247\u5143\u4e0d\u518d\u9634\u5f71\u4e2d\u3002 \u5728\u7247\u5143\u7740\u8272\u5668\u4e2d\uff0c calcShadow \u51fd\u6570\u7684\u8fd4\u56de\u503c\uff0c\u7528\u4e8e\u8c03\u8282\u70b9\u5149\u6e90\u3001\u805a\u5149\u6e90\u548c\u5e73\u884c\u5149\u5bf9\u5149\u7167\u989c\u8272\u7684\u5171\u4eab\u3002\u73af\u5883\u5149\u4e0d\u53d7\u9634\u5f71\u7684\u5f71\u54cd\u3002 float shadow = calcShadow(mlightviewVertexPos); fragColor = clamp(ambientC * vec4(ambientLight, 1) + diffuseSpecularComp * shadow, 0, 1); \u5728 Renderer \u7c7b\u7684 renderScene \u65b9\u6cd5\u4e2d\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4f20\u9012\u6b63\u4ea4\u6295\u5f71\u548c\u5149\u7167\u89c2\u5bdf\u77e9\u9635\u5230Uniform\uff08\u6211\u4eec\u8fd8\u9700\u8981\u4fee\u6539\u7740\u8272\u5668\u7684\u521d\u59cb\u5316\u65b9\u6cd5\u4ee5\u521b\u5efa\u65b0\u7684Uniform\uff09\u3002\u4f60\u53ef\u4ee5\u5728\u672c\u4e66\u7684\u6e90\u4ee3\u7801\u4e2d\u4e86\u89e3\u3002 \u5982\u679c\u8fd0\u884c DummyGame \u7c7b\uff0c\u8be5\u7c7b\u5df2\u88ab\u4fee\u6539\u4e3a\u5728\u5e26\u6709\u5e73\u884c\u5149\u7684\u5e73\u9762\u4e0a\u8bbe\u7f6e\u6709\u60ac\u6d6e\u7684\u7acb\u65b9\u4f53\uff0c\u5e76\u53ef\u4f7f\u7528\u4e0a\u4e0b\u952e\u4fee\u6539\u89d2\u5ea6\uff0c\u5219\u5e94\u8be5\u770b\u5230\u5982\u4e0b\u60c5\u51b5\u3002 \u867d\u7136\u9634\u5f71\u5df2\u7ecf\u5de5\u4f5c\u4e86\uff08\u4f60\u53ef\u4ee5\u901a\u8fc7\u79fb\u52a8\u5149\u7167\u65b9\u5411\u6765\u68c0\u67e5\uff09\uff0c\u4f46\u662f\u5b9e\u9645\u4f1a\u51fa\u73b0\u4e00\u4e9b\u95ee\u9898\u3002\u9996\u5148\uff0c\u88ab\u7167\u4eae\u7684\u7269\u4f53\u4e2d\u6709\u5947\u602a\u7684\u7ebf\u6761\u3002\u8fd9\u79cd\u60c5\u51b5\u88ab\u79f0\u4e3a\u9634\u5f71\u5931\u771f\uff08Shadow Acne\uff09\uff0c\u5b83\u662f\u7531\u50a8\u5b58\u6df1\u5ea6\u56fe\u7684\u7eb9\u7406\u7684\u5206\u8fa8\u7387\u6709\u9650\u9020\u6210\u7684\u3002\u7b2c\u4e8c\u4e2a\u95ee\u9898\u662f\uff0c\u9634\u5f71\u7684\u8fb9\u754c\u4e0d\u5e73\u6ed1\uff0c\u770b\u8d77\u6765\u5f88\u7c97\u7cd9\u3002\u539f\u56e0\u540c\u6837\uff0c\u7eb9\u7406\u5206\u8fa8\u7387\u3002\u6211\u4eec\u5c06\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\uff0c\u4ee5\u63d0\u9ad8\u9634\u5f71\u8d28\u91cf\u3002","title":"\u9634\u5f71\u6620\u5c04"},{"location":"18-shadows/#_2","text":"\u65e2\u7136\u6211\u4eec\u5df2\u7ecf\u6709\u4e86\u9634\u5f71\u6620\u5c04\u673a\u5236\uff0c\u90a3\u4e48\u8ba9\u6211\u4eec\u6765\u89e3\u51b3\u73b0\u6709\u7684\u95ee\u9898\u3002\u6211\u4eec\u5148\u4ece\u5931\u771f\u95ee\u9898\u5f00\u59cb\u3002\u6df1\u5ea6\u56fe\u7eb9\u7406\u5927\u5c0f\u6709\u9650\uff0c\u56e0\u6b64\uff0c\u53ef\u4ee5\u5c06\u591a\u4e2a\u7247\u5143\u6620\u5c04\u5230\u8be5\u7eb9\u7406\u6df1\u5ea6\u4e2d\u7684\u540c\u4e00\u50cf\u7d20\u3002\u7eb9\u7406\u6df1\u5ea6\u50a8\u5b58\u6700\u5c0f\u6df1\u5ea6\uff0c\u56e0\u6b64\u5230\u6700\u540e\uff0c\u6211\u4eec\u6709\u51e0\u4e2a\u7247\u5143\u5171\u4eab\u76f8\u540c\u7684\u6df1\u5ea6\uff0c\u5c3d\u7ba1\u5b83\u4eec\u7684\u8ddd\u79bb\u4e0d\u540c\u3002 \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u589e\u52a0\u7247\u5143\u7740\u8272\u5668\u4e2d\u7684\u6df1\u5ea6\u6bd4\u8f83\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u6dfb\u52a0\u4e86\u4e00\u4e2a\u504f\u79fb\u3002 float bias = 0.05; if ( projCoords.z - bias < texture(shadowMap, projCoords.xy).r ) { // \u5f53\u524d\u7247\u5143\u4e0d\u5728\u9634\u5f71\u4e2d shadowFactor = 0; } \u73b0\u5728\uff0c\u9634\u5f71\u5931\u771f\u6d88\u5931\u4e86\u3002 \u8bd1\u8005\u6ce8\uff1a\u4f7f\u7528\u504f\u79fb\u6765\u6d88\u9664\u9634\u5f71\u5931\u771f\u53c8\u4f1a\u9020\u6210\u60ac\u6d6e\uff08Peter Panning\uff09\u95ee\u9898\uff0c\u53e6\u8bf7\u53c2\u9605 LearnOpenGL\u9634\u5f71\u6620\u5c04 \u4e00\u6587\u3002 \u73b0\u5728\u6211\u4eec\u8981\u89e3\u51b3\u7684\u662f\u53bb\u9634\u5f71\u8fb9\u7f18\u95ee\u9898\uff0c\u8fd9\u4e5f\u662f\u7531\u7eb9\u7406\u5206\u8fa8\u7387\u5f15\u8d77\u7684\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u7247\u5143\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u7247\u5143\u7684\u5750\u6807\u503c\u548c\u5468\u56f4\u7684\u503c\u5bf9\u6df1\u5ea6\u56fe\u8fdb\u884c\u91c7\u6837\u3002\u7136\u540e\u6211\u4eec\u5c06\u8ba1\u7b97\u5e73\u5747\u503c\u5e76\u5c06\u8be5\u503c\u6307\u5b9a\u4e3a\u9634\u5f71\u503c\u3002\u5728\u6b64\u60c5\u51b5\u4e0b\uff0c\u5b83\u7684\u503c\u4e0d\u4f1a\u662f 0 \u548c 1 \u4f46\u53ef\u4ee5\u5728\u4e24\u8005\u95f4\u53d6\u503c\uff0c\u4ee5\u83b7\u5f97\u66f4\u5e73\u6ed1\u7684\u8fb9\u7f18\u3002 \u5728\u7eb9\u7406\u5750\u6807\u4e2d\uff0c\u5468\u56f4\u503c\u5fc5\u987b\u4e0e\u5f53\u524d\u7247\u5143\u4f4d\u7f6e\u4fdd\u6301\u4e00\u4e2a\u50cf\u7d20\u8ddd\u79bb\u3002\u6240\u4ee5\u6211\u4eec\u9700\u8981\u8ba1\u7b97\u7eb9\u7406\u5750\u6807\u4e2d\u4e00\u4e2a\u50cf\u7d20\u7684\u589e\u91cf\uff0c\u5b83\u7b49\u4e8e 1 / \u7eb9\u7406\u5927\u5c0f \u3002 \u5728\u7247\u5143\u7740\u8272\u5668\u4e2d\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4fee\u6539\u9634\u5f71\u94f6\u5b50\u7684\u8ba1\u7b97\u6765\u5f97\u5230\u4e00\u4e2a\u5e73\u5747\u503c\u3002 float shadowFactor = 0.0; vec2 inc = 1.0 / textureSize(shadowMap, 0); for(int row = -1; row <= 1; ++row) { for(int col = -1; col <= 1; ++col) { float textDepth = texture(shadowMap, projCoords.xy + vec2(row, col) * inc).r; shadowFactor += projCoords.z - bias > textDepth ? 1.0 : 0.0; } } shadowFactor /= 9.0; \u73b0\u5728\u7ed3\u679c\u770b\u8d77\u6765\u66f4\u5e73\u6ed1\u4e86\u3002 \u73b0\u5728\u6211\u4eec\u7684\u793a\u4f8b\u770b\u8d77\u6765\u597d\u591a\u4e86\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u8fd9\u91cc\u4ecb\u7ecd\u7684\u9634\u5f71\u6620\u5c04\u6280\u672f\u4ecd\u6709\u5f88\u5927\u7684\u6539\u8fdb\u7a7a\u95f4\u3002\u4f60\u53ef\u4ee5\u67e5\u770b\u5982\u4f55\u89e3\u51b3\u60ac\u6d6e\uff08Peter Panning\uff09\u6548\u679c\uff08\u56e0\u504f\u79fb\u5f15\u8d77\uff09\u548c\u5176\u4ed6\u6539\u8fdb\u9634\u5f71\u8fb9\u7f18\u7684\u8ba1\u7b97\u3002\u65e0\u8bba\u5982\u4f55\uff0c\u6709\u4e86\u8fd9\u91cc\u6240\u8bb2\u89e3\u7684\u6982\u5ff5\uff0c\u4f60\u5c31\u6709\u4e86\u5f00\u59cb\u4fee\u6539\u793a\u4f8b\u7684\u826f\u597d\u57fa\u7840\u3002 \u4e3a\u4e86\u6e32\u67d3\u591a\u4e2a\u5149\u6e90\uff0c\u4f60\u53ea\u9700\u8981\u4e3a\u6bcf\u4e2a\u5149\u6e90\u6e32\u67d3\u4e00\u4e2a\u6df1\u5ea6\u56fe\u3002\u5728\u6e32\u67d3\u573a\u666f\u65f6\uff0c\u4f60\u9700\u8981\u91c7\u6837\u6240\u6709\u7684\u6df1\u5ea6\u56fe\u6765\u8ba1\u7b97\u5408\u9002\u7684\u9634\u5f71\u7cfb\u6570\u3002","title":"\u6539\u8fdb\u9634\u5f71\u6620\u5c04"},{"location":"19-animations/","text":"\u52a8\u753b\uff08Animations\uff09 \u5f15\u8a00 \u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u5df2\u7ecf\u52a0\u8f7d\u4e86\u9759\u60013D\u6a21\u578b\uff0c\u5728\u672c\u7ae0\u4e2d\uff0c\u6211\u4eec\u8bb2\u5b66\u4e60\u5982\u4f55\u4e3a\u5b83\u4eec\u8bbe\u7f6e\u52a8\u753b\u3002\u5728\u601d\u8003\u52a8\u753b\u65f6\uff0c\u9996\u5148\u60f3\u5230\u7684\u65b9\u6cd5\u662f\u4e3a\u6bcf\u4e2a\u6a21\u578b\u72b6\u6001\u521b\u5efa\u4e0d\u540c\u7684\u7f51\u683c\uff0c\u5c06\u5b83\u4eec\u52a0\u8f7d\u5230GPU\u4e2d\uff0c\u7136\u540e\u6309\u987a\u5e8f\u7ed8\u5236\uff0c\u4ee5\u6b64\u9020\u6210\u52a8\u753b\u7684\u5047\u8c61\u3002\u867d\u7136\u8fd9\u79cd\u65b9\u6cd5\u5bf9\u4e8e\u67d0\u4e9b\u6e38\u620f\u6765\u8bf4\u662f\u5b8c\u7f8e\u7684\uff0c\u4f46\u662f\u5b83\u7684\u6548\u7387\u4e0d\u662f\u5f88\u9ad8\uff08\u5c31\u5185\u5b58\u6d88\u8017\u6765\u8bf4\uff09\u3002 \u8fd9\u5c31\u662f\u9aa8\u9abc\u52a8\u753b\uff08Skeletal Animation\uff09\u7684\u7528\u6b66\u4e4b\u5730\u3002\u5728\u9aa8\u9abc\u52a8\u753b\u4e2d\uff0c\u6a21\u578b\u7684\u52a8\u753b\u65b9\u5f0f\u7531\u5176\u5e95\u5c42\u9aa8\u67b6\uff08Skeletal\uff09\u5b9a\u4e49\uff0c\u9aa8\u67b6\u662f\u7531\u88ab\u79f0\u4e3a\u5173\u8282\uff08Joints\uff09\u7684\u7279\u6b8a\u70b9\u7684\u5c42\u6b21\u7ed3\u6784\u5b9a\u4e49\u7684\uff0c\u8fd9\u4e9b\u5173\u8282\u53c8\u7531\u5b83\u4eec\u7684\u4f4d\u7f6e\u548c\u65cb\u8f6c\u6765\u5b9a\u4e49\u3002\u6211\u4eec\u4e5f\u8bf4\u8fc7\u8fd9\u662f\u4e00\u4e2a\u5c42\u6b21\u7ed3\u6784\uff0c\u8fd9\u610f\u5473\u7740\u6bcf\u4e2a\u5173\u952e\u7684\u6700\u7ec8\u4f4d\u7f6e\u90fd\u6536\u5230\u5b83\u4eec\u7684\u7236\u5c42\u6b21\u7684\u5f71\u54cd\u3002\u4ee5\u624b\u8155\u4e3a\u4f8b\uff0c\u5982\u679c\u89d2\u8272\u79fb\u52a8\u8098\u90e8\u548c\u80a9\u8180\uff0c\u624b\u8155\u7684\u4f4d\u7f6e\u5c31\u4f1a\u53d1\u751f\u6539\u53d8\u3002 \u5173\u8282\u4e0d\u9700\u8981\u8868\u793a\u4e00\u4e2a\u5408\u4e4e\u73b0\u5b9e\u7684\u9aa8\u9abc\u6216\u5173\u8282\uff0c\u5b83\u4eec\u662f\u4eba\u5de5\u8bbe\u7f6e\u7684\uff0c\u5141\u8bb8\u521b\u4f5c\u8005\u5efa\u6a21\u52a8\u753b\u3002\u9664\u4e86\u5173\u8282\uff0c\u6211\u4eec\u8fd8\u6709\u9876\u70b9\uff0c\u8fd9\u4e9b\u9876\u70b9\u5b9a\u4e49\u4e86\u6784\u62103D\u6a21\u578b\u7684\u4e09\u89d2\u5f62\u3002\u4f46\u5728\u9aa8\u9abc\u52a8\u753b\u4e2d\uff0c\u9876\u70b9\u662f\u6839\u636e\u4e0e\u4e4b\u76f8\u5173\u7684\u5173\u8282\u7684\u4f4d\u7f6e\u7ed8\u5236\u7684\u3002 \u5728\u672c\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u4f7f\u7528MD5\u683c\u5f0f\u6765\u52a0\u8f7d\u6709\u52a8\u753b\u7684\u6a21\u578b\u3002MD5\u683c\u5f0f\u662f\u7531\u300a\u6bc1\u706d\u6218\u58eb\u300b\u7684\u5f00\u53d1\u5546ID Software\u5236\u5b9a\u7684\uff0c\u5b83\u57fa\u672c\u4e0a\u662f\u4e00\u79cd\u57fa\u4e8e\u6587\u672c\u7684\u6587\u4ef6\u683c\u5f0f\uff0c\u6613\u4e8e\u7406\u89e3\u3002\u53e6\u4e00\u79cd\u65b9\u6cd5\u662f\u4f7f\u7528 Collada \u683c\u5f0f\uff0c\u8fd9\u662f\u8bb8\u591a\u5de5\u5177\u652f\u6301\u7684\u516c\u5171\u6807\u51c6\u3002Collada\u662f\u4e00\u79cd\u57fa\u4e8eXML\u7684\u6587\u4ef6\u683c\u5f0f\uff0c\u4f46\u5b83\u7684\u7f3a\u70b9\u662f\u975e\u5e38\u590d\u6742\uff081.5\u7248\u672c\u7684\u89c4\u8303\u5c31\u6709500\u591a\u9875\uff09\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u5c06\u575a\u6301\u4f7f\u7528\u4e00\u79cd\u66f4\u7b80\u5355\u7684\u683c\u5f0f\uff0cMD5\uff0c\u5b83\u4f7f\u6211\u4eec\u4e13\u6ce8\u4e8e\u9aa8\u9abc\u52a8\u753b\u7684\u6982\u5ff5\u5e76\u521b\u5efa\u4e00\u4e2a\u53ef\u5de5\u4f5c\u7684\u793a\u4f8b\u3002 \u4f60\u8fd8\u53ef\u4ee5\u901a\u8fc7\u5728\u4e92\u8054\u7f51\u4e0a\u627e\u5230 \u7279\u5b9a\u63d2\u4ef6 \u5c06\u4e00\u4e9b\u6a21\u578b\u4eceBlender\u5bfc\u51fa\u4e3aMD5\u683c\u5f0f\u3002 \u5728\u672c\u7ae0\u4e2d\uff0c\u6211\u53c2\u8003\u4e86\u8bb8\u591a\u4e0d\u540c\u7684\u8d44\u6599\uff0c\u4f46\u662f\u6211\u53d1\u73b0\u6709\u4e24\u4e2a\u8d44\u6599\u53ef\u4ee5\u5f88\u597d\u5730\u89e3\u91ca\u5982\u4f55\u4f7f\u7528MD5\u6587\u4ef6\u521b\u5efa\u52a8\u753b\u6a21\u578b\u3002\u8fd9\u4e9b\u8d44\u6599\u7684\u6765\u6e90\u5982\u4e0b\uff1a http://www.3dgep.com/gpu-skinning-of-md5-models-in-opengl-and-cg/ http://ogldev.atspace.co.uk/www/tutorial38/tutorial38.html \u8ba9\u6211\u4eec\u4ece\u7f16\u5199\u89e3\u6790MD5\u6587\u4ef6\u7684\u4ee3\u7801\u5f00\u59cb\uff0cMD5\u683c\u5f0f\u5b9a\u4e49\u4e86\u4e24\u79cd\u7c7b\u578b\u7684\u6587\u4ef6\uff1a \u7f51\u683c\u5b9a\u4e49\u6587\u4ef6\uff1a\u5b83\u5b9a\u4e49\u4e86\u6784\u62103D\u6a21\u578b\u7684\u7f51\u683c\u96c6\u7684\u5173\u8282\u3001\u9876\u70b9\u548c\u7eb9\u7406\u3002\u8fd9\u4e2a\u6587\u4ef6\u901a\u5e38\u6709\u4e00\u4e2a\u540d\u4e3a .md5mesh \u7684\u6269\u5c55\u540d\u3002 \u52a8\u753b\u5b9a\u4e49\u6587\u4ef6\uff1a\u5b9a\u4e49\u53ef\u4f7f\u7528\u4e8e\u6a21\u578b\u7684\u52a8\u753b\u3002\u8fd9\u4e2a\u6587\u4ef6\u901a\u5e38\u6709\u4e00\u4e2a\u540d\u4e3a .md5anim \u7684\u6269\u5c55\u540d\u3002 MD5\u6587\u4ef6\u7531\u5934\uff08Header\uff09\u548c\u5927\u62ec\u53f7\u4e4b\u95f4\u5305\u542b\u7684\u4e0d\u540c\u90e8\u5206\u7ec4\u6210\u3002\u8ba9\u6211\u4eec\u5f00\u59cb\u67e5\u770b\u7f51\u683c\u5b9a\u4e49\u6587\u4ef6\u3002\u5728\u53c2\u8003\u8d44\u6599\u6587\u4ef6\u5939\u4e2d\uff0c\u4f60\u5c06\u53d1\u73b0\u51e0\u79cdMD5\u683c\u5f0f\u7684\u6a21\u578b\u3002\u5982\u679c\u4f60\u6253\u5f00\u5176\u4e2d\u4e00\u4e2a\uff0c\u4f60\u4f1a\u770b\u5230\u7c7b\u4f3c\u8fd9\u6837\u7684\u7ed3\u6784\u3002 \u5728\u7f51\u683c\u5b9a\u4e49\u6587\u4ef6\u4e2d\u53ef\u4ee5\u770b\u5230\u7684\u7b2c\u4e00\u4e2a\u7ed3\u6784\u662f\u5934\u3002\u4f60\u53ef\u4ee5\u5728\u4e0b\u8ff0\u63d0\u4f9b\u7684\u793a\u4f8b\u4e2d\uff0c\u770b\u5230\u5934\u7684\u5185\u5bb9\uff1a MD5Version 10 commandline \"\" numJoints 33 numMeshes 6 \u5934\u5b9a\u4e49\u4e86\u5982\u4e0b\u5c5e\u6027\uff1a \u5b83\u6240\u9075\u5faa\u7684MD5\u89c4\u8303\u7684\u7248\u672c\u3002 \u7528\u4e8e\uff08\u4ece3D\u5efa\u6a21\u5de5\u5177\uff09\u751f\u6210\u6b64\u6587\u4ef6\u7684\u547d\u4ee4\u3002 \u5728\u5173\u8282\u90e8\u5206\u5b9a\u4e49\u7684\u5173\u8282\u6570\u3002 \u7f51\u683c\u6570\uff08\u9700\u8981\u7684\u7f51\u683c\u8282\u6570\uff09\u3002 \u5173\u952e\u90e8\u5206\u5b9a\u4e49\u5173\u8282\u7684\u540d\u79f0\u3001\u72b6\u6001\u3001\u4f4d\u7f6e\u53ca\u5176\u5173\u7cfb\u3002\u4e0b\u9762\u5c55\u793a\u4e86\u4e00\u4e2a\u793a\u4f8b\u6a21\u578b\u7684\u5173\u8282\u90e8\u5206\u7684\u7247\u6bb5\uff1a joints { \"origin\" -1 ( -0.000000 0.016430 -0.006044 ) ( 0.707107 0.000000 0.707107 ) // \"sheath\" 0 ( 11.004813 -3.177138 31.702473 ) ( 0.307041 -0.578614 0.354181 ) // origin \"sword\" 1 ( 9.809593 -9.361549 40.753730 ) ( 0.305557 -0.578155 0.353505 ) // sheath \"pubis\" 0 ( 0.014076 2.064442 26.144581 ) ( -0.466932 -0.531013 -0.466932 ) // origin \u2026\u2026 } \u5173\u8282\u7531\u4ee5\u4e0b\u5c5e\u6027\u5b9a\u4e49\uff1a \u5173\u8282\u540d\u79f0\uff0c\u5f15\u53f7\u4e2d\u7684\u6587\u672c\u5c5e\u6027\u3002 \u5173\u8282\u7684\u7236\u5173\u8282\uff0c\u4f7f\u7528\u7d22\u5f15\uff0c\u8be5\u7d22\u5f15\u4f7f\u7528\u7236\u5173\u8282\u5728\u5217\u8868\u4e2d\u7684\u4f4d\u7f6e\u6307\u5411\u7236\u5173\u8282\u3002\u6839\u5173\u8282\u7684\u7236\u5173\u8282\u7b49\u4e8e-1\u3002 \u5173\u8282\u4f4d\u7f6e\uff0c\u5728\u6a21\u578b\u7a7a\u95f4\u5750\u6807\u7cfb\u4e2d\u5b9a\u4e49\u3002 \u5173\u8282\u65b9\u5411\uff0c\u4e5f\u5728\u6a21\u578b\u7a7a\u95f4\u5750\u6807\u7cfb\u4e2d\u5b9a\u4e49\uff0c\u65b9\u5411\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u56db\u5143\u6570\uff0c\u4f46\u5176w\u5206\u91cf\u4e0d\u5305\u62ec\u5728\u6b64\u3002 \u5728\u7ee7\u7eed\u89e3\u91ca\u6587\u4ef6\u7684\u5176\u4f59\u90e8\u5206\u4e4b\u524d\uff0c\u6211\u4eec\u5148\u6765\u8c08\u8c08\u56db\u5143\u6570\uff08Quaternions\uff09\u3002\u56db\u5143\u6570\u662f\u7528\u4e8e\u8868\u793a\u65cb\u8f6c\u7684\u56db\u4e2a\u6784\u6210\u5143\u7d20\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u4e00\u76f4\u5728\u4f7f\u7528\u6b27\u62c9\u89d2\uff08\u504f\u822a\u3001\u4fef\u4ef0\u548c\u6eda\u8f6c\uff09\u6765\u5b9a\u4e49\u65cb\u8f6c\uff0c\u8fd9\u57fa\u672c\u4e0a\u5b9a\u4e49\u4e86\u56f4\u7ed5x\u3001y\u548cz\u53eb\u7684\u65cb\u8f6c\u3002\u4f46\u662f\uff0c\u6b27\u62c9\u89d2\u5728\u5904\u7406\u65cb\u8f6c\u65f6\u4f1a\u51fa\u73b0\u4e00\u4e9b\u95ee\u9898\uff0c\u7279\u522b\u662f\u4f60\u5fc5\u987b\u77e5\u9053\u6b63\u786e\u7684\u65cb\u8f6c\u987a\u5e8f\uff0c\u5e76\u4e14\u4e00\u4e9b\u64cd\u4f5c\u4f1a\u53d8\u5f97\u975e\u5e38\u590d\u6742\u3002 \u56db\u5143\u6570\u6709\u52a9\u4e8e\u89e3\u51b3\u8fd9\u79cd\u590d\u6742\u60c5\u51b5\u3002\u6b63\u5982\u4e4b\u524d\u6240\u8bf4\uff0c\u56db\u5143\u6570\u88ab\u5b9a\u4e49\u4e3a4\u4e2a\u6570\u5b57\uff08x\uff0cy\uff0cz\uff0cw\uff09\u4e00\u7ec4\u3002\u56db\u5143\u6570\u5b9a\u4e49\u65cb\u8f6c\u8f74\u548c\u56f4\u7ed5\u8be5\u8f74\u7684\u65cb\u8f6c\u89d2\u5ea6\u3002 \u4f60\u53ef\u4ee5\u5728\u7f51\u7edc\u4e2d\u786e\u8ba4\u6bcf\u4e2a\u5143\u7d20\u7684\u6570\u5b66\u5b9a\u4e49\uff0c\u4f46\u597d\u6d88\u606f\u662f\u6211\u4eec\u4f7f\u7528\u7684\u6570\u5b66\u5e93JOML\u4e3a\u5176\u63d0\u4f9b\u4e86\u652f\u6301\u3002\u6211\u4eec\u53ef\u4ee5\u57fa\u4e8e\u56db\u5143\u6570\u6784\u9020\u65cb\u8f6c\u77e9\u9635\uff0c\u5e76\u7528\u5b83\u4eec\u5bf9\u5411\u91cf\u8fdb\u884c\u53d8\u6362\u3002 \u8ba9\u6211\u4eec\u56de\u5230\u5173\u8282\u7684\u5b9a\u4e49\uff0c\u5176\u7f3a\u5c11 w \u5143\u7d20\uff0c\u4f46\u53ef\u4ee5\u5728\u5176\u4ed6\u503c\u7684\u5e2e\u52a9\u4e0b\u8f7b\u677e\u5730\u8ba1\u7b97\u5b83\u3002\u4f60\u53ef\u4ee5\u67e5\u770b\u6e90\u4ee3\u7801\uff0c\u770b\u770b\u8fd9\u662f\u5982\u4f55\u505a\u5230\u7684\u3002 \u5728\u5173\u8282\u5b9a\u4e49\u4e4b\u540e\uff0c\u53ef\u4ee5\u627e\u5230\u7ec4\u6210\u6a21\u578b\u7684\u4e0d\u540c\u7f51\u683c\u7684\u5b9a\u4e49\u3002\u63a5\u4e0b\u6765\u4f60\u53ef\u4ee5\u4ece\u5176\u4e2d\u4e00\u4e2a\u793a\u4f8b\u4e2d\u770b\u5230\u7f51\u683c\u5b9a\u4e49\u7684\u7247\u6bb5\uff1a mesh { shader \"/textures/bob/guard1_body.png\" numverts 494 vert 0 ( 0.394531 0.513672 ) 0 1 vert 1 ( 0.447266 0.449219 ) 1 2 ... vert 493 ( 0.683594 0.455078 ) 864 3 numtris 628 tri 0 0 2 1 tri 1 0 1 3 ... tri 627 471 479 493 numweights 867 weight 0 5 1.000000 ( 6.175774 8.105262 -0.023020 ) weight 1 5 0.500000 ( 4.880173 12.805251 4.196980 ) ... weight 866 6 0.333333 ( 1.266308 -0.302701 8.949338 ) } \u8ba9\u6211\u4eec\u770b\u770b\u4e0a\u8ff0\u5c55\u73b0\u7684\u7ed3\u6784\uff1a \u7f51\u683c\u4ece\u5b9a\u4e49\u7eb9\u7406\u6587\u4ef6\u5f00\u59cb\u3002\u8bf7\u8bb0\u4f4f\uff0c\u4f60\u5728\u6b64\u5904\u627e\u5230\u7684\u8def\u5f84\u662f\u521b\u5efa\u8be5\u6a21\u578b\u7684\u5de5\u5177\u6240\u4f7f\u7528\u7684\u8def\u5f84\u3002\u8be5\u8def\u5f84\u53ef\u80fd\u4e0e\u7528\u4e8e\u52a0\u8f7d\u8fd9\u4e9b\u6587\u4ef6\u7684\u8def\u5f84\u4e0d\u5339\u914d\u3002\u8fd9\u91cc\u6709\u4e24\u79cd\u65b9\u6cd5\u89e3\u51b3\uff0c\u8981\u4e48\u52a8\u6001\u4fee\u6539\u57fa\u672c\u8def\u5f84\uff0c\u8981\u4e48\u624b\u52a8\u4fee\u6539\u8be5\u8def\u5f84\u3002\u6211\u9009\u62e9\u4e86\u540e\u8005\uff0c\u6bd4\u8f83\u7b80\u5355\u7684\u4e00\u79cd\u3002 \u63a5\u4e0b\u6765\u53ef\u4ee5\u627e\u5230\u9876\u70b9\u5b9a\u4e49\u3002\u9876\u70b9\u7531\u4ee5\u4e0b\u5c5e\u6027\u5b9a\u4e49\uff1a \u9876\u70b9\u7d22\u5f15\u3002 \u7eb9\u7406\u5750\u6807\u3002 \u5f71\u54cd\u6b64\u9876\u70b9\u7684\u7b2c\u4e00\u4e2a\u6743\u91cd\u5b9a\u4e49\u7684\u7d22\u5f15\u3002 \u8981\u8003\u8651\u7684\u6743\u91cd\u6570\u3002 \u5728\u9876\u70b9\u4e4b\u540e\uff0c\u5c06\u5b9a\u4e49\u6784\u6210\u6b64\u7f51\u683c\u7684\u4e09\u89d2\u5f62\u3002\u4e09\u89d2\u5f62\u5b9a\u4e49\u4e86\u4f7f\u7528\u9876\u70b9\u7d22\u5f15\u7ec4\u7ec7\u9876\u70b9\u7684\u65b9\u5f0f\u3002 \u6700\u540e\uff0c\u5b9a\u4e49\u4e86\u6743\u91cd\u3002\u6743\u91cd\u5b9a\u4e49\u7531\u4ee5\u4e0b\u90e8\u5206\u7ec4\u6210\uff1a \u6743\u91cd\u6307\u6570\u3002 \u5173\u8282\u6307\u6570\uff0c\u6307\u4e0e\u8be5\u6743\u91cd\u76f8\u5173\u7684\u5173\u8282 \u504f\u501a\u7cfb\u6570\uff0c\u7528\u4e8e\u8c03\u8282\u8be5\u6743\u91cd\u7684\u5f71\u54cd\u3002 \u8be5\u6743\u91cd\u7684\u4f4d\u7f6e\u3002 \u4e0b\u56fe\u7528\u793a\u4f8b\u6570\u636e\u8bf4\u660e\u4e86\u4e0a\u8ff0\u7ec4\u5206\u4e4b\u95f4\u7684\u5173\u7cfb\u3002 \u597d\u4e86\uff0c\u73b0\u5728\u4e86\u89e3\u4e86\u7f51\u683c\u6a21\u578b\u6587\u4ef6\uff0c\u6211\u4eec\u53ef\u4ee5\u89e3\u6790\u5b83\u4e86\u3002\u5982\u679c\u4f60\u770b\u4e86\u6e90\u4ee3\u7801\uff0c\u5c06\u770b\u5230\u5df2\u7ecf\u521b\u5efa\u4e86\u65b0\u7684\u5305\u6765\u5bb9\u7eb3\u6a21\u578b\u683c\u5f0f\u7684\u89e3\u6790\u5668\u3002\u5728 org.lwjglb.engine.loaders.obj \u5305\u4e0b\u6709\u4e00\u4e2a\u89e3\u6790OBJ\u6587\u4ef6\u7684\u4ee3\u7801\uff0c\u800c\u89e3\u6790MD5\u6587\u4ef6\u7684\u4ee3\u7801\u5728 org.lwjglb.engine.loaders.md5 \u5305\u4e0b\u3002 \u6240\u6709\u7684\u89e3\u6790\u4ee3\u7801\u90fd\u57fa\u4e8e\u6b63\u5219\u8868\u8fbe\u5f0f\u4eceMD5\u6587\u672c\u6587\u4ef6\u4e2d\u63d0\u53d6\u4fe1\u606f\u3002\u89e3\u6790\u5668\u5c06\u521b\u5efa\u4e00\u4e2a\u5c42\u6b21\u7ed3\u6784\u5bf9\u8c61\uff0c\u4ee5\u6a21\u62dfMD5\u6587\u4ef6\u4e2d\u5305\u542b\u7684\u4fe1\u606f\u7ec4\u4ef6\u7684\u7ed3\u6784\u3002\u5b83\u53ef\u80fd\u4e0d\u662f\u4e16\u754c\u4e0a\u6700\u9ad8\u6548\u7684\u89e3\u6790\u5668\uff0c\u4f46\u6211\u8ba4\u4e3a\u5b83\u5c06\u6709\u52a9\u4e8e\u66f4\u597d\u5730\u7406\u89e3\u8fd9\u4e2a\u8fc7\u7a0b\u3002 \u89e3\u6790MD5\u6a21\u578b\u6587\u4ef6\u7684\u8d77\u59cb\u7c7b\u662f MD5Model \u7c7b\uff0c\u8be5\u7c7b\u5728\u5176\u89e3\u6790\u65b9\u6cd5\u4e2d\u4f5c\u4e3a\u53c2\u6570\u88ab\u63a5\u6536\u3002MD5\u6587\u4ef6\u7684\u5185\u5bb9\u662f\u521b\u5efa\u4e00\u4e2a\u5305\u542b\u5934\u3001\u8282\u70b9\u5217\u8868\u548c\u6240\u6709\u5b50\u5143\u7d20\u7684\u7f51\u683c\u5217\u8868\u7684\u5c42\u6b21\u7ed3\u6784\u3002\u4ee3\u7801\u975e\u5e38\u7b80\u5355\uff0c\u6240\u4ee5\u4e0d\u5305\u542b\u5728\u672c\u6587\u4e2d\u4e86\u3002 \u5173\u4e8e\u89e3\u6790\u4ee3\u7801\u7684\u4e00\u4e9b\u6ce8\u91ca\uff1a \u7f51\u683c\u7684\u5b50\u5143\u7d20\u88ab\u5b9a\u4e49\u4e3a MD5Mesh \u7c7b\u7684\u5185\u90e8\u7c7b\u3002 \u4f60\u53ef\u4ee5\u67e5\u770b\u5982\u4f55\u5728 MD5Utils \u7c7b\u7684 calculateQuaternion \u65b9\u6cd5\u4e2d\u8ba1\u7b97\u5173\u8282\u65b9\u5411\u7684\u7b2c\u56db\u4e2a\u5206\u91cf\u3002 \u65e2\u7136\u6211\u4eec\u5df2\u7ecf\u89e3\u6790\u4e86\u4e00\u4e2a\u6587\u4ef6\uff0c\u6211\u4eec\u5fc5\u987b\u8bb2\u8fd9\u4e2a\u5bf9\u8c61\u5c42\u6b21\u7ed3\u6784\u8f6c\u6362\u6210\u53ef\u4ee5\u7531\u6e38\u620f\u5f15\u64ce\u5904\u7406\u7684\u4e1c\u897f\uff0c\u6211\u4eec\u5fc5\u987b\u521b\u5efa\u4e00\u4e2a GameItem \u5b9e\u4f8b\u3002\u4e3a\u4e86\u5b9e\u73b0\u5b83\uff0c\u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a MD5Loader \u7684\u65b0\u7c7b\uff0c\u8be5\u7c7b\u5c06\u4f7f\u7528\u4e00\u4e2a MD5Model \u5b9e\u4f8b\u6765\u6784\u9020\u4e00\u4e2a GameItem \u3002 \u5728\u5f00\u59cb\u4e4b\u524d\uff0c\u5982\u4f60\u6240\u6ce8\u610f\u5230\u7684\uff0cMD5\u6a21\u578b\u6709\u597d\u51e0\u4e2a\u7f51\u683c\uff0c\u4f46\u6211\u4eec\u7684 GameItem \u7c7b\u53ea\u652f\u6301\u5355\u4e2a\u7f51\u683c\u3002\u6240\u4ee5\u9996\u5148\u6211\u4eec\u8981\u4fee\u6539\u5b83\uff0c GameItem \u7c7b\u73b0\u5728\u770b\u8d77\u6765\u662f\u8fd9\u6837\u7684\uff1a package org.lwjglb.engine.items; import org.joml.Vector3f; import org.lwjglb.engine.graph.Mesh; public class GameItem { private Mesh[] meshes; private final Vector3f position; private float scale; private final Vector3f rotation; public GameItem() { position = new Vector3f(0, 0, 0); scale = 1; rotation = new Vector3f(0, 0, 0); } public GameItem(Mesh mesh) { this(); this.meshes = new Mesh[]{mesh}; } public GameItem(Mesh[] meshes) { this(); this.meshes = meshes; } public Vector3f getPosition() { return position; } public void setPosition(float x, float y, float z) { this.position.x = x; this.position.y = y; this.position.z = z; } public float getScale() { return scale; } public void setScale(float scale) { this.scale = scale; } public Vector3f getRotation() { return rotation; } public void setRotation(float x, float y, float z) { this.rotation.x = x; this.rotation.y = y; this.rotation.z = z; } public Mesh getMesh() { return meshes[0]; } public Mesh[] getMeshes() { return meshes; } public void setMeshes(Mesh[] meshes) { this.meshes = meshes; } public void setMesh(Mesh mesh) { if (this.meshes != null) { for (Mesh currMesh : meshes) { currMesh.cleanUp(); } } this.meshes = new Mesh[]{mesh}; } } \u901a\u8fc7\u4e0a\u8ff0\u4fee\u6539\uff0c\u6211\u4eec\u73b0\u5728\u53ef\u4ee5\u7f16\u5199 MD5Loader \u7c7b\u7684\u5185\u5bb9\u3002\u8be5\u7c7b\u5c06\u6709\u4e00\u4e2a\u540d\u4e3a process \u7684\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u5c06\u63a5\u53d7\u4e00\u4e2a MD5Model \u5b9e\u4f8b\u548c\u4e00\u4e2a\u9ed8\u8ba4\u989c\u8272\uff08\u5bf9\u4e8e\u4e0d\u5b9a\u4e49\u7eb9\u7406\u7684\u7f51\u683c\uff09\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a GameItem \u5b9e\u4f8b\u3002\u8be5\u65b9\u6cd5\u7684\u65b9\u6cd5\u4f53\u5982\u4e0b\uff1a public static GameItem process(MD5Model md5Model, Vector4f defaultColour) throws Exception { List<MD5Mesh> md5MeshList = md5Model.getMeshes(); List<Mesh> list = new ArrayList<>(); for (MD5Mesh md5Mesh : md5Model.getMeshes()) { Mesh mesh = generateMesh(md5Model, md5Mesh, defaultColour); handleTexture(mesh, md5Mesh, defaultColour); list.add(mesh); } Mesh[] meshes = new Mesh[list.size()]; meshes = list.toArray(meshes); GameItem gameItem = new GameItem(meshes); return gameItem; } \u5982\u4f60\u6240\u89c1\uff0c\u6211\u4eec\u53ea\u9700\u5c06\u5b9a\u4e49\u5728 MD5Model \u7c7b\u4e4b\u5185\u7684\u7f51\u683c\u8fdb\u884c\u904d\u5386\uff0c\u5e76\u901a\u8fc7\u4f7f\u7528 generateMesh \u65b9\u6cd5\uff0c\u5c06\u5176\u8f6c\u6362\u4e3a org.lwjglb.engine.graph.Mesh \u7c7b\u7684\u5b9e\u4f8b\u3002\u5728\u67e5\u770b\u8be5\u65b9\u6cd5\u4e4b\u524d\uff0c\u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a\u5185\u90e8\u7c7b\uff0c\u5b83\u5c06\u4e3a\u6211\u4eec\u6784\u5efa\u5750\u6807\u548c\u6cd5\u7ebf\u6570\u7ec4\u3002 private static class VertexInfo { public Vector3f position; public Vector3f normal; public VertexInfo(Vector3f position) { this.position = position; normal = new Vector3f(0, 0, 0); } public VertexInfo() { position = new Vector3f(); normal = new Vector3f(); } public static float[] toPositionsArr(List<VertexInfo> list) { int length = list != null ? list.size() * 3 : 0; float[] result = new float[length]; int i = 0; for (VertexInfo v : list) { result[i] = v.position.x; result[i + 1] = v.position.y; result[i + 2] = v.position.z; i += 3; } return result; } public static float[] toNormalArr(List<VertexInfo> list) { int length = list != null ? list.size() * 3 : 0; float[] result = new float[length]; int i = 0; for (VertexInfo v : list) { result[i] = v.normal.x; result[i + 1] = v.normal.y; result[i + 2] = v.normal.z; i += 3; } return result; } } \u56de\u5230 generateMesh \u65b9\u6cd5\uff0c\u9996\u5148\u6211\u4eec\u5f97\u5230\u5173\u8282\u7684\u7f51\u683c\u9876\u70b9\u4fe1\u606f\u3001\u6743\u91cd\u548c\u7ed3\u6784\u3002 private static Mesh generateMesh(MD5Model md5Model, MD5Mesh md5Mesh, Vector4f defaultColour) throws Exception { List<VertexInfo> vertexInfoList = new ArrayList<>(); List<Float> textCoords = new ArrayList<>(); List<Integer> indices = new ArrayList<>(); List<MD5Mesh.MD5Vertex> vertices = md5Mesh.getVertices(); List<MD5Mesh.MD5Weight> weights = md5Mesh.getWeights(); List<MD5JointInfo.MD5JointData> joints = md5Model.getJointInfo().getJoints(); \u63a5\u4e0b\u6765\u6211\u4eec\u9700\u8981\u6839\u636e\u5305\u542b\u5728\u6743\u91cd\u548c\u5173\u8282\u4e2d\u7684\u4fe1\u606f\u6765\u8ba1\u7b97\u9876\u70b9\u4f4d\u7f6e\u3002\u8fd9\u662f\u5728\u4e0b\u8ff0\u4ee3\u7801\u5757\u4e2d\u5b8c\u6210\u7684\uff1a for (MD5Mesh.MD5Vertex vertex : vertices) { Vector3f vertexPos = new Vector3f(); Vector2f vertexTextCoords = vertex.getTextCoords(); textCoords.add(vertexTextCoords.x); textCoords.add(vertexTextCoords.y); int startWeight = vertex.getStartWeight(); int numWeights = vertex.getWeightCount(); for (int i = startWeight; i < startWeight + numWeights; i++) { MD5Mesh.MD5Weight weight = weights.get(i); MD5JointInfo.MD5JointData joint = joints.get(weight.getJointIndex()); Vector3f rotatedPos = new Vector3f(weight.getPosition()).rotate(joint.getOrientation()); Vector3f acumPos = new Vector3f(joint.getPosition()).add(rotatedPos); acumPos.mul(weight.getBias()); vertexPos.add(acumPos); } vertexInfoList.add(new VertexInfo(vertexPos)); } \u8ba9\u6211\u4eec\u6765\u770b\u770b\u5728\u8fd9\u91cc\u505a\u4e86\u4ec0\u4e48\u3002\u6211\u4eec\u904d\u5386\u4e86\u9876\u70b9\u4fe1\u606f\u5e76\u5c06\u7eb9\u7406\u5750\u6807\u50a8\u5b58\u5728\u5217\u8868\u4e2d\uff0c\u4e0d\u9700\u8981\u5728\u8fd9\u91cc\u5e94\u7528\u4efb\u4f55\u53d8\u6362\u3002\u7136\u540e\u6211\u4eec\u5f97\u5230\u4e86\u8ba1\u7b97\u9876\u70b9\u5750\u6807\u6240\u9700\u8003\u8651\u7684\u8d77\u59cb\u6743\u91cd\u548c\u603b\u6743\u91cd\u3002 \u9876\u70b9\u5750\u6807\u662f\u901a\u8fc7\u4f7f\u7528\u6240\u6709\u4e0e\u4e4b\u76f8\u5173\u7684\u6743\u91cd\u6765\u8ba1\u7b97\u7684\u3002\u6bcf\u4e2a\u6743\u91cd\u90fd\u6709\u4e00\u4e2a\u5750\u6807\u548c\u4e00\u4e2a\u504f\u501a\u3002\u4e0e\u6bcf\u4e2a\u9876\u70b9\u76f8\u5173\u7684\u6743\u91cd\u7684\u6240\u6709\u504f\u501a\u4e4b\u548c\u5fc5\u987b\u4e3a1.0\u3002\u6bcf\u4e2a\u6743\u91cd\u4e5f\u6709\u4e00\u4e2a\u5728\u5173\u8282\u7684\u5c40\u90e8\u7a7a\u95f4\u4e2d\u5b9a\u4e49\u7684\u5750\u6807\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u4f7f\u7528\u5173\u8282\u7684\u65b9\u5411\u548c\u5750\u6807\uff08\u5c31\u50cf\u5b83\u662f\u4e00\u4e2a\u8f6c\u6362\u77e9\u9635\u90a3\u6837\uff09\u5c06\u5176\u8f6c\u6362\u4e3a\u5b83\u6240\u5f15\u7528\u7684\u6a21\u578b\u7a7a\u95f4\u5750\u6807\u3002 \u7efc\u4e0a\u6240\u8ff0\uff0c\u9876\u70b9\u5750\u6807\u53ef\u4ee5\u7528\u5982\u4e0b\u516c\u5f0f\u8868\u793a\uff1a Vpos = \\sum\\limits_{i=ws}^{ws + wc} (Jt_{i} \\times Wp_{i}) \\dot Wb_{i} \u53c2\u6570\uff1a \u4ece ws \uff08\u8d77\u59cb\u6743\u91cd\uff09\u5230 wc \uff08\u6743\u91cd\u6570\uff09\u6743\u91cd\u603b\u548c\u3002 Jt_{i} \u662f\u4e0e\u6743\u91cd W_{i} \u76f8\u5173\u7684\u5173\u8282\u7684\u53d8\u6362\u77e9\u9635\u3002 Wp_{i} \u662f\u6743\u91cd\u5750\u6807\u3002 Wb_{i} \u662f\u6743\u91cd\u504f\u501a\u3002 \u8be5\u65b9\u7a0b\u662f\u5728\u5faa\u73af\u4f53\u4e2d\u5b9e\u73b0\u7684\uff08\u6211\u4eec\u6ca1\u6709\u53d8\u6362\u77e9\u9635\uff0c\u4f46\u7ed3\u679c\u662f\u76f8\u540c\u7684\uff0c\u56e0\u4e3a\u6211\u4eec\u6709\u5355\u72ec\u7684\u5173\u8282\u5750\u6807\u548c\u65cb\u8f6c\uff09\u3002 \u4f7f\u7528\u4e0a\u8ff0\u4ee3\u7801\uff0c\u6211\u4eec\u5c31\u80fd\u591f\u6784\u9020\u5750\u6807\u548c\u7eb9\u7406\u5750\u6807\u6570\u636e\uff0c\u4f46\u662f\u4ecd\u7136\u9700\u8981\u5efa\u7acb\u7d22\u5f15\u548c\u6cd5\u7ebf\u3002\u7d22\u5f15\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528\u4e09\u89d2\u5f62\u7684\u4fe1\u606f\u8ba1\u7b97\uff0c\u53ea\u9700\u904d\u5386\u5305\u542b\u8fd9\u4e9b\u4e09\u89d2\u5f62\u7684\u5217\u8868\u5373\u53ef\u3002 \u6cd5\u7ebf\u4e5f\u53ef\u4ee5\u7528\u4e09\u89d2\u5f62\u4fe1\u606f\u6765\u8ba1\u7b97\uff0c\u4ee4 V_{0} \u3001 V_{1} \u548c V_{2} \u4e3a\u4e09\u89d2\u5f62\u9876\u70b9\uff08\u5728\u7269\u4f53\u7684\u6a21\u578b\u7a7a\u95f4\u4e2d\uff09\u3002\u4e09\u89d2\u5f62\u7684\u6cd5\u7ebf\u53ef\u4ee5\u6839\u636e\u5982\u4e0b\u516c\u5f0f\u8ba1\u7b97\uff1a N=(V_{2}-V_{0})\\times(V_{1}-V_{0}) \u5176\u4e2dN\u5e94\u8be5\u5f52\u4e00\u5316\u3002\u4e0b\u56fe\u662f\u4e0a\u8ff0\u516c\u5f0f\u7684\u51e0\u4f55\u89e3\u91ca\uff1a \u5bf9\u4e8e\u6bcf\u4e2a\u9876\u70b9\uff0c\u6211\u4eec\u901a\u8fc7\u5b83\u6240\u5c5e\u7684\u4e09\u89d2\u5f62\u7684\u6240\u6709\u6cd5\u7ebf\u7684\u5f52\u4e00\u5316\u4e4b\u548c\u6765\u8ba1\u7b97\u5b83\u7684\u6cd5\u7ebf\u3002\u8fdb\u884c\u8ba1\u7b97\u7684\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a for (MD5Mesh.MD5Triangle tri : md5Mesh.getTriangles()) { indices.add(tri.getVertex0()); indices.add(tri.getVertex1()); indices.add(tri.getVertex2()); // \u6cd5\u7ebf VertexInfo v0 = vertexInfoList.get(tri.getVertex0()); VertexInfo v1 = vertexInfoList.get(tri.getVertex1()); VertexInfo v2 = vertexInfoList.get(tri.getVertex2()); Vector3f pos0 = v0.position; Vector3f pos1 = v1.position; Vector3f pos2 = v2.position; Vector3f normal = (new Vector3f(pos2).sub(pos0)).cross(new Vector3f(pos1).sub(pos0)); v0.normal.add(normal); v1.normal.add(normal); v2.normal.add(normal); } // \u4e00\u65e6\u5b8c\u6210\u4e86\u8ba1\u7b97\uff0c\u5c31\u5c06\u7ed3\u679c\u5f52\u4e00\u5316 for(VertexInfo v : vertexInfoList) { v.normal.normalize(); } \u7136\u540e\u6211\u4eec\u53ea\u9700\u8981\u5c06\u5217\u8868\u8f6c\u6362\u4e3a\u6570\u7ec4\u5e76\u5904\u7406\u7eb9\u7406\u4fe1\u606f\u3002 float[] positionsArr = VertexInfo.toPositionsArr(vertexInfoList); float[] textCoordsArr = Utils.listToArray(textCoords); float[] normalsArr = VertexInfo.toNormalArr(vertexInfoList); int[] indicesArr = indices.stream().mapToInt(i -> i).toArray(); Mesh mesh = new Mesh(positionsArr, textCoordsArr, normalsArr, indicesArr); return mesh; } \u56de\u5230 process \u65b9\u6cd5\uff0c\u4f60\u53ef\u4ee5\u770b\u5230\u6709\u4e2a\u540d\u4e3a handleTexture \u7684\u65b9\u6cd5\uff0c\u5b83\u8d1f\u8d23\u52a0\u8f7d\u7eb9\u7406\u3002\u8fd9\u5c31\u662f\u8be5\u65b9\u6cd5\u7684\u5b9a\u4e49\uff1a private static void handleTexture(Mesh mesh, MD5Mesh md5Mesh, Vector4f defaultColour) throws Exception { String texturePath = md5Mesh.getTexture(); if (texturePath != null && texturePath.length() > 0) { Texture texture = new Texture(texturePath); Material material = new Material(texture); // \u5904\u7406\u6cd5\u7ebf\u56fe int pos = texturePath.lastIndexOf(\".\"); if (pos > 0) { String basePath = texturePath.substring(0, pos); String extension = texturePath.substring(pos, texturePath.length()); String normalMapFileName = basePath + NORMAL_FILE_SUFFIX + extension; if (Utils.existsResourceFile(normalMapFileName)) { Texture normalMap = new Texture(normalMapFileName); material.setNormalMap(normalMap); } } mesh.setMaterial(material); } else { mesh.setMaterial(new Material(defaultColour, 1)); } } \u975e\u5e38\u76f4\u63a5\u7684\u5b9e\u73b0\u3002\u552f\u4e00\u7684\u72ec\u7279\u4e4b\u5904\u5728\u4e8e\u5982\u679c\u4e00\u4e2a\u7f51\u683c\u5b9a\u4e49\u4e86\u4e00\u4e2a\u540d\u4e3a\u201ctexture.png\u201d\u7684\u7eb9\u7406\uff0c\u5b83\u7684\u6cd5\u7ebf\u7eb9\u7406\u56fe\u5c06\u5728\u6587\u4ef6\u201ctexture_normal.png\u201d\u4e2d\u5b9a\u4e49\u3002\u6211\u4eec\u9700\u8981\u68c0\u67e5\u8be5\u6587\u4ef6\u662f\u5426\u5b58\u5728\u5e76\u76f8\u5e94\u5730\u52a0\u8f7d\u5b83\u3002 \u6211\u4eec\u73b0\u5728\u53ef\u4ee5\u52a0\u8f7d\u4e00\u4e2aMD5\u6587\u4ef6\u5e76\u50cf\u6e32\u67d3\u5176\u4ed6\u6e38\u620f\u9879\u4e00\u6837\u6e32\u67d3\u5b83\uff0c\u4f46\u5728\u6b64\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u7981\u7528\u9762\u5254\u9664\u6765\u6b63\u786e\u6e32\u67d3\u5b83\uff0c\u56e0\u4e3a\u4e0d\u662f\u6240\u6709\u4e09\u89d2\u5f62\u90fd\u5c06\u7ed8\u5236\u5728\u6b63\u786e\u7684\u65b9\u5411\u4e0a\u3002\u6211\u4eec\u5c06\u5411 Window \u7c7b\u6dfb\u52a0\u652f\u6301\uff0c\u4ee5\u4fbf\u5728\u8fd0\u884c\u65f6\u8bbe\u7f6e\u8fd9\u4e9b\u53c2\u6570\uff08\u4f60\u53ef\u4ee5\u5728\u6e90\u4ee3\u7801\u4e2d\u67e5\u770b\u5176\u53d8\u66f4\uff09\u3002 \u5982\u679c\u52a0\u8f7d\u4e00\u4e9b\u5b9e\u4f8b\u6a21\u578b\uff0c\u5c31\u4f1a\u5f97\u5230\u7c7b\u4f3c\u8fd9\u6837\u7684\u7ed3\u679c\uff1a \u4f60\u5728\u6b64\u5904\u770b\u5230\u7684\u662f\u7ed1\u5b9a\u7684\u59ff\u52bf\uff0c\u5b83\u662fMD5\u6a21\u578b\u7684\u9759\u6001\u5c55\u793a\uff0c\u4f7f\u52a8\u753b\u5e08\u8f7b\u677e\u5730\u5bf9\u5b83\u4eec\u5efa\u6a21\u3002\u4e3a\u4e86\u8ba9\u52a8\u753b\u5de5\u4f5c\uff0c\u6211\u4eec\u5fc5\u987b\u5904\u7406\u52a8\u753b\u5b9a\u4e49\u6587\u4ef6\u3002 \u6a21\u578b\u52a8\u753b MD5\u52a8\u753b\u5b9a\u4e49\u6587\u4ef6\uff0c\u5c31\u50cf\u6a21\u578b\u5b9a\u4e49\u6587\u4ef6\u90a3\u6837\uff0c\u7531\u4e00\u4e2a\u5934\u548c\u4e00\u4e2a\u5305\u542b\u5728\u5927\u62ec\u53f7\u4e4b\u95f4\u7684\u4e0d\u540c\u90e8\u5206\u7ec4\u6210\u3002\u5982\u679c\u6253\u5f00\u5176\u4e2d\u4e00\u4e2a\u6587\u4ef6\uff0c\u53ef\u4ee5\u770b\u5230\u7c7b\u4f3c\u7684\u7ed3\u6784\u3002 \u53ef\u4ee5\u5728\u52a8\u753b\u6587\u4ef6\u4e2d\u627e\u5230\u7684\u7b2c\u4e00\u4e2a\u7ed3\u6784\uff08\u5c31\u50cf\u662f\u7f51\u683c\u5b9a\u4e49\u6587\u4ef6\u4e00\u6837\uff09\u662f\u5934\u3002\u4f60\u53ef\u4ee5\u4ece\u63a5\u4e0b\u6765\u63d0\u4f9b\u7684\u4e00\u4e2a\u4f8b\u5b50\u4e2d\u770b\u5230\u5934\u7684\u5185\u5bb9\uff1a MD5Version 10 commandline \"\" numFrames 140 numJoints 33 frameRate 24 numAnimatedComponents 198 \u5934\u5b9a\u4e49\u4e86\u4ee5\u4e0b\u5c5e\u6027\uff1a \u6240\u7b26\u5408\u7684MD5\u89c4\u8303\u7684\u7248\u672c\u3002 \u7528\u4e8e\u751f\u6210\u6b64\u6587\u4ef6\u7684\u547d\u4ee4\uff08\u6765\u81ea3D\u5efa\u6a21\u5de5\u5177\uff09 \u6587\u4ef6\u4e2d\u5b9a\u4e49\u7684\u5e27\u6570\u3002 \u5c42\u6b21\u7ed3\u6784\u90e8\u5206\u4e2d\u5b9a\u4e49\u7684\u5173\u8282\u6570\u91cf\u3002 \u5e27\u901f\u7387\uff0c\u6bcf\u79d2\u5e27\u6570\uff0c\u7528\u4e8e\u521b\u5efa\u52a8\u753b\u3002\u8fd9\u4e2a\u53c2\u6570\u53ef\u4ee5\u7528\u6765\u8ba1\u7b97\u5e27\u4e0e\u5e27\u4e4b\u95f4\u7684\u65f6\u95f4\u3002 \u6bcf\u4e2a\u5e27\u5b9a\u4e49\u7684\u5206\u91cf\u6570\u91cf\u3002\uff08\u8bd1\u6ce8\uff1a\u901a\u5e38\u60c5\u51b5\u4e0b\u7b49\u4e8e\u5173\u8282\u6570\u4e58\u4ee5\u516d\uff09 \u9996\u5148\u51fa\u73b0\u7684\u662f\u5c42\u6b21\u7ed3\u6784\uff08Hierarchy\uff09\u90e8\u5206\uff0c\u5b83\u5b9a\u4e49\u4e86\u8be5\u52a8\u753b\u7684\u5173\u8282\u3002\u4f60\u53ef\u4ee5\u770b\u5230\u4ee5\u4e0b\u7247\u6bb5\uff1a hierarchy { \"origin\" -1 0 0 // \"body\" 0 63 0 // origin ( Tx Ty Tz Qx Qy Qz ) \"body2\" 1 0 0 // body \"SPINNER\" 2 56 6 // body2 ( Qx Qy Qz ) .... } \u4e00\u4e2a\u5173\u8282\uff0c\u5728\u5c42\u6b21\u7ed3\u6784\u90e8\u5206\u4e2d\uff0c\u7531\u4ee5\u4e0b\u5c5e\u6027\u5b9a\u4e49\uff1a \u5173\u8282\u540d\uff0c\u5f15\u53f7\u4e4b\u95f4\u7684\u4e00\u4e2a\u6587\u672c\u5c5e\u6027 \u5173\u8282\u7684\u7236\u5173\u8282\uff0c\u4f7f\u7528\u4e00\u4e2a\u7d22\u5f15\uff0c\u8be5\u7d22\u5f15\u4f7f\u7528\u5176\u5728\u5173\u8282\u5217\u8868\u4e2d\u7684\u4f4d\u7f6e\u6307\u5411\u7236\u5173\u8282\u3002\u6839\u5173\u8282\u7684\u7236\u8282\u70b9\u7b49\u4e8e-1\u3002 \u5173\u8282\u6807\u5fd7\uff0c\u6839\u636e\u6bcf\u4e2a\u52a8\u753b\u5e27\u4e2d\u5b9a\u4e49\u7684\u6570\u636e\uff0c\u8bbe\u7f6e\u8be5\u5173\u8282\u7684\u4f4d\u7f6e\u548c\u65b9\u5411\u5c06\u5982\u4f55\u6539\u53d8\u3002 \u8d77\u59cb\u7d22\u5f15\uff0c\u5f53\u5e94\u7528\u6807\u5fd7\u65f6\uff0c\u7528\u4e8e\u6bcf\u5e27\u7684\u52a8\u753b\u6570\u636e\u5185\u3002 \u4e0b\u4e00\u8282\u662f\u8fb9\u754c\uff08Bounds\uff09\u3002\u672c\u8282\u5b9a\u4e49\u4e86\u6bcf\u4e2a\u52a8\u753b\u5e27\u7684\u6a21\u578b\u7684\u8fb9\u754c\u6846\u3002\u5b83\u5c06\u4e3a\u6bcf\u4e00\u5e27\u52a8\u753b\u50a8\u5b58\u4e00\u884c\u6570\u636e\uff0c\u770b\u8d77\u6765\u5c31\u50cf\u662f\u8fd9\u6837\uff1a bounds { ( -24.3102264404 -44.2608566284 -0.181215778 ) ( 31.0861988068 38.7131576538 117.7417449951 ) ( -24.3102283478 -44.1887664795 -0.1794649214 ) ( 31.1800289154 38.7173080444 117.7729110718 ) ( -24.3102359772 -44.1144447327 -0.1794776917 ) ( 31.2042789459 38.7091217041 117.8352737427 ) .... } \u6bcf\u4e2a\u8fb9\u754c\u6846\u7531\u6a21\u578b\u7a7a\u95f4\u5750\u6807\u4e2d\u7684\u4e24\u4e2a\u4e09\u5206\u91cf\u5411\u91cf\u5b9a\u4e49\u3002\u7b2c\u4e00\u4e2a\u5411\u91cf\u5b9a\u4e49\u4e86\u6700\u5c0f\u503c\uff0c\u7b2c\u4e8c\u4e2a\u5411\u91cf\u5b9a\u4e49\u4e86\u6700\u5927\u503c\u3002 \u4e0b\u4e00\u8282\u662f\u57fa\u672c\u5e27\uff08Base Frame\uff09\u6570\u636e\u3002\u5728\u672c\u8282\u4e2d\uff0c\u5728\u5e94\u7528\u6bcf\u4e2a\u52a8\u753b\u5e27\u7684\u5f62\u53d8\u4e4b\u524d\uff0c\u8bbe\u7f6e\u6bcf\u4e2a\u5173\u8282\u7684\u4f4d\u7f6e\u548c\u65b9\u5411\u3002\u4f60\u53ef\u4ee5\u770b\u5230\u4e0b\u9762\u7684\u7247\u6bb5\uff1a baseframe { ( 0 0 0 ) ( -0.5 -0.5 -0.5 ) ( -0.8947336078 70.7142486572 -6.5027675629 ) ( -0.3258574307 -0.0083037354 0.0313780755 ) ( 0.0000001462 0.0539700091 -0.0137935728 ) ( 0 0 0 ) .... } \u6bcf\u4e00\u884c\u90fd\u4e0e\u4e00\u4e2a\u5173\u8282\u76f8\u5173\u8054\uff0c\u5e76\u5b9a\u4e49\u4e86\u4ee5\u4e0b\u5c5e\u6027\uff1a \u5173\u8282\u7684\u5750\u6807\uff0c\u662f\u4e00\u4e2a\u4e09\u5206\u91cf\u5411\u91cf\u3002 \u5173\u8282\u7684\u65b9\u5411\uff0c\u662f\u4e00\u4e2a\u56db\u5143\u6570\u7684\u4e09\u4e2a\u5206\u91cf\uff08\u6b63\u5982\u6a21\u578b\u6587\u4ef6\u91cc\u7684\u90a3\u6837\uff09\u3002 \u5728\u6b64\u4e4b\u540e\uff0c\u4f60\u5c06\u53d1\u73b0\u51e0\u4e2a\u5e27\u5b9a\u4e49\uff0c\u4ee5\u53ca\u5206\u914d\u7ed9 numFrames \u5934\u5c5e\u6027\u7684\u503c\u3002\u6bcf\u4e2a\u5e27\u7684\u8282\u5c31\u50cf\u662f\u4e00\u4e2a\u5de8\u5927\u7684\u6d6e\u70b9\u6570\u7ec4\uff0c\u5f53\u5bf9\u6bcf\u4e2a\u5e27\u5e94\u7528\u53d8\u6362\u65f6\uff0c\u8282\u70b9\u5c06\u4f7f\u7528\u8fd9\u4e2a\u6d6e\u70b9\u6570\u7ec4\u3002\u4f60\u53ef\u4ee5\u5728\u63a5\u4e0b\u6765\u770b\u5230\u4e00\u4e2a\u7247\u6bb5\uff1a frame 1 { -0.9279100895 70.682762146 -6.3709330559 -0.3259022534 -0.0100501738 0.0320306309 0.3259022534 0.0100501738 -0.0320306309 -0.1038384438 -0.1639953405 -0.0152553488 0.0299418624 .... } \u89e3\u6790MD5\u52a8\u753b\u6587\u4ef6\u7684\u57fa\u7c7b\u540d\u4e3a MD5AnimModel \u3002\u8be5\u7c7b\u521b\u5efa\u7531\u8be5\u6587\u4ef6\u5185\u5bb9\u6620\u5c04\u7684\u6240\u6709\u5bf9\u8c61\u5c42\u6b21\u7ed3\u6784\uff0c\u4f60\u53ef\u4ee5\u67e5\u770b\u6e90\u4ee3\u7801\u4ee5\u83b7\u5f97\u8be6\u7ec6\u4fe1\u606f\u3002\u7ed3\u6784\u7c7b\u4f3c\u4e8eMD5\u6a21\u578b\u5b9a\u4e49\u6587\u4ef6\u3002\u73b0\u5728\u6211\u4eec\u80fd\u591f\u52a0\u8f7d\u8fd9\u4e9b\u6570\u636e\uff0c\u5e76\u5c06\u4f7f\u7528\u5b83\u6765\u751f\u6210\u52a8\u753b\u3002 \u6211\u4eec\u5c06\u5728\u7740\u8272\u5668\u4e2d\u751f\u6210\u52a8\u753b\uff0c\u6240\u4ee5\u4e0d\u662f\u9884\u5148\u8ba1\u7b97\u6bcf\u4e2a\u5e27\u7684\u6240\u6709\u5750\u6807\uff0c\u6211\u4eec\u9700\u8981\u51c6\u5907\u6240\u9700\u7684\u6570\u636e\uff0c\u8fd9\u6837\u5728\u9876\u70b9\u7740\u8272\u5668\u4e2d\u5c31\u53ef\u4ee5\u8ba1\u7b97\u6700\u7ec8\u5750\u6807\u3002 \u8ba9\u6211\u4eec\u56de\u5230 MD5Loader \u7c7b\u4e2d\u7684 process \u65b9\u6cd5\uff0c\u9700\u8981\u4fee\u6539\u5b83\u4ee5\u8003\u8651\u52a8\u753b\u6570\u636e\u3002\u65b0\u65b9\u6cd5\u7684\u5b9a\u4e49\u5982\u4e0b\uff1a public static AnimGameItem process(MD5Model md5Model, MD5AnimModel animModel, Vector4f defaultColour) throws Exception { List<Matrix4f> invJointMatrices = calcInJointMatrices(md5Model); List<AnimatedFrame> animatedFrames = processAnimationFrames(md5Model, animModel, invJointMatrices); List<Mesh> list = new ArrayList<>(); for (MD5Mesh md5Mesh : md5Model.getMeshes()) { Mesh mesh = generateMesh(md5Model, md5Mesh); handleTexture(mesh, md5Mesh, defaultColour); list.add(mesh); } Mesh[] meshes = new Mesh[list.size()]; meshes = list.toArray(meshes); AnimGameItem result = new AnimGameItem(meshes, animatedFrames, invJointMatrices); return result; } \u8fd9\u91cc\u6709\u4e00\u4e9b\u53d8\u5316\uff0c\u6700\u660e\u663e\u7684\u662f\u8be5\u65b9\u6cd5\u73b0\u5728\u63a5\u6536\u4e00\u4e2a MD5AnimModel \u5b9e\u4f8b\u3002\u6b64\u5916\uff0c\u6211\u4eec\u4e0d\u8fd4\u56de GameItem \u5b9e\u4f8b\uff0c\u800c\u662f\u8fd4\u56de AnimGameItem \u5b9e\u4f8b\u3002\u8be5\u7c7b\u7ee7\u627f\u81ea GameItem \u7c7b\uff0c\u4f46\u6dfb\u52a0\u4e86\u5bf9\u52a8\u753b\u7684\u652f\u6301\u3002\u7a0d\u540e\u6211\u4eec\u5c06\u770b\u5230\u4e3a\u4ec0\u4e48\u8fd9\u6837\u505a\u3002 \u5982\u679c\u6211\u4eec\u7ee7\u7eed\u9605\u8bfb\u8be5\u5904\u7406\u65b9\u6cd5\uff0c\u9996\u5148\u8981\u505a\u7684\u662f\u8c03\u7528 calcInJointMatrices \u65b9\u6cd5\uff0c\u5176\u5b9a\u4e49\u5982\u4e0b\uff1a private static List<Matrix4f> calcInJointMatrices(MD5Model md5Model) { List<Matrix4f> result = new ArrayList<>(); List<MD5JointInfo.MD5JointData> joints = md5Model.getJointInfo().getJoints(); for(MD5JointInfo.MD5JointData joint : joints) { Matrix4f translateMat = new Matrix4f().translate(joint.getPosition()); Matrix4f rotationMat = new Matrix4f().rotate(joint.getOrientation()); Matrix4f mat = translateMat.mul(rotationMat); mat.invert(); result.add(mat); } return result; } \u8be5\u65b9\u6cd5\u904d\u5386MD5\u6a21\u578b\u5b9a\u4e49\u6587\u4ef6\u4e2d\u5305\u542b\u7684\u8282\u70b9\uff0c\u8ba1\u7b97\u4e0e\u6bcf\u4e2a\u8282\u70b9\u76f8\u5173\u8054\u7684\u8f6c\u6362\u77e9\u9635\uff0c\u7136\u540e\u5f97\u5230\u8fd9\u4e9b\u77e9\u9635\u7684\u9006\u77e9\u9635\u3002\u6b64\u6570\u636e\u7528\u4e8e\u6784\u9020 AnimGameItem \u5b9e\u4f8b\u3002 \u8ba9\u6211\u4eec\u7ee7\u7eed\u9605\u8bfb process \u65b9\u6cd5\uff0c\u63a5\u4e0b\u6765\u8981\u505a\u7684\u662f\u8c03\u7528 processAnimationFrames \u65b9\u6cd5\u6765\u5904\u7406\u52a8\u753b\u5e27\uff1a private static List<AnimatedFrame> processAnimationFrames(MD5Model md5Model, MD5AnimModel animModel, List<Matrix4f> invJointMatrices) { List<AnimatedFrame> animatedFrames = new ArrayList<>(); List<MD5Frame> frames = animModel.getFrames(); for(MD5Frame frame : frames) { AnimatedFrame data = processAnimationFrame(md5Model, animModel, frame, invJointMatrices); animatedFrames.add(data); } return animatedFrames; } \u8be5\u65b9\u6cd5\u5904\u7406MD5\u52a8\u753b\u5b9a\u4e49\u6587\u4ef6\u4e2d\u5b9a\u4e49\u7684\u6bcf\u4e2a\u52a8\u753b\u5e27\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a AnimatedFrame \u5b9e\u4f8b\u7684\u5217\u8868\u3002\u771f\u6b63\u7684\u5de5\u4f5c\u662f\u5728 processAnimationFrame \u65b9\u6cd5\u4e2d\u5b8c\u6210\u7684\u3002\u8ba9\u6211\u6765\u89e3\u91ca\u4e00\u4e0b\u8fd9\u4e2a\u65b9\u6cd5\u7684\u4f5c\u7528\u3002 \u9996\u5148\uff0c\u904d\u5386MD5\u52a8\u753b\u6587\u4ef6\u7684\u5c42\u6b21\u7ed3\u6784\u90e8\u5206\u4e2d\u5b9a\u4e49\u7684\u5173\u8282\u3002 private static AnimatedFrame processAnimationFrame(MD5Model md5Model, MD5AnimModel animModel, MD5Frame frame, List<Matrix4f> invJointMatrices) { AnimatedFrame result = new AnimatedFrame(); MD5BaseFrame baseFrame = animModel.getBaseFrame(); List<MD5Hierarchy.MD5HierarchyData> hierarchyList = animModel.getHierarchy().getHierarchyDataList(); List<MD5JointInfo.MD5JointData> joints = md5Model.getJointInfo().getJoints(); int numJoints = joints.size(); float[] frameData = frame.getFrameData(); for (int i = 0; i < numJoints; i++) { MD5JointInfo.MD5JointData joint = joints.get(i); \u6211\u4eec\u5f97\u5230\u4e0e\u6bcf\u4e2a\u5173\u8282\u76f8\u5173\u8054\u7684\u57fa\u672c\u5e27\u5143\u7d20\u7684\u4f4d\u7f6e\u548c\u65b9\u5411\u3002 MD5BaseFrame.MD5BaseFrameData baseFrameData = baseFrame.getFrameDataList().get(i); Vector3f position = baseFrameData.getPosition(); Quaternionf orientation = baseFrameData.getOrientation(); \u539f\u5219\u4e0a\uff0c\u8be5\u6570\u636e\u5e94\u5206\u914d\u7ed9\u5173\u8282\u7684\u4f4d\u7f6e\u548c\u65b9\u5411\uff0c\u4f46\u5b83\u9700\u8981\u6839\u636e\u5173\u8282\u7684\u6807\u5fd7\u8fdb\u884c\u8f6c\u6362\u3002\u5982\u679c\u4f60\u8fd8\u8bb0\u5f97\uff0c\u5728\u5c55\u793a\u52a8\u753b\u6587\u4ef6\u7684\u7ed3\u6784\u65f6\uff0c\u5c42\u6b21\u7ed3\u6784\u90e8\u5206\u4e2d\u7684\u6bcf\u4e2a\u8282\u70b9\u90fd\u5b9a\u4e49\u4e86\u4e00\u4e2a\u6807\u5fd7\u3002\u8be5\u6807\u5fd7\u6839\u636e\u6bcf\u4e2a\u52a8\u753b\u5e27\u4e2d\u5b9a\u4e49\u7684\u4fe1\u606f\u51b3\u5b9a\u5efa\u6a21\u4f4d\u7f6e\u548c\u65b9\u5411\u5e94\u8be5\u5982\u4f55\u66f4\u6539\u3002 \u5982\u679c\u6807\u5fd7\u5b57\u6bb5\u7684\u7b2c\u4e00\u4e2a\u4f4d\u7b49\u4e8e1\uff0c\u6211\u4eec\u5e94\u8be5\u4f7f\u7528\u6b63\u5728\u5904\u7406\u7684\u52a8\u753b\u5e27\u4e2d\u5305\u542b\u7684\u6570\u636e\u66f4\u6539\u57fa\u672c\u5e27\u5750\u6807\u7684x\u5206\u91cf\u3002\u52a8\u753b\u5e27\u5b9a\u4e49\u4e86\u4e00\u4e2a\u6d6e\u70b9\u6570\u7ec4\uff0c\u6240\u4ee5\u6211\u4eec\u5e94\u8be5\u53d6\u54ea\u4e2a\u5143\u7d20\u5462\uff1f\u7b54\u6848\u4e5f\u5728\u5173\u8282\u5b9a\u4e49\u4e2d\uff0c\u5176\u4e2d\u5305\u542b startIndex \u5c5e\u6027\u3002\u5982\u679c\u6807\u5fd7\u7684\u7b2c\u4e8c\u4e2a\u4f4d\u7b49\u4e8e1\uff0c\u6211\u4eec\u5e94\u8be5\u7528 startIndex + 1 \u7684\u503c\u66f4\u6539\u57fa\u672c\u5e27\u5750\u6807\u7684y\u5206\u91cf\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff0c\u63a5\u4e0b\u6765\u7684\u662f\u5750\u6807\u7684z\u5206\u91cf\uff0c\u4ee5\u53ca\u65b9\u5411\u7684x\u3001y\u548cz\u5206\u91cf\u3002 int flags = hierarchyList.get(i).getFlags(); int startIndex = hierarchyList.get(i).getStartIndex(); if ( (flags & 1 ) > 0) { position.x = frameData[startIndex++]; } if ( (flags & 2) > 0) { position.y = frameData[startIndex++]; } if ( (flags & 4) > 0) { position.z = frameData[startIndex++]; } if ( (flags & 8) > 0) { orientation.x = frameData[startIndex++]; } if ( (flags & 16) > 0) { orientation.y = frameData[startIndex++]; } if ( (flags & 32) > 0) { orientation.z = frameData[startIndex++]; } // \u66f4\u65b0\u56db\u5143\u6570\u7684w\u5206\u91cf orientation = MD5Utils.calculateQuaternion(orientation.x, orientation.y, orientation.z); \u73b0\u5728\u6211\u4eec\u6709\u4e86\u8ba1\u7b97\u53d8\u6362\u77e9\u9635\u6240\u9700\u7684\u6240\u6709\u6570\u636e\uff0c\u4ece\u800c\u5f97\u5230\u5f53\u524d\u52a8\u753b\u5e27\u7684\u6bcf\u4e2a\u5173\u8282\u7684\u6700\u7ec8\u4f4d\u7f6e\u3002\u4f46\u662f\u6211\u4eec\u5fc5\u987b\u8003\u8651\u53e6\u4e00\u4ef6\u4e8b\uff0c\u6bcf\u4e2a\u5173\u8282\u7684\u4f4d\u7f6e\u662f\u76f8\u5bf9\u4e8e\u5b83\u7684\u7236\u5173\u8282\u7684\u4f4d\u7f6e\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5f97\u5230\u4e0e\u6bcf\u4e2a\u7236\u5173\u8282\u76f8\u5173\u7684\u53d8\u6362\u77e9\u9635\u5e76\u7528\u5b83\u6765\u5f97\u5230\u6a21\u578b\u7a7a\u95f4\u5750\u6807\u4e2d\u7684\u53d8\u6362\u77e9\u9635\u3002 // \u8ba1\u7b97\u8fd9\u4e2a\u5173\u8282\u7684\u5e73\u79fb\u548c\u65cb\u8f6c\u77e9\u9635 Matrix4f translateMat = new Matrix4f().translate(position); Matrix4f rotationMat = new Matrix4f().rotate(orientation); Matrix4f jointMat = translateMat.mul(rotationMat); // \u5173\u8282\u4f4d\u7f6e\u662f\u76f8\u5bf9\u4e8e\u5173\u8282\u7684\u7236\u7d22\u5f15\u7684\u4f4d\u7f6e\u3002 // \u4f7f\u7528\u7236\u77e9\u9635\u5c06\u5176\u8f6c\u6362\u4e3a\u6a21\u578b\u7a7a\u95f4\u3002 if ( joint.getParentIndex() > -1 ) { Matrix4f parentMatrix = result.getLocalJointMatrices()[joint.getParentIndex()]; jointMat = new Matrix4f(parentMatrix).mul(jointMat); } result.setMatrix(i, jointMat, invJointMatrices.get(i)); } return result; } \u4f60\u53ef\u4ee5\u770b\u5230\uff0c\u6211\u4eec\u521b\u5efa\u4e86 AnimatedFrame \u7c7b\u7684\u4e00\u4e2a\u5b9e\u4f8b\uff0c\u8be5\u7c7b\u5305\u542b\u5c06\u5728\u52a8\u753b\u671f\u95f4\u4f7f\u7528\u7684\u6570\u636e\u3002\u8fd9\u4e2a\u7c7b\u4e5f\u4f7f\u7528\u9006\u77e9\u9635\uff0c\u7a0d\u540e\u6211\u4eec\u4f1a\u77e5\u9053\u4e3a\u4ec0\u4e48\u8fd9\u6837\u505a\u3002\u9700\u8981\u6ce8\u610f\u7684\u4e00\u70b9\u662f\uff0c AnimatedFrame \u7684 setMatrix \u65b9\u6cd5\u662f\u8fd9\u6837\u5b9a\u4e49\u7684\uff1a public void setMatrix(int pos, Matrix4f localJointMatrix, Matrix4f invJointMatrix) { localJointMatrices[pos] = localJointMatrix; Matrix4f mat = new Matrix4f(localJointMatrix); mat.mul(invJointMatrix); jointMatrices[pos] = mat; } \u53d8\u91cf localJointMatrix \u50a8\u5b58\u5f53\u524d\u5e27\u4e2d\u5360\u636e\u4f4d\u7f6e\u201ci\u201d\u7684\u5173\u8282\u7684\u65cb\u8f6c\u77e9\u9635\uff0c invJointMatrix \u6301\u6709\u5360\u636e\u7ed1\u5b9a\u59ff\u52bf\u4f4d\u7f6e\u201ci\u201d\u4f4d\u7f6e\u7684\u5173\u8282\u7684\u9006\u53d8\u6362\u77e9\u9635\u3002\u6211\u4eec\u50a8\u5b58\u4e86 localJointMatrix \u4e0e invJointMatrix \u77e9\u9635\u76f8\u4e58\u7684\u7ed3\u679c\u3002\u8fd9\u4e2a\u7ed3\u679c\u5c06\u5728\u7a0d\u540e\u7528\u4e8e\u8ba1\u7b97\u6700\u7ec8\u5750\u6807\u3002\u6211\u4eec\u8fd8\u50a8\u5b58\u4e86\u539f\u59cb\u7684\u5173\u8282\u53d8\u6362\u77e9\u9635\uff0c\u53d8\u91cf localJointMatrix \uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7528\u5b83\u6765\u8ba1\u7b97\u5b50\u5173\u8282\u7684\u53d8\u6362\u77e9\u9635\u3002 \u8ba9\u6211\u4eec\u56de\u5230 MD5Loader \u7c7b\uff0c generateMesh \u65b9\u6cd5\u4e5f\u53d1\u751f\u4e86\u53d8\u5316\uff0c\u5982\u6211\u4eec\u4e4b\u524d\u8bf4\u660e\u7684\u90a3\u6837\u8ba1\u7b97\u7ed1\u5b9a\u59ff\u52bf\u7684\u5750\u6807\uff0c\u4f46\u5bf9\u4e8e\u6bcf\u4e2a\u9876\u70b9\uff0c\u6211\u4eec\u50a8\u5b58\u4e24\u4e2a\u6570\u7ec4\uff1a \u4e00\u4e2a\u6570\u7ec4\uff0c\u50a8\u5b58\u7740\u4e0e\u8be5\u9876\u70b9\u76f8\u5173\u7684\u6743\u91cd\u504f\u501a\u3002 \u4e00\u4e2a\u8f93\u51fa\uff0c\u50a8\u5b58\u8fd9\u4e0e\u8be5\u9876\u70b9\u76f8\u5173\u7684\u5173\u8282\u7d22\u5f15\uff08\u901a\u8fc7\u6743\u91cd\uff09\u3002 \u6211\u4eec\u5c06\u8fd9\u4e9b\u6570\u7ec4\u7684\u5927\u5c0f\u9650\u5236\u4e3a4\u3002 Mesh \u7c7b\u4e5f\u88ab\u4fee\u6539\u4e3a\u63a5\u6536\u8fd9\u4e9b\u53c2\u6570\uff0c\u5e76\u5c06\u5176\u5305\u542b\u5728\u7740\u8272\u5668\u5904\u7406\u7684VAO\u6570\u636e\u4e2d\u3002\u4f60\u53ef\u4ee5\u5728\u6e90\u4ee3\u7801\u4e2d\u67e5\u770b\u8be6\u7ec6\u5185\u5bb9\uff0c\u4f46\u6765\u56de\u987e\u4e00\u4e0b\u6211\u4eec\u6240\u505a\u7684\uff1a \u6211\u4eec\u4ecd\u5728\u52a0\u8f7d\u7ed1\u5b9a\u59ff\u52bf\uff0c\u901a\u8fc7\u6743\u91cd\u6570\u636e\u8ba1\u7b97\u51fa\u5b83\u4eec\u7684\u6700\u7ec8\u4f4d\u7f6e\uff0c\u5373\u5173\u8282\u5750\u6807\u548c\u65b9\u5411\u7684\u603b\u548c\u3002 \u8fd9\u4e9b\u6570\u636e\u4ee5VBO\u7684\u5f62\u5f0f\u52a0\u8f7d\u5230\u7740\u8272\u5668\u4e2d\uff0c\u4f46\u662f\u5b83\u7531\u4e0e\u6bcf\u4e2a\u9876\u70b9\u76f8\u5173\u7684\u6743\u91cd\u7684\u504f\u501a\u548c\u5f71\u54cd\u5b83\u7684\u5173\u8282\u7684\u7d22\u5f15\u6765\u8865\u5145\u3002\u8fd9\u4e2a\u6570\u636e\u5bf9\u6240\u6709\u52a8\u753b\u5e27\u90fd\u662f\u901a\u7528\u7684\uff0c\u56e0\u4e3a\u5b83\u662f\u5728MD5\u5b9a\u4e49\u6587\u4ef6\u4e2d\u5b9a\u4e49\u7684\u3002\u8fd9\u5c31\u662f\u6211\u4eec\u9650\u5236\u504f\u501a\u548c\u5173\u8282\u7d22\u5f15\u6570\u7ec4\u5927\u5c0f\u7684\u539f\u56e0\uff0c\u5f53\u6a21\u578b\u88ab\u53d1\u9001\u5230GPU\u65f6\uff0c\u5b83\u4eec\u5c06\u88ab\u52a0\u8f7d\u4e3aVBO\u3002 \u5bf9\u4e8e\u6bcf\u4e2a\u52a8\u753b\u5e27\uff0c\u6211\u4eec\u6839\u636e\u57fa\u7840\u5e27\u4e2d\u5b9a\u4e49\u7684\u4f4d\u7f6e\u548c\u65b9\u5411\uff0c\u50a8\u5b58\u5e94\u7528\u4e8e\u6bcf\u4e2a\u5173\u8282\u7684\u53d8\u6362\u77e9\u9635\u3002 \u6211\u4eec\u8fd8\u8ba1\u7b97\u4e86\u5b9a\u4e49\u7ed1\u5b9a\u59ff\u52bf\u7684\u5173\u8282\u76f8\u5173\u7684\u53d8\u6362\u77e9\u9635\u7684\u9006\u77e9\u9635\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u77e5\u9053\u5982\u4f55\u64a4\u9500\u7ed1\u5b9a\u59ff\u52bf\u4e2d\u5b8c\u6210\u7684\u53d8\u6362\uff0c\u7a0d\u540e\u5c06\u770b\u5230\u5982\u4f55\u5e94\u7528\u5b83\u3002 \u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u6709\u4e86\u62fc\u56fe\u7684\u6240\u6709\u788e\u7247\uff0c\u53ea\u9700\u8981\u5728\u7740\u8272\u5668\u4e2d\u4f7f\u7528\u5b83\u4eec\u3002\u6211\u9996\u5148\u9700\u8981\u4fee\u6539\u8f93\u5165\u6570\u636e\u6765\u63a5\u6536\u6743\u91cd\u548c\u5173\u8282\u7d22\u5f15\u3002 #version 330 const int MAX_WEIGHTS = 4; const int MAX_JOINTS = 150; layout (location=0) in vec3 position; layout (location=1) in vec2 texCoord; layout (location=2) in vec3 vertexNormal; layout (location=3) in vec4 jointWeights; layout (location=4) in ivec4 jointIndices; \u6211\u4eec\u5b9a\u4e49\u4e86\u4e24\u4e2a\u5e38\u91cf\uff1a MAX_WEIGHTS \uff0c\u5b9a\u4e49\u6743\u91cdVBO\uff08\u4e00\u4e2a\u5355\u72ec\u7684\u5173\u8282\u7d22\u5f15\uff09\u4e2d\u7684\u6743\u91cd\u7684\u6700\u5927\u6570\u91cf\u3002 MAX_JOINTS \uff0c\u5b9a\u4e49\u4e86\u6211\u4eec\u5c06\u652f\u6301\u7684\u6700\u5927\u5173\u8282\u6570\u91cf\uff08\u7a0d\u540e\u5c06\u8be6\u7ec6\u4ecb\u7ecd\uff09\u3002 \u7136\u540e\u6211\u4eec\u5b9a\u4e49\u8f93\u51fa\u6570\u636e\u548cUniform\u3002 out vec2 outTexCoord; out vec3 mvVertexNormal; out vec3 mvVertexPos; out vec4 mlightviewVertexPos; out mat4 outModelViewMatrix; uniform mat4 jointsMatrix[MAX_JOINTS]; uniform mat4 modelViewMatrix; uniform mat4 projectionMatrix; uniform mat4 modelLightViewMatrix; uniform mat4 orthoProjectionMatrix; \u4f60\u53ef\u4ee5\u770b\u5230\uff0c\u6211\u4eec\u6709\u4e00\u4e2a\u540d\u4e3a jointsMatrix \u7684\u65b0Uniform\uff0c\u5b83\u662f\u4e00\u4e2a\u77e9\u9635\u6570\u7ec4\uff08\u6700\u5927\u957f\u5ea6\u7531 MAX_JOINTS \u5e38\u91cf\u8bbe\u7f6e\uff09\u3002\u8be5\u77e9\u9635\u6570\u7ec4\u5305\u542b\u5f53\u524d\u5e27\u4e2d\u6240\u6709\u5173\u8282\u7684\u5173\u8282\u77e9\u9635\uff0c\u5e76\u5728\u5904\u7406\u5e27\u65f6\u5728 MD5Loader \u7c7b\u4e2d\u8ba1\u7b97\u3002\u56e0\u6b64\uff0c\u8be5\u6570\u7ec4\u5305\u542b\u9700\u8981\u5e94\u7528\u4e8e\u5f53\u524d\u52a8\u753b\u5e27\u4e2d\u6240\u6709\u5173\u8282\u7684\u53d8\u6362\uff0c\u5e76\u5c06\u4f5c\u4e3a\u8ba1\u7b97\u9876\u70b9\u6700\u7ec8\u5750\u6807\u7684\u57fa\u7840\u3002 \u4f7f\u7528VBO\u4e2d\u7684\u65b0\u6570\u636e\u548c\u8be5Uniform\uff0c\u6211\u4eec\u5c06\u53d8\u6362\u7ed1\u5b9a\u59ff\u52bf\u7684\u5750\u6807\u3002\u8fd9\u5c06\u5728\u4e0b\u8ff0\u4ee3\u7801\u5757\u4e2d\u5b8c\u6210\uff1a vec4 initPos = vec4(0, 0, 0, 0); int count = 0; for(int i = 0; i < MAX_WEIGHTS; i++) { float weight = jointWeights[i]; if(weight > 0) { count++; int jointIndex = jointIndices[i]; vec4 tmpPos = jointsMatrix[jointIndex] * vec4(position, 1.0); initPos += weight * tmpPos; } } if (count == 0) { initPos = vec4(position, 1.0); } \u9996\u5148\uff0c\u6211\u4eec\u5f97\u5230\u7ed1\u5b9a\u59ff\u52bf\u7684\u5750\u6807\uff0c\u904d\u5386\u4e0e\u8fd9\u4e2a\u9876\u70b9\u5173\u8054\u7684\u6743\u91cd\uff0c\u5e76\u901a\u8fc7\u4f7f\u7528\u50a8\u5b58\u5728\u8f93\u5165\u4e2d\u7684\u7d22\u5f15\uff0c\u4f7f\u7528\u8be5\u5e27\uff08\u50a8\u5b58\u5728 jointsMatrix Uniform\u4e2d\uff09\u7684\u6743\u91cd\u548c\u5173\u8282\u77e9\u9635\u4fee\u6539\u5750\u6807\u3002 \u56e0\u6b64\uff0c\u7ed9\u5b9a\u4e00\u4e2a\u9876\u70b9\u5750\u6807\uff0c\u6211\u4eec\u8ba1\u7b97\u5b83\u7684\u5e27\u5750\u6807\uff1a Vfp = \\sum\\limits_{i=0}^{MAX WEIGTHS} Wb_{i} \\dot (Jfp_{i} \\times Jt^{-1}_{i}) \\times Vpos \u53c2\u6570\uff1a Wfvp \u662f\u9876\u70b9\u7684\u6700\u7ec8\u5750\u6807\u3002 Wb \u662f\u9876\u70b9\u7684\u6743\u91cd\u3002 Jfp \u662f\u8fd9\u4e2a\u5750\u6807\u7cfb\u7684\u5173\u8282\u53d8\u6362\u77e9\u9635\u3002 Jt^{-1} \u662f\u7ed1\u5b9a\u59ff\u52bf\u7684\u5173\u8282\u53d8\u6362\u77e9\u9635\u7684\u9006\u77e9\u9635\u3002\u8fd9\u4e2a\u77e9\u9635\u4e0e Jfp \u7684\u6210\u7ee9\u50a8\u5b58\u5728 jointsMatrix Uniform\u4e2d\u3002 Vpos \u662f\u7ed1\u5b9a\u59ff\u52bf\u4e2d\u7684\u9876\u70b9\u5750\u6807\u3002 Vpos \u7531 Jt \u77e9\u9635\u8ba1\u7b97\uff0c\u8fd9\u662f\u7ed1\u5b9a\u59ff\u52bf\u7684\u5173\u8282\u53d8\u6362\u77e9\u9635\u7684\u77e9\u9635\u3002\u6240\u4ee5\uff0c\u6700\u540e\u6211\u4eec\u8981\u64a4\u9500\u7ed1\u5b9a\u59ff\u52bf\u7684\u4fee\u6539\u6765\u5e94\u7528\u8be5\u5750\u6807\u7cfb\u7684\u53d8\u6362\u3002\u8fd9\u5c31\u662f\u6211\u4eec\u9700\u8981\u9006\u7ed1\u5b9a\u59ff\u52bf\u77e9\u9635\u7684\u539f\u56e0\u3002 \u7740\u8272\u5668\u652f\u6301\u6743\u91cd\u53ef\u53d8\u7684\u9876\u70b9\uff0c\u6700\u591a\u53ef\u8fbe4\u4e2a\uff0c\u8fd8\u53ef\u4ee5\u6e32\u67d3\u975e\u52a8\u753b\u9879\u3002\u5728\u6b64\u60c5\u51b5\u4e0b\uff0c\u6743\u91cd\u7b49\u4e8e0\u6211\u4eec\u5c06\u5f97\u5230\u539f\u59cb\u5750\u6807\u3002 \u7740\u8272\u5668\u7684\u5176\u4f59\u90e8\u5206\u6216\u591a\u6216\u5c11\u4fdd\u6301\u4e0d\u53d8\uff0c\u6211\u4eec\u53ea\u662f\u4f7f\u7528\u66f4\u65b0\u540e\u7684\u5750\u6807\u5e76\u4f20\u9012\u7247\u5143\u7740\u8272\u5668\u8981\u4f7f\u7528\u7684\u6b63\u786e\u503c\u3002 vec4 mvPos = modelViewMatrix * initPos; gl_Position = projectionMatrix * mvPos; outTexCoord = texCoord; mvVertexNormal = normalize(modelViewMatrix * vec4(vertexNormal, 0.0)).xyz; mvVertexPos = mvPos.xyz; mlightviewVertexPos = orthoProjectionMatrix * modelLightViewMatrix * vec4(position, 1.0); outModelViewMatrix = modelViewMatrix; } \u6240\u4ee5\uff0c\u4e3a\u4e86\u6d4b\u8bd5\u52a8\u753b\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5c06 jointsMatrix \u4f20\u9012\u7ed9\u7740\u8272\u5668\u3002\u7531\u4e8e\u6b64\u4fe1\u606f\u4ec5\u50a8\u5b58\u5728 AnimGameItem \u5b9e\u4f8b\u4e2d\uff0c\u56e0\u6b64\u4ee3\u7801\u975e\u5e38\u7b80\u5355\u3002\u5728\u6e32\u67d3\u7f51\u683c\u7684\u5faa\u73af\u4e2d\uff0c\u6211\u4eec\u6dfb\u52a0\u4e86\u5982\u4e0b\u4ee3\u7801\u7247\u6bb5\uff1a if ( gameItem instanceof AnimGameItem ) { AnimGameItem animGameItem = (AnimGameItem)gameItem; AnimatedFrame frame = animGameItem.getCurrentFrame(); sceneShaderProgram.setUniform(\"jointsMatrix\", frame.getJointMatrices()); } \u5f53\u7136\uff0c\u5728\u4f7f\u7528\u5b83\u4e4b\u524d\uff0c\u4f60\u9700\u8981\u521b\u5efaUniform\uff0c\u4f60\u53ef\u4ee5\u67e5\u770b\u8be5\u7c7b\u7684\u6e90\u4ee3\u7801\u3002\u5982\u679c\u8fd0\u884c\u8fd9\u4e2a\u793a\u4f8b\uff0c\u4f60\u5c06\u80fd\u591f\u901a\u8fc7\u6309\u4e0b\u7a7a\u683c\u952e\u6765\u67e5\u770b\u6a21\u578b\u662f\u5982\u4f55\u52a8\u8d77\u6765\u7684\uff08\u6bcf\u6b21\u6309\u4e0b\u8fd9\u4e2a\u952e\uff0c\u90fd\u4f1a\u8bbe\u7f6e\u4e00\u4e2a\u65b0\u7684\u5e27\uff0c\u5e76\u4e14 jointsMatrix Uniform\u4f1a\u53d1\u751f\u53d8\u5316\uff09\u3002 \u4f60\u5c06\u770b\u5230\u5982\u4e0b\u6240\u793a\u7684\u4e1c\u897f\uff1a \u867d\u7136\u52a8\u753b\u5f88\u6d41\u7545\uff0c\u4f46\u793a\u4f8b\u8fd8\u662f\u5b58\u5728\u4e00\u4e9b\u95ee\u9898\u3002\u9996\u5148\uff0c\u5149\u7167\u6ca1\u6709\u6b63\u5e38\u7684\u5de5\u4f5c\uff0c\u9634\u5f71\u8868\u73b0\u7684\u662f\u7ed1\u5b9a\u59ff\u52bf\uff0c\u800c\u4e0d\u662f\u5f53\u524d\u5e27\u3002\u6211\u4eec\u73b0\u5728\u5c06\u89e3\u51b3\u6240\u6709\u8fd9\u4e9b\u95ee\u9898\u3002 \u4fee\u6b63\u52a8\u753b\u95ee\u9898 \u7b2c\u4e00\u4e2a\u8981\u89e3\u51b3\u7684\u95ee\u9898\u662f\u5149\u7167\u95ee\u9898\u3002\u4f60\u53ef\u80fd\u5df2\u7ecf\u6ce8\u610f\u5230\u8fd9\u79cd\u60c5\u51b5\u4e86\uff0c\u8fd9\u662f\u56e0\u4e3a\u6211\u4eec\u6ca1\u6709\u53d8\u6362\u6cd5\u7ebf\u3002\u56e0\u6b64\uff0c\u7247\u5143\u7740\u8272\u5668\u4e2d\u4f7f\u7528\u7684\u6cd5\u7ebf\u4e0e\u7ed1\u5b9a\u59ff\u52bf\u76f8\u5bf9\u5e94\u3002\u6211\u4eec\u9700\u8981\u50cf\u53d8\u6362\u4f4d\u7f6e\u4e00\u6837\u53d8\u6362\u5b83\u4eec\u3002 \u8fd9\u4e2a\u95ee\u9898\u5f88\u597d\u89e3\u51b3\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5728\u5faa\u73af\u4e2d\u5c06\u6cd5\u7ebf\u4e5f\u56ca\u62ec\u5230\u9876\u70b9\u7740\u8272\u5668\u4e2d\u7684\u6743\u91cd\u904d\u5386\u3002 vec4 initPos = vec4(0, 0, 0, 0); vec4 initNormal = vec4(0, 0, 0, 0); int count = 0; for(int i = 0; i < MAX_WEIGHTS; i++) { float weight = jointWeights[i]; if(weight > 0) { count++; int jointIndex = jointIndices[i]; vec4 tmpPos = jointsMatrix[jointIndex] * vec4(position, 1.0); initPos += weight * tmpPos; vec4 tmpNormal = jointsMatrix[jointIndex] * vec4(vertexNormal, 0.0); initNormal += weight * tmpNormal; } } if (count == 0) { initPos = vec4(position, 1.0); initNormal = vec4(vertexNormal, 0.0); } \u7136\u540e\u6211\u4eec\u50cf\u5f80\u5e38\u4e00\u6837\u8ba1\u7b97\u8f93\u51fa\u9876\u70b9\u6cd5\u7ebf\u5411\u91cf\uff1a mvVertexNormal = normalize(modelViewMatrix * initNormal).xyz; \u63a5\u4e0b\u6765\u7684\u95ee\u9898\u662f\u9634\u5f71\u95ee\u9898\u3002\u5982\u679c\u4f60\u8bb0\u5f97\u5728\u9634\u5f71\u4e00\u7ae0\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u9634\u5f71\u56fe\u7ed8\u5236\u9634\u5f71\u3002\u6211\u4eec\u73b0\u5728\u6b63\u4ece\u5149\u7167\u900f\u89c6\u6e32\u67d3\u573a\u666f\uff0c\u4ee5\u4fbf\u521b\u5efa\u4e00\u4e2a\u6df1\u5ea6\u56fe\uff0c\u5b83\u544a\u8bc9\u6211\u4eec\u4e00\u4e2a\u70b9\u662f\u5426\u5728\u9634\u5f71\u4e2d\u3002\u4f46\u662f\uff0c\u5728\u6cd5\u7ebf\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u53ea\u662f\u901a\u8fc7\u7ed1\u5b9a\u59ff\u52bf\u7684\u5750\u6807\uff0c\u800c\u4e0d\u662f\u6839\u636e\u5f53\u524d\u5e27\u6765\u6539\u53d8\u5b83\u4eec\u3002\u8fd9\u5c31\u662f\u9634\u5f71\u4e0e\u5f53\u524d\u5750\u6807\u4e0d\u4e00\u81f4\u7684\u539f\u56e0\u3002 \u89e3\u51b3\u65b9\u6cd5\u4e5f\u5f88\u7b80\u5355\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4fee\u6539\u6df1\u5ea6\u9876\u70b9\u7740\u8272\u5668\u4f7f\u7528 jointsMatrix \u3001\u6743\u91cd\u548c\u5173\u8282\u7d22\u5f15\u6765\u53d8\u6362\u5750\u6807\u3002\u8fd9\u5c31\u662f\u6df1\u5ea6\u9876\u70b9\u7740\u8272\u5668\uff1a #version 330 const int MAX_WEIGHTS = 4; const int MAX_JOINTS = 150; layout (location=0) in vec3 position; layout (location=1) in vec2 texCoord; layout (location=2) in vec3 vertexNormal; layout (location=3) in vec4 jointWeights; layout (location=4) in ivec4 jointIndices; uniform mat4 jointsMatrix[MAX_JOINTS]; uniform mat4 modelLightViewMatrix; uniform mat4 orthoProjectionMatrix; void main() { vec4 initPos = vec4(0, 0, 0, 0); int count = 0; for(int i = 0; i < MAX_WEIGHTS; i++) { float weight = jointWeights[i]; if(weight > 0) { count++; int jointIndex = jointIndices[i]; vec4 tmpPos = jointsMatrix[jointIndex] * vec4(position, 1.0); initPos += weight * tmpPos; } } if (count == 0) { initPos = vec4(position, 1.0); } gl_Position = orthoProjectionMatrix * modelLightViewMatrix * initPos; } \u4f60\u9700\u8981\u4fee\u6539 Renderer \u7c7b\u6765\u4e3a\u8fd9\u4e2a\u7740\u8272\u5668\u8bbe\u7f6e\u65b0\u7684Uniform\uff0c\u6700\u7ec8\u7684\u6548\u679c\u4f1a\u66f4\u597d\u3002\u5149\u7167\u5c06\u88ab\u6b63\u786e\u7684\u5e94\u7528\uff0c\u9634\u5f71\u5c06\u968f\u6bcf\u4e2a\u52a8\u753b\u5e27\u6539\u53d8\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002 \u8fd9\u5c31\u662f\u5168\u90e8\u5185\u5bb9\u4e86\uff0c\u73b0\u5728\u4f60\u5df2\u7ecf\u6709\u4e86\u4e00\u4e2a\u7528\u4e8e\u52a8\u753bMD5\u6a21\u578b\u7684\u53ef\u5de5\u4f5c\u793a\u4f8b\u3002\u6e90\u4ee3\u7801\u4ecd\u80fd\u6539\u8fdb\uff0c\u4f60\u53ef\u4ee5\u4fee\u6539\u5728\u6bcf\u4e2a\u6e32\u67d3\u5468\u671f\u4e2d\u52a0\u8f7d\u7684\u77e9\u9635\uff0c\u4ee5\u4fbf\u5728\u5e27\u4e4b\u95f4\u63d2\u5165\u3002\u4f60\u53ef\u4ee5\u67e5\u770b\u672c\u7ae0\u4e2d\u4f7f\u7528\u7684\u8d44\u6e90\uff0c\u4e86\u89e3\u5982\u4f55\u5b9e\u73b0\u8be5\u529f\u80fd\u3002","title":"\u52a8\u753b"},{"location":"19-animations/#animations","text":"","title":"\u52a8\u753b\uff08Animations\uff09"},{"location":"19-animations/#_1","text":"\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u5df2\u7ecf\u52a0\u8f7d\u4e86\u9759\u60013D\u6a21\u578b\uff0c\u5728\u672c\u7ae0\u4e2d\uff0c\u6211\u4eec\u8bb2\u5b66\u4e60\u5982\u4f55\u4e3a\u5b83\u4eec\u8bbe\u7f6e\u52a8\u753b\u3002\u5728\u601d\u8003\u52a8\u753b\u65f6\uff0c\u9996\u5148\u60f3\u5230\u7684\u65b9\u6cd5\u662f\u4e3a\u6bcf\u4e2a\u6a21\u578b\u72b6\u6001\u521b\u5efa\u4e0d\u540c\u7684\u7f51\u683c\uff0c\u5c06\u5b83\u4eec\u52a0\u8f7d\u5230GPU\u4e2d\uff0c\u7136\u540e\u6309\u987a\u5e8f\u7ed8\u5236\uff0c\u4ee5\u6b64\u9020\u6210\u52a8\u753b\u7684\u5047\u8c61\u3002\u867d\u7136\u8fd9\u79cd\u65b9\u6cd5\u5bf9\u4e8e\u67d0\u4e9b\u6e38\u620f\u6765\u8bf4\u662f\u5b8c\u7f8e\u7684\uff0c\u4f46\u662f\u5b83\u7684\u6548\u7387\u4e0d\u662f\u5f88\u9ad8\uff08\u5c31\u5185\u5b58\u6d88\u8017\u6765\u8bf4\uff09\u3002 \u8fd9\u5c31\u662f\u9aa8\u9abc\u52a8\u753b\uff08Skeletal Animation\uff09\u7684\u7528\u6b66\u4e4b\u5730\u3002\u5728\u9aa8\u9abc\u52a8\u753b\u4e2d\uff0c\u6a21\u578b\u7684\u52a8\u753b\u65b9\u5f0f\u7531\u5176\u5e95\u5c42\u9aa8\u67b6\uff08Skeletal\uff09\u5b9a\u4e49\uff0c\u9aa8\u67b6\u662f\u7531\u88ab\u79f0\u4e3a\u5173\u8282\uff08Joints\uff09\u7684\u7279\u6b8a\u70b9\u7684\u5c42\u6b21\u7ed3\u6784\u5b9a\u4e49\u7684\uff0c\u8fd9\u4e9b\u5173\u8282\u53c8\u7531\u5b83\u4eec\u7684\u4f4d\u7f6e\u548c\u65cb\u8f6c\u6765\u5b9a\u4e49\u3002\u6211\u4eec\u4e5f\u8bf4\u8fc7\u8fd9\u662f\u4e00\u4e2a\u5c42\u6b21\u7ed3\u6784\uff0c\u8fd9\u610f\u5473\u7740\u6bcf\u4e2a\u5173\u952e\u7684\u6700\u7ec8\u4f4d\u7f6e\u90fd\u6536\u5230\u5b83\u4eec\u7684\u7236\u5c42\u6b21\u7684\u5f71\u54cd\u3002\u4ee5\u624b\u8155\u4e3a\u4f8b\uff0c\u5982\u679c\u89d2\u8272\u79fb\u52a8\u8098\u90e8\u548c\u80a9\u8180\uff0c\u624b\u8155\u7684\u4f4d\u7f6e\u5c31\u4f1a\u53d1\u751f\u6539\u53d8\u3002 \u5173\u8282\u4e0d\u9700\u8981\u8868\u793a\u4e00\u4e2a\u5408\u4e4e\u73b0\u5b9e\u7684\u9aa8\u9abc\u6216\u5173\u8282\uff0c\u5b83\u4eec\u662f\u4eba\u5de5\u8bbe\u7f6e\u7684\uff0c\u5141\u8bb8\u521b\u4f5c\u8005\u5efa\u6a21\u52a8\u753b\u3002\u9664\u4e86\u5173\u8282\uff0c\u6211\u4eec\u8fd8\u6709\u9876\u70b9\uff0c\u8fd9\u4e9b\u9876\u70b9\u5b9a\u4e49\u4e86\u6784\u62103D\u6a21\u578b\u7684\u4e09\u89d2\u5f62\u3002\u4f46\u5728\u9aa8\u9abc\u52a8\u753b\u4e2d\uff0c\u9876\u70b9\u662f\u6839\u636e\u4e0e\u4e4b\u76f8\u5173\u7684\u5173\u8282\u7684\u4f4d\u7f6e\u7ed8\u5236\u7684\u3002 \u5728\u672c\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u4f7f\u7528MD5\u683c\u5f0f\u6765\u52a0\u8f7d\u6709\u52a8\u753b\u7684\u6a21\u578b\u3002MD5\u683c\u5f0f\u662f\u7531\u300a\u6bc1\u706d\u6218\u58eb\u300b\u7684\u5f00\u53d1\u5546ID Software\u5236\u5b9a\u7684\uff0c\u5b83\u57fa\u672c\u4e0a\u662f\u4e00\u79cd\u57fa\u4e8e\u6587\u672c\u7684\u6587\u4ef6\u683c\u5f0f\uff0c\u6613\u4e8e\u7406\u89e3\u3002\u53e6\u4e00\u79cd\u65b9\u6cd5\u662f\u4f7f\u7528 Collada \u683c\u5f0f\uff0c\u8fd9\u662f\u8bb8\u591a\u5de5\u5177\u652f\u6301\u7684\u516c\u5171\u6807\u51c6\u3002Collada\u662f\u4e00\u79cd\u57fa\u4e8eXML\u7684\u6587\u4ef6\u683c\u5f0f\uff0c\u4f46\u5b83\u7684\u7f3a\u70b9\u662f\u975e\u5e38\u590d\u6742\uff081.5\u7248\u672c\u7684\u89c4\u8303\u5c31\u6709500\u591a\u9875\uff09\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u5c06\u575a\u6301\u4f7f\u7528\u4e00\u79cd\u66f4\u7b80\u5355\u7684\u683c\u5f0f\uff0cMD5\uff0c\u5b83\u4f7f\u6211\u4eec\u4e13\u6ce8\u4e8e\u9aa8\u9abc\u52a8\u753b\u7684\u6982\u5ff5\u5e76\u521b\u5efa\u4e00\u4e2a\u53ef\u5de5\u4f5c\u7684\u793a\u4f8b\u3002 \u4f60\u8fd8\u53ef\u4ee5\u901a\u8fc7\u5728\u4e92\u8054\u7f51\u4e0a\u627e\u5230 \u7279\u5b9a\u63d2\u4ef6 \u5c06\u4e00\u4e9b\u6a21\u578b\u4eceBlender\u5bfc\u51fa\u4e3aMD5\u683c\u5f0f\u3002 \u5728\u672c\u7ae0\u4e2d\uff0c\u6211\u53c2\u8003\u4e86\u8bb8\u591a\u4e0d\u540c\u7684\u8d44\u6599\uff0c\u4f46\u662f\u6211\u53d1\u73b0\u6709\u4e24\u4e2a\u8d44\u6599\u53ef\u4ee5\u5f88\u597d\u5730\u89e3\u91ca\u5982\u4f55\u4f7f\u7528MD5\u6587\u4ef6\u521b\u5efa\u52a8\u753b\u6a21\u578b\u3002\u8fd9\u4e9b\u8d44\u6599\u7684\u6765\u6e90\u5982\u4e0b\uff1a http://www.3dgep.com/gpu-skinning-of-md5-models-in-opengl-and-cg/ http://ogldev.atspace.co.uk/www/tutorial38/tutorial38.html \u8ba9\u6211\u4eec\u4ece\u7f16\u5199\u89e3\u6790MD5\u6587\u4ef6\u7684\u4ee3\u7801\u5f00\u59cb\uff0cMD5\u683c\u5f0f\u5b9a\u4e49\u4e86\u4e24\u79cd\u7c7b\u578b\u7684\u6587\u4ef6\uff1a \u7f51\u683c\u5b9a\u4e49\u6587\u4ef6\uff1a\u5b83\u5b9a\u4e49\u4e86\u6784\u62103D\u6a21\u578b\u7684\u7f51\u683c\u96c6\u7684\u5173\u8282\u3001\u9876\u70b9\u548c\u7eb9\u7406\u3002\u8fd9\u4e2a\u6587\u4ef6\u901a\u5e38\u6709\u4e00\u4e2a\u540d\u4e3a .md5mesh \u7684\u6269\u5c55\u540d\u3002 \u52a8\u753b\u5b9a\u4e49\u6587\u4ef6\uff1a\u5b9a\u4e49\u53ef\u4f7f\u7528\u4e8e\u6a21\u578b\u7684\u52a8\u753b\u3002\u8fd9\u4e2a\u6587\u4ef6\u901a\u5e38\u6709\u4e00\u4e2a\u540d\u4e3a .md5anim \u7684\u6269\u5c55\u540d\u3002 MD5\u6587\u4ef6\u7531\u5934\uff08Header\uff09\u548c\u5927\u62ec\u53f7\u4e4b\u95f4\u5305\u542b\u7684\u4e0d\u540c\u90e8\u5206\u7ec4\u6210\u3002\u8ba9\u6211\u4eec\u5f00\u59cb\u67e5\u770b\u7f51\u683c\u5b9a\u4e49\u6587\u4ef6\u3002\u5728\u53c2\u8003\u8d44\u6599\u6587\u4ef6\u5939\u4e2d\uff0c\u4f60\u5c06\u53d1\u73b0\u51e0\u79cdMD5\u683c\u5f0f\u7684\u6a21\u578b\u3002\u5982\u679c\u4f60\u6253\u5f00\u5176\u4e2d\u4e00\u4e2a\uff0c\u4f60\u4f1a\u770b\u5230\u7c7b\u4f3c\u8fd9\u6837\u7684\u7ed3\u6784\u3002 \u5728\u7f51\u683c\u5b9a\u4e49\u6587\u4ef6\u4e2d\u53ef\u4ee5\u770b\u5230\u7684\u7b2c\u4e00\u4e2a\u7ed3\u6784\u662f\u5934\u3002\u4f60\u53ef\u4ee5\u5728\u4e0b\u8ff0\u63d0\u4f9b\u7684\u793a\u4f8b\u4e2d\uff0c\u770b\u5230\u5934\u7684\u5185\u5bb9\uff1a MD5Version 10 commandline \"\" numJoints 33 numMeshes 6 \u5934\u5b9a\u4e49\u4e86\u5982\u4e0b\u5c5e\u6027\uff1a \u5b83\u6240\u9075\u5faa\u7684MD5\u89c4\u8303\u7684\u7248\u672c\u3002 \u7528\u4e8e\uff08\u4ece3D\u5efa\u6a21\u5de5\u5177\uff09\u751f\u6210\u6b64\u6587\u4ef6\u7684\u547d\u4ee4\u3002 \u5728\u5173\u8282\u90e8\u5206\u5b9a\u4e49\u7684\u5173\u8282\u6570\u3002 \u7f51\u683c\u6570\uff08\u9700\u8981\u7684\u7f51\u683c\u8282\u6570\uff09\u3002 \u5173\u952e\u90e8\u5206\u5b9a\u4e49\u5173\u8282\u7684\u540d\u79f0\u3001\u72b6\u6001\u3001\u4f4d\u7f6e\u53ca\u5176\u5173\u7cfb\u3002\u4e0b\u9762\u5c55\u793a\u4e86\u4e00\u4e2a\u793a\u4f8b\u6a21\u578b\u7684\u5173\u8282\u90e8\u5206\u7684\u7247\u6bb5\uff1a joints { \"origin\" -1 ( -0.000000 0.016430 -0.006044 ) ( 0.707107 0.000000 0.707107 ) // \"sheath\" 0 ( 11.004813 -3.177138 31.702473 ) ( 0.307041 -0.578614 0.354181 ) // origin \"sword\" 1 ( 9.809593 -9.361549 40.753730 ) ( 0.305557 -0.578155 0.353505 ) // sheath \"pubis\" 0 ( 0.014076 2.064442 26.144581 ) ( -0.466932 -0.531013 -0.466932 ) // origin \u2026\u2026 } \u5173\u8282\u7531\u4ee5\u4e0b\u5c5e\u6027\u5b9a\u4e49\uff1a \u5173\u8282\u540d\u79f0\uff0c\u5f15\u53f7\u4e2d\u7684\u6587\u672c\u5c5e\u6027\u3002 \u5173\u8282\u7684\u7236\u5173\u8282\uff0c\u4f7f\u7528\u7d22\u5f15\uff0c\u8be5\u7d22\u5f15\u4f7f\u7528\u7236\u5173\u8282\u5728\u5217\u8868\u4e2d\u7684\u4f4d\u7f6e\u6307\u5411\u7236\u5173\u8282\u3002\u6839\u5173\u8282\u7684\u7236\u5173\u8282\u7b49\u4e8e-1\u3002 \u5173\u8282\u4f4d\u7f6e\uff0c\u5728\u6a21\u578b\u7a7a\u95f4\u5750\u6807\u7cfb\u4e2d\u5b9a\u4e49\u3002 \u5173\u8282\u65b9\u5411\uff0c\u4e5f\u5728\u6a21\u578b\u7a7a\u95f4\u5750\u6807\u7cfb\u4e2d\u5b9a\u4e49\uff0c\u65b9\u5411\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u56db\u5143\u6570\uff0c\u4f46\u5176w\u5206\u91cf\u4e0d\u5305\u62ec\u5728\u6b64\u3002 \u5728\u7ee7\u7eed\u89e3\u91ca\u6587\u4ef6\u7684\u5176\u4f59\u90e8\u5206\u4e4b\u524d\uff0c\u6211\u4eec\u5148\u6765\u8c08\u8c08\u56db\u5143\u6570\uff08Quaternions\uff09\u3002\u56db\u5143\u6570\u662f\u7528\u4e8e\u8868\u793a\u65cb\u8f6c\u7684\u56db\u4e2a\u6784\u6210\u5143\u7d20\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u4e00\u76f4\u5728\u4f7f\u7528\u6b27\u62c9\u89d2\uff08\u504f\u822a\u3001\u4fef\u4ef0\u548c\u6eda\u8f6c\uff09\u6765\u5b9a\u4e49\u65cb\u8f6c\uff0c\u8fd9\u57fa\u672c\u4e0a\u5b9a\u4e49\u4e86\u56f4\u7ed5x\u3001y\u548cz\u53eb\u7684\u65cb\u8f6c\u3002\u4f46\u662f\uff0c\u6b27\u62c9\u89d2\u5728\u5904\u7406\u65cb\u8f6c\u65f6\u4f1a\u51fa\u73b0\u4e00\u4e9b\u95ee\u9898\uff0c\u7279\u522b\u662f\u4f60\u5fc5\u987b\u77e5\u9053\u6b63\u786e\u7684\u65cb\u8f6c\u987a\u5e8f\uff0c\u5e76\u4e14\u4e00\u4e9b\u64cd\u4f5c\u4f1a\u53d8\u5f97\u975e\u5e38\u590d\u6742\u3002 \u56db\u5143\u6570\u6709\u52a9\u4e8e\u89e3\u51b3\u8fd9\u79cd\u590d\u6742\u60c5\u51b5\u3002\u6b63\u5982\u4e4b\u524d\u6240\u8bf4\uff0c\u56db\u5143\u6570\u88ab\u5b9a\u4e49\u4e3a4\u4e2a\u6570\u5b57\uff08x\uff0cy\uff0cz\uff0cw\uff09\u4e00\u7ec4\u3002\u56db\u5143\u6570\u5b9a\u4e49\u65cb\u8f6c\u8f74\u548c\u56f4\u7ed5\u8be5\u8f74\u7684\u65cb\u8f6c\u89d2\u5ea6\u3002 \u4f60\u53ef\u4ee5\u5728\u7f51\u7edc\u4e2d\u786e\u8ba4\u6bcf\u4e2a\u5143\u7d20\u7684\u6570\u5b66\u5b9a\u4e49\uff0c\u4f46\u597d\u6d88\u606f\u662f\u6211\u4eec\u4f7f\u7528\u7684\u6570\u5b66\u5e93JOML\u4e3a\u5176\u63d0\u4f9b\u4e86\u652f\u6301\u3002\u6211\u4eec\u53ef\u4ee5\u57fa\u4e8e\u56db\u5143\u6570\u6784\u9020\u65cb\u8f6c\u77e9\u9635\uff0c\u5e76\u7528\u5b83\u4eec\u5bf9\u5411\u91cf\u8fdb\u884c\u53d8\u6362\u3002 \u8ba9\u6211\u4eec\u56de\u5230\u5173\u8282\u7684\u5b9a\u4e49\uff0c\u5176\u7f3a\u5c11 w \u5143\u7d20\uff0c\u4f46\u53ef\u4ee5\u5728\u5176\u4ed6\u503c\u7684\u5e2e\u52a9\u4e0b\u8f7b\u677e\u5730\u8ba1\u7b97\u5b83\u3002\u4f60\u53ef\u4ee5\u67e5\u770b\u6e90\u4ee3\u7801\uff0c\u770b\u770b\u8fd9\u662f\u5982\u4f55\u505a\u5230\u7684\u3002 \u5728\u5173\u8282\u5b9a\u4e49\u4e4b\u540e\uff0c\u53ef\u4ee5\u627e\u5230\u7ec4\u6210\u6a21\u578b\u7684\u4e0d\u540c\u7f51\u683c\u7684\u5b9a\u4e49\u3002\u63a5\u4e0b\u6765\u4f60\u53ef\u4ee5\u4ece\u5176\u4e2d\u4e00\u4e2a\u793a\u4f8b\u4e2d\u770b\u5230\u7f51\u683c\u5b9a\u4e49\u7684\u7247\u6bb5\uff1a mesh { shader \"/textures/bob/guard1_body.png\" numverts 494 vert 0 ( 0.394531 0.513672 ) 0 1 vert 1 ( 0.447266 0.449219 ) 1 2 ... vert 493 ( 0.683594 0.455078 ) 864 3 numtris 628 tri 0 0 2 1 tri 1 0 1 3 ... tri 627 471 479 493 numweights 867 weight 0 5 1.000000 ( 6.175774 8.105262 -0.023020 ) weight 1 5 0.500000 ( 4.880173 12.805251 4.196980 ) ... weight 866 6 0.333333 ( 1.266308 -0.302701 8.949338 ) } \u8ba9\u6211\u4eec\u770b\u770b\u4e0a\u8ff0\u5c55\u73b0\u7684\u7ed3\u6784\uff1a \u7f51\u683c\u4ece\u5b9a\u4e49\u7eb9\u7406\u6587\u4ef6\u5f00\u59cb\u3002\u8bf7\u8bb0\u4f4f\uff0c\u4f60\u5728\u6b64\u5904\u627e\u5230\u7684\u8def\u5f84\u662f\u521b\u5efa\u8be5\u6a21\u578b\u7684\u5de5\u5177\u6240\u4f7f\u7528\u7684\u8def\u5f84\u3002\u8be5\u8def\u5f84\u53ef\u80fd\u4e0e\u7528\u4e8e\u52a0\u8f7d\u8fd9\u4e9b\u6587\u4ef6\u7684\u8def\u5f84\u4e0d\u5339\u914d\u3002\u8fd9\u91cc\u6709\u4e24\u79cd\u65b9\u6cd5\u89e3\u51b3\uff0c\u8981\u4e48\u52a8\u6001\u4fee\u6539\u57fa\u672c\u8def\u5f84\uff0c\u8981\u4e48\u624b\u52a8\u4fee\u6539\u8be5\u8def\u5f84\u3002\u6211\u9009\u62e9\u4e86\u540e\u8005\uff0c\u6bd4\u8f83\u7b80\u5355\u7684\u4e00\u79cd\u3002 \u63a5\u4e0b\u6765\u53ef\u4ee5\u627e\u5230\u9876\u70b9\u5b9a\u4e49\u3002\u9876\u70b9\u7531\u4ee5\u4e0b\u5c5e\u6027\u5b9a\u4e49\uff1a \u9876\u70b9\u7d22\u5f15\u3002 \u7eb9\u7406\u5750\u6807\u3002 \u5f71\u54cd\u6b64\u9876\u70b9\u7684\u7b2c\u4e00\u4e2a\u6743\u91cd\u5b9a\u4e49\u7684\u7d22\u5f15\u3002 \u8981\u8003\u8651\u7684\u6743\u91cd\u6570\u3002 \u5728\u9876\u70b9\u4e4b\u540e\uff0c\u5c06\u5b9a\u4e49\u6784\u6210\u6b64\u7f51\u683c\u7684\u4e09\u89d2\u5f62\u3002\u4e09\u89d2\u5f62\u5b9a\u4e49\u4e86\u4f7f\u7528\u9876\u70b9\u7d22\u5f15\u7ec4\u7ec7\u9876\u70b9\u7684\u65b9\u5f0f\u3002 \u6700\u540e\uff0c\u5b9a\u4e49\u4e86\u6743\u91cd\u3002\u6743\u91cd\u5b9a\u4e49\u7531\u4ee5\u4e0b\u90e8\u5206\u7ec4\u6210\uff1a \u6743\u91cd\u6307\u6570\u3002 \u5173\u8282\u6307\u6570\uff0c\u6307\u4e0e\u8be5\u6743\u91cd\u76f8\u5173\u7684\u5173\u8282 \u504f\u501a\u7cfb\u6570\uff0c\u7528\u4e8e\u8c03\u8282\u8be5\u6743\u91cd\u7684\u5f71\u54cd\u3002 \u8be5\u6743\u91cd\u7684\u4f4d\u7f6e\u3002 \u4e0b\u56fe\u7528\u793a\u4f8b\u6570\u636e\u8bf4\u660e\u4e86\u4e0a\u8ff0\u7ec4\u5206\u4e4b\u95f4\u7684\u5173\u7cfb\u3002 \u597d\u4e86\uff0c\u73b0\u5728\u4e86\u89e3\u4e86\u7f51\u683c\u6a21\u578b\u6587\u4ef6\uff0c\u6211\u4eec\u53ef\u4ee5\u89e3\u6790\u5b83\u4e86\u3002\u5982\u679c\u4f60\u770b\u4e86\u6e90\u4ee3\u7801\uff0c\u5c06\u770b\u5230\u5df2\u7ecf\u521b\u5efa\u4e86\u65b0\u7684\u5305\u6765\u5bb9\u7eb3\u6a21\u578b\u683c\u5f0f\u7684\u89e3\u6790\u5668\u3002\u5728 org.lwjglb.engine.loaders.obj \u5305\u4e0b\u6709\u4e00\u4e2a\u89e3\u6790OBJ\u6587\u4ef6\u7684\u4ee3\u7801\uff0c\u800c\u89e3\u6790MD5\u6587\u4ef6\u7684\u4ee3\u7801\u5728 org.lwjglb.engine.loaders.md5 \u5305\u4e0b\u3002 \u6240\u6709\u7684\u89e3\u6790\u4ee3\u7801\u90fd\u57fa\u4e8e\u6b63\u5219\u8868\u8fbe\u5f0f\u4eceMD5\u6587\u672c\u6587\u4ef6\u4e2d\u63d0\u53d6\u4fe1\u606f\u3002\u89e3\u6790\u5668\u5c06\u521b\u5efa\u4e00\u4e2a\u5c42\u6b21\u7ed3\u6784\u5bf9\u8c61\uff0c\u4ee5\u6a21\u62dfMD5\u6587\u4ef6\u4e2d\u5305\u542b\u7684\u4fe1\u606f\u7ec4\u4ef6\u7684\u7ed3\u6784\u3002\u5b83\u53ef\u80fd\u4e0d\u662f\u4e16\u754c\u4e0a\u6700\u9ad8\u6548\u7684\u89e3\u6790\u5668\uff0c\u4f46\u6211\u8ba4\u4e3a\u5b83\u5c06\u6709\u52a9\u4e8e\u66f4\u597d\u5730\u7406\u89e3\u8fd9\u4e2a\u8fc7\u7a0b\u3002 \u89e3\u6790MD5\u6a21\u578b\u6587\u4ef6\u7684\u8d77\u59cb\u7c7b\u662f MD5Model \u7c7b\uff0c\u8be5\u7c7b\u5728\u5176\u89e3\u6790\u65b9\u6cd5\u4e2d\u4f5c\u4e3a\u53c2\u6570\u88ab\u63a5\u6536\u3002MD5\u6587\u4ef6\u7684\u5185\u5bb9\u662f\u521b\u5efa\u4e00\u4e2a\u5305\u542b\u5934\u3001\u8282\u70b9\u5217\u8868\u548c\u6240\u6709\u5b50\u5143\u7d20\u7684\u7f51\u683c\u5217\u8868\u7684\u5c42\u6b21\u7ed3\u6784\u3002\u4ee3\u7801\u975e\u5e38\u7b80\u5355\uff0c\u6240\u4ee5\u4e0d\u5305\u542b\u5728\u672c\u6587\u4e2d\u4e86\u3002 \u5173\u4e8e\u89e3\u6790\u4ee3\u7801\u7684\u4e00\u4e9b\u6ce8\u91ca\uff1a \u7f51\u683c\u7684\u5b50\u5143\u7d20\u88ab\u5b9a\u4e49\u4e3a MD5Mesh \u7c7b\u7684\u5185\u90e8\u7c7b\u3002 \u4f60\u53ef\u4ee5\u67e5\u770b\u5982\u4f55\u5728 MD5Utils \u7c7b\u7684 calculateQuaternion \u65b9\u6cd5\u4e2d\u8ba1\u7b97\u5173\u8282\u65b9\u5411\u7684\u7b2c\u56db\u4e2a\u5206\u91cf\u3002 \u65e2\u7136\u6211\u4eec\u5df2\u7ecf\u89e3\u6790\u4e86\u4e00\u4e2a\u6587\u4ef6\uff0c\u6211\u4eec\u5fc5\u987b\u8bb2\u8fd9\u4e2a\u5bf9\u8c61\u5c42\u6b21\u7ed3\u6784\u8f6c\u6362\u6210\u53ef\u4ee5\u7531\u6e38\u620f\u5f15\u64ce\u5904\u7406\u7684\u4e1c\u897f\uff0c\u6211\u4eec\u5fc5\u987b\u521b\u5efa\u4e00\u4e2a GameItem \u5b9e\u4f8b\u3002\u4e3a\u4e86\u5b9e\u73b0\u5b83\uff0c\u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a MD5Loader \u7684\u65b0\u7c7b\uff0c\u8be5\u7c7b\u5c06\u4f7f\u7528\u4e00\u4e2a MD5Model \u5b9e\u4f8b\u6765\u6784\u9020\u4e00\u4e2a GameItem \u3002 \u5728\u5f00\u59cb\u4e4b\u524d\uff0c\u5982\u4f60\u6240\u6ce8\u610f\u5230\u7684\uff0cMD5\u6a21\u578b\u6709\u597d\u51e0\u4e2a\u7f51\u683c\uff0c\u4f46\u6211\u4eec\u7684 GameItem \u7c7b\u53ea\u652f\u6301\u5355\u4e2a\u7f51\u683c\u3002\u6240\u4ee5\u9996\u5148\u6211\u4eec\u8981\u4fee\u6539\u5b83\uff0c GameItem \u7c7b\u73b0\u5728\u770b\u8d77\u6765\u662f\u8fd9\u6837\u7684\uff1a package org.lwjglb.engine.items; import org.joml.Vector3f; import org.lwjglb.engine.graph.Mesh; public class GameItem { private Mesh[] meshes; private final Vector3f position; private float scale; private final Vector3f rotation; public GameItem() { position = new Vector3f(0, 0, 0); scale = 1; rotation = new Vector3f(0, 0, 0); } public GameItem(Mesh mesh) { this(); this.meshes = new Mesh[]{mesh}; } public GameItem(Mesh[] meshes) { this(); this.meshes = meshes; } public Vector3f getPosition() { return position; } public void setPosition(float x, float y, float z) { this.position.x = x; this.position.y = y; this.position.z = z; } public float getScale() { return scale; } public void setScale(float scale) { this.scale = scale; } public Vector3f getRotation() { return rotation; } public void setRotation(float x, float y, float z) { this.rotation.x = x; this.rotation.y = y; this.rotation.z = z; } public Mesh getMesh() { return meshes[0]; } public Mesh[] getMeshes() { return meshes; } public void setMeshes(Mesh[] meshes) { this.meshes = meshes; } public void setMesh(Mesh mesh) { if (this.meshes != null) { for (Mesh currMesh : meshes) { currMesh.cleanUp(); } } this.meshes = new Mesh[]{mesh}; } } \u901a\u8fc7\u4e0a\u8ff0\u4fee\u6539\uff0c\u6211\u4eec\u73b0\u5728\u53ef\u4ee5\u7f16\u5199 MD5Loader \u7c7b\u7684\u5185\u5bb9\u3002\u8be5\u7c7b\u5c06\u6709\u4e00\u4e2a\u540d\u4e3a process \u7684\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u5c06\u63a5\u53d7\u4e00\u4e2a MD5Model \u5b9e\u4f8b\u548c\u4e00\u4e2a\u9ed8\u8ba4\u989c\u8272\uff08\u5bf9\u4e8e\u4e0d\u5b9a\u4e49\u7eb9\u7406\u7684\u7f51\u683c\uff09\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a GameItem \u5b9e\u4f8b\u3002\u8be5\u65b9\u6cd5\u7684\u65b9\u6cd5\u4f53\u5982\u4e0b\uff1a public static GameItem process(MD5Model md5Model, Vector4f defaultColour) throws Exception { List<MD5Mesh> md5MeshList = md5Model.getMeshes(); List<Mesh> list = new ArrayList<>(); for (MD5Mesh md5Mesh : md5Model.getMeshes()) { Mesh mesh = generateMesh(md5Model, md5Mesh, defaultColour); handleTexture(mesh, md5Mesh, defaultColour); list.add(mesh); } Mesh[] meshes = new Mesh[list.size()]; meshes = list.toArray(meshes); GameItem gameItem = new GameItem(meshes); return gameItem; } \u5982\u4f60\u6240\u89c1\uff0c\u6211\u4eec\u53ea\u9700\u5c06\u5b9a\u4e49\u5728 MD5Model \u7c7b\u4e4b\u5185\u7684\u7f51\u683c\u8fdb\u884c\u904d\u5386\uff0c\u5e76\u901a\u8fc7\u4f7f\u7528 generateMesh \u65b9\u6cd5\uff0c\u5c06\u5176\u8f6c\u6362\u4e3a org.lwjglb.engine.graph.Mesh \u7c7b\u7684\u5b9e\u4f8b\u3002\u5728\u67e5\u770b\u8be5\u65b9\u6cd5\u4e4b\u524d\uff0c\u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a\u5185\u90e8\u7c7b\uff0c\u5b83\u5c06\u4e3a\u6211\u4eec\u6784\u5efa\u5750\u6807\u548c\u6cd5\u7ebf\u6570\u7ec4\u3002 private static class VertexInfo { public Vector3f position; public Vector3f normal; public VertexInfo(Vector3f position) { this.position = position; normal = new Vector3f(0, 0, 0); } public VertexInfo() { position = new Vector3f(); normal = new Vector3f(); } public static float[] toPositionsArr(List<VertexInfo> list) { int length = list != null ? list.size() * 3 : 0; float[] result = new float[length]; int i = 0; for (VertexInfo v : list) { result[i] = v.position.x; result[i + 1] = v.position.y; result[i + 2] = v.position.z; i += 3; } return result; } public static float[] toNormalArr(List<VertexInfo> list) { int length = list != null ? list.size() * 3 : 0; float[] result = new float[length]; int i = 0; for (VertexInfo v : list) { result[i] = v.normal.x; result[i + 1] = v.normal.y; result[i + 2] = v.normal.z; i += 3; } return result; } } \u56de\u5230 generateMesh \u65b9\u6cd5\uff0c\u9996\u5148\u6211\u4eec\u5f97\u5230\u5173\u8282\u7684\u7f51\u683c\u9876\u70b9\u4fe1\u606f\u3001\u6743\u91cd\u548c\u7ed3\u6784\u3002 private static Mesh generateMesh(MD5Model md5Model, MD5Mesh md5Mesh, Vector4f defaultColour) throws Exception { List<VertexInfo> vertexInfoList = new ArrayList<>(); List<Float> textCoords = new ArrayList<>(); List<Integer> indices = new ArrayList<>(); List<MD5Mesh.MD5Vertex> vertices = md5Mesh.getVertices(); List<MD5Mesh.MD5Weight> weights = md5Mesh.getWeights(); List<MD5JointInfo.MD5JointData> joints = md5Model.getJointInfo().getJoints(); \u63a5\u4e0b\u6765\u6211\u4eec\u9700\u8981\u6839\u636e\u5305\u542b\u5728\u6743\u91cd\u548c\u5173\u8282\u4e2d\u7684\u4fe1\u606f\u6765\u8ba1\u7b97\u9876\u70b9\u4f4d\u7f6e\u3002\u8fd9\u662f\u5728\u4e0b\u8ff0\u4ee3\u7801\u5757\u4e2d\u5b8c\u6210\u7684\uff1a for (MD5Mesh.MD5Vertex vertex : vertices) { Vector3f vertexPos = new Vector3f(); Vector2f vertexTextCoords = vertex.getTextCoords(); textCoords.add(vertexTextCoords.x); textCoords.add(vertexTextCoords.y); int startWeight = vertex.getStartWeight(); int numWeights = vertex.getWeightCount(); for (int i = startWeight; i < startWeight + numWeights; i++) { MD5Mesh.MD5Weight weight = weights.get(i); MD5JointInfo.MD5JointData joint = joints.get(weight.getJointIndex()); Vector3f rotatedPos = new Vector3f(weight.getPosition()).rotate(joint.getOrientation()); Vector3f acumPos = new Vector3f(joint.getPosition()).add(rotatedPos); acumPos.mul(weight.getBias()); vertexPos.add(acumPos); } vertexInfoList.add(new VertexInfo(vertexPos)); } \u8ba9\u6211\u4eec\u6765\u770b\u770b\u5728\u8fd9\u91cc\u505a\u4e86\u4ec0\u4e48\u3002\u6211\u4eec\u904d\u5386\u4e86\u9876\u70b9\u4fe1\u606f\u5e76\u5c06\u7eb9\u7406\u5750\u6807\u50a8\u5b58\u5728\u5217\u8868\u4e2d\uff0c\u4e0d\u9700\u8981\u5728\u8fd9\u91cc\u5e94\u7528\u4efb\u4f55\u53d8\u6362\u3002\u7136\u540e\u6211\u4eec\u5f97\u5230\u4e86\u8ba1\u7b97\u9876\u70b9\u5750\u6807\u6240\u9700\u8003\u8651\u7684\u8d77\u59cb\u6743\u91cd\u548c\u603b\u6743\u91cd\u3002 \u9876\u70b9\u5750\u6807\u662f\u901a\u8fc7\u4f7f\u7528\u6240\u6709\u4e0e\u4e4b\u76f8\u5173\u7684\u6743\u91cd\u6765\u8ba1\u7b97\u7684\u3002\u6bcf\u4e2a\u6743\u91cd\u90fd\u6709\u4e00\u4e2a\u5750\u6807\u548c\u4e00\u4e2a\u504f\u501a\u3002\u4e0e\u6bcf\u4e2a\u9876\u70b9\u76f8\u5173\u7684\u6743\u91cd\u7684\u6240\u6709\u504f\u501a\u4e4b\u548c\u5fc5\u987b\u4e3a1.0\u3002\u6bcf\u4e2a\u6743\u91cd\u4e5f\u6709\u4e00\u4e2a\u5728\u5173\u8282\u7684\u5c40\u90e8\u7a7a\u95f4\u4e2d\u5b9a\u4e49\u7684\u5750\u6807\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u4f7f\u7528\u5173\u8282\u7684\u65b9\u5411\u548c\u5750\u6807\uff08\u5c31\u50cf\u5b83\u662f\u4e00\u4e2a\u8f6c\u6362\u77e9\u9635\u90a3\u6837\uff09\u5c06\u5176\u8f6c\u6362\u4e3a\u5b83\u6240\u5f15\u7528\u7684\u6a21\u578b\u7a7a\u95f4\u5750\u6807\u3002 \u7efc\u4e0a\u6240\u8ff0\uff0c\u9876\u70b9\u5750\u6807\u53ef\u4ee5\u7528\u5982\u4e0b\u516c\u5f0f\u8868\u793a\uff1a Vpos = \\sum\\limits_{i=ws}^{ws + wc} (Jt_{i} \\times Wp_{i}) \\dot Wb_{i} \u53c2\u6570\uff1a \u4ece ws \uff08\u8d77\u59cb\u6743\u91cd\uff09\u5230 wc \uff08\u6743\u91cd\u6570\uff09\u6743\u91cd\u603b\u548c\u3002 Jt_{i} \u662f\u4e0e\u6743\u91cd W_{i} \u76f8\u5173\u7684\u5173\u8282\u7684\u53d8\u6362\u77e9\u9635\u3002 Wp_{i} \u662f\u6743\u91cd\u5750\u6807\u3002 Wb_{i} \u662f\u6743\u91cd\u504f\u501a\u3002 \u8be5\u65b9\u7a0b\u662f\u5728\u5faa\u73af\u4f53\u4e2d\u5b9e\u73b0\u7684\uff08\u6211\u4eec\u6ca1\u6709\u53d8\u6362\u77e9\u9635\uff0c\u4f46\u7ed3\u679c\u662f\u76f8\u540c\u7684\uff0c\u56e0\u4e3a\u6211\u4eec\u6709\u5355\u72ec\u7684\u5173\u8282\u5750\u6807\u548c\u65cb\u8f6c\uff09\u3002 \u4f7f\u7528\u4e0a\u8ff0\u4ee3\u7801\uff0c\u6211\u4eec\u5c31\u80fd\u591f\u6784\u9020\u5750\u6807\u548c\u7eb9\u7406\u5750\u6807\u6570\u636e\uff0c\u4f46\u662f\u4ecd\u7136\u9700\u8981\u5efa\u7acb\u7d22\u5f15\u548c\u6cd5\u7ebf\u3002\u7d22\u5f15\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528\u4e09\u89d2\u5f62\u7684\u4fe1\u606f\u8ba1\u7b97\uff0c\u53ea\u9700\u904d\u5386\u5305\u542b\u8fd9\u4e9b\u4e09\u89d2\u5f62\u7684\u5217\u8868\u5373\u53ef\u3002 \u6cd5\u7ebf\u4e5f\u53ef\u4ee5\u7528\u4e09\u89d2\u5f62\u4fe1\u606f\u6765\u8ba1\u7b97\uff0c\u4ee4 V_{0} \u3001 V_{1} \u548c V_{2} \u4e3a\u4e09\u89d2\u5f62\u9876\u70b9\uff08\u5728\u7269\u4f53\u7684\u6a21\u578b\u7a7a\u95f4\u4e2d\uff09\u3002\u4e09\u89d2\u5f62\u7684\u6cd5\u7ebf\u53ef\u4ee5\u6839\u636e\u5982\u4e0b\u516c\u5f0f\u8ba1\u7b97\uff1a N=(V_{2}-V_{0})\\times(V_{1}-V_{0}) \u5176\u4e2dN\u5e94\u8be5\u5f52\u4e00\u5316\u3002\u4e0b\u56fe\u662f\u4e0a\u8ff0\u516c\u5f0f\u7684\u51e0\u4f55\u89e3\u91ca\uff1a \u5bf9\u4e8e\u6bcf\u4e2a\u9876\u70b9\uff0c\u6211\u4eec\u901a\u8fc7\u5b83\u6240\u5c5e\u7684\u4e09\u89d2\u5f62\u7684\u6240\u6709\u6cd5\u7ebf\u7684\u5f52\u4e00\u5316\u4e4b\u548c\u6765\u8ba1\u7b97\u5b83\u7684\u6cd5\u7ebf\u3002\u8fdb\u884c\u8ba1\u7b97\u7684\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a for (MD5Mesh.MD5Triangle tri : md5Mesh.getTriangles()) { indices.add(tri.getVertex0()); indices.add(tri.getVertex1()); indices.add(tri.getVertex2()); // \u6cd5\u7ebf VertexInfo v0 = vertexInfoList.get(tri.getVertex0()); VertexInfo v1 = vertexInfoList.get(tri.getVertex1()); VertexInfo v2 = vertexInfoList.get(tri.getVertex2()); Vector3f pos0 = v0.position; Vector3f pos1 = v1.position; Vector3f pos2 = v2.position; Vector3f normal = (new Vector3f(pos2).sub(pos0)).cross(new Vector3f(pos1).sub(pos0)); v0.normal.add(normal); v1.normal.add(normal); v2.normal.add(normal); } // \u4e00\u65e6\u5b8c\u6210\u4e86\u8ba1\u7b97\uff0c\u5c31\u5c06\u7ed3\u679c\u5f52\u4e00\u5316 for(VertexInfo v : vertexInfoList) { v.normal.normalize(); } \u7136\u540e\u6211\u4eec\u53ea\u9700\u8981\u5c06\u5217\u8868\u8f6c\u6362\u4e3a\u6570\u7ec4\u5e76\u5904\u7406\u7eb9\u7406\u4fe1\u606f\u3002 float[] positionsArr = VertexInfo.toPositionsArr(vertexInfoList); float[] textCoordsArr = Utils.listToArray(textCoords); float[] normalsArr = VertexInfo.toNormalArr(vertexInfoList); int[] indicesArr = indices.stream().mapToInt(i -> i).toArray(); Mesh mesh = new Mesh(positionsArr, textCoordsArr, normalsArr, indicesArr); return mesh; } \u56de\u5230 process \u65b9\u6cd5\uff0c\u4f60\u53ef\u4ee5\u770b\u5230\u6709\u4e2a\u540d\u4e3a handleTexture \u7684\u65b9\u6cd5\uff0c\u5b83\u8d1f\u8d23\u52a0\u8f7d\u7eb9\u7406\u3002\u8fd9\u5c31\u662f\u8be5\u65b9\u6cd5\u7684\u5b9a\u4e49\uff1a private static void handleTexture(Mesh mesh, MD5Mesh md5Mesh, Vector4f defaultColour) throws Exception { String texturePath = md5Mesh.getTexture(); if (texturePath != null && texturePath.length() > 0) { Texture texture = new Texture(texturePath); Material material = new Material(texture); // \u5904\u7406\u6cd5\u7ebf\u56fe int pos = texturePath.lastIndexOf(\".\"); if (pos > 0) { String basePath = texturePath.substring(0, pos); String extension = texturePath.substring(pos, texturePath.length()); String normalMapFileName = basePath + NORMAL_FILE_SUFFIX + extension; if (Utils.existsResourceFile(normalMapFileName)) { Texture normalMap = new Texture(normalMapFileName); material.setNormalMap(normalMap); } } mesh.setMaterial(material); } else { mesh.setMaterial(new Material(defaultColour, 1)); } } \u975e\u5e38\u76f4\u63a5\u7684\u5b9e\u73b0\u3002\u552f\u4e00\u7684\u72ec\u7279\u4e4b\u5904\u5728\u4e8e\u5982\u679c\u4e00\u4e2a\u7f51\u683c\u5b9a\u4e49\u4e86\u4e00\u4e2a\u540d\u4e3a\u201ctexture.png\u201d\u7684\u7eb9\u7406\uff0c\u5b83\u7684\u6cd5\u7ebf\u7eb9\u7406\u56fe\u5c06\u5728\u6587\u4ef6\u201ctexture_normal.png\u201d\u4e2d\u5b9a\u4e49\u3002\u6211\u4eec\u9700\u8981\u68c0\u67e5\u8be5\u6587\u4ef6\u662f\u5426\u5b58\u5728\u5e76\u76f8\u5e94\u5730\u52a0\u8f7d\u5b83\u3002 \u6211\u4eec\u73b0\u5728\u53ef\u4ee5\u52a0\u8f7d\u4e00\u4e2aMD5\u6587\u4ef6\u5e76\u50cf\u6e32\u67d3\u5176\u4ed6\u6e38\u620f\u9879\u4e00\u6837\u6e32\u67d3\u5b83\uff0c\u4f46\u5728\u6b64\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u7981\u7528\u9762\u5254\u9664\u6765\u6b63\u786e\u6e32\u67d3\u5b83\uff0c\u56e0\u4e3a\u4e0d\u662f\u6240\u6709\u4e09\u89d2\u5f62\u90fd\u5c06\u7ed8\u5236\u5728\u6b63\u786e\u7684\u65b9\u5411\u4e0a\u3002\u6211\u4eec\u5c06\u5411 Window \u7c7b\u6dfb\u52a0\u652f\u6301\uff0c\u4ee5\u4fbf\u5728\u8fd0\u884c\u65f6\u8bbe\u7f6e\u8fd9\u4e9b\u53c2\u6570\uff08\u4f60\u53ef\u4ee5\u5728\u6e90\u4ee3\u7801\u4e2d\u67e5\u770b\u5176\u53d8\u66f4\uff09\u3002 \u5982\u679c\u52a0\u8f7d\u4e00\u4e9b\u5b9e\u4f8b\u6a21\u578b\uff0c\u5c31\u4f1a\u5f97\u5230\u7c7b\u4f3c\u8fd9\u6837\u7684\u7ed3\u679c\uff1a \u4f60\u5728\u6b64\u5904\u770b\u5230\u7684\u662f\u7ed1\u5b9a\u7684\u59ff\u52bf\uff0c\u5b83\u662fMD5\u6a21\u578b\u7684\u9759\u6001\u5c55\u793a\uff0c\u4f7f\u52a8\u753b\u5e08\u8f7b\u677e\u5730\u5bf9\u5b83\u4eec\u5efa\u6a21\u3002\u4e3a\u4e86\u8ba9\u52a8\u753b\u5de5\u4f5c\uff0c\u6211\u4eec\u5fc5\u987b\u5904\u7406\u52a8\u753b\u5b9a\u4e49\u6587\u4ef6\u3002","title":"\u5f15\u8a00"},{"location":"19-animations/#_2","text":"MD5\u52a8\u753b\u5b9a\u4e49\u6587\u4ef6\uff0c\u5c31\u50cf\u6a21\u578b\u5b9a\u4e49\u6587\u4ef6\u90a3\u6837\uff0c\u7531\u4e00\u4e2a\u5934\u548c\u4e00\u4e2a\u5305\u542b\u5728\u5927\u62ec\u53f7\u4e4b\u95f4\u7684\u4e0d\u540c\u90e8\u5206\u7ec4\u6210\u3002\u5982\u679c\u6253\u5f00\u5176\u4e2d\u4e00\u4e2a\u6587\u4ef6\uff0c\u53ef\u4ee5\u770b\u5230\u7c7b\u4f3c\u7684\u7ed3\u6784\u3002 \u53ef\u4ee5\u5728\u52a8\u753b\u6587\u4ef6\u4e2d\u627e\u5230\u7684\u7b2c\u4e00\u4e2a\u7ed3\u6784\uff08\u5c31\u50cf\u662f\u7f51\u683c\u5b9a\u4e49\u6587\u4ef6\u4e00\u6837\uff09\u662f\u5934\u3002\u4f60\u53ef\u4ee5\u4ece\u63a5\u4e0b\u6765\u63d0\u4f9b\u7684\u4e00\u4e2a\u4f8b\u5b50\u4e2d\u770b\u5230\u5934\u7684\u5185\u5bb9\uff1a MD5Version 10 commandline \"\" numFrames 140 numJoints 33 frameRate 24 numAnimatedComponents 198 \u5934\u5b9a\u4e49\u4e86\u4ee5\u4e0b\u5c5e\u6027\uff1a \u6240\u7b26\u5408\u7684MD5\u89c4\u8303\u7684\u7248\u672c\u3002 \u7528\u4e8e\u751f\u6210\u6b64\u6587\u4ef6\u7684\u547d\u4ee4\uff08\u6765\u81ea3D\u5efa\u6a21\u5de5\u5177\uff09 \u6587\u4ef6\u4e2d\u5b9a\u4e49\u7684\u5e27\u6570\u3002 \u5c42\u6b21\u7ed3\u6784\u90e8\u5206\u4e2d\u5b9a\u4e49\u7684\u5173\u8282\u6570\u91cf\u3002 \u5e27\u901f\u7387\uff0c\u6bcf\u79d2\u5e27\u6570\uff0c\u7528\u4e8e\u521b\u5efa\u52a8\u753b\u3002\u8fd9\u4e2a\u53c2\u6570\u53ef\u4ee5\u7528\u6765\u8ba1\u7b97\u5e27\u4e0e\u5e27\u4e4b\u95f4\u7684\u65f6\u95f4\u3002 \u6bcf\u4e2a\u5e27\u5b9a\u4e49\u7684\u5206\u91cf\u6570\u91cf\u3002\uff08\u8bd1\u6ce8\uff1a\u901a\u5e38\u60c5\u51b5\u4e0b\u7b49\u4e8e\u5173\u8282\u6570\u4e58\u4ee5\u516d\uff09 \u9996\u5148\u51fa\u73b0\u7684\u662f\u5c42\u6b21\u7ed3\u6784\uff08Hierarchy\uff09\u90e8\u5206\uff0c\u5b83\u5b9a\u4e49\u4e86\u8be5\u52a8\u753b\u7684\u5173\u8282\u3002\u4f60\u53ef\u4ee5\u770b\u5230\u4ee5\u4e0b\u7247\u6bb5\uff1a hierarchy { \"origin\" -1 0 0 // \"body\" 0 63 0 // origin ( Tx Ty Tz Qx Qy Qz ) \"body2\" 1 0 0 // body \"SPINNER\" 2 56 6 // body2 ( Qx Qy Qz ) .... } \u4e00\u4e2a\u5173\u8282\uff0c\u5728\u5c42\u6b21\u7ed3\u6784\u90e8\u5206\u4e2d\uff0c\u7531\u4ee5\u4e0b\u5c5e\u6027\u5b9a\u4e49\uff1a \u5173\u8282\u540d\uff0c\u5f15\u53f7\u4e4b\u95f4\u7684\u4e00\u4e2a\u6587\u672c\u5c5e\u6027 \u5173\u8282\u7684\u7236\u5173\u8282\uff0c\u4f7f\u7528\u4e00\u4e2a\u7d22\u5f15\uff0c\u8be5\u7d22\u5f15\u4f7f\u7528\u5176\u5728\u5173\u8282\u5217\u8868\u4e2d\u7684\u4f4d\u7f6e\u6307\u5411\u7236\u5173\u8282\u3002\u6839\u5173\u8282\u7684\u7236\u8282\u70b9\u7b49\u4e8e-1\u3002 \u5173\u8282\u6807\u5fd7\uff0c\u6839\u636e\u6bcf\u4e2a\u52a8\u753b\u5e27\u4e2d\u5b9a\u4e49\u7684\u6570\u636e\uff0c\u8bbe\u7f6e\u8be5\u5173\u8282\u7684\u4f4d\u7f6e\u548c\u65b9\u5411\u5c06\u5982\u4f55\u6539\u53d8\u3002 \u8d77\u59cb\u7d22\u5f15\uff0c\u5f53\u5e94\u7528\u6807\u5fd7\u65f6\uff0c\u7528\u4e8e\u6bcf\u5e27\u7684\u52a8\u753b\u6570\u636e\u5185\u3002 \u4e0b\u4e00\u8282\u662f\u8fb9\u754c\uff08Bounds\uff09\u3002\u672c\u8282\u5b9a\u4e49\u4e86\u6bcf\u4e2a\u52a8\u753b\u5e27\u7684\u6a21\u578b\u7684\u8fb9\u754c\u6846\u3002\u5b83\u5c06\u4e3a\u6bcf\u4e00\u5e27\u52a8\u753b\u50a8\u5b58\u4e00\u884c\u6570\u636e\uff0c\u770b\u8d77\u6765\u5c31\u50cf\u662f\u8fd9\u6837\uff1a bounds { ( -24.3102264404 -44.2608566284 -0.181215778 ) ( 31.0861988068 38.7131576538 117.7417449951 ) ( -24.3102283478 -44.1887664795 -0.1794649214 ) ( 31.1800289154 38.7173080444 117.7729110718 ) ( -24.3102359772 -44.1144447327 -0.1794776917 ) ( 31.2042789459 38.7091217041 117.8352737427 ) .... } \u6bcf\u4e2a\u8fb9\u754c\u6846\u7531\u6a21\u578b\u7a7a\u95f4\u5750\u6807\u4e2d\u7684\u4e24\u4e2a\u4e09\u5206\u91cf\u5411\u91cf\u5b9a\u4e49\u3002\u7b2c\u4e00\u4e2a\u5411\u91cf\u5b9a\u4e49\u4e86\u6700\u5c0f\u503c\uff0c\u7b2c\u4e8c\u4e2a\u5411\u91cf\u5b9a\u4e49\u4e86\u6700\u5927\u503c\u3002 \u4e0b\u4e00\u8282\u662f\u57fa\u672c\u5e27\uff08Base Frame\uff09\u6570\u636e\u3002\u5728\u672c\u8282\u4e2d\uff0c\u5728\u5e94\u7528\u6bcf\u4e2a\u52a8\u753b\u5e27\u7684\u5f62\u53d8\u4e4b\u524d\uff0c\u8bbe\u7f6e\u6bcf\u4e2a\u5173\u8282\u7684\u4f4d\u7f6e\u548c\u65b9\u5411\u3002\u4f60\u53ef\u4ee5\u770b\u5230\u4e0b\u9762\u7684\u7247\u6bb5\uff1a baseframe { ( 0 0 0 ) ( -0.5 -0.5 -0.5 ) ( -0.8947336078 70.7142486572 -6.5027675629 ) ( -0.3258574307 -0.0083037354 0.0313780755 ) ( 0.0000001462 0.0539700091 -0.0137935728 ) ( 0 0 0 ) .... } \u6bcf\u4e00\u884c\u90fd\u4e0e\u4e00\u4e2a\u5173\u8282\u76f8\u5173\u8054\uff0c\u5e76\u5b9a\u4e49\u4e86\u4ee5\u4e0b\u5c5e\u6027\uff1a \u5173\u8282\u7684\u5750\u6807\uff0c\u662f\u4e00\u4e2a\u4e09\u5206\u91cf\u5411\u91cf\u3002 \u5173\u8282\u7684\u65b9\u5411\uff0c\u662f\u4e00\u4e2a\u56db\u5143\u6570\u7684\u4e09\u4e2a\u5206\u91cf\uff08\u6b63\u5982\u6a21\u578b\u6587\u4ef6\u91cc\u7684\u90a3\u6837\uff09\u3002 \u5728\u6b64\u4e4b\u540e\uff0c\u4f60\u5c06\u53d1\u73b0\u51e0\u4e2a\u5e27\u5b9a\u4e49\uff0c\u4ee5\u53ca\u5206\u914d\u7ed9 numFrames \u5934\u5c5e\u6027\u7684\u503c\u3002\u6bcf\u4e2a\u5e27\u7684\u8282\u5c31\u50cf\u662f\u4e00\u4e2a\u5de8\u5927\u7684\u6d6e\u70b9\u6570\u7ec4\uff0c\u5f53\u5bf9\u6bcf\u4e2a\u5e27\u5e94\u7528\u53d8\u6362\u65f6\uff0c\u8282\u70b9\u5c06\u4f7f\u7528\u8fd9\u4e2a\u6d6e\u70b9\u6570\u7ec4\u3002\u4f60\u53ef\u4ee5\u5728\u63a5\u4e0b\u6765\u770b\u5230\u4e00\u4e2a\u7247\u6bb5\uff1a frame 1 { -0.9279100895 70.682762146 -6.3709330559 -0.3259022534 -0.0100501738 0.0320306309 0.3259022534 0.0100501738 -0.0320306309 -0.1038384438 -0.1639953405 -0.0152553488 0.0299418624 .... } \u89e3\u6790MD5\u52a8\u753b\u6587\u4ef6\u7684\u57fa\u7c7b\u540d\u4e3a MD5AnimModel \u3002\u8be5\u7c7b\u521b\u5efa\u7531\u8be5\u6587\u4ef6\u5185\u5bb9\u6620\u5c04\u7684\u6240\u6709\u5bf9\u8c61\u5c42\u6b21\u7ed3\u6784\uff0c\u4f60\u53ef\u4ee5\u67e5\u770b\u6e90\u4ee3\u7801\u4ee5\u83b7\u5f97\u8be6\u7ec6\u4fe1\u606f\u3002\u7ed3\u6784\u7c7b\u4f3c\u4e8eMD5\u6a21\u578b\u5b9a\u4e49\u6587\u4ef6\u3002\u73b0\u5728\u6211\u4eec\u80fd\u591f\u52a0\u8f7d\u8fd9\u4e9b\u6570\u636e\uff0c\u5e76\u5c06\u4f7f\u7528\u5b83\u6765\u751f\u6210\u52a8\u753b\u3002 \u6211\u4eec\u5c06\u5728\u7740\u8272\u5668\u4e2d\u751f\u6210\u52a8\u753b\uff0c\u6240\u4ee5\u4e0d\u662f\u9884\u5148\u8ba1\u7b97\u6bcf\u4e2a\u5e27\u7684\u6240\u6709\u5750\u6807\uff0c\u6211\u4eec\u9700\u8981\u51c6\u5907\u6240\u9700\u7684\u6570\u636e\uff0c\u8fd9\u6837\u5728\u9876\u70b9\u7740\u8272\u5668\u4e2d\u5c31\u53ef\u4ee5\u8ba1\u7b97\u6700\u7ec8\u5750\u6807\u3002 \u8ba9\u6211\u4eec\u56de\u5230 MD5Loader \u7c7b\u4e2d\u7684 process \u65b9\u6cd5\uff0c\u9700\u8981\u4fee\u6539\u5b83\u4ee5\u8003\u8651\u52a8\u753b\u6570\u636e\u3002\u65b0\u65b9\u6cd5\u7684\u5b9a\u4e49\u5982\u4e0b\uff1a public static AnimGameItem process(MD5Model md5Model, MD5AnimModel animModel, Vector4f defaultColour) throws Exception { List<Matrix4f> invJointMatrices = calcInJointMatrices(md5Model); List<AnimatedFrame> animatedFrames = processAnimationFrames(md5Model, animModel, invJointMatrices); List<Mesh> list = new ArrayList<>(); for (MD5Mesh md5Mesh : md5Model.getMeshes()) { Mesh mesh = generateMesh(md5Model, md5Mesh); handleTexture(mesh, md5Mesh, defaultColour); list.add(mesh); } Mesh[] meshes = new Mesh[list.size()]; meshes = list.toArray(meshes); AnimGameItem result = new AnimGameItem(meshes, animatedFrames, invJointMatrices); return result; } \u8fd9\u91cc\u6709\u4e00\u4e9b\u53d8\u5316\uff0c\u6700\u660e\u663e\u7684\u662f\u8be5\u65b9\u6cd5\u73b0\u5728\u63a5\u6536\u4e00\u4e2a MD5AnimModel \u5b9e\u4f8b\u3002\u6b64\u5916\uff0c\u6211\u4eec\u4e0d\u8fd4\u56de GameItem \u5b9e\u4f8b\uff0c\u800c\u662f\u8fd4\u56de AnimGameItem \u5b9e\u4f8b\u3002\u8be5\u7c7b\u7ee7\u627f\u81ea GameItem \u7c7b\uff0c\u4f46\u6dfb\u52a0\u4e86\u5bf9\u52a8\u753b\u7684\u652f\u6301\u3002\u7a0d\u540e\u6211\u4eec\u5c06\u770b\u5230\u4e3a\u4ec0\u4e48\u8fd9\u6837\u505a\u3002 \u5982\u679c\u6211\u4eec\u7ee7\u7eed\u9605\u8bfb\u8be5\u5904\u7406\u65b9\u6cd5\uff0c\u9996\u5148\u8981\u505a\u7684\u662f\u8c03\u7528 calcInJointMatrices \u65b9\u6cd5\uff0c\u5176\u5b9a\u4e49\u5982\u4e0b\uff1a private static List<Matrix4f> calcInJointMatrices(MD5Model md5Model) { List<Matrix4f> result = new ArrayList<>(); List<MD5JointInfo.MD5JointData> joints = md5Model.getJointInfo().getJoints(); for(MD5JointInfo.MD5JointData joint : joints) { Matrix4f translateMat = new Matrix4f().translate(joint.getPosition()); Matrix4f rotationMat = new Matrix4f().rotate(joint.getOrientation()); Matrix4f mat = translateMat.mul(rotationMat); mat.invert(); result.add(mat); } return result; } \u8be5\u65b9\u6cd5\u904d\u5386MD5\u6a21\u578b\u5b9a\u4e49\u6587\u4ef6\u4e2d\u5305\u542b\u7684\u8282\u70b9\uff0c\u8ba1\u7b97\u4e0e\u6bcf\u4e2a\u8282\u70b9\u76f8\u5173\u8054\u7684\u8f6c\u6362\u77e9\u9635\uff0c\u7136\u540e\u5f97\u5230\u8fd9\u4e9b\u77e9\u9635\u7684\u9006\u77e9\u9635\u3002\u6b64\u6570\u636e\u7528\u4e8e\u6784\u9020 AnimGameItem \u5b9e\u4f8b\u3002 \u8ba9\u6211\u4eec\u7ee7\u7eed\u9605\u8bfb process \u65b9\u6cd5\uff0c\u63a5\u4e0b\u6765\u8981\u505a\u7684\u662f\u8c03\u7528 processAnimationFrames \u65b9\u6cd5\u6765\u5904\u7406\u52a8\u753b\u5e27\uff1a private static List<AnimatedFrame> processAnimationFrames(MD5Model md5Model, MD5AnimModel animModel, List<Matrix4f> invJointMatrices) { List<AnimatedFrame> animatedFrames = new ArrayList<>(); List<MD5Frame> frames = animModel.getFrames(); for(MD5Frame frame : frames) { AnimatedFrame data = processAnimationFrame(md5Model, animModel, frame, invJointMatrices); animatedFrames.add(data); } return animatedFrames; } \u8be5\u65b9\u6cd5\u5904\u7406MD5\u52a8\u753b\u5b9a\u4e49\u6587\u4ef6\u4e2d\u5b9a\u4e49\u7684\u6bcf\u4e2a\u52a8\u753b\u5e27\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a AnimatedFrame \u5b9e\u4f8b\u7684\u5217\u8868\u3002\u771f\u6b63\u7684\u5de5\u4f5c\u662f\u5728 processAnimationFrame \u65b9\u6cd5\u4e2d\u5b8c\u6210\u7684\u3002\u8ba9\u6211\u6765\u89e3\u91ca\u4e00\u4e0b\u8fd9\u4e2a\u65b9\u6cd5\u7684\u4f5c\u7528\u3002 \u9996\u5148\uff0c\u904d\u5386MD5\u52a8\u753b\u6587\u4ef6\u7684\u5c42\u6b21\u7ed3\u6784\u90e8\u5206\u4e2d\u5b9a\u4e49\u7684\u5173\u8282\u3002 private static AnimatedFrame processAnimationFrame(MD5Model md5Model, MD5AnimModel animModel, MD5Frame frame, List<Matrix4f> invJointMatrices) { AnimatedFrame result = new AnimatedFrame(); MD5BaseFrame baseFrame = animModel.getBaseFrame(); List<MD5Hierarchy.MD5HierarchyData> hierarchyList = animModel.getHierarchy().getHierarchyDataList(); List<MD5JointInfo.MD5JointData> joints = md5Model.getJointInfo().getJoints(); int numJoints = joints.size(); float[] frameData = frame.getFrameData(); for (int i = 0; i < numJoints; i++) { MD5JointInfo.MD5JointData joint = joints.get(i); \u6211\u4eec\u5f97\u5230\u4e0e\u6bcf\u4e2a\u5173\u8282\u76f8\u5173\u8054\u7684\u57fa\u672c\u5e27\u5143\u7d20\u7684\u4f4d\u7f6e\u548c\u65b9\u5411\u3002 MD5BaseFrame.MD5BaseFrameData baseFrameData = baseFrame.getFrameDataList().get(i); Vector3f position = baseFrameData.getPosition(); Quaternionf orientation = baseFrameData.getOrientation(); \u539f\u5219\u4e0a\uff0c\u8be5\u6570\u636e\u5e94\u5206\u914d\u7ed9\u5173\u8282\u7684\u4f4d\u7f6e\u548c\u65b9\u5411\uff0c\u4f46\u5b83\u9700\u8981\u6839\u636e\u5173\u8282\u7684\u6807\u5fd7\u8fdb\u884c\u8f6c\u6362\u3002\u5982\u679c\u4f60\u8fd8\u8bb0\u5f97\uff0c\u5728\u5c55\u793a\u52a8\u753b\u6587\u4ef6\u7684\u7ed3\u6784\u65f6\uff0c\u5c42\u6b21\u7ed3\u6784\u90e8\u5206\u4e2d\u7684\u6bcf\u4e2a\u8282\u70b9\u90fd\u5b9a\u4e49\u4e86\u4e00\u4e2a\u6807\u5fd7\u3002\u8be5\u6807\u5fd7\u6839\u636e\u6bcf\u4e2a\u52a8\u753b\u5e27\u4e2d\u5b9a\u4e49\u7684\u4fe1\u606f\u51b3\u5b9a\u5efa\u6a21\u4f4d\u7f6e\u548c\u65b9\u5411\u5e94\u8be5\u5982\u4f55\u66f4\u6539\u3002 \u5982\u679c\u6807\u5fd7\u5b57\u6bb5\u7684\u7b2c\u4e00\u4e2a\u4f4d\u7b49\u4e8e1\uff0c\u6211\u4eec\u5e94\u8be5\u4f7f\u7528\u6b63\u5728\u5904\u7406\u7684\u52a8\u753b\u5e27\u4e2d\u5305\u542b\u7684\u6570\u636e\u66f4\u6539\u57fa\u672c\u5e27\u5750\u6807\u7684x\u5206\u91cf\u3002\u52a8\u753b\u5e27\u5b9a\u4e49\u4e86\u4e00\u4e2a\u6d6e\u70b9\u6570\u7ec4\uff0c\u6240\u4ee5\u6211\u4eec\u5e94\u8be5\u53d6\u54ea\u4e2a\u5143\u7d20\u5462\uff1f\u7b54\u6848\u4e5f\u5728\u5173\u8282\u5b9a\u4e49\u4e2d\uff0c\u5176\u4e2d\u5305\u542b startIndex \u5c5e\u6027\u3002\u5982\u679c\u6807\u5fd7\u7684\u7b2c\u4e8c\u4e2a\u4f4d\u7b49\u4e8e1\uff0c\u6211\u4eec\u5e94\u8be5\u7528 startIndex + 1 \u7684\u503c\u66f4\u6539\u57fa\u672c\u5e27\u5750\u6807\u7684y\u5206\u91cf\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff0c\u63a5\u4e0b\u6765\u7684\u662f\u5750\u6807\u7684z\u5206\u91cf\uff0c\u4ee5\u53ca\u65b9\u5411\u7684x\u3001y\u548cz\u5206\u91cf\u3002 int flags = hierarchyList.get(i).getFlags(); int startIndex = hierarchyList.get(i).getStartIndex(); if ( (flags & 1 ) > 0) { position.x = frameData[startIndex++]; } if ( (flags & 2) > 0) { position.y = frameData[startIndex++]; } if ( (flags & 4) > 0) { position.z = frameData[startIndex++]; } if ( (flags & 8) > 0) { orientation.x = frameData[startIndex++]; } if ( (flags & 16) > 0) { orientation.y = frameData[startIndex++]; } if ( (flags & 32) > 0) { orientation.z = frameData[startIndex++]; } // \u66f4\u65b0\u56db\u5143\u6570\u7684w\u5206\u91cf orientation = MD5Utils.calculateQuaternion(orientation.x, orientation.y, orientation.z); \u73b0\u5728\u6211\u4eec\u6709\u4e86\u8ba1\u7b97\u53d8\u6362\u77e9\u9635\u6240\u9700\u7684\u6240\u6709\u6570\u636e\uff0c\u4ece\u800c\u5f97\u5230\u5f53\u524d\u52a8\u753b\u5e27\u7684\u6bcf\u4e2a\u5173\u8282\u7684\u6700\u7ec8\u4f4d\u7f6e\u3002\u4f46\u662f\u6211\u4eec\u5fc5\u987b\u8003\u8651\u53e6\u4e00\u4ef6\u4e8b\uff0c\u6bcf\u4e2a\u5173\u8282\u7684\u4f4d\u7f6e\u662f\u76f8\u5bf9\u4e8e\u5b83\u7684\u7236\u5173\u8282\u7684\u4f4d\u7f6e\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5f97\u5230\u4e0e\u6bcf\u4e2a\u7236\u5173\u8282\u76f8\u5173\u7684\u53d8\u6362\u77e9\u9635\u5e76\u7528\u5b83\u6765\u5f97\u5230\u6a21\u578b\u7a7a\u95f4\u5750\u6807\u4e2d\u7684\u53d8\u6362\u77e9\u9635\u3002 // \u8ba1\u7b97\u8fd9\u4e2a\u5173\u8282\u7684\u5e73\u79fb\u548c\u65cb\u8f6c\u77e9\u9635 Matrix4f translateMat = new Matrix4f().translate(position); Matrix4f rotationMat = new Matrix4f().rotate(orientation); Matrix4f jointMat = translateMat.mul(rotationMat); // \u5173\u8282\u4f4d\u7f6e\u662f\u76f8\u5bf9\u4e8e\u5173\u8282\u7684\u7236\u7d22\u5f15\u7684\u4f4d\u7f6e\u3002 // \u4f7f\u7528\u7236\u77e9\u9635\u5c06\u5176\u8f6c\u6362\u4e3a\u6a21\u578b\u7a7a\u95f4\u3002 if ( joint.getParentIndex() > -1 ) { Matrix4f parentMatrix = result.getLocalJointMatrices()[joint.getParentIndex()]; jointMat = new Matrix4f(parentMatrix).mul(jointMat); } result.setMatrix(i, jointMat, invJointMatrices.get(i)); } return result; } \u4f60\u53ef\u4ee5\u770b\u5230\uff0c\u6211\u4eec\u521b\u5efa\u4e86 AnimatedFrame \u7c7b\u7684\u4e00\u4e2a\u5b9e\u4f8b\uff0c\u8be5\u7c7b\u5305\u542b\u5c06\u5728\u52a8\u753b\u671f\u95f4\u4f7f\u7528\u7684\u6570\u636e\u3002\u8fd9\u4e2a\u7c7b\u4e5f\u4f7f\u7528\u9006\u77e9\u9635\uff0c\u7a0d\u540e\u6211\u4eec\u4f1a\u77e5\u9053\u4e3a\u4ec0\u4e48\u8fd9\u6837\u505a\u3002\u9700\u8981\u6ce8\u610f\u7684\u4e00\u70b9\u662f\uff0c AnimatedFrame \u7684 setMatrix \u65b9\u6cd5\u662f\u8fd9\u6837\u5b9a\u4e49\u7684\uff1a public void setMatrix(int pos, Matrix4f localJointMatrix, Matrix4f invJointMatrix) { localJointMatrices[pos] = localJointMatrix; Matrix4f mat = new Matrix4f(localJointMatrix); mat.mul(invJointMatrix); jointMatrices[pos] = mat; } \u53d8\u91cf localJointMatrix \u50a8\u5b58\u5f53\u524d\u5e27\u4e2d\u5360\u636e\u4f4d\u7f6e\u201ci\u201d\u7684\u5173\u8282\u7684\u65cb\u8f6c\u77e9\u9635\uff0c invJointMatrix \u6301\u6709\u5360\u636e\u7ed1\u5b9a\u59ff\u52bf\u4f4d\u7f6e\u201ci\u201d\u4f4d\u7f6e\u7684\u5173\u8282\u7684\u9006\u53d8\u6362\u77e9\u9635\u3002\u6211\u4eec\u50a8\u5b58\u4e86 localJointMatrix \u4e0e invJointMatrix \u77e9\u9635\u76f8\u4e58\u7684\u7ed3\u679c\u3002\u8fd9\u4e2a\u7ed3\u679c\u5c06\u5728\u7a0d\u540e\u7528\u4e8e\u8ba1\u7b97\u6700\u7ec8\u5750\u6807\u3002\u6211\u4eec\u8fd8\u50a8\u5b58\u4e86\u539f\u59cb\u7684\u5173\u8282\u53d8\u6362\u77e9\u9635\uff0c\u53d8\u91cf localJointMatrix \uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7528\u5b83\u6765\u8ba1\u7b97\u5b50\u5173\u8282\u7684\u53d8\u6362\u77e9\u9635\u3002 \u8ba9\u6211\u4eec\u56de\u5230 MD5Loader \u7c7b\uff0c generateMesh \u65b9\u6cd5\u4e5f\u53d1\u751f\u4e86\u53d8\u5316\uff0c\u5982\u6211\u4eec\u4e4b\u524d\u8bf4\u660e\u7684\u90a3\u6837\u8ba1\u7b97\u7ed1\u5b9a\u59ff\u52bf\u7684\u5750\u6807\uff0c\u4f46\u5bf9\u4e8e\u6bcf\u4e2a\u9876\u70b9\uff0c\u6211\u4eec\u50a8\u5b58\u4e24\u4e2a\u6570\u7ec4\uff1a \u4e00\u4e2a\u6570\u7ec4\uff0c\u50a8\u5b58\u7740\u4e0e\u8be5\u9876\u70b9\u76f8\u5173\u7684\u6743\u91cd\u504f\u501a\u3002 \u4e00\u4e2a\u8f93\u51fa\uff0c\u50a8\u5b58\u8fd9\u4e0e\u8be5\u9876\u70b9\u76f8\u5173\u7684\u5173\u8282\u7d22\u5f15\uff08\u901a\u8fc7\u6743\u91cd\uff09\u3002 \u6211\u4eec\u5c06\u8fd9\u4e9b\u6570\u7ec4\u7684\u5927\u5c0f\u9650\u5236\u4e3a4\u3002 Mesh \u7c7b\u4e5f\u88ab\u4fee\u6539\u4e3a\u63a5\u6536\u8fd9\u4e9b\u53c2\u6570\uff0c\u5e76\u5c06\u5176\u5305\u542b\u5728\u7740\u8272\u5668\u5904\u7406\u7684VAO\u6570\u636e\u4e2d\u3002\u4f60\u53ef\u4ee5\u5728\u6e90\u4ee3\u7801\u4e2d\u67e5\u770b\u8be6\u7ec6\u5185\u5bb9\uff0c\u4f46\u6765\u56de\u987e\u4e00\u4e0b\u6211\u4eec\u6240\u505a\u7684\uff1a \u6211\u4eec\u4ecd\u5728\u52a0\u8f7d\u7ed1\u5b9a\u59ff\u52bf\uff0c\u901a\u8fc7\u6743\u91cd\u6570\u636e\u8ba1\u7b97\u51fa\u5b83\u4eec\u7684\u6700\u7ec8\u4f4d\u7f6e\uff0c\u5373\u5173\u8282\u5750\u6807\u548c\u65b9\u5411\u7684\u603b\u548c\u3002 \u8fd9\u4e9b\u6570\u636e\u4ee5VBO\u7684\u5f62\u5f0f\u52a0\u8f7d\u5230\u7740\u8272\u5668\u4e2d\uff0c\u4f46\u662f\u5b83\u7531\u4e0e\u6bcf\u4e2a\u9876\u70b9\u76f8\u5173\u7684\u6743\u91cd\u7684\u504f\u501a\u548c\u5f71\u54cd\u5b83\u7684\u5173\u8282\u7684\u7d22\u5f15\u6765\u8865\u5145\u3002\u8fd9\u4e2a\u6570\u636e\u5bf9\u6240\u6709\u52a8\u753b\u5e27\u90fd\u662f\u901a\u7528\u7684\uff0c\u56e0\u4e3a\u5b83\u662f\u5728MD5\u5b9a\u4e49\u6587\u4ef6\u4e2d\u5b9a\u4e49\u7684\u3002\u8fd9\u5c31\u662f\u6211\u4eec\u9650\u5236\u504f\u501a\u548c\u5173\u8282\u7d22\u5f15\u6570\u7ec4\u5927\u5c0f\u7684\u539f\u56e0\uff0c\u5f53\u6a21\u578b\u88ab\u53d1\u9001\u5230GPU\u65f6\uff0c\u5b83\u4eec\u5c06\u88ab\u52a0\u8f7d\u4e3aVBO\u3002 \u5bf9\u4e8e\u6bcf\u4e2a\u52a8\u753b\u5e27\uff0c\u6211\u4eec\u6839\u636e\u57fa\u7840\u5e27\u4e2d\u5b9a\u4e49\u7684\u4f4d\u7f6e\u548c\u65b9\u5411\uff0c\u50a8\u5b58\u5e94\u7528\u4e8e\u6bcf\u4e2a\u5173\u8282\u7684\u53d8\u6362\u77e9\u9635\u3002 \u6211\u4eec\u8fd8\u8ba1\u7b97\u4e86\u5b9a\u4e49\u7ed1\u5b9a\u59ff\u52bf\u7684\u5173\u8282\u76f8\u5173\u7684\u53d8\u6362\u77e9\u9635\u7684\u9006\u77e9\u9635\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u77e5\u9053\u5982\u4f55\u64a4\u9500\u7ed1\u5b9a\u59ff\u52bf\u4e2d\u5b8c\u6210\u7684\u53d8\u6362\uff0c\u7a0d\u540e\u5c06\u770b\u5230\u5982\u4f55\u5e94\u7528\u5b83\u3002 \u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u6709\u4e86\u62fc\u56fe\u7684\u6240\u6709\u788e\u7247\uff0c\u53ea\u9700\u8981\u5728\u7740\u8272\u5668\u4e2d\u4f7f\u7528\u5b83\u4eec\u3002\u6211\u9996\u5148\u9700\u8981\u4fee\u6539\u8f93\u5165\u6570\u636e\u6765\u63a5\u6536\u6743\u91cd\u548c\u5173\u8282\u7d22\u5f15\u3002 #version 330 const int MAX_WEIGHTS = 4; const int MAX_JOINTS = 150; layout (location=0) in vec3 position; layout (location=1) in vec2 texCoord; layout (location=2) in vec3 vertexNormal; layout (location=3) in vec4 jointWeights; layout (location=4) in ivec4 jointIndices; \u6211\u4eec\u5b9a\u4e49\u4e86\u4e24\u4e2a\u5e38\u91cf\uff1a MAX_WEIGHTS \uff0c\u5b9a\u4e49\u6743\u91cdVBO\uff08\u4e00\u4e2a\u5355\u72ec\u7684\u5173\u8282\u7d22\u5f15\uff09\u4e2d\u7684\u6743\u91cd\u7684\u6700\u5927\u6570\u91cf\u3002 MAX_JOINTS \uff0c\u5b9a\u4e49\u4e86\u6211\u4eec\u5c06\u652f\u6301\u7684\u6700\u5927\u5173\u8282\u6570\u91cf\uff08\u7a0d\u540e\u5c06\u8be6\u7ec6\u4ecb\u7ecd\uff09\u3002 \u7136\u540e\u6211\u4eec\u5b9a\u4e49\u8f93\u51fa\u6570\u636e\u548cUniform\u3002 out vec2 outTexCoord; out vec3 mvVertexNormal; out vec3 mvVertexPos; out vec4 mlightviewVertexPos; out mat4 outModelViewMatrix; uniform mat4 jointsMatrix[MAX_JOINTS]; uniform mat4 modelViewMatrix; uniform mat4 projectionMatrix; uniform mat4 modelLightViewMatrix; uniform mat4 orthoProjectionMatrix; \u4f60\u53ef\u4ee5\u770b\u5230\uff0c\u6211\u4eec\u6709\u4e00\u4e2a\u540d\u4e3a jointsMatrix \u7684\u65b0Uniform\uff0c\u5b83\u662f\u4e00\u4e2a\u77e9\u9635\u6570\u7ec4\uff08\u6700\u5927\u957f\u5ea6\u7531 MAX_JOINTS \u5e38\u91cf\u8bbe\u7f6e\uff09\u3002\u8be5\u77e9\u9635\u6570\u7ec4\u5305\u542b\u5f53\u524d\u5e27\u4e2d\u6240\u6709\u5173\u8282\u7684\u5173\u8282\u77e9\u9635\uff0c\u5e76\u5728\u5904\u7406\u5e27\u65f6\u5728 MD5Loader \u7c7b\u4e2d\u8ba1\u7b97\u3002\u56e0\u6b64\uff0c\u8be5\u6570\u7ec4\u5305\u542b\u9700\u8981\u5e94\u7528\u4e8e\u5f53\u524d\u52a8\u753b\u5e27\u4e2d\u6240\u6709\u5173\u8282\u7684\u53d8\u6362\uff0c\u5e76\u5c06\u4f5c\u4e3a\u8ba1\u7b97\u9876\u70b9\u6700\u7ec8\u5750\u6807\u7684\u57fa\u7840\u3002 \u4f7f\u7528VBO\u4e2d\u7684\u65b0\u6570\u636e\u548c\u8be5Uniform\uff0c\u6211\u4eec\u5c06\u53d8\u6362\u7ed1\u5b9a\u59ff\u52bf\u7684\u5750\u6807\u3002\u8fd9\u5c06\u5728\u4e0b\u8ff0\u4ee3\u7801\u5757\u4e2d\u5b8c\u6210\uff1a vec4 initPos = vec4(0, 0, 0, 0); int count = 0; for(int i = 0; i < MAX_WEIGHTS; i++) { float weight = jointWeights[i]; if(weight > 0) { count++; int jointIndex = jointIndices[i]; vec4 tmpPos = jointsMatrix[jointIndex] * vec4(position, 1.0); initPos += weight * tmpPos; } } if (count == 0) { initPos = vec4(position, 1.0); } \u9996\u5148\uff0c\u6211\u4eec\u5f97\u5230\u7ed1\u5b9a\u59ff\u52bf\u7684\u5750\u6807\uff0c\u904d\u5386\u4e0e\u8fd9\u4e2a\u9876\u70b9\u5173\u8054\u7684\u6743\u91cd\uff0c\u5e76\u901a\u8fc7\u4f7f\u7528\u50a8\u5b58\u5728\u8f93\u5165\u4e2d\u7684\u7d22\u5f15\uff0c\u4f7f\u7528\u8be5\u5e27\uff08\u50a8\u5b58\u5728 jointsMatrix Uniform\u4e2d\uff09\u7684\u6743\u91cd\u548c\u5173\u8282\u77e9\u9635\u4fee\u6539\u5750\u6807\u3002 \u56e0\u6b64\uff0c\u7ed9\u5b9a\u4e00\u4e2a\u9876\u70b9\u5750\u6807\uff0c\u6211\u4eec\u8ba1\u7b97\u5b83\u7684\u5e27\u5750\u6807\uff1a Vfp = \\sum\\limits_{i=0}^{MAX WEIGTHS} Wb_{i} \\dot (Jfp_{i} \\times Jt^{-1}_{i}) \\times Vpos \u53c2\u6570\uff1a Wfvp \u662f\u9876\u70b9\u7684\u6700\u7ec8\u5750\u6807\u3002 Wb \u662f\u9876\u70b9\u7684\u6743\u91cd\u3002 Jfp \u662f\u8fd9\u4e2a\u5750\u6807\u7cfb\u7684\u5173\u8282\u53d8\u6362\u77e9\u9635\u3002 Jt^{-1} \u662f\u7ed1\u5b9a\u59ff\u52bf\u7684\u5173\u8282\u53d8\u6362\u77e9\u9635\u7684\u9006\u77e9\u9635\u3002\u8fd9\u4e2a\u77e9\u9635\u4e0e Jfp \u7684\u6210\u7ee9\u50a8\u5b58\u5728 jointsMatrix Uniform\u4e2d\u3002 Vpos \u662f\u7ed1\u5b9a\u59ff\u52bf\u4e2d\u7684\u9876\u70b9\u5750\u6807\u3002 Vpos \u7531 Jt \u77e9\u9635\u8ba1\u7b97\uff0c\u8fd9\u662f\u7ed1\u5b9a\u59ff\u52bf\u7684\u5173\u8282\u53d8\u6362\u77e9\u9635\u7684\u77e9\u9635\u3002\u6240\u4ee5\uff0c\u6700\u540e\u6211\u4eec\u8981\u64a4\u9500\u7ed1\u5b9a\u59ff\u52bf\u7684\u4fee\u6539\u6765\u5e94\u7528\u8be5\u5750\u6807\u7cfb\u7684\u53d8\u6362\u3002\u8fd9\u5c31\u662f\u6211\u4eec\u9700\u8981\u9006\u7ed1\u5b9a\u59ff\u52bf\u77e9\u9635\u7684\u539f\u56e0\u3002 \u7740\u8272\u5668\u652f\u6301\u6743\u91cd\u53ef\u53d8\u7684\u9876\u70b9\uff0c\u6700\u591a\u53ef\u8fbe4\u4e2a\uff0c\u8fd8\u53ef\u4ee5\u6e32\u67d3\u975e\u52a8\u753b\u9879\u3002\u5728\u6b64\u60c5\u51b5\u4e0b\uff0c\u6743\u91cd\u7b49\u4e8e0\u6211\u4eec\u5c06\u5f97\u5230\u539f\u59cb\u5750\u6807\u3002 \u7740\u8272\u5668\u7684\u5176\u4f59\u90e8\u5206\u6216\u591a\u6216\u5c11\u4fdd\u6301\u4e0d\u53d8\uff0c\u6211\u4eec\u53ea\u662f\u4f7f\u7528\u66f4\u65b0\u540e\u7684\u5750\u6807\u5e76\u4f20\u9012\u7247\u5143\u7740\u8272\u5668\u8981\u4f7f\u7528\u7684\u6b63\u786e\u503c\u3002 vec4 mvPos = modelViewMatrix * initPos; gl_Position = projectionMatrix * mvPos; outTexCoord = texCoord; mvVertexNormal = normalize(modelViewMatrix * vec4(vertexNormal, 0.0)).xyz; mvVertexPos = mvPos.xyz; mlightviewVertexPos = orthoProjectionMatrix * modelLightViewMatrix * vec4(position, 1.0); outModelViewMatrix = modelViewMatrix; } \u6240\u4ee5\uff0c\u4e3a\u4e86\u6d4b\u8bd5\u52a8\u753b\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5c06 jointsMatrix \u4f20\u9012\u7ed9\u7740\u8272\u5668\u3002\u7531\u4e8e\u6b64\u4fe1\u606f\u4ec5\u50a8\u5b58\u5728 AnimGameItem \u5b9e\u4f8b\u4e2d\uff0c\u56e0\u6b64\u4ee3\u7801\u975e\u5e38\u7b80\u5355\u3002\u5728\u6e32\u67d3\u7f51\u683c\u7684\u5faa\u73af\u4e2d\uff0c\u6211\u4eec\u6dfb\u52a0\u4e86\u5982\u4e0b\u4ee3\u7801\u7247\u6bb5\uff1a if ( gameItem instanceof AnimGameItem ) { AnimGameItem animGameItem = (AnimGameItem)gameItem; AnimatedFrame frame = animGameItem.getCurrentFrame(); sceneShaderProgram.setUniform(\"jointsMatrix\", frame.getJointMatrices()); } \u5f53\u7136\uff0c\u5728\u4f7f\u7528\u5b83\u4e4b\u524d\uff0c\u4f60\u9700\u8981\u521b\u5efaUniform\uff0c\u4f60\u53ef\u4ee5\u67e5\u770b\u8be5\u7c7b\u7684\u6e90\u4ee3\u7801\u3002\u5982\u679c\u8fd0\u884c\u8fd9\u4e2a\u793a\u4f8b\uff0c\u4f60\u5c06\u80fd\u591f\u901a\u8fc7\u6309\u4e0b\u7a7a\u683c\u952e\u6765\u67e5\u770b\u6a21\u578b\u662f\u5982\u4f55\u52a8\u8d77\u6765\u7684\uff08\u6bcf\u6b21\u6309\u4e0b\u8fd9\u4e2a\u952e\uff0c\u90fd\u4f1a\u8bbe\u7f6e\u4e00\u4e2a\u65b0\u7684\u5e27\uff0c\u5e76\u4e14 jointsMatrix Uniform\u4f1a\u53d1\u751f\u53d8\u5316\uff09\u3002 \u4f60\u5c06\u770b\u5230\u5982\u4e0b\u6240\u793a\u7684\u4e1c\u897f\uff1a \u867d\u7136\u52a8\u753b\u5f88\u6d41\u7545\uff0c\u4f46\u793a\u4f8b\u8fd8\u662f\u5b58\u5728\u4e00\u4e9b\u95ee\u9898\u3002\u9996\u5148\uff0c\u5149\u7167\u6ca1\u6709\u6b63\u5e38\u7684\u5de5\u4f5c\uff0c\u9634\u5f71\u8868\u73b0\u7684\u662f\u7ed1\u5b9a\u59ff\u52bf\uff0c\u800c\u4e0d\u662f\u5f53\u524d\u5e27\u3002\u6211\u4eec\u73b0\u5728\u5c06\u89e3\u51b3\u6240\u6709\u8fd9\u4e9b\u95ee\u9898\u3002","title":"\u6a21\u578b\u52a8\u753b"},{"location":"19-animations/#_3","text":"\u7b2c\u4e00\u4e2a\u8981\u89e3\u51b3\u7684\u95ee\u9898\u662f\u5149\u7167\u95ee\u9898\u3002\u4f60\u53ef\u80fd\u5df2\u7ecf\u6ce8\u610f\u5230\u8fd9\u79cd\u60c5\u51b5\u4e86\uff0c\u8fd9\u662f\u56e0\u4e3a\u6211\u4eec\u6ca1\u6709\u53d8\u6362\u6cd5\u7ebf\u3002\u56e0\u6b64\uff0c\u7247\u5143\u7740\u8272\u5668\u4e2d\u4f7f\u7528\u7684\u6cd5\u7ebf\u4e0e\u7ed1\u5b9a\u59ff\u52bf\u76f8\u5bf9\u5e94\u3002\u6211\u4eec\u9700\u8981\u50cf\u53d8\u6362\u4f4d\u7f6e\u4e00\u6837\u53d8\u6362\u5b83\u4eec\u3002 \u8fd9\u4e2a\u95ee\u9898\u5f88\u597d\u89e3\u51b3\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5728\u5faa\u73af\u4e2d\u5c06\u6cd5\u7ebf\u4e5f\u56ca\u62ec\u5230\u9876\u70b9\u7740\u8272\u5668\u4e2d\u7684\u6743\u91cd\u904d\u5386\u3002 vec4 initPos = vec4(0, 0, 0, 0); vec4 initNormal = vec4(0, 0, 0, 0); int count = 0; for(int i = 0; i < MAX_WEIGHTS; i++) { float weight = jointWeights[i]; if(weight > 0) { count++; int jointIndex = jointIndices[i]; vec4 tmpPos = jointsMatrix[jointIndex] * vec4(position, 1.0); initPos += weight * tmpPos; vec4 tmpNormal = jointsMatrix[jointIndex] * vec4(vertexNormal, 0.0); initNormal += weight * tmpNormal; } } if (count == 0) { initPos = vec4(position, 1.0); initNormal = vec4(vertexNormal, 0.0); } \u7136\u540e\u6211\u4eec\u50cf\u5f80\u5e38\u4e00\u6837\u8ba1\u7b97\u8f93\u51fa\u9876\u70b9\u6cd5\u7ebf\u5411\u91cf\uff1a mvVertexNormal = normalize(modelViewMatrix * initNormal).xyz; \u63a5\u4e0b\u6765\u7684\u95ee\u9898\u662f\u9634\u5f71\u95ee\u9898\u3002\u5982\u679c\u4f60\u8bb0\u5f97\u5728\u9634\u5f71\u4e00\u7ae0\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u9634\u5f71\u56fe\u7ed8\u5236\u9634\u5f71\u3002\u6211\u4eec\u73b0\u5728\u6b63\u4ece\u5149\u7167\u900f\u89c6\u6e32\u67d3\u573a\u666f\uff0c\u4ee5\u4fbf\u521b\u5efa\u4e00\u4e2a\u6df1\u5ea6\u56fe\uff0c\u5b83\u544a\u8bc9\u6211\u4eec\u4e00\u4e2a\u70b9\u662f\u5426\u5728\u9634\u5f71\u4e2d\u3002\u4f46\u662f\uff0c\u5728\u6cd5\u7ebf\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u53ea\u662f\u901a\u8fc7\u7ed1\u5b9a\u59ff\u52bf\u7684\u5750\u6807\uff0c\u800c\u4e0d\u662f\u6839\u636e\u5f53\u524d\u5e27\u6765\u6539\u53d8\u5b83\u4eec\u3002\u8fd9\u5c31\u662f\u9634\u5f71\u4e0e\u5f53\u524d\u5750\u6807\u4e0d\u4e00\u81f4\u7684\u539f\u56e0\u3002 \u89e3\u51b3\u65b9\u6cd5\u4e5f\u5f88\u7b80\u5355\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4fee\u6539\u6df1\u5ea6\u9876\u70b9\u7740\u8272\u5668\u4f7f\u7528 jointsMatrix \u3001\u6743\u91cd\u548c\u5173\u8282\u7d22\u5f15\u6765\u53d8\u6362\u5750\u6807\u3002\u8fd9\u5c31\u662f\u6df1\u5ea6\u9876\u70b9\u7740\u8272\u5668\uff1a #version 330 const int MAX_WEIGHTS = 4; const int MAX_JOINTS = 150; layout (location=0) in vec3 position; layout (location=1) in vec2 texCoord; layout (location=2) in vec3 vertexNormal; layout (location=3) in vec4 jointWeights; layout (location=4) in ivec4 jointIndices; uniform mat4 jointsMatrix[MAX_JOINTS]; uniform mat4 modelLightViewMatrix; uniform mat4 orthoProjectionMatrix; void main() { vec4 initPos = vec4(0, 0, 0, 0); int count = 0; for(int i = 0; i < MAX_WEIGHTS; i++) { float weight = jointWeights[i]; if(weight > 0) { count++; int jointIndex = jointIndices[i]; vec4 tmpPos = jointsMatrix[jointIndex] * vec4(position, 1.0); initPos += weight * tmpPos; } } if (count == 0) { initPos = vec4(position, 1.0); } gl_Position = orthoProjectionMatrix * modelLightViewMatrix * initPos; } \u4f60\u9700\u8981\u4fee\u6539 Renderer \u7c7b\u6765\u4e3a\u8fd9\u4e2a\u7740\u8272\u5668\u8bbe\u7f6e\u65b0\u7684Uniform\uff0c\u6700\u7ec8\u7684\u6548\u679c\u4f1a\u66f4\u597d\u3002\u5149\u7167\u5c06\u88ab\u6b63\u786e\u7684\u5e94\u7528\uff0c\u9634\u5f71\u5c06\u968f\u6bcf\u4e2a\u52a8\u753b\u5e27\u6539\u53d8\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002 \u8fd9\u5c31\u662f\u5168\u90e8\u5185\u5bb9\u4e86\uff0c\u73b0\u5728\u4f60\u5df2\u7ecf\u6709\u4e86\u4e00\u4e2a\u7528\u4e8e\u52a8\u753bMD5\u6a21\u578b\u7684\u53ef\u5de5\u4f5c\u793a\u4f8b\u3002\u6e90\u4ee3\u7801\u4ecd\u80fd\u6539\u8fdb\uff0c\u4f60\u53ef\u4ee5\u4fee\u6539\u5728\u6bcf\u4e2a\u6e32\u67d3\u5468\u671f\u4e2d\u52a0\u8f7d\u7684\u77e9\u9635\uff0c\u4ee5\u4fbf\u5728\u5e27\u4e4b\u95f4\u63d2\u5165\u3002\u4f60\u53ef\u4ee5\u67e5\u770b\u672c\u7ae0\u4e2d\u4f7f\u7528\u7684\u8d44\u6e90\uff0c\u4e86\u89e3\u5982\u4f55\u5b9e\u73b0\u8be5\u529f\u80fd\u3002","title":"\u4fee\u6b63\u52a8\u753b\u95ee\u9898"},{"location":"20-particles/","text":"\u7c92\u5b50\uff08Particles\uff09 \u57fa\u7840 \u5728\u672c\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u6dfb\u52a0\u7c92\u5b50\u6548\u679c\u5230\u6e38\u620f\u5f15\u64ce\u4e2d\u3002\u6709\u4e86\u8fd9\u79cd\u6548\u679c\uff0c\u6211\u4eec\u5c31\u80fd\u6a21\u62df\u5173\u7cfb\u3001\u706b\u3001\u7070\u5c18\u548c\u4e91\u3002\u8fd9\u662f\u4e00\u79cd\u7b80\u5355\u7684\u6548\u679c\uff0c\u5c06\u6539\u5584\u5bf9\u4efb\u4f55\u6e38\u620f\u7684\u56fe\u5f62\u65b9\u9762\u3002 \u5728\u6b64\u4e4b\u524d\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0c\u6709\u5f88\u591a\u65b9\u6cd5\u53ef\u4ee5\u5b9e\u73b0\u4e0d\u540c\u6548\u679c\u7684\u7c92\u5b50\u6548\u679c\u3002\u5f53\u524d\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u9762\u677f\u7c92\u5b50\uff08Billboard Particle\uff09\u3002\u8be5\u6280\u672f\u4f7f\u7528\u79fb\u52a8\u7684\u7eb9\u7406\u56db\u8fb9\u5f62\u6765\u8868\u793a\u4e00\u4e2a\u7c92\u5b50\uff0c\u5b83\u4eec\u603b\u662f\u9762\u5411\u89c2\u5bdf\u8005\uff0c\u5728\u672c\u4f8b\u4e2d\uff0c\u5c31\u662f\u6444\u50cf\u673a\u3002\u4f60\u8fd8\u53ef\u4ee5\u4f7f\u7528\u9762\u677f\u6280\u672f\u5728\u6e38\u620f\u9879\u4e0a\u663e\u793a\u4fe1\u606f\u9762\u677f\uff0c\u6bd4\u5982\u8ff7\u4f60HUD\u3002 \u8ba9\u6211\u4eec\u5f00\u59cb\u5b9a\u4e49\u7c92\u5b50\uff0c\u7c92\u5b50\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u5c5e\u6027\u5b9a\u4e49\uff1a \u4e00\u4e2a\u7528\u4e8e\u8868\u793a\u56db\u8fb9\u5f62\u9876\u70b9\u7684\u7f51\u683c\u3002 \u4e00\u5f20\u7eb9\u7406\u3002 \u67d0\u4e00\u65f6\u523b\u7684\u5750\u6807\u3002 \u7f29\u653e\u7cfb\u6570\u3002 \u901f\u5ea6\u3002 \u79fb\u52a8\u65b9\u5411\u3002 \u751f\u5b58\u65f6\u95f4\u6216\u5b58\u6d3b\u65f6\u95f4\u3002\u4e00\u65e6\u8be5\u65f6\u95f4\u8fc7\u53bb\uff0c\u7c92\u5b50\u5c31\u4e0d\u518d\u5b58\u5728\u3002 \u524d\u56db\u9879\u662f GameItem \u7c7b\u7684\u4e00\u90e8\u5206\uff0c\u4f46\u540e\u4e09\u9879\u4e0d\u662f\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u8981\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a Particle \u7684\u65b0\u7c7b\uff0c\u5b83\u7ee7\u627f\u4e86 GameItem \u7c7b\uff0c\u5176\u5b9a\u4e49\u5982\u4e0b\uff1a package org.lwjglb.engine.graph.particles; import org.joml.Vector3f; import org.lwjglb.engine.graph.Mesh; import org.lwjglb.engine.items.GameItem; public class Particle extends GameItem { private Vector3f speed; /** * \u7c92\u5b50\u5b58\u6d3b\u7684\u65f6\u95f4\uff0c\u4ee5\u6beb\u79d2\u4e3a\u5355\u4f4d */ private long ttl; public Particle(Mesh mesh, Vector3f speed, long ttl) { super(mesh); this.speed = new Vector3f(speed); this.ttl = ttl; } public Particle(Particle baseParticle) { super(baseParticle.getMesh()); Vector3f aux = baseParticle.getPosition(); setPosition(aux.x, aux.y, aux.z); aux = baseParticle.getRotation(); setRotation(aux.x, aux.y, aux.z); setScale(baseParticle.getScale()); this.speed = new Vector3f(baseParticle.speed); this.ttl = baseParticle.geTtl(); } public Vector3f getSpeed() { return speed; } public void setSpeed(Vector3f speed) { this.speed = speed; } public long geTtl() { return ttl; } public void setTtl(long ttl) { this.ttl = ttl; } /** * \u66f4\u65b0\u7c92\u5b50\u7684\u5b58\u6d3b\u65f6\u95f4 * @param elapsedTime \u7ecf\u8fc7\u7684\u65f6\u95f4\uff08\u6beb\u79d2\uff09 * @return \u7c92\u5b50\u7684\u5b58\u6d3b\u65f6\u95f4 */ public long updateTtl(long elapsedTime) { this.ttl -= elapsedTime; return this.ttl; } } \u4ece\u4e0a\u8ff0\u4ee3\u7801\u53ef\u4ee5\u770b\u51fa\uff0c\u7c92\u5b50\u7684\u901f\u5ea6\u548c\u8fd0\u52a8\u65b9\u5411\u53ef\u4ee5\u8868\u793a\u4e3a\u4e00\u4e2a\u5411\u91cf\u3002\u8be5\u5411\u91cf\u7684\u65b9\u5411\u51b3\u5b9a\u4e86\u7c92\u5b50\u7684\u8fd0\u52a8\u65b9\u5411\u548c\u901f\u5ea6\u3002\u7c92\u5b50\u5b58\u6d3b\u65f6\u95f4\uff08TTL\uff09\u88ab\u8bbe\u5b9a\u4e3a\u6beb\u79d2\u8ba1\u6570\u5668\uff0c\u6bcf\u5f53\u66f4\u65b0\u6e38\u620f\u72b6\u6001\u65f6\uff0c\u5b83\u90fd\u4f1a\u51cf\u5c11\u3002\u8be5\u7c7b\u8fd8\u6709\u4e00\u4e2a\u590d\u5236\u6784\u9020\u51fd\u6570\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u4e00\u4e2a\u6784\u9020\u51fd\u6570\u63a5\u6536\u53e6\u4e00\u4e2a\u7c92\u5b50\u5b9e\u4f8b\u6765\u8fdb\u884c\u590d\u5236\u3002 \u73b0\u5728\uff0c\u6211\u4eec\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u7c92\u5b50\u751f\u6210\u5668\u6216\u7c92\u5b50\u53d1\u5c04\u5668\uff0c\u5373\u4e00\u4e2a\u52a8\u6001\u751f\u6210\u7c92\u5b50\u3001\u63a7\u5236\u5176\u751f\u547d\u5468\u671f\u5e76\u6839\u636e\u7279\u5b9a\u7684\u6a21\u5f0f\u66f4\u65b0\u5176\u4f4d\u7f6e\u7684\u7c7b\u3002\u6211\u4eec\u53ef\u4ee5\u521b\u5efa\u5f88\u591a\u5b9e\u73b0\uff0c\u5b83\u4eec\u5728\u7c92\u5b50\u7684\u521b\u5efa\u65b9\u5f0f\u548c\u4f4d\u7f6e\u7684\u66f4\u65b0\u65b9\u5f0f\uff08\u4f8b\u5982\uff0c\u662f\u5426\u8003\u8651\u91cd\u529b\uff09\u65b9\u9762\u5404\u4e0d\u76f8\u540c\u3002\u56e0\u6b64\uff0c\u4e3a\u4e86\u4fdd\u6301\u6e38\u620f\u5f15\u64ce\u7684\u901a\u7528\u6027\uff0c\u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a\u6240\u6709\u7c92\u5b50\u53d1\u5c04\u5668\u5fc5\u987b\u8981\u5b9e\u73b0\u7684\u63a5\u53e3\u3002\u8fd9\u4e2a\u540d\u4e3a IParticleEmitter \u7684\u63a5\u53e3\u5b9a\u4e49\u5982\u4e0b\uff1a package org.lwjglb.engine.graph.particles; import java.util.List; import org.lwjglb.engine.items.GameItem; public interface IParticleEmitter { void cleanup(); Particle getBaseParticle(); List<GameItem> getParticles(); } IParticleEmitter \u63a5\u53e3\u6709\u4e00\u4e2a\u6e05\u7406\u8d44\u6e90\u7684\u65b9\u6cd5\uff0c\u540d\u4e3a cleanup \uff0c\u8fd8\u6709\u4e00\u4e2a\u83b7\u53d6\u7c92\u5b50\u5217\u8868\u7684\u65b9\u6cd5\uff0c\u540d\u4e3a getParticles \u3002\u8fd8\u6709\u4e00\u4e2a\u540d\u4e3a getBaseParticle \u7684\u65b9\u6cd5\uff0c\u4f46\u662f\u8fd9\u4e2a\u65b9\u6cd5\u662f\u505a\u4ec0\u4e48\u7684\u5462\uff1f\u4e00\u4e2a\u7c92\u5b50\u53d1\u5c04\u5668\u5c06\u52a8\u6001\u5730\u4ea7\u751f\u8bb8\u591a\u4f8b\u5b50\u3002\u6bcf\u5f53\u4e00\u4e2a\u7c92\u5b50\u8fc7\u671f\uff0c\u5c31\u4f1a\u521b\u5efa\u65b0\u7684\u7c92\u5b50\u3002\u8be5\u7c92\u5b50\u66f4\u65b0\u5468\u671f\u5c06\u4f7f\u7528\u57fa\u7840\u7c92\u5b50\u4f5c\u4e3a\u6a21\u677f\u521b\u5efa\u65b0\u7684\u52bf\u529b\u3002\u8fd9\u5c31\u662f\u57fa\u7840\u7c92\u5b50\u7684\u7528\u9014\uff0c\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48 Particle \u7c7b\u5b9a\u4e49\u4e86\u4e00\u4e2a\u590d\u5236\u6784\u9020\u51fd\u6570\u3002 \u5728\u6e38\u620f\u5f15\u64ce\u7684\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u5c06\u53ea\u5f15\u7528 IParticleEmitter \u63a5\u53e3\uff0c\u56e0\u6b64\u57fa\u7840\u4ee3\u7801\u5c06\u4e0d\u4f9d\u8d56\u4e8e\u7279\u5b9a\u7684\u5b9e\u73b0\u3002\u4e0d\u8fc7\uff0c\u6211\u4eec\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u5b9e\u73b0\u6765\u6a21\u62df\u4e0d\u53d7\u91cd\u529b\u5f71\u54cd\u7684\u7c92\u5b50\u6d41\u3002\u8fd9\u4e2a\u5b9e\u73b0\u53ef\u4ee5\u7528\u6765\u6a21\u62df\u5149\u7ebf\u6216\u706b\u7130\uff0c\u540d\u4e3a FlowParticleEmitter \u3002 \u8fd9\u4e2a\u7c7b\u7684\u884c\u4e3a\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u5c5e\u6027\u8fdb\u884c\u8c03\u6574\uff1a \u4e00\u6b21\u80fd\u5b58\u5728\u7684\u6700\u5927\u7c92\u5b50\u6570\u91cf \u521b\u5efa\u7c92\u5b50\u7684\u6700\u77ed\u5468\u671f\u3002\u7c92\u5b50\u5c06\u5728\u6700\u77ed\u7684\u65f6\u95f4\u5185\u4e00\u4e2a\u63a5\u4e00\u4e2a\u5730\u521b\u5efa\uff0c\u4ee5\u907f\u514d\u7c92\u5b50\u7206\u53d1\u6027\u521b\u5efa\u3002 \u4e00\u7ec4\u8303\u56f4\uff0c\u4ee5\u968f\u673a\u7c92\u5b50\u901f\u5ea6\u548c\u4f4d\u7f6e\u3002\u65b0\u7c92\u5b50\u5c06\u4f7f\u7528\u57fa\u7840\u7c92\u5b50\u7684\u4f4d\u7f6e\u548c\u901f\u5ea6\uff0c\u53ef\u4ee5\u5728\u76f8\u5e94\u8303\u56f4\u5185\u53d6\u503c\uff0c\u4ee5\u5206\u6563\u5149\u7ebf\u3002 \u8be5\u7c7b\u7684\u5b9e\u73b0\u5982\u4e0b\uff1a package org.lwjglb.engine.graph.particles; import java.util.ArrayList; import java.util.Iterator; import java.util.List; import org.joml.Vector3f; import org.lwjglb.engine.items.GameItem; public class FlowParticleEmitter implements IParticleEmitter { private int maxParticles; private boolean active; private final List<GameItem> particles; private final Particle baseParticle; private long creationPeriodMillis; private long lastCreationTime; private float speedRndRange; private float positionRndRange; private float scaleRndRange; public FlowParticleEmitter(Particle baseParticle, int maxParticles, long creationPeriodMillis) { particles = new ArrayList<>(); this.baseParticle = baseParticle; this.maxParticles = maxParticles; this.active = false; this.lastCreationTime = 0; this.creationPeriodMillis = creationPeriodMillis; } @Override public Particle getBaseParticle() { return baseParticle; } public long getCreationPeriodMillis() { return creationPeriodMillis; } public int getMaxParticles() { return maxParticles; } @Override public List<GameItem> getParticles() { return particles; } public float getPositionRndRange() { return positionRndRange; } public float getScaleRndRange() { return scaleRndRange; } public float getSpeedRndRange() { return speedRndRange; } public void setCreationPeriodMillis(long creationPeriodMillis) { this.creationPeriodMillis = creationPeriodMillis; } public void setMaxParticles(int maxParticles) { this.maxParticles = maxParticles; } public void setPositionRndRange(float positionRndRange) { this.positionRndRange = positionRndRange; } public void setScaleRndRange(float scaleRndRange) { this.scaleRndRange = scaleRndRange; } public boolean isActive() { return active; } public void setActive(boolean active) { this.active = active; } public void setSpeedRndRange(float speedRndRange) { this.speedRndRange = speedRndRange; } public void update(long ellapsedTime) { long now = System.currentTimeMillis(); if (lastCreationTime == 0) { lastCreationTime = now; } Iterator<? extends GameItem> it = particles.iterator(); while (it.hasNext()) { Particle particle = (Particle) it.next(); if (particle.updateTtl(ellapsedTime) < 0) { it.remove(); } else { updatePosition(particle, ellapsedTime); } } int length = this.getParticles().size(); if (now - lastCreationTime >= this.creationPeriodMillis && length < maxParticles) { createParticle(); this.lastCreationTime = now; } } private void createParticle() { Particle particle = new Particle(this.getBaseParticle()); // \u6dfb\u52a0\u4e00\u4e9b\u968f\u673a\u7684\u7c92\u5b50 float sign = Math.random() > 0.5d ? -1.0f : 1.0f; float speedInc = sign * (float)Math.random() * this.speedRndRange; float posInc = sign * (float)Math.random() * this.positionRndRange; float scaleInc = sign * (float)Math.random() * this.scaleRndRange; particle.getPosition().add(posInc, posInc, posInc); particle.getSpeed().add(speedInc, speedInc, speedInc); particle.setScale(particle.getScale() + scaleInc); particles.add(particle); } /** * \u66f4\u65b0\u4e00\u4e2a\u7c92\u5b50\u7684\u4f4d\u7f6e * @param particle \u9700\u8981\u66f4\u65b0\u7684\u7c92\u5b50 * @param elapsedTime \u5df2\u7ecf\u8fc7\u7684\u65f6\u95f4\uff08\u6beb\u79d2\uff09 */ public void updatePosition(Particle particle, long elapsedTime) { Vector3f speed = particle.getSpeed(); float delta = elapsedTime / 1000.0f; float dx = speed.x * delta; float dy = speed.y * delta; float dz = speed.z * delta; Vector3f pos = particle.getPosition(); particle.setPosition(pos.x + dx, pos.y + dy, pos.z + dz); } @Override public void cleanup() { for (GameItem particle : getParticles()) { particle.cleanup(); } } } \u73b0\u5728\uff0c\u6211\u4eec\u53ef\u4ee5\u62d3\u5c55 Scene \u7c7b\u4e2d\u5305\u542b\u7684\u6570\u636e\uff0c\u4f7f\u5176\u5305\u542b\u4e00\u4e2a ParticleEmitter \u7684\u5b9e\u4f8b\u6570\u7ec4\u3002 package org.lwjglb.engine; // \u8fd9\u662f\u5bfc\u5165\u2026\u2026 public class Scene { // \u8fd9\u6709\u66f4\u591a\u5c5e\u6027\u2026\u2026 private IParticleEmitter[] particleEmitters; \u5728\u8be5\u9636\u6bb5\uff0c\u6211\u4eec\u53ef\u4ee5\u5f00\u59cb\u6e32\u67d3\u7c92\u5b50\u3002\u7c92\u5b50\u4e0d\u4f1a\u53d7\u5230\u5149\u7684\u5f71\u54cd\uff0c\u4e5f\u4e0d\u4f1a\u4ea7\u751f\u4efb\u4f55\u97f3\u4e50\u3002\u5b83\u4eec\u4e0d\u4f1a\u6709\u4efb\u4f55\u9aa8\u9abc\u52a8\u753b\uff0c\u6240\u4ee5\u7528\u7279\u5b9a\u7684\u7740\u8272\u5668\u6e32\u67d3\u5b83\u4eec\u662f\u6ca1\u6709\u610f\u4e49\u7684\u3002\u7740\u8272\u5668\u975e\u5e38\u7b80\u5355\uff0c\u5b83\u4eec\u53ea\u4f1a\u4f7f\u7528\u6295\u5f71\u548c\u6a21\u578b\u89c2\u5bdf\u77e9\u9635\u6e32\u67d3\u9876\u70b9\uff0c\u5e76\u4f7f\u7528\u7eb9\u7406\u8bbe\u7f6e\u989c\u8272\u3002 \u9876\u70b9\u7740\u8272\u5668\u7684\u5b9a\u4e49\u5982\u4e0b\uff1a #version 330 layout (location=0) in vec3 position; layout (location=1) in vec2 texCoord; layout (location=2) in vec3 vertexNormal; out vec2 outTexCoord; uniform mat4 modelViewMatrix; uniform mat4 projectionMatrix; void main() { gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0); outTexCoord = texCoord; } \u7247\u5143\u7740\u8272\u5668\u7684\u5b9a\u4e49\u5982\u4e0b\uff1a #version 330 in vec2 outTexCoord; in vec3 mvPos; out vec4 fragColor; uniform sampler2D texture_sampler; void main() { fragColor = texture(texture_sampler, outTexCoord); } \u5982\u4f60\u6240\u89c1\uff0c\u5b83\u4eec\u975e\u5e38\u7b80\u5355\uff0c\u5c31\u50cf\u6e32\u67d3\u4e00\u7ae0\u4e2d\u4f7f\u7528\u7684\u7740\u8272\u5668\u3002\u73b0\u5728\uff0c\u548c\u5176\u4ed6\u7ae0\u8282\u4e00\u6837\uff0c\u6211\u4eec\u9700\u8981\u5728 Renderer \u7c7b\u4e2d\u8bbe\u7f6e\u548c\u4f7f\u7528\u8fd9\u4e9b\u7740\u8272\u5668\u3002\u7740\u8272\u5668\u7684\u8bbe\u7f6e\u5c06\u5728\u4e00\u4e2a\u540d\u4e3a setupParticlesShader \u7684\u65b9\u6cd5\u4e2d\u5b8c\u6210\uff0c\u5176\u5b9a\u4e49\u5982\u4e0b\uff1a private void setupParticlesShader() throws Exception { particlesShaderProgram = new ShaderProgram(); particlesShaderProgram.createVertexShader(Utils.loadResource(\"/shaders/particles_vertex.vs\")); particlesShaderProgram.createFragmentShader(Utils.loadResource(\"/shaders/particles_fragment.fs\")); particlesShaderProgram.link(); particlesShaderProgram.createUniform(\"projectionMatrix\"); particlesShaderProgram.createUniform(\"modelViewMatrix\"); particlesShaderProgram.createUniform(\"texture_sampler\"); } \u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u5728Renderer\u7c7b\u4e2d\u521b\u5efa\u6e32\u67d3\u65b9\u6cd5 renderParticles \uff0c\u5b9a\u4e49\u5982\u4e0b\uff1a private void renderParticles(Window window, Camera camera, Scene scene) { particlesShaderProgram.bind(); particlesShaderProgram.setUniform(\"texture_sampler\", 0); Matrix4f projectionMatrix = transformation.getProjectionMatrix(); particlesShaderProgram.setUniform(\"projectionMatrix\", projectionMatrix); Matrix4f viewMatrix = transformation.getViewMatrix(); IParticleEmitter[] emitters = scene.getParticleEmitters(); int numEmitters = emitters != null ? emitters.length : 0; for (int i = 0; i < numEmitters; i++) { IParticleEmitter emitter = emitters[i]; Mesh mesh = emitter.getBaseParticle().getMesh(); mesh.renderList((emitter.getParticles()), (GameItem gameItem) -> { Matrix4f modelViewMatrix = transformation.buildModelViewMatrix(gameItem, viewMatrix); particlesShaderProgram.setUniform(\"modelViewMatrix\", modelViewMatrix); } ); } particlesShaderProgram.unbind(); } \u5982\u679c\u4f60\u52aa\u529b\u9605\u8bfb\uff0c\u4e0a\u8ff0\u4ee3\u7801\u5e94\u8be5\u662f\u4e0d\u8a00\u81ea\u660e\u7684\uff0c\u5b83\u53ea\u662f\u8bbe\u7f6e\u5fc5\u8981\u7684Uniform\uff0c\u5e76\u6e32\u67d3\u6bcf\u4e2a\u7c92\u5b50\u3002\u73b0\u5728\uff0c\u6211\u4eec\u5df2\u7ecf\u521b\u5efa\u4e86\u6d4b\u8bd5\u7c92\u5b50\u6548\u679c\u5b9e\u73b0\u6240\u9700\u7684\u6240\u6709\u65b9\u6cd5\uff0c\u53ea\u9700\u8981\u4fee\u6539 DummyGame \u7c7b\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u521b\u5efa\u7c92\u5b50\u53d1\u5c04\u5668\u548c\u57fa\u672c\u7c92\u5b50\u7684\u7279\u6027\u3002 Vector3f particleSpeed = new Vector3f(0, 1, 0); particleSpeed.mul(2.5f); long ttl = 4000; int maxParticles = 200; long creationPeriodMillis = 300; float range = 0.2f; float scale = 0.5f; Mesh partMesh = OBJLoader.loadMesh(\"/models/particle.obj\"); Texture texture = new Texture(\"/textures/particle_tmp.png\"); Material partMaterial = new Material(texture, reflectance); partMesh.setMaterial(partMaterial); Particle particle = new Particle(partMesh, particleSpeed, ttl); particle.setScale(scale); particleEmitter = new FlowParticleEmitter(particle, maxParticles, creationPeriodMillis); particleEmitter.setActive(true); particleEmitter.setPositionRndRange(range); particleEmitter.setSpeedRndRange(range); this.scene.setParticleEmitters(new FlowParticleEmitter[] {particleEmitter}); \u6211\u4eec\u73b0\u5728\u4f7f\u7528\u4e00\u4e2a\u666e\u901a\u586b\u5145\u5706\u4f5c\u4e3a\u7c92\u5b50\u7684\u7eb9\u7406\uff0c\u4ee5\u4fbf\u66f4\u597d\u5730\u7406\u89e3\u53d1\u751f\u4e86\u4ec0\u4e48\u3002\u5982\u679c\u4f60\u8fd0\u884c\u5b83\uff0c\u4f60\u4f1a\u770b\u5230\u5982\u4e0b\u6240\u793a\u7684\u4e1c\u897f\uff1a \u4e3a\u4ec0\u4e48\u4e00\u4e9b\u7c92\u5b50\u4f3c\u4e4e\u88ab\u5207\u65ad\u4e86\uff1f\u4e3a\u4ec0\u4e48\u900f\u660e\u7684\u80cc\u666f\u4e0d\u80fd\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff1f\u539f\u56e0\u662f\u6df1\u5ea6\u6d4b\u8bd5\u3002\u7c92\u5b50\u7684\u4e00\u4e9b\u7247\u5143\u88ab\u4e22\u5f03\uff0c\u56e0\u4e3a\u5b83\u4eec\u5177\u6709\u6bd4\u8be5\u533a\u57df\u7684\u6df1\u5ea6\u7f13\u51b2\u7684\u5f53\u524d\u503c\u9ad8\u7684\u6df1\u5ea6\u503c\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5c06\u5176\u4e0e\u6444\u50cf\u673a\u4e4b\u95f4\u7684\u8ddd\u79bb\u6765\u6392\u5e8f\u7c92\u5b50\u4ee5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6216\u8005\u6211\u4eec\u53ef\u4ee5\u7981\u7528\u6df1\u5ea6\u5199\u5165\u3002 \u5728\u7ed8\u5236\u7c92\u5b50\u4e4b\u524d\u6211\u4eec\u9700\u8981\u63d2\u5165\u8fd9\u4e00\u884c\u4ee3\u7801\uff1a glDepthMask(false); \u7136\u540e\u5728\u6211\u4eec\u5b8c\u6210\u6e32\u67d3\u4e4b\u540e\u8fd8\u539f\u4e3a\u5148\u524d\u503c\uff1a glDepthMask(true); \u7136\u540e\u6211\u4eec\u4f1a\u5f97\u5230\u5982\u4e0b\u6240\u793a\u7684\u4e1c\u897f\uff1a \u597d\u4e86\uff0c\u95ee\u9898\u89e3\u51b3\u3002\u7136\u800c\uff0c\u6211\u4eec\u4ecd\u60f3\u5e94\u7528\u53e6\u4e00\u79cd\u6548\u679c\uff0c\u6211\u4eec\u5e0c\u671b\u989c\u8272\u88ab\u6df7\u5408\uff0c\u56e0\u6b64\u989c\u8272\u5c06\u88ab\u6dfb\u52a0\uff0c\u4ee5\u8fbe\u6210\u66f4\u597d\u7684\u6548\u679c\u3002\u8fd9\u662f\u5728\u6e32\u67d3\u524d\u589e\u52a0\u5982\u4e0b\u4e00\u884c\u4ee3\u7801\u6765\u5b9e\u73b0\u7684\uff1a glBlendFunc(GL_SRC_ALPHA, GL_ONE); \u4e0e\u6df1\u5ea6\u7684\u60c5\u51b5\u4e00\u6837\uff0c\u6e32\u67d3\u5b8c\u6240\u6709\u7c92\u5b50\u540e\uff0c\u6211\u4eec\u5c06\u6df7\u5408\u51fd\u6570\u6062\u590d\u4e3a\uff1a glBlendFunc(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA); \u73b0\u5728\u6211\u4eec\u5f97\u5230\u8fd9\u6837\u7684\u6548\u679c\uff1a \u4f46\u6211\u4eec\u8fd8\u6ca1\u6709\u5b8c\u6210\u5b83\u3002\u5982\u679c\u4f60\u628a\u6444\u50cf\u673a\u79fb\u5230\u84dd\u8272\u6b63\u65b9\u5f62\u7684\u4e0a\u65b9\u5f80\u4e0b\u770b\uff0c\u4f60\u53ef\u80fd\u4f1a\u5f97\u5230\u8fd9\u6837\u7684\u4e1c\u897f\uff1a \u8fd9\u4e9b\u7c92\u5b50\u770b\u8d77\u6765\u4e0d\u592a\u597d\uff0c\u5b83\u4eec\u5e94\u8be5\u662f\u5706\u7684\uff0c\u4f46\u73b0\u5728\u770b\u8d77\u6765\u50cf\u4e00\u5f20\u7eb8\u3002\u5728\u6b64\u4e4b\u4e0a\uff0c\u6211\u4eec\u5e94\u8be5\u5e94\u7528\u9762\u677f\u6280\u672f\u3002\u7528\u4e8e\u6e32\u67d3\u7c92\u5b50\u7684\u56db\u8fb9\u5f62\u5e94\u8be5\u59cb\u7ec8\u9762\u5411\u6444\u50cf\u673a\uff0c\u4e0e\u6444\u50cf\u673a\u65b9\u5411\u5b8c\u5168\u5782\u76f4\uff0c\u5c31\u597d\u50cf\u6839\u672c\u6ca1\u6709\u65cb\u8f6c\u4e00\u6837\u3002\u6444\u50cf\u673a\u7684\u77e9\u9635\u5c06\u4f4d\u79fb\u548c\u65cb\u8f6c\u5e94\u7528\u4e8e\u573a\u666f\u4e2d\u7684\u6bcf\u4e00\u4e2a\u5bf9\u8c61\uff0c\u6211\u4eec\u60f3\u8df3\u8fc7\u5c06\u8981\u5e94\u7528\u7684\u65cb\u8f6c\u3002 \u8b66\u544a\uff1a\u5728\u8bb2\u6570\u5b66\u77e5\u8bc6\u65f6\uff0c\u5982\u679c\u4f60\u89c9\u5f97\u4e0d\u8212\u670d\uff0c\u4f60\u53ef\u4ee5\u8df3\u8fc7\u5b83\u3002\u8ba9\u6211\u4eec\u518d\u6b21\u56de\u987e\u90a3\u4e2a\u89c2\u5bdf\u77e9\u9635\u3002\u8be5\u77e9\u9635\u53ef\u4ee5\u50cf\u8fd9\u6837\u8868\u793a\uff08\u6ca1\u6709\u5e94\u7528\u4efb\u4f55\u7f29\u653e\uff09\u3002 <script type=\"math/tex; mode=display\">\\begin{bmatrix} \\color{red}{r_{00}} & \\color{red}{r_{10}} & \\color{red}{r_{20}} & \\color{blue}{dx} \\\\ \\color{red}{r_{01}} & \\color{red}{r_{11}} & \\color{red}{r_{21}} & \\color{blue}{dy} \\\\ \\color{red}{r_{02}} & \\color{red}{r_{12}} & \\color{red}{r_{22}} & \\color{blue}{dz} \\\\ 0 & 0 & 0 & 1 \\end{bmatrix} \u7ea2\u8272\u7684\u5143\u7d20\u4ee3\u8868\u6444\u50cf\u673a\u7684\u65cb\u8f6c\uff0c\u84dd\u8272\u7684\u5143\u7d20\u4ee3\u8868\u4f4d\u79fb\u3002\u6211\u4eec\u9700\u8981\u53d6\u6d88\u89c2\u5bdf\u77e9\u9635\u4e2d\u7684\u5de6\u4e0a\u89d23x3\u77e9\u9635\u7684\u65cb\u8f6c\u6548\u679c\uff0c\u6240\u4ee5\u5b83\u4f1a\u53d8\u6210\u8fd9\u6837\uff1a <script type=\"math/tex; mode=display\">\\begin{bmatrix} \\color{red}{1} & \\color{red}{0} & \\color{red}{0} & \\color{blue}{dx} \\\\ \\color{red}{0} & \\color{red}{1} & \\color{red}{0} & \\color{blue}{dy} \\\\ \\color{red}{0} & \\color{red}{0} & \\color{red}{1} & \\color{blue}{dz} \\\\ 0 & 0 & 0 & 1 \\end{bmatrix} \u5728\u5de6\u4e0a\u89d2\u7684\u7ea2\u8272\u90e8\u5206\uff0c\u6211\u4eec\u6709\u4e00\u4e2a3x3\u77e9\u9635\uff0c\u628a\u5b83\u547d\u540d\u4e3a M_{r} \u5e76\u4e14\u6211\u4eec\u60f3\u628a\u5b83\u8f6c\u6362\u6210\u5355\u4f4d\u77e9\u9635\uff1a I \u3002\u4efb\u4f55\u77e9\u9635\u4e58\u4ee5\u5b83\u7684\u9006\u77e9\u9635\u90fd\u4f1a\u5f97\u5230\u5355\u4f4d\u77e9\u9635\uff1a M_{r} \\times M_{r}^{-1} = I \u3002\u6211\u4eec\u53ea\u9700\u8981\u4ece\u89c2\u5bdf\u77e9\u9635\u4e2d\u53d6\u5de6\u4e0a\u89d2\u76843x3\u77e9\u9635\uff0c\u7136\u540e\u4e58\u4ee5\u5b83\u7684\u9006\u77e9\u9635\uff0c\u4f46\u662f\u8fd8\u53ef\u4ee5\u4f18\u5316\u4ed6\u3002\u4e00\u4e2a\u65cb\u8f6c\u77e9\u9635\u6709\u4e00\u4e2a\u6709\u8da3\u7684\u5b9a\u7406\uff0c\u5b83\u7684\u9006\u77e9\u9635\u4e0e\u5176\u8f6c\u7f6e\u77e9\u9635\u76f8\u7b49\u3002\u5373\uff1a M_{r} \\times M_{r}^{-1} = M_{r} \\times M_{r}^{T} = I \u3002\u8f6c\u7f6e\u77e9\u9635\u6bd4\u9006\u77e9\u9635\u66f4\u5bb9\u6613\u8ba1\u7b97\u3002\u77e9\u9635\u7684\u8f6c\u7f6e\u5c31\u50cf\u5c06\u5176\u53cd\u8f6c\u8fc7\u6765\uff0c\u5c06\u6bcf\u4e00\u5217\u4e0e\u6bcf\u4e00\u884c\u66ff\u6362\u3002 <script type=\"math/tex; mode=display\">\\begin{bmatrix} r_{00} & r_{10} & r_{20} \\\\ r_{01} & r_{11} & r_{21} \\\\ r_{02} & r_{12} & r_{22} \\end{bmatrix} ^{T} = \\begin{bmatrix} r_{00} & r_{01} & r_{02} \\\\ r_{10} & r_{11} & r_{12} \\\\ r_{20} & r_{21} & r_{22} \\end{bmatrix} \u597d\u7684\uff0c\u8ba9\u6211\u4eec\u603b\u7ed3\u4e00\u4e0b\u3002\u6211\u4eec\u6709\u8be5\u53d8\u6362\uff1a V \\times M \uff0c\u5176\u4e2d V \u662f\u89c2\u5bdf\u77e9\u9635\uff0c M \u662f\u6a21\u578b\u77e9\u9635\u3002\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u8868\u8fbe\uff1a <script type=\"math/tex; mode=display\">\\begin{bmatrix} \\color{red}{v_{00}} & \\color{red}{v_{10}} & \\color{red}{v_{20}} & v_{30} \\\\ \\color{red}{v_{01}} & \\color{red}{v_{11}} & \\color{red}{v_{21}} & v_{31} \\\\ \\color{red}{v_{02}} & \\color{red}{v_{12}} & \\color{red}{v_{22}} & v_{32} \\\\ v_{03} & v_{13} & v_{23} & v_{33} \\end{bmatrix} \\times \\begin{bmatrix} \\color{red}{m_{00}} & \\color{red}{m_{10}} & \\color{red}{m_{20}} & m_{30} \\\\ \\color{red}{m_{01}} & \\color{red}{m_{11}} & \\color{red}{m_{21}} & m_{31} \\\\ \\color{red}{m_{02}} & \\color{red}{m_{12}} & \\color{red}{m_{22}} & m_{32} \\\\ m_{03} & m_{13} & m_{23} & m_{33} \\end{bmatrix} \u6211\u4eec\u60f3\u8981\u53d6\u6d88\u89c2\u5bdf\u77e9\u9635\u7684\u65cb\u8f6c\uff0c\u5f97\u5230\u8fd9\u6837\u7684\u7ed3\u679c\uff1a <script type=\"math/tex; mode=display\">\\begin{bmatrix} \\color{red}{1} & \\color{red}{0} & \\color{red}{0} & mv_{30} \\\\ \\color{red}{0} & \\color{red}{1} & \\color{red}{0} & mv_{31} \\\\ \\color{red}{0} & \\color{red}{0} & \\color{red}{1} & mv_{32} \\\\ mv_{03} & mv_{13} & mv_{23} & mv_{33} \\end{bmatrix} \u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u5c06\u6a21\u578b\u77e9\u9635\u7684\u5de6\u4e0a3x3\u77e9\u9635\u8bbe\u4e3a\u89c2\u5bdf\u77e9\u9635\u4e0a3x3\u90e8\u5206\u7684\u8f6c\u7f6e\u77e9\u9635\u3002 <script type=\"math/tex; mode=display\">\\begin{bmatrix} \\color{red}{v_{00}} & \\color{red}{v_{10}} & \\color{red}{v_{20}} & v_{30} \\\\ \\color{red}{v_{01}} & \\color{red}{v_{11}} & \\color{red}{v_{21}} & v_{31} \\\\ \\color{red}{v_{02}} & \\color{red}{v_{12}} & \\color{red}{v_{22}} & v_{32} \\\\ v_{03} & v_{13} & v_{23} & v_{33} \\end{bmatrix} \\times \\begin{bmatrix} \\color{red}{v_{00}} & \\color{red}{v_{01}} & \\color{red}{v_{02}} & m_{30} \\\\ \\color{red}{v_{10}} & \\color{red}{v_{11}} & \\color{red}{v_{12}} & m_{31} \\\\ \\color{red}{v_{20}} & \\color{red}{v_{21}} & \\color{red}{v_{22}} & m_{32} \\\\ m_{03} & m_{13} & m_{23} & m_{33} \\end{bmatrix} \u4f46\u5728\u8fd9\u4e4b\u540e\uff0c\u6211\u4eec\u53bb\u6389\u4e86\u7f29\u653e\uff0c\u5b9e\u9645\u4e0a\u771f\u6b63\u60f3\u8981\u8fbe\u5230\u7684\u7ed3\u679c\u662f\u8fd9\u6837\uff1a <script type=\"math/tex; mode=display\">\\begin{bmatrix} \\color{red}{sx} & \\color{red}{0} & \\color{red}{0} & mv_{30} \\\\ \\color{red}{0} & \\color{red}{sy} & \\color{red}{0} & mv_{31} \\\\ \\color{red}{0} & \\color{red}{0} & \\color{red}{sz} & mv_{32} \\\\ mv_{03} & mv_{13} & mv_{23} & mv_{33} \\end{bmatrix} \u5176\u4e2dsx\uff0csy\u548csz\u5c31\u662f\u7f29\u653e\u7cfb\u6570\u3002\u56e0\u6b64\uff0c\u5f53\u6211\u4eec\u5c06\u6a21\u578b\u77e9\u9635\u7684\u5de6\u4e0a3x3\u77e9\u9635\u8bbe\u7f6e\u4e3a\u89c2\u5bdf\u77e9\u9635\u7684\u8f6c\u7f6e\u77e9\u9635\u540e\uff0c\u6211\u4eec\u9700\u8981\u518d\u6b21\u5e94\u7528\u7f29\u653e\u3002 \u5c31\u8fd9\u4e9b\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5728 renderParticlesMethod \u4e2d\u50cf\u8fd9\u6837\u4fee\u6539\uff1a for (int i = 0; i < numEmitters; i++) { IParticleEmitter emitter = emitters[i]; Mesh mesh = emitter.getBaseParticle().getMesh(); mesh.renderList((emitter.getParticles()), (GameItem gameItem) -> { Matrix4f modelMatrix = transformation.buildModelMatrix(gameItem); viewMatrix.transpose3x3(modelMatrix); Matrix4f modelViewMatrix = transformation.buildModelViewMatrix(modelMatrix, viewMatrix); modelViewMatrix.scale(gameItem.getScale()); particlesShaderProgram.setUniform(\"modelViewMatrix\", modelViewMatrix); } ); } \u6211\u4eec\u8fd8\u5728 Transformation \u7c7b\u4e2d\u6dfb\u52a0\u4e86\u53e6\u4e00\u79cd\u65b9\u6cd5\uff0c\u4f7f\u7528\u4e24\u4e2a\u77e9\u9635\u6765\u6784\u9020\u6a21\u578b\u89c2\u5bdf\u77e9\u9635\uff0c\u800c\u4e0d\u662f\u4f7f\u7528 GameItem \u548c\u89c2\u5bdf\u77e9\u9635\u3002 \u6709\u4e86\u5982\u4e0a\u66f4\u6539\uff0c\u5f53\u4ece\u4e0a\u65b9\u89c2\u5bdf\u7c92\u5b50\u65f6\uff0c\u6211\u4eec\u5c31\u5f97\u5230\u5982\u4e0b\u7ed3\u679c\uff1a \u73b0\u5728\u96c6\u9f50\u4e86\u521b\u5efa\u4e00\u4e2a\u66f4\u771f\u5b9e\u7684\u7c92\u5b50\u6548\u679c\u6240\u9700\u8981\u7684\u6240\u6709\u8981\u7d20\uff0c\u6240\u4ee5\u8ba9\u6211\u4eec\u5c06\u5176\u6539\u4e3a\u66f4\u7cbe\u7ec6\u7684\u7eb9\u7406\u3002\u6211\u4eec\u5c06\u4f7f\u7528\u5982\u4e0b\u56fe\u7247\uff08\u5b83\u662f\u7531 GIMP \u521b\u4f5c\u7684\uff0c\u5e26\u6709\u5149\u7167\u548c\u9634\u5f71\u8fc7\u6ee4\u5668\uff09\uff1a \u6709\u4e86\u5982\u4e0a\u7eb9\u7406\uff0c\u6211\u4eec\u4f1a\u5f97\u5230\u5982\u4e0b\u6240\u793a\u7684\u7c92\u5b50\uff1a \u73b0\u5728\u66f4\u597d\u4e86\uff01\u4f60\u53ef\u80fd\u4f1a\u6ce8\u610f\u5230\u6211\u4eec\u9700\u8981\u8c03\u6574\u7f29\u653e\uff0c\u56e0\u4e3a\u7c92\u5b50\u73b0\u5728\u603b\u662f\u5bf9\u7740\u6444\u50cf\u673a\uff0c\u663e\u793a\u7684\u9762\u79ef\u603b\u662f\u6700\u5927\u7684\u3002 \u6700\u540e\uff0c\u518d\u63d0\u4e00\u70b9\uff0c\u4e3a\u4e86\u5f97\u5230\u53ef\u4ee5\u5728\u4efb\u4f55\u573a\u666f\u4f7f\u7528\u7684\u5b8c\u7f8e\u7684\u6548\u679c\uff0c\u4f60\u9700\u8981\u5b9e\u73b0\u7c92\u5b50\u6392\u5e8f\u548c\u542f\u7528\u6df1\u5ea6\u7f13\u51b2\u533a\u3002\u65e0\u8bba\u5982\u4f55\uff0c\u8fd9\u91cc\u6709\u4e00\u4e2a\u793a\u4f8b\u53ef\u4ee5\u5c06\u8fd9\u79cd\u6548\u679c\u56ca\u62ec\u5230\u4f60\u7684\u6e38\u620f\u4e2d\u3002 \u7eb9\u7406\u96c6\uff08Texture Atlas\uff09 \u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u505a\u597d\u4e86\u7c92\u5b50\u6548\u679c\u7684\u57fa\u7840\u5efa\u8bbe\uff0c\u73b0\u5728\u53ef\u4ee5\u4e3a\u5b83\u6dfb\u52a0\u4e00\u4e9b\u52a8\u753b\u6548\u679c\u4e86\u3002\u4e3a\u4e86\u5b9e\u73b0\u5b83\uff0c\u6211\u4eec\u5c06\u652f\u6301\u7eb9\u7406\u96c6\u3002\u7eb9\u7406\u96c6\uff08Texture Atlas\uff09\u662f\u4e00\u4e2a\u5305\u542b\u6240\u6709\u5c06\u8981\u4f7f\u7528\u7684\u7eb9\u7406\u7684\u5927\u578b\u56fe\u7247\u3002\u4f7f\u7528\u7eb9\u7406\u96c6\uff0c\u6211\u4eec\u5c31\u53ea\u9700\u8981\u52a0\u8f7d\u4e00\u4e2a\u5927\u7684\u56fe\u7247\uff0c\u7136\u540e\u518d\u7ed8\u5236\u6e38\u620f\u9879\u65f6\uff0c\u9009\u62e9\u8be5\u56fe\u50cf\u7684\u4e00\u90e8\u5206\u4f5c\u4e3a\u7eb9\u7406\u3002\u4f8b\u5982\uff0c\u5f53\u6211\u4eec\u60f3\u7528\u4e0d\u540c\u7684\u7eb9\u7406\u591a\u6b21\u6e32\u67d3\u76f8\u540c\u7684\u6a21\u578b\u65f6\uff08\u4f8b\u5982\u6811\u6216\u5ca9\u77f3\uff09\uff0c\u53ef\u4ee5\u4f7f\u7528\u8fd9\u79cd\u6280\u672f\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u76f8\u540c\u7684\u7eb9\u7406\u96c6\u5e76\u9009\u62e9\u9002\u5f53\u7684\u5750\u6807\uff0c\u800c\u4e0d\u662f\u4f7f\u7528\u5f88\u591a\u7eb9\u7406\u5b9e\u4f8b\u5e76\u5728\u5b83\u4eec\u4e4b\u95f4\u5207\u6362\uff08\u8bb0\u4f4f\uff0c\u5207\u6362\u72b6\u6001\u603b\u662f\u5f88\u6162\u7684\uff09\u3002 \u5728\u6b64\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u7eb9\u7406\u5750\u6807\u6765\u6dfb\u52a0\u7c92\u5b50\u52a8\u753b\u3002\u6211\u4eec\u904d\u5386\u4e0d\u540c\u7684\u7eb9\u7406\u6765\u4e3a\u7c92\u5b50\u52a8\u753b\u5efa\u6a21\uff0c\u6240\u6709\u8fd9\u4e9b\u7eb9\u7406\u5c06\u88ab\u5206\u5230\u4e00\u4e2a\u50cf\u8fd9\u6837\u7684\u7eb9\u7406\u96c6\uff1a \u7eb9\u7406\u96c6\u53ef\u4ee5\u88ab\u5212\u5206\u4e3a\u591a\u4e2a\u65b9\u5f62\u7247\u6bb5\u3002\u6211\u4eec\u5c06\u4e00\u4e2a\u65b9\u5f62\u7247\u6bb5\u5750\u6807\u5206\u914d\u5230\u4e00\u4e2a\u7c92\u5b50\u4e0a\uff0c\u5e76\u968f\u7740\u65f6\u95f4\u63a8\u79fb\u6539\u53d8\u5b83\u4ee5\u8868\u793a\u52a8\u753b\u3002\u8ba9\u6211\u4eec\u5f00\u59cb\u5427\u3002\u6211\u4eec\u8981\u505a\u7684\u7b2c\u4e00\u4ef6\u4e8b\u662f\u4fee\u6539 Texture \u7c7b\u6765\u6307\u5b9a\u7eb9\u7406\u96c6\u53ef\u4ee5\u62e5\u6709\u7684\u884c\u6570\u548c\u5217\u6570\u3002 package org.lwjglb.engine.graph; // .. \u8fd9\u91cc\u662f\u5bfc\u5165 public class Texture { // \u65e0\u5173\u5c5e\u6027\u7701\u7565 private int numRows = 1; private int numCols = 1; // \u65e0\u5173\u4ee3\u7801\u7701\u7565 public Texture(String fileName, int numCols, int numRows) throws Exception { this(fileName); this.numCols = numCols; this.numRows = numRows; } \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5904\u7406\u7684\u7eb9\u7406\u7684\u5217\u6570\u548c\u884c\u6570\u7b49\u4e8e1\u3002\u6211\u4eec\u8fd8\u6dfb\u52a0\u4e86\u53e6\u4e00\u4e2a\u6784\u9020\u51fd\u6570\u6765\u6307\u5b9a\u884c\u548c\u5217\u3002 \u7136\u540e\uff0c\u6211\u4eec\u9700\u8981\u8ffd\u8e2a\u4e00\u4e2a GameItem \u5728\u7eb9\u7406\u96c6\u4e2d\u7684\u5750\u6807\uff0c\u56e0\u6b64\u53ea\u9700\u5411\u8be5\u7c7b\u6dfb\u52a0\u53e6\u4e00\u4e2a\u5c5e\u6027\uff0c\u9ed8\u8ba4\u503c\u4e3a0\u3002 package org.lwjglb.engine.items; import org.joml.Vector3f; import org.lwjglb.engine.graph.Mesh; public class GameItem { // \u66f4\u591a\u5c5e\u6027\u7701\u7565 private int textPos; \u7136\u540e\u6211\u4eec\u4fee\u6539 Particle \u7c7b\uff0c\u4ee5\u4fbf\u80fd\u591f\u901a\u8fc7\u7eb9\u7406\u96c6\u81ea\u52a8\u8fed\u4ee3\u3002 package org.lwjglb.engine.graph.particles; import org.joml.Vector3f; import org.lwjglb.engine.graph.Mesh; import org.lwjglb.engine.graph.Texture; import org.lwjglb.engine.items.GameItem; public class Particle extends GameItem { private long updateTextureMillis; private long currentAnimTimeMillis; \u5c5e\u6027 updateTextureMillis \u5b9a\u4e49\u79fb\u52a8\u5230\u7eb9\u7406\u96c6\u4e2d\u4e0b\u4e00\u4e2a\u5750\u6807\u7684\u65f6\u95f4\uff08\u4ee5\u6beb\u79d2\u4e3a\u5355\u4f4d\uff09\u3002\u6570\u503c\u6708\u5e95\uff0c\u7c92\u5b50\u5728\u7eb9\u7406\u4e0a\u53d8\u5316\u7684\u901f\u5ea6\u5c31\u8d8a\u5feb\u3002\u5c5e\u6027 currentAnimTimeMillis \u53ea\u662f\u8ddf\u8e2a\u7eb9\u7406\u6301\u7eed\u5f53\u524d\u7eb9\u7406\u5750\u6807\u7684\u65f6\u95f4\u3002 \u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u4fee\u6539 Particle \u7c7b\u6784\u9020\u51fd\u6570\u6765\u8bbe\u7f6e\u8fd9\u4e9b\u503c\u3002\u6211\u4eec\u8fd8\u8ba1\u7b97\u4e86\u7eb9\u7406\u96c6\u7684\u7247\u6bb5\u6570\u91cf\uff0c\u5b83\u662f\u7531\u5c5e\u6027 animFrames \u5b9a\u4e49\u7684\u3002 public Particle(Mesh mesh, Vector3f speed, long ttl, long updateTextureMillis) { super(mesh); this.speed = new Vector3f(speed); this.ttl = ttl; this.updateTextureMills = updateTextureMills; this.currentAnimTimeMillis = 0; Texture texture = this.getMesh().getMaterial().getTexture(); this.animFrames = texture.getNumCols() * texture.getNumRows(); } \u73b0\u5728\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4fee\u6539\u68c0\u67e5\u7c92\u5b50\u662f\u5426\u5df2\u7ecf\u8fc7\u671f\u7684\u65b9\u6cd5\uff0c\u6765\u68c0\u67e5\u662f\u5426\u9700\u8981\u66f4\u65b0\u7eb9\u7406\u5750\u6807\u3002 public long updateTtl(long elapsedTime) { this.ttl -= elapsedTime; this.currentAnimTimeMillis += elapsedTime; if ( this.currentAnimTimeMillis >= this.getUpdateTextureMillis() && this.animFrames > 0 ) { this.currentAnimTimeMillis = 0; int pos = this.getTextPos(); pos++; if ( pos < this.animFrames ) { this.setTextPos(pos); } else { this.setTextPos(0); } } return this.ttl; } \u9664\u6b64\u4e4b\u5916\uff0c\u6211\u4eec\u8fd8\u4fee\u6539\u4e86 FlowRangeEmitter \u7c7b\uff0c\u5728\u5e94\u8be5\u6539\u53d8\u7c92\u5b50\u7eb9\u7406\u5750\u6807\u7684\u65f6\u95f4\u5468\u671f\u4e0a\u589e\u52a0\u4e86\u4e00\u4e9b\u968f\u673a\u6027\u3002\u4f60\u53ef\u4ee5\u5728\u6e90\u4ee3\u7801\u4e0a\u67e5\u770b\u5b83\u3002 \u73b0\u5728\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e9b\u6570\u636e\u6765\u8bbe\u7f6e\u5408\u9002\u7684\u7eb9\u7406\u5750\u6807\u3002\u6211\u4eec\u5c06\u5728\u9876\u70b9\u7740\u8272\u5668\u4e2d\u8fdb\u884c\u8fd9\u4e00\u64cd\u4f5c\uff0c\u56e0\u4e3a\u5b83\u8f93\u51fa\u4e86\u8981\u5728\u7247\u5143\u7740\u8272\u5668\u4e2d\u4f7f\u7528\u7684\u90a3\u4e9b\u503c\u3002\u8fd9\u4e2a\u65b0\u7740\u8272\u5668\u7684\u5b9a\u4e49\u5982\u4e0b\uff1a #version 330 layout (location=0) in vec3 position; layout (location=1) in vec2 texCoord; layout (location=2) in vec3 vertexNormal; out vec2 outTexCoord; uniform mat4 modelViewMatrix; uniform mat4 projectionMatrix; uniform float texXOffset; uniform float texYOffset; uniform int numCols; uniform int numRows; void main() { gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0); // Support for texture atlas, update texture coordinates float x = (texCoord.x / numCols + texXOffset); float y = (texCoord.y / numRows + texYOffset); outTexCoord = vec2(x, y); } \u5982\u4f60\u6240\u89c1\uff0c\u6211\u4eec\u73b0\u5728\u6709\u4e09\u4e2a\u65b0Uniform\u3002Uniform numCols \u548c numRows \u53ea\u50a8\u5b58\u7eb9\u7406\u96c6\u7684\u5217\u548c\u884c\u6570\u3002\u4e3a\u4e86\u8ba1\u7b97\u7eb9\u7406\u5750\u6807\uff0c\u9996\u5148\u5fc5\u987b\u7f29\u5c0f\u8fd9\u4e9b\u53c2\u6570\u3002\u6bcf\u4e2a\u7247\u6bb5\u7684\u5bbd\u5ea6\u4e3a 1 / numCols \uff0c\u9ad8\u5ea6\u4e3a 1 / numRows \uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002 \u7136\u540e\u6211\u4eec\u53ea\u9700\u8981\u6839\u636e\u884c\u548c\u5217\u5e94\u7528\u548c\u504f\u79fb\uff0c\u8fd9\u662f\u7531 texXOffset \u548c texYOffset Uniform\u5b9a\u4e49\u7684\u3002 \u6211\u4eec\u5c06\u5728 Renderer \u7c7b\u4e2d\u8ba1\u7b97\u8fd9\u4e9b\u504f\u79fb\u91cf\uff0c\u5982\u4e0b\u8ff0\u4ee3\u7801\u6240\u793a\u3002\u6211\u4eec\u6839\u636e\u6bcf\u4e2a\u7c92\u5b50\u7684\u5750\u6807\u8ba1\u7b97\u5b83\u4eec\u6240\u5904\u7684\u884c\u548c\u5217\uff0c\u5e76\u5c06\u504f\u79fb\u91cf\u8ba1\u7b97\u4e3a\u7247\u6bb5\u9ad8\u5ea6\u548c\u5bbd\u5ea6\u7684\u500d\u6570\u3002 mesh.renderList((emitter.getParticles()), (GameItem gameItem) -> { int col = gameItem.getTextPos() % text.getNumCols(); int row = gameItem.getTextPos() / text.getNumCols(); float textXOffset = (float) col / text.getNumCols(); float textYOffset = (float) row / text.getNumRows(); particlesShaderProgram.setUniform(\"texXOffset\", textXOffset); particlesShaderProgram.setUniform(\"texYOffset\", textYOffset); \u6ce8\u610f\uff0c\u5982\u679c\u4f60\u53ea\u9700\u8981\u652f\u6301\u6b63\u65b9\u5f62\u7eb9\u7406\u96c6\uff0c\u4f60\u53ea\u9700\u8981\u4e24\u4e2aUniform\u3002\u6700\u7ec8\u7684\u6548\u679c\u662f\u8fd9\u6837\u7684\uff1a \u73b0\u5728\uff0c\u6211\u4eec\u6709\u4e86\u7c92\u5b50\u52a8\u753b\u3002\u5728\u4e0b\u7ae0\u4e2d\uff0c\u6211\u4eec\u8bb2\u5b66\u4e60\u5982\u4f55\u4f18\u5316\u6e32\u67d3\u6d41\u7a0b\u3002\u6211\u4eec\u6b63\u5728\u6e32\u67d3\u5177\u6709\u76f8\u540c\u7f51\u683c\u7684\u591a\u4e2a\u5143\u7d20\uff0c\u5e76\u4e3a\u6bcf\u4e2a\u5143\u7d20\u8fdb\u884c\u7ed8\u5236\u8c03\u7528\u3002\u5728\u4e0b\u7ae0\u4e2d\uff0c\u6211\u4eec\u8bb2\u5b66\u4e60\u5982\u4f55\u5728\u5355\u4e2a\u8c03\u7528\u4e2d\u6e32\u67d3\u5b83\u4eec\u3002\u8fd9\u79cd\u6280\u672f\u4e0d\u4ec5\u9002\u7528\u4e8e\u7c92\u5b50\uff0c\u4e5f\u9002\u7528\u4e8e\u6e32\u67d3\u5171\u4eab\u540c\u4e00\u6a21\u578b\uff0c\u4f46\u88ab\u653e\u5728\u4e0d\u540c\u4f4d\u7f6e\u6216\u5177\u6709\u4e0d\u540c\u7eb9\u7406\u7684\u591a\u4e2a\u5143\u7d20\u7684\u573a\u666f\u3002","title":"\u7c92\u5b50"},{"location":"20-particles/#particles","text":"","title":"\u7c92\u5b50\uff08Particles\uff09"},{"location":"20-particles/#_1","text":"\u5728\u672c\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u6dfb\u52a0\u7c92\u5b50\u6548\u679c\u5230\u6e38\u620f\u5f15\u64ce\u4e2d\u3002\u6709\u4e86\u8fd9\u79cd\u6548\u679c\uff0c\u6211\u4eec\u5c31\u80fd\u6a21\u62df\u5173\u7cfb\u3001\u706b\u3001\u7070\u5c18\u548c\u4e91\u3002\u8fd9\u662f\u4e00\u79cd\u7b80\u5355\u7684\u6548\u679c\uff0c\u5c06\u6539\u5584\u5bf9\u4efb\u4f55\u6e38\u620f\u7684\u56fe\u5f62\u65b9\u9762\u3002 \u5728\u6b64\u4e4b\u524d\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0c\u6709\u5f88\u591a\u65b9\u6cd5\u53ef\u4ee5\u5b9e\u73b0\u4e0d\u540c\u6548\u679c\u7684\u7c92\u5b50\u6548\u679c\u3002\u5f53\u524d\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u9762\u677f\u7c92\u5b50\uff08Billboard Particle\uff09\u3002\u8be5\u6280\u672f\u4f7f\u7528\u79fb\u52a8\u7684\u7eb9\u7406\u56db\u8fb9\u5f62\u6765\u8868\u793a\u4e00\u4e2a\u7c92\u5b50\uff0c\u5b83\u4eec\u603b\u662f\u9762\u5411\u89c2\u5bdf\u8005\uff0c\u5728\u672c\u4f8b\u4e2d\uff0c\u5c31\u662f\u6444\u50cf\u673a\u3002\u4f60\u8fd8\u53ef\u4ee5\u4f7f\u7528\u9762\u677f\u6280\u672f\u5728\u6e38\u620f\u9879\u4e0a\u663e\u793a\u4fe1\u606f\u9762\u677f\uff0c\u6bd4\u5982\u8ff7\u4f60HUD\u3002 \u8ba9\u6211\u4eec\u5f00\u59cb\u5b9a\u4e49\u7c92\u5b50\uff0c\u7c92\u5b50\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u5c5e\u6027\u5b9a\u4e49\uff1a \u4e00\u4e2a\u7528\u4e8e\u8868\u793a\u56db\u8fb9\u5f62\u9876\u70b9\u7684\u7f51\u683c\u3002 \u4e00\u5f20\u7eb9\u7406\u3002 \u67d0\u4e00\u65f6\u523b\u7684\u5750\u6807\u3002 \u7f29\u653e\u7cfb\u6570\u3002 \u901f\u5ea6\u3002 \u79fb\u52a8\u65b9\u5411\u3002 \u751f\u5b58\u65f6\u95f4\u6216\u5b58\u6d3b\u65f6\u95f4\u3002\u4e00\u65e6\u8be5\u65f6\u95f4\u8fc7\u53bb\uff0c\u7c92\u5b50\u5c31\u4e0d\u518d\u5b58\u5728\u3002 \u524d\u56db\u9879\u662f GameItem \u7c7b\u7684\u4e00\u90e8\u5206\uff0c\u4f46\u540e\u4e09\u9879\u4e0d\u662f\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u8981\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a Particle \u7684\u65b0\u7c7b\uff0c\u5b83\u7ee7\u627f\u4e86 GameItem \u7c7b\uff0c\u5176\u5b9a\u4e49\u5982\u4e0b\uff1a package org.lwjglb.engine.graph.particles; import org.joml.Vector3f; import org.lwjglb.engine.graph.Mesh; import org.lwjglb.engine.items.GameItem; public class Particle extends GameItem { private Vector3f speed; /** * \u7c92\u5b50\u5b58\u6d3b\u7684\u65f6\u95f4\uff0c\u4ee5\u6beb\u79d2\u4e3a\u5355\u4f4d */ private long ttl; public Particle(Mesh mesh, Vector3f speed, long ttl) { super(mesh); this.speed = new Vector3f(speed); this.ttl = ttl; } public Particle(Particle baseParticle) { super(baseParticle.getMesh()); Vector3f aux = baseParticle.getPosition(); setPosition(aux.x, aux.y, aux.z); aux = baseParticle.getRotation(); setRotation(aux.x, aux.y, aux.z); setScale(baseParticle.getScale()); this.speed = new Vector3f(baseParticle.speed); this.ttl = baseParticle.geTtl(); } public Vector3f getSpeed() { return speed; } public void setSpeed(Vector3f speed) { this.speed = speed; } public long geTtl() { return ttl; } public void setTtl(long ttl) { this.ttl = ttl; } /** * \u66f4\u65b0\u7c92\u5b50\u7684\u5b58\u6d3b\u65f6\u95f4 * @param elapsedTime \u7ecf\u8fc7\u7684\u65f6\u95f4\uff08\u6beb\u79d2\uff09 * @return \u7c92\u5b50\u7684\u5b58\u6d3b\u65f6\u95f4 */ public long updateTtl(long elapsedTime) { this.ttl -= elapsedTime; return this.ttl; } } \u4ece\u4e0a\u8ff0\u4ee3\u7801\u53ef\u4ee5\u770b\u51fa\uff0c\u7c92\u5b50\u7684\u901f\u5ea6\u548c\u8fd0\u52a8\u65b9\u5411\u53ef\u4ee5\u8868\u793a\u4e3a\u4e00\u4e2a\u5411\u91cf\u3002\u8be5\u5411\u91cf\u7684\u65b9\u5411\u51b3\u5b9a\u4e86\u7c92\u5b50\u7684\u8fd0\u52a8\u65b9\u5411\u548c\u901f\u5ea6\u3002\u7c92\u5b50\u5b58\u6d3b\u65f6\u95f4\uff08TTL\uff09\u88ab\u8bbe\u5b9a\u4e3a\u6beb\u79d2\u8ba1\u6570\u5668\uff0c\u6bcf\u5f53\u66f4\u65b0\u6e38\u620f\u72b6\u6001\u65f6\uff0c\u5b83\u90fd\u4f1a\u51cf\u5c11\u3002\u8be5\u7c7b\u8fd8\u6709\u4e00\u4e2a\u590d\u5236\u6784\u9020\u51fd\u6570\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u4e00\u4e2a\u6784\u9020\u51fd\u6570\u63a5\u6536\u53e6\u4e00\u4e2a\u7c92\u5b50\u5b9e\u4f8b\u6765\u8fdb\u884c\u590d\u5236\u3002 \u73b0\u5728\uff0c\u6211\u4eec\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u7c92\u5b50\u751f\u6210\u5668\u6216\u7c92\u5b50\u53d1\u5c04\u5668\uff0c\u5373\u4e00\u4e2a\u52a8\u6001\u751f\u6210\u7c92\u5b50\u3001\u63a7\u5236\u5176\u751f\u547d\u5468\u671f\u5e76\u6839\u636e\u7279\u5b9a\u7684\u6a21\u5f0f\u66f4\u65b0\u5176\u4f4d\u7f6e\u7684\u7c7b\u3002\u6211\u4eec\u53ef\u4ee5\u521b\u5efa\u5f88\u591a\u5b9e\u73b0\uff0c\u5b83\u4eec\u5728\u7c92\u5b50\u7684\u521b\u5efa\u65b9\u5f0f\u548c\u4f4d\u7f6e\u7684\u66f4\u65b0\u65b9\u5f0f\uff08\u4f8b\u5982\uff0c\u662f\u5426\u8003\u8651\u91cd\u529b\uff09\u65b9\u9762\u5404\u4e0d\u76f8\u540c\u3002\u56e0\u6b64\uff0c\u4e3a\u4e86\u4fdd\u6301\u6e38\u620f\u5f15\u64ce\u7684\u901a\u7528\u6027\uff0c\u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a\u6240\u6709\u7c92\u5b50\u53d1\u5c04\u5668\u5fc5\u987b\u8981\u5b9e\u73b0\u7684\u63a5\u53e3\u3002\u8fd9\u4e2a\u540d\u4e3a IParticleEmitter \u7684\u63a5\u53e3\u5b9a\u4e49\u5982\u4e0b\uff1a package org.lwjglb.engine.graph.particles; import java.util.List; import org.lwjglb.engine.items.GameItem; public interface IParticleEmitter { void cleanup(); Particle getBaseParticle(); List<GameItem> getParticles(); } IParticleEmitter \u63a5\u53e3\u6709\u4e00\u4e2a\u6e05\u7406\u8d44\u6e90\u7684\u65b9\u6cd5\uff0c\u540d\u4e3a cleanup \uff0c\u8fd8\u6709\u4e00\u4e2a\u83b7\u53d6\u7c92\u5b50\u5217\u8868\u7684\u65b9\u6cd5\uff0c\u540d\u4e3a getParticles \u3002\u8fd8\u6709\u4e00\u4e2a\u540d\u4e3a getBaseParticle \u7684\u65b9\u6cd5\uff0c\u4f46\u662f\u8fd9\u4e2a\u65b9\u6cd5\u662f\u505a\u4ec0\u4e48\u7684\u5462\uff1f\u4e00\u4e2a\u7c92\u5b50\u53d1\u5c04\u5668\u5c06\u52a8\u6001\u5730\u4ea7\u751f\u8bb8\u591a\u4f8b\u5b50\u3002\u6bcf\u5f53\u4e00\u4e2a\u7c92\u5b50\u8fc7\u671f\uff0c\u5c31\u4f1a\u521b\u5efa\u65b0\u7684\u7c92\u5b50\u3002\u8be5\u7c92\u5b50\u66f4\u65b0\u5468\u671f\u5c06\u4f7f\u7528\u57fa\u7840\u7c92\u5b50\u4f5c\u4e3a\u6a21\u677f\u521b\u5efa\u65b0\u7684\u52bf\u529b\u3002\u8fd9\u5c31\u662f\u57fa\u7840\u7c92\u5b50\u7684\u7528\u9014\uff0c\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48 Particle \u7c7b\u5b9a\u4e49\u4e86\u4e00\u4e2a\u590d\u5236\u6784\u9020\u51fd\u6570\u3002 \u5728\u6e38\u620f\u5f15\u64ce\u7684\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u5c06\u53ea\u5f15\u7528 IParticleEmitter \u63a5\u53e3\uff0c\u56e0\u6b64\u57fa\u7840\u4ee3\u7801\u5c06\u4e0d\u4f9d\u8d56\u4e8e\u7279\u5b9a\u7684\u5b9e\u73b0\u3002\u4e0d\u8fc7\uff0c\u6211\u4eec\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u5b9e\u73b0\u6765\u6a21\u62df\u4e0d\u53d7\u91cd\u529b\u5f71\u54cd\u7684\u7c92\u5b50\u6d41\u3002\u8fd9\u4e2a\u5b9e\u73b0\u53ef\u4ee5\u7528\u6765\u6a21\u62df\u5149\u7ebf\u6216\u706b\u7130\uff0c\u540d\u4e3a FlowParticleEmitter \u3002 \u8fd9\u4e2a\u7c7b\u7684\u884c\u4e3a\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u5c5e\u6027\u8fdb\u884c\u8c03\u6574\uff1a \u4e00\u6b21\u80fd\u5b58\u5728\u7684\u6700\u5927\u7c92\u5b50\u6570\u91cf \u521b\u5efa\u7c92\u5b50\u7684\u6700\u77ed\u5468\u671f\u3002\u7c92\u5b50\u5c06\u5728\u6700\u77ed\u7684\u65f6\u95f4\u5185\u4e00\u4e2a\u63a5\u4e00\u4e2a\u5730\u521b\u5efa\uff0c\u4ee5\u907f\u514d\u7c92\u5b50\u7206\u53d1\u6027\u521b\u5efa\u3002 \u4e00\u7ec4\u8303\u56f4\uff0c\u4ee5\u968f\u673a\u7c92\u5b50\u901f\u5ea6\u548c\u4f4d\u7f6e\u3002\u65b0\u7c92\u5b50\u5c06\u4f7f\u7528\u57fa\u7840\u7c92\u5b50\u7684\u4f4d\u7f6e\u548c\u901f\u5ea6\uff0c\u53ef\u4ee5\u5728\u76f8\u5e94\u8303\u56f4\u5185\u53d6\u503c\uff0c\u4ee5\u5206\u6563\u5149\u7ebf\u3002 \u8be5\u7c7b\u7684\u5b9e\u73b0\u5982\u4e0b\uff1a package org.lwjglb.engine.graph.particles; import java.util.ArrayList; import java.util.Iterator; import java.util.List; import org.joml.Vector3f; import org.lwjglb.engine.items.GameItem; public class FlowParticleEmitter implements IParticleEmitter { private int maxParticles; private boolean active; private final List<GameItem> particles; private final Particle baseParticle; private long creationPeriodMillis; private long lastCreationTime; private float speedRndRange; private float positionRndRange; private float scaleRndRange; public FlowParticleEmitter(Particle baseParticle, int maxParticles, long creationPeriodMillis) { particles = new ArrayList<>(); this.baseParticle = baseParticle; this.maxParticles = maxParticles; this.active = false; this.lastCreationTime = 0; this.creationPeriodMillis = creationPeriodMillis; } @Override public Particle getBaseParticle() { return baseParticle; } public long getCreationPeriodMillis() { return creationPeriodMillis; } public int getMaxParticles() { return maxParticles; } @Override public List<GameItem> getParticles() { return particles; } public float getPositionRndRange() { return positionRndRange; } public float getScaleRndRange() { return scaleRndRange; } public float getSpeedRndRange() { return speedRndRange; } public void setCreationPeriodMillis(long creationPeriodMillis) { this.creationPeriodMillis = creationPeriodMillis; } public void setMaxParticles(int maxParticles) { this.maxParticles = maxParticles; } public void setPositionRndRange(float positionRndRange) { this.positionRndRange = positionRndRange; } public void setScaleRndRange(float scaleRndRange) { this.scaleRndRange = scaleRndRange; } public boolean isActive() { return active; } public void setActive(boolean active) { this.active = active; } public void setSpeedRndRange(float speedRndRange) { this.speedRndRange = speedRndRange; } public void update(long ellapsedTime) { long now = System.currentTimeMillis(); if (lastCreationTime == 0) { lastCreationTime = now; } Iterator<? extends GameItem> it = particles.iterator(); while (it.hasNext()) { Particle particle = (Particle) it.next(); if (particle.updateTtl(ellapsedTime) < 0) { it.remove(); } else { updatePosition(particle, ellapsedTime); } } int length = this.getParticles().size(); if (now - lastCreationTime >= this.creationPeriodMillis && length < maxParticles) { createParticle(); this.lastCreationTime = now; } } private void createParticle() { Particle particle = new Particle(this.getBaseParticle()); // \u6dfb\u52a0\u4e00\u4e9b\u968f\u673a\u7684\u7c92\u5b50 float sign = Math.random() > 0.5d ? -1.0f : 1.0f; float speedInc = sign * (float)Math.random() * this.speedRndRange; float posInc = sign * (float)Math.random() * this.positionRndRange; float scaleInc = sign * (float)Math.random() * this.scaleRndRange; particle.getPosition().add(posInc, posInc, posInc); particle.getSpeed().add(speedInc, speedInc, speedInc); particle.setScale(particle.getScale() + scaleInc); particles.add(particle); } /** * \u66f4\u65b0\u4e00\u4e2a\u7c92\u5b50\u7684\u4f4d\u7f6e * @param particle \u9700\u8981\u66f4\u65b0\u7684\u7c92\u5b50 * @param elapsedTime \u5df2\u7ecf\u8fc7\u7684\u65f6\u95f4\uff08\u6beb\u79d2\uff09 */ public void updatePosition(Particle particle, long elapsedTime) { Vector3f speed = particle.getSpeed(); float delta = elapsedTime / 1000.0f; float dx = speed.x * delta; float dy = speed.y * delta; float dz = speed.z * delta; Vector3f pos = particle.getPosition(); particle.setPosition(pos.x + dx, pos.y + dy, pos.z + dz); } @Override public void cleanup() { for (GameItem particle : getParticles()) { particle.cleanup(); } } } \u73b0\u5728\uff0c\u6211\u4eec\u53ef\u4ee5\u62d3\u5c55 Scene \u7c7b\u4e2d\u5305\u542b\u7684\u6570\u636e\uff0c\u4f7f\u5176\u5305\u542b\u4e00\u4e2a ParticleEmitter \u7684\u5b9e\u4f8b\u6570\u7ec4\u3002 package org.lwjglb.engine; // \u8fd9\u662f\u5bfc\u5165\u2026\u2026 public class Scene { // \u8fd9\u6709\u66f4\u591a\u5c5e\u6027\u2026\u2026 private IParticleEmitter[] particleEmitters; \u5728\u8be5\u9636\u6bb5\uff0c\u6211\u4eec\u53ef\u4ee5\u5f00\u59cb\u6e32\u67d3\u7c92\u5b50\u3002\u7c92\u5b50\u4e0d\u4f1a\u53d7\u5230\u5149\u7684\u5f71\u54cd\uff0c\u4e5f\u4e0d\u4f1a\u4ea7\u751f\u4efb\u4f55\u97f3\u4e50\u3002\u5b83\u4eec\u4e0d\u4f1a\u6709\u4efb\u4f55\u9aa8\u9abc\u52a8\u753b\uff0c\u6240\u4ee5\u7528\u7279\u5b9a\u7684\u7740\u8272\u5668\u6e32\u67d3\u5b83\u4eec\u662f\u6ca1\u6709\u610f\u4e49\u7684\u3002\u7740\u8272\u5668\u975e\u5e38\u7b80\u5355\uff0c\u5b83\u4eec\u53ea\u4f1a\u4f7f\u7528\u6295\u5f71\u548c\u6a21\u578b\u89c2\u5bdf\u77e9\u9635\u6e32\u67d3\u9876\u70b9\uff0c\u5e76\u4f7f\u7528\u7eb9\u7406\u8bbe\u7f6e\u989c\u8272\u3002 \u9876\u70b9\u7740\u8272\u5668\u7684\u5b9a\u4e49\u5982\u4e0b\uff1a #version 330 layout (location=0) in vec3 position; layout (location=1) in vec2 texCoord; layout (location=2) in vec3 vertexNormal; out vec2 outTexCoord; uniform mat4 modelViewMatrix; uniform mat4 projectionMatrix; void main() { gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0); outTexCoord = texCoord; } \u7247\u5143\u7740\u8272\u5668\u7684\u5b9a\u4e49\u5982\u4e0b\uff1a #version 330 in vec2 outTexCoord; in vec3 mvPos; out vec4 fragColor; uniform sampler2D texture_sampler; void main() { fragColor = texture(texture_sampler, outTexCoord); } \u5982\u4f60\u6240\u89c1\uff0c\u5b83\u4eec\u975e\u5e38\u7b80\u5355\uff0c\u5c31\u50cf\u6e32\u67d3\u4e00\u7ae0\u4e2d\u4f7f\u7528\u7684\u7740\u8272\u5668\u3002\u73b0\u5728\uff0c\u548c\u5176\u4ed6\u7ae0\u8282\u4e00\u6837\uff0c\u6211\u4eec\u9700\u8981\u5728 Renderer \u7c7b\u4e2d\u8bbe\u7f6e\u548c\u4f7f\u7528\u8fd9\u4e9b\u7740\u8272\u5668\u3002\u7740\u8272\u5668\u7684\u8bbe\u7f6e\u5c06\u5728\u4e00\u4e2a\u540d\u4e3a setupParticlesShader \u7684\u65b9\u6cd5\u4e2d\u5b8c\u6210\uff0c\u5176\u5b9a\u4e49\u5982\u4e0b\uff1a private void setupParticlesShader() throws Exception { particlesShaderProgram = new ShaderProgram(); particlesShaderProgram.createVertexShader(Utils.loadResource(\"/shaders/particles_vertex.vs\")); particlesShaderProgram.createFragmentShader(Utils.loadResource(\"/shaders/particles_fragment.fs\")); particlesShaderProgram.link(); particlesShaderProgram.createUniform(\"projectionMatrix\"); particlesShaderProgram.createUniform(\"modelViewMatrix\"); particlesShaderProgram.createUniform(\"texture_sampler\"); } \u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u5728Renderer\u7c7b\u4e2d\u521b\u5efa\u6e32\u67d3\u65b9\u6cd5 renderParticles \uff0c\u5b9a\u4e49\u5982\u4e0b\uff1a private void renderParticles(Window window, Camera camera, Scene scene) { particlesShaderProgram.bind(); particlesShaderProgram.setUniform(\"texture_sampler\", 0); Matrix4f projectionMatrix = transformation.getProjectionMatrix(); particlesShaderProgram.setUniform(\"projectionMatrix\", projectionMatrix); Matrix4f viewMatrix = transformation.getViewMatrix(); IParticleEmitter[] emitters = scene.getParticleEmitters(); int numEmitters = emitters != null ? emitters.length : 0; for (int i = 0; i < numEmitters; i++) { IParticleEmitter emitter = emitters[i]; Mesh mesh = emitter.getBaseParticle().getMesh(); mesh.renderList((emitter.getParticles()), (GameItem gameItem) -> { Matrix4f modelViewMatrix = transformation.buildModelViewMatrix(gameItem, viewMatrix); particlesShaderProgram.setUniform(\"modelViewMatrix\", modelViewMatrix); } ); } particlesShaderProgram.unbind(); } \u5982\u679c\u4f60\u52aa\u529b\u9605\u8bfb\uff0c\u4e0a\u8ff0\u4ee3\u7801\u5e94\u8be5\u662f\u4e0d\u8a00\u81ea\u660e\u7684\uff0c\u5b83\u53ea\u662f\u8bbe\u7f6e\u5fc5\u8981\u7684Uniform\uff0c\u5e76\u6e32\u67d3\u6bcf\u4e2a\u7c92\u5b50\u3002\u73b0\u5728\uff0c\u6211\u4eec\u5df2\u7ecf\u521b\u5efa\u4e86\u6d4b\u8bd5\u7c92\u5b50\u6548\u679c\u5b9e\u73b0\u6240\u9700\u7684\u6240\u6709\u65b9\u6cd5\uff0c\u53ea\u9700\u8981\u4fee\u6539 DummyGame \u7c7b\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u521b\u5efa\u7c92\u5b50\u53d1\u5c04\u5668\u548c\u57fa\u672c\u7c92\u5b50\u7684\u7279\u6027\u3002 Vector3f particleSpeed = new Vector3f(0, 1, 0); particleSpeed.mul(2.5f); long ttl = 4000; int maxParticles = 200; long creationPeriodMillis = 300; float range = 0.2f; float scale = 0.5f; Mesh partMesh = OBJLoader.loadMesh(\"/models/particle.obj\"); Texture texture = new Texture(\"/textures/particle_tmp.png\"); Material partMaterial = new Material(texture, reflectance); partMesh.setMaterial(partMaterial); Particle particle = new Particle(partMesh, particleSpeed, ttl); particle.setScale(scale); particleEmitter = new FlowParticleEmitter(particle, maxParticles, creationPeriodMillis); particleEmitter.setActive(true); particleEmitter.setPositionRndRange(range); particleEmitter.setSpeedRndRange(range); this.scene.setParticleEmitters(new FlowParticleEmitter[] {particleEmitter}); \u6211\u4eec\u73b0\u5728\u4f7f\u7528\u4e00\u4e2a\u666e\u901a\u586b\u5145\u5706\u4f5c\u4e3a\u7c92\u5b50\u7684\u7eb9\u7406\uff0c\u4ee5\u4fbf\u66f4\u597d\u5730\u7406\u89e3\u53d1\u751f\u4e86\u4ec0\u4e48\u3002\u5982\u679c\u4f60\u8fd0\u884c\u5b83\uff0c\u4f60\u4f1a\u770b\u5230\u5982\u4e0b\u6240\u793a\u7684\u4e1c\u897f\uff1a \u4e3a\u4ec0\u4e48\u4e00\u4e9b\u7c92\u5b50\u4f3c\u4e4e\u88ab\u5207\u65ad\u4e86\uff1f\u4e3a\u4ec0\u4e48\u900f\u660e\u7684\u80cc\u666f\u4e0d\u80fd\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff1f\u539f\u56e0\u662f\u6df1\u5ea6\u6d4b\u8bd5\u3002\u7c92\u5b50\u7684\u4e00\u4e9b\u7247\u5143\u88ab\u4e22\u5f03\uff0c\u56e0\u4e3a\u5b83\u4eec\u5177\u6709\u6bd4\u8be5\u533a\u57df\u7684\u6df1\u5ea6\u7f13\u51b2\u7684\u5f53\u524d\u503c\u9ad8\u7684\u6df1\u5ea6\u503c\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5c06\u5176\u4e0e\u6444\u50cf\u673a\u4e4b\u95f4\u7684\u8ddd\u79bb\u6765\u6392\u5e8f\u7c92\u5b50\u4ee5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6216\u8005\u6211\u4eec\u53ef\u4ee5\u7981\u7528\u6df1\u5ea6\u5199\u5165\u3002 \u5728\u7ed8\u5236\u7c92\u5b50\u4e4b\u524d\u6211\u4eec\u9700\u8981\u63d2\u5165\u8fd9\u4e00\u884c\u4ee3\u7801\uff1a glDepthMask(false); \u7136\u540e\u5728\u6211\u4eec\u5b8c\u6210\u6e32\u67d3\u4e4b\u540e\u8fd8\u539f\u4e3a\u5148\u524d\u503c\uff1a glDepthMask(true); \u7136\u540e\u6211\u4eec\u4f1a\u5f97\u5230\u5982\u4e0b\u6240\u793a\u7684\u4e1c\u897f\uff1a \u597d\u4e86\uff0c\u95ee\u9898\u89e3\u51b3\u3002\u7136\u800c\uff0c\u6211\u4eec\u4ecd\u60f3\u5e94\u7528\u53e6\u4e00\u79cd\u6548\u679c\uff0c\u6211\u4eec\u5e0c\u671b\u989c\u8272\u88ab\u6df7\u5408\uff0c\u56e0\u6b64\u989c\u8272\u5c06\u88ab\u6dfb\u52a0\uff0c\u4ee5\u8fbe\u6210\u66f4\u597d\u7684\u6548\u679c\u3002\u8fd9\u662f\u5728\u6e32\u67d3\u524d\u589e\u52a0\u5982\u4e0b\u4e00\u884c\u4ee3\u7801\u6765\u5b9e\u73b0\u7684\uff1a glBlendFunc(GL_SRC_ALPHA, GL_ONE); \u4e0e\u6df1\u5ea6\u7684\u60c5\u51b5\u4e00\u6837\uff0c\u6e32\u67d3\u5b8c\u6240\u6709\u7c92\u5b50\u540e\uff0c\u6211\u4eec\u5c06\u6df7\u5408\u51fd\u6570\u6062\u590d\u4e3a\uff1a glBlendFunc(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA); \u73b0\u5728\u6211\u4eec\u5f97\u5230\u8fd9\u6837\u7684\u6548\u679c\uff1a \u4f46\u6211\u4eec\u8fd8\u6ca1\u6709\u5b8c\u6210\u5b83\u3002\u5982\u679c\u4f60\u628a\u6444\u50cf\u673a\u79fb\u5230\u84dd\u8272\u6b63\u65b9\u5f62\u7684\u4e0a\u65b9\u5f80\u4e0b\u770b\uff0c\u4f60\u53ef\u80fd\u4f1a\u5f97\u5230\u8fd9\u6837\u7684\u4e1c\u897f\uff1a \u8fd9\u4e9b\u7c92\u5b50\u770b\u8d77\u6765\u4e0d\u592a\u597d\uff0c\u5b83\u4eec\u5e94\u8be5\u662f\u5706\u7684\uff0c\u4f46\u73b0\u5728\u770b\u8d77\u6765\u50cf\u4e00\u5f20\u7eb8\u3002\u5728\u6b64\u4e4b\u4e0a\uff0c\u6211\u4eec\u5e94\u8be5\u5e94\u7528\u9762\u677f\u6280\u672f\u3002\u7528\u4e8e\u6e32\u67d3\u7c92\u5b50\u7684\u56db\u8fb9\u5f62\u5e94\u8be5\u59cb\u7ec8\u9762\u5411\u6444\u50cf\u673a\uff0c\u4e0e\u6444\u50cf\u673a\u65b9\u5411\u5b8c\u5168\u5782\u76f4\uff0c\u5c31\u597d\u50cf\u6839\u672c\u6ca1\u6709\u65cb\u8f6c\u4e00\u6837\u3002\u6444\u50cf\u673a\u7684\u77e9\u9635\u5c06\u4f4d\u79fb\u548c\u65cb\u8f6c\u5e94\u7528\u4e8e\u573a\u666f\u4e2d\u7684\u6bcf\u4e00\u4e2a\u5bf9\u8c61\uff0c\u6211\u4eec\u60f3\u8df3\u8fc7\u5c06\u8981\u5e94\u7528\u7684\u65cb\u8f6c\u3002 \u8b66\u544a\uff1a\u5728\u8bb2\u6570\u5b66\u77e5\u8bc6\u65f6\uff0c\u5982\u679c\u4f60\u89c9\u5f97\u4e0d\u8212\u670d\uff0c\u4f60\u53ef\u4ee5\u8df3\u8fc7\u5b83\u3002\u8ba9\u6211\u4eec\u518d\u6b21\u56de\u987e\u90a3\u4e2a\u89c2\u5bdf\u77e9\u9635\u3002\u8be5\u77e9\u9635\u53ef\u4ee5\u50cf\u8fd9\u6837\u8868\u793a\uff08\u6ca1\u6709\u5e94\u7528\u4efb\u4f55\u7f29\u653e\uff09\u3002 <script type=\"math/tex; mode=display\">\\begin{bmatrix} \\color{red}{r_{00}} & \\color{red}{r_{10}} & \\color{red}{r_{20}} & \\color{blue}{dx} \\\\ \\color{red}{r_{01}} & \\color{red}{r_{11}} & \\color{red}{r_{21}} & \\color{blue}{dy} \\\\ \\color{red}{r_{02}} & \\color{red}{r_{12}} & \\color{red}{r_{22}} & \\color{blue}{dz} \\\\ 0 & 0 & 0 & 1 \\end{bmatrix} \u7ea2\u8272\u7684\u5143\u7d20\u4ee3\u8868\u6444\u50cf\u673a\u7684\u65cb\u8f6c\uff0c\u84dd\u8272\u7684\u5143\u7d20\u4ee3\u8868\u4f4d\u79fb\u3002\u6211\u4eec\u9700\u8981\u53d6\u6d88\u89c2\u5bdf\u77e9\u9635\u4e2d\u7684\u5de6\u4e0a\u89d23x3\u77e9\u9635\u7684\u65cb\u8f6c\u6548\u679c\uff0c\u6240\u4ee5\u5b83\u4f1a\u53d8\u6210\u8fd9\u6837\uff1a <script type=\"math/tex; mode=display\">\\begin{bmatrix} \\color{red}{1} & \\color{red}{0} & \\color{red}{0} & \\color{blue}{dx} \\\\ \\color{red}{0} & \\color{red}{1} & \\color{red}{0} & \\color{blue}{dy} \\\\ \\color{red}{0} & \\color{red}{0} & \\color{red}{1} & \\color{blue}{dz} \\\\ 0 & 0 & 0 & 1 \\end{bmatrix} \u5728\u5de6\u4e0a\u89d2\u7684\u7ea2\u8272\u90e8\u5206\uff0c\u6211\u4eec\u6709\u4e00\u4e2a3x3\u77e9\u9635\uff0c\u628a\u5b83\u547d\u540d\u4e3a M_{r} \u5e76\u4e14\u6211\u4eec\u60f3\u628a\u5b83\u8f6c\u6362\u6210\u5355\u4f4d\u77e9\u9635\uff1a I \u3002\u4efb\u4f55\u77e9\u9635\u4e58\u4ee5\u5b83\u7684\u9006\u77e9\u9635\u90fd\u4f1a\u5f97\u5230\u5355\u4f4d\u77e9\u9635\uff1a M_{r} \\times M_{r}^{-1} = I \u3002\u6211\u4eec\u53ea\u9700\u8981\u4ece\u89c2\u5bdf\u77e9\u9635\u4e2d\u53d6\u5de6\u4e0a\u89d2\u76843x3\u77e9\u9635\uff0c\u7136\u540e\u4e58\u4ee5\u5b83\u7684\u9006\u77e9\u9635\uff0c\u4f46\u662f\u8fd8\u53ef\u4ee5\u4f18\u5316\u4ed6\u3002\u4e00\u4e2a\u65cb\u8f6c\u77e9\u9635\u6709\u4e00\u4e2a\u6709\u8da3\u7684\u5b9a\u7406\uff0c\u5b83\u7684\u9006\u77e9\u9635\u4e0e\u5176\u8f6c\u7f6e\u77e9\u9635\u76f8\u7b49\u3002\u5373\uff1a M_{r} \\times M_{r}^{-1} = M_{r} \\times M_{r}^{T} = I \u3002\u8f6c\u7f6e\u77e9\u9635\u6bd4\u9006\u77e9\u9635\u66f4\u5bb9\u6613\u8ba1\u7b97\u3002\u77e9\u9635\u7684\u8f6c\u7f6e\u5c31\u50cf\u5c06\u5176\u53cd\u8f6c\u8fc7\u6765\uff0c\u5c06\u6bcf\u4e00\u5217\u4e0e\u6bcf\u4e00\u884c\u66ff\u6362\u3002 <script type=\"math/tex; mode=display\">\\begin{bmatrix} r_{00} & r_{10} & r_{20} \\\\ r_{01} & r_{11} & r_{21} \\\\ r_{02} & r_{12} & r_{22} \\end{bmatrix} ^{T} = \\begin{bmatrix} r_{00} & r_{01} & r_{02} \\\\ r_{10} & r_{11} & r_{12} \\\\ r_{20} & r_{21} & r_{22} \\end{bmatrix} \u597d\u7684\uff0c\u8ba9\u6211\u4eec\u603b\u7ed3\u4e00\u4e0b\u3002\u6211\u4eec\u6709\u8be5\u53d8\u6362\uff1a V \\times M \uff0c\u5176\u4e2d V \u662f\u89c2\u5bdf\u77e9\u9635\uff0c M \u662f\u6a21\u578b\u77e9\u9635\u3002\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u8868\u8fbe\uff1a <script type=\"math/tex; mode=display\">\\begin{bmatrix} \\color{red}{v_{00}} & \\color{red}{v_{10}} & \\color{red}{v_{20}} & v_{30} \\\\ \\color{red}{v_{01}} & \\color{red}{v_{11}} & \\color{red}{v_{21}} & v_{31} \\\\ \\color{red}{v_{02}} & \\color{red}{v_{12}} & \\color{red}{v_{22}} & v_{32} \\\\ v_{03} & v_{13} & v_{23} & v_{33} \\end{bmatrix} \\times \\begin{bmatrix} \\color{red}{m_{00}} & \\color{red}{m_{10}} & \\color{red}{m_{20}} & m_{30} \\\\ \\color{red}{m_{01}} & \\color{red}{m_{11}} & \\color{red}{m_{21}} & m_{31} \\\\ \\color{red}{m_{02}} & \\color{red}{m_{12}} & \\color{red}{m_{22}} & m_{32} \\\\ m_{03} & m_{13} & m_{23} & m_{33} \\end{bmatrix} \u6211\u4eec\u60f3\u8981\u53d6\u6d88\u89c2\u5bdf\u77e9\u9635\u7684\u65cb\u8f6c\uff0c\u5f97\u5230\u8fd9\u6837\u7684\u7ed3\u679c\uff1a <script type=\"math/tex; mode=display\">\\begin{bmatrix} \\color{red}{1} & \\color{red}{0} & \\color{red}{0} & mv_{30} \\\\ \\color{red}{0} & \\color{red}{1} & \\color{red}{0} & mv_{31} \\\\ \\color{red}{0} & \\color{red}{0} & \\color{red}{1} & mv_{32} \\\\ mv_{03} & mv_{13} & mv_{23} & mv_{33} \\end{bmatrix} \u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u5c06\u6a21\u578b\u77e9\u9635\u7684\u5de6\u4e0a3x3\u77e9\u9635\u8bbe\u4e3a\u89c2\u5bdf\u77e9\u9635\u4e0a3x3\u90e8\u5206\u7684\u8f6c\u7f6e\u77e9\u9635\u3002 <script type=\"math/tex; mode=display\">\\begin{bmatrix} \\color{red}{v_{00}} & \\color{red}{v_{10}} & \\color{red}{v_{20}} & v_{30} \\\\ \\color{red}{v_{01}} & \\color{red}{v_{11}} & \\color{red}{v_{21}} & v_{31} \\\\ \\color{red}{v_{02}} & \\color{red}{v_{12}} & \\color{red}{v_{22}} & v_{32} \\\\ v_{03} & v_{13} & v_{23} & v_{33} \\end{bmatrix} \\times \\begin{bmatrix} \\color{red}{v_{00}} & \\color{red}{v_{01}} & \\color{red}{v_{02}} & m_{30} \\\\ \\color{red}{v_{10}} & \\color{red}{v_{11}} & \\color{red}{v_{12}} & m_{31} \\\\ \\color{red}{v_{20}} & \\color{red}{v_{21}} & \\color{red}{v_{22}} & m_{32} \\\\ m_{03} & m_{13} & m_{23} & m_{33} \\end{bmatrix} \u4f46\u5728\u8fd9\u4e4b\u540e\uff0c\u6211\u4eec\u53bb\u6389\u4e86\u7f29\u653e\uff0c\u5b9e\u9645\u4e0a\u771f\u6b63\u60f3\u8981\u8fbe\u5230\u7684\u7ed3\u679c\u662f\u8fd9\u6837\uff1a <script type=\"math/tex; mode=display\">\\begin{bmatrix} \\color{red}{sx} & \\color{red}{0} & \\color{red}{0} & mv_{30} \\\\ \\color{red}{0} & \\color{red}{sy} & \\color{red}{0} & mv_{31} \\\\ \\color{red}{0} & \\color{red}{0} & \\color{red}{sz} & mv_{32} \\\\ mv_{03} & mv_{13} & mv_{23} & mv_{33} \\end{bmatrix} \u5176\u4e2dsx\uff0csy\u548csz\u5c31\u662f\u7f29\u653e\u7cfb\u6570\u3002\u56e0\u6b64\uff0c\u5f53\u6211\u4eec\u5c06\u6a21\u578b\u77e9\u9635\u7684\u5de6\u4e0a3x3\u77e9\u9635\u8bbe\u7f6e\u4e3a\u89c2\u5bdf\u77e9\u9635\u7684\u8f6c\u7f6e\u77e9\u9635\u540e\uff0c\u6211\u4eec\u9700\u8981\u518d\u6b21\u5e94\u7528\u7f29\u653e\u3002 \u5c31\u8fd9\u4e9b\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5728 renderParticlesMethod \u4e2d\u50cf\u8fd9\u6837\u4fee\u6539\uff1a for (int i = 0; i < numEmitters; i++) { IParticleEmitter emitter = emitters[i]; Mesh mesh = emitter.getBaseParticle().getMesh(); mesh.renderList((emitter.getParticles()), (GameItem gameItem) -> { Matrix4f modelMatrix = transformation.buildModelMatrix(gameItem); viewMatrix.transpose3x3(modelMatrix); Matrix4f modelViewMatrix = transformation.buildModelViewMatrix(modelMatrix, viewMatrix); modelViewMatrix.scale(gameItem.getScale()); particlesShaderProgram.setUniform(\"modelViewMatrix\", modelViewMatrix); } ); } \u6211\u4eec\u8fd8\u5728 Transformation \u7c7b\u4e2d\u6dfb\u52a0\u4e86\u53e6\u4e00\u79cd\u65b9\u6cd5\uff0c\u4f7f\u7528\u4e24\u4e2a\u77e9\u9635\u6765\u6784\u9020\u6a21\u578b\u89c2\u5bdf\u77e9\u9635\uff0c\u800c\u4e0d\u662f\u4f7f\u7528 GameItem \u548c\u89c2\u5bdf\u77e9\u9635\u3002 \u6709\u4e86\u5982\u4e0a\u66f4\u6539\uff0c\u5f53\u4ece\u4e0a\u65b9\u89c2\u5bdf\u7c92\u5b50\u65f6\uff0c\u6211\u4eec\u5c31\u5f97\u5230\u5982\u4e0b\u7ed3\u679c\uff1a \u73b0\u5728\u96c6\u9f50\u4e86\u521b\u5efa\u4e00\u4e2a\u66f4\u771f\u5b9e\u7684\u7c92\u5b50\u6548\u679c\u6240\u9700\u8981\u7684\u6240\u6709\u8981\u7d20\uff0c\u6240\u4ee5\u8ba9\u6211\u4eec\u5c06\u5176\u6539\u4e3a\u66f4\u7cbe\u7ec6\u7684\u7eb9\u7406\u3002\u6211\u4eec\u5c06\u4f7f\u7528\u5982\u4e0b\u56fe\u7247\uff08\u5b83\u662f\u7531 GIMP \u521b\u4f5c\u7684\uff0c\u5e26\u6709\u5149\u7167\u548c\u9634\u5f71\u8fc7\u6ee4\u5668\uff09\uff1a \u6709\u4e86\u5982\u4e0a\u7eb9\u7406\uff0c\u6211\u4eec\u4f1a\u5f97\u5230\u5982\u4e0b\u6240\u793a\u7684\u7c92\u5b50\uff1a \u73b0\u5728\u66f4\u597d\u4e86\uff01\u4f60\u53ef\u80fd\u4f1a\u6ce8\u610f\u5230\u6211\u4eec\u9700\u8981\u8c03\u6574\u7f29\u653e\uff0c\u56e0\u4e3a\u7c92\u5b50\u73b0\u5728\u603b\u662f\u5bf9\u7740\u6444\u50cf\u673a\uff0c\u663e\u793a\u7684\u9762\u79ef\u603b\u662f\u6700\u5927\u7684\u3002 \u6700\u540e\uff0c\u518d\u63d0\u4e00\u70b9\uff0c\u4e3a\u4e86\u5f97\u5230\u53ef\u4ee5\u5728\u4efb\u4f55\u573a\u666f\u4f7f\u7528\u7684\u5b8c\u7f8e\u7684\u6548\u679c\uff0c\u4f60\u9700\u8981\u5b9e\u73b0\u7c92\u5b50\u6392\u5e8f\u548c\u542f\u7528\u6df1\u5ea6\u7f13\u51b2\u533a\u3002\u65e0\u8bba\u5982\u4f55\uff0c\u8fd9\u91cc\u6709\u4e00\u4e2a\u793a\u4f8b\u53ef\u4ee5\u5c06\u8fd9\u79cd\u6548\u679c\u56ca\u62ec\u5230\u4f60\u7684\u6e38\u620f\u4e2d\u3002","title":"\u57fa\u7840"},{"location":"20-particles/#texture-atlas","text":"\u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u505a\u597d\u4e86\u7c92\u5b50\u6548\u679c\u7684\u57fa\u7840\u5efa\u8bbe\uff0c\u73b0\u5728\u53ef\u4ee5\u4e3a\u5b83\u6dfb\u52a0\u4e00\u4e9b\u52a8\u753b\u6548\u679c\u4e86\u3002\u4e3a\u4e86\u5b9e\u73b0\u5b83\uff0c\u6211\u4eec\u5c06\u652f\u6301\u7eb9\u7406\u96c6\u3002\u7eb9\u7406\u96c6\uff08Texture Atlas\uff09\u662f\u4e00\u4e2a\u5305\u542b\u6240\u6709\u5c06\u8981\u4f7f\u7528\u7684\u7eb9\u7406\u7684\u5927\u578b\u56fe\u7247\u3002\u4f7f\u7528\u7eb9\u7406\u96c6\uff0c\u6211\u4eec\u5c31\u53ea\u9700\u8981\u52a0\u8f7d\u4e00\u4e2a\u5927\u7684\u56fe\u7247\uff0c\u7136\u540e\u518d\u7ed8\u5236\u6e38\u620f\u9879\u65f6\uff0c\u9009\u62e9\u8be5\u56fe\u50cf\u7684\u4e00\u90e8\u5206\u4f5c\u4e3a\u7eb9\u7406\u3002\u4f8b\u5982\uff0c\u5f53\u6211\u4eec\u60f3\u7528\u4e0d\u540c\u7684\u7eb9\u7406\u591a\u6b21\u6e32\u67d3\u76f8\u540c\u7684\u6a21\u578b\u65f6\uff08\u4f8b\u5982\u6811\u6216\u5ca9\u77f3\uff09\uff0c\u53ef\u4ee5\u4f7f\u7528\u8fd9\u79cd\u6280\u672f\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u76f8\u540c\u7684\u7eb9\u7406\u96c6\u5e76\u9009\u62e9\u9002\u5f53\u7684\u5750\u6807\uff0c\u800c\u4e0d\u662f\u4f7f\u7528\u5f88\u591a\u7eb9\u7406\u5b9e\u4f8b\u5e76\u5728\u5b83\u4eec\u4e4b\u95f4\u5207\u6362\uff08\u8bb0\u4f4f\uff0c\u5207\u6362\u72b6\u6001\u603b\u662f\u5f88\u6162\u7684\uff09\u3002 \u5728\u6b64\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u7eb9\u7406\u5750\u6807\u6765\u6dfb\u52a0\u7c92\u5b50\u52a8\u753b\u3002\u6211\u4eec\u904d\u5386\u4e0d\u540c\u7684\u7eb9\u7406\u6765\u4e3a\u7c92\u5b50\u52a8\u753b\u5efa\u6a21\uff0c\u6240\u6709\u8fd9\u4e9b\u7eb9\u7406\u5c06\u88ab\u5206\u5230\u4e00\u4e2a\u50cf\u8fd9\u6837\u7684\u7eb9\u7406\u96c6\uff1a \u7eb9\u7406\u96c6\u53ef\u4ee5\u88ab\u5212\u5206\u4e3a\u591a\u4e2a\u65b9\u5f62\u7247\u6bb5\u3002\u6211\u4eec\u5c06\u4e00\u4e2a\u65b9\u5f62\u7247\u6bb5\u5750\u6807\u5206\u914d\u5230\u4e00\u4e2a\u7c92\u5b50\u4e0a\uff0c\u5e76\u968f\u7740\u65f6\u95f4\u63a8\u79fb\u6539\u53d8\u5b83\u4ee5\u8868\u793a\u52a8\u753b\u3002\u8ba9\u6211\u4eec\u5f00\u59cb\u5427\u3002\u6211\u4eec\u8981\u505a\u7684\u7b2c\u4e00\u4ef6\u4e8b\u662f\u4fee\u6539 Texture \u7c7b\u6765\u6307\u5b9a\u7eb9\u7406\u96c6\u53ef\u4ee5\u62e5\u6709\u7684\u884c\u6570\u548c\u5217\u6570\u3002 package org.lwjglb.engine.graph; // .. \u8fd9\u91cc\u662f\u5bfc\u5165 public class Texture { // \u65e0\u5173\u5c5e\u6027\u7701\u7565 private int numRows = 1; private int numCols = 1; // \u65e0\u5173\u4ee3\u7801\u7701\u7565 public Texture(String fileName, int numCols, int numRows) throws Exception { this(fileName); this.numCols = numCols; this.numRows = numRows; } \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5904\u7406\u7684\u7eb9\u7406\u7684\u5217\u6570\u548c\u884c\u6570\u7b49\u4e8e1\u3002\u6211\u4eec\u8fd8\u6dfb\u52a0\u4e86\u53e6\u4e00\u4e2a\u6784\u9020\u51fd\u6570\u6765\u6307\u5b9a\u884c\u548c\u5217\u3002 \u7136\u540e\uff0c\u6211\u4eec\u9700\u8981\u8ffd\u8e2a\u4e00\u4e2a GameItem \u5728\u7eb9\u7406\u96c6\u4e2d\u7684\u5750\u6807\uff0c\u56e0\u6b64\u53ea\u9700\u5411\u8be5\u7c7b\u6dfb\u52a0\u53e6\u4e00\u4e2a\u5c5e\u6027\uff0c\u9ed8\u8ba4\u503c\u4e3a0\u3002 package org.lwjglb.engine.items; import org.joml.Vector3f; import org.lwjglb.engine.graph.Mesh; public class GameItem { // \u66f4\u591a\u5c5e\u6027\u7701\u7565 private int textPos; \u7136\u540e\u6211\u4eec\u4fee\u6539 Particle \u7c7b\uff0c\u4ee5\u4fbf\u80fd\u591f\u901a\u8fc7\u7eb9\u7406\u96c6\u81ea\u52a8\u8fed\u4ee3\u3002 package org.lwjglb.engine.graph.particles; import org.joml.Vector3f; import org.lwjglb.engine.graph.Mesh; import org.lwjglb.engine.graph.Texture; import org.lwjglb.engine.items.GameItem; public class Particle extends GameItem { private long updateTextureMillis; private long currentAnimTimeMillis; \u5c5e\u6027 updateTextureMillis \u5b9a\u4e49\u79fb\u52a8\u5230\u7eb9\u7406\u96c6\u4e2d\u4e0b\u4e00\u4e2a\u5750\u6807\u7684\u65f6\u95f4\uff08\u4ee5\u6beb\u79d2\u4e3a\u5355\u4f4d\uff09\u3002\u6570\u503c\u6708\u5e95\uff0c\u7c92\u5b50\u5728\u7eb9\u7406\u4e0a\u53d8\u5316\u7684\u901f\u5ea6\u5c31\u8d8a\u5feb\u3002\u5c5e\u6027 currentAnimTimeMillis \u53ea\u662f\u8ddf\u8e2a\u7eb9\u7406\u6301\u7eed\u5f53\u524d\u7eb9\u7406\u5750\u6807\u7684\u65f6\u95f4\u3002 \u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u4fee\u6539 Particle \u7c7b\u6784\u9020\u51fd\u6570\u6765\u8bbe\u7f6e\u8fd9\u4e9b\u503c\u3002\u6211\u4eec\u8fd8\u8ba1\u7b97\u4e86\u7eb9\u7406\u96c6\u7684\u7247\u6bb5\u6570\u91cf\uff0c\u5b83\u662f\u7531\u5c5e\u6027 animFrames \u5b9a\u4e49\u7684\u3002 public Particle(Mesh mesh, Vector3f speed, long ttl, long updateTextureMillis) { super(mesh); this.speed = new Vector3f(speed); this.ttl = ttl; this.updateTextureMills = updateTextureMills; this.currentAnimTimeMillis = 0; Texture texture = this.getMesh().getMaterial().getTexture(); this.animFrames = texture.getNumCols() * texture.getNumRows(); } \u73b0\u5728\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4fee\u6539\u68c0\u67e5\u7c92\u5b50\u662f\u5426\u5df2\u7ecf\u8fc7\u671f\u7684\u65b9\u6cd5\uff0c\u6765\u68c0\u67e5\u662f\u5426\u9700\u8981\u66f4\u65b0\u7eb9\u7406\u5750\u6807\u3002 public long updateTtl(long elapsedTime) { this.ttl -= elapsedTime; this.currentAnimTimeMillis += elapsedTime; if ( this.currentAnimTimeMillis >= this.getUpdateTextureMillis() && this.animFrames > 0 ) { this.currentAnimTimeMillis = 0; int pos = this.getTextPos(); pos++; if ( pos < this.animFrames ) { this.setTextPos(pos); } else { this.setTextPos(0); } } return this.ttl; } \u9664\u6b64\u4e4b\u5916\uff0c\u6211\u4eec\u8fd8\u4fee\u6539\u4e86 FlowRangeEmitter \u7c7b\uff0c\u5728\u5e94\u8be5\u6539\u53d8\u7c92\u5b50\u7eb9\u7406\u5750\u6807\u7684\u65f6\u95f4\u5468\u671f\u4e0a\u589e\u52a0\u4e86\u4e00\u4e9b\u968f\u673a\u6027\u3002\u4f60\u53ef\u4ee5\u5728\u6e90\u4ee3\u7801\u4e0a\u67e5\u770b\u5b83\u3002 \u73b0\u5728\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e9b\u6570\u636e\u6765\u8bbe\u7f6e\u5408\u9002\u7684\u7eb9\u7406\u5750\u6807\u3002\u6211\u4eec\u5c06\u5728\u9876\u70b9\u7740\u8272\u5668\u4e2d\u8fdb\u884c\u8fd9\u4e00\u64cd\u4f5c\uff0c\u56e0\u4e3a\u5b83\u8f93\u51fa\u4e86\u8981\u5728\u7247\u5143\u7740\u8272\u5668\u4e2d\u4f7f\u7528\u7684\u90a3\u4e9b\u503c\u3002\u8fd9\u4e2a\u65b0\u7740\u8272\u5668\u7684\u5b9a\u4e49\u5982\u4e0b\uff1a #version 330 layout (location=0) in vec3 position; layout (location=1) in vec2 texCoord; layout (location=2) in vec3 vertexNormal; out vec2 outTexCoord; uniform mat4 modelViewMatrix; uniform mat4 projectionMatrix; uniform float texXOffset; uniform float texYOffset; uniform int numCols; uniform int numRows; void main() { gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0); // Support for texture atlas, update texture coordinates float x = (texCoord.x / numCols + texXOffset); float y = (texCoord.y / numRows + texYOffset); outTexCoord = vec2(x, y); } \u5982\u4f60\u6240\u89c1\uff0c\u6211\u4eec\u73b0\u5728\u6709\u4e09\u4e2a\u65b0Uniform\u3002Uniform numCols \u548c numRows \u53ea\u50a8\u5b58\u7eb9\u7406\u96c6\u7684\u5217\u548c\u884c\u6570\u3002\u4e3a\u4e86\u8ba1\u7b97\u7eb9\u7406\u5750\u6807\uff0c\u9996\u5148\u5fc5\u987b\u7f29\u5c0f\u8fd9\u4e9b\u53c2\u6570\u3002\u6bcf\u4e2a\u7247\u6bb5\u7684\u5bbd\u5ea6\u4e3a 1 / numCols \uff0c\u9ad8\u5ea6\u4e3a 1 / numRows \uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002 \u7136\u540e\u6211\u4eec\u53ea\u9700\u8981\u6839\u636e\u884c\u548c\u5217\u5e94\u7528\u548c\u504f\u79fb\uff0c\u8fd9\u662f\u7531 texXOffset \u548c texYOffset Uniform\u5b9a\u4e49\u7684\u3002 \u6211\u4eec\u5c06\u5728 Renderer \u7c7b\u4e2d\u8ba1\u7b97\u8fd9\u4e9b\u504f\u79fb\u91cf\uff0c\u5982\u4e0b\u8ff0\u4ee3\u7801\u6240\u793a\u3002\u6211\u4eec\u6839\u636e\u6bcf\u4e2a\u7c92\u5b50\u7684\u5750\u6807\u8ba1\u7b97\u5b83\u4eec\u6240\u5904\u7684\u884c\u548c\u5217\uff0c\u5e76\u5c06\u504f\u79fb\u91cf\u8ba1\u7b97\u4e3a\u7247\u6bb5\u9ad8\u5ea6\u548c\u5bbd\u5ea6\u7684\u500d\u6570\u3002 mesh.renderList((emitter.getParticles()), (GameItem gameItem) -> { int col = gameItem.getTextPos() % text.getNumCols(); int row = gameItem.getTextPos() / text.getNumCols(); float textXOffset = (float) col / text.getNumCols(); float textYOffset = (float) row / text.getNumRows(); particlesShaderProgram.setUniform(\"texXOffset\", textXOffset); particlesShaderProgram.setUniform(\"texYOffset\", textYOffset); \u6ce8\u610f\uff0c\u5982\u679c\u4f60\u53ea\u9700\u8981\u652f\u6301\u6b63\u65b9\u5f62\u7eb9\u7406\u96c6\uff0c\u4f60\u53ea\u9700\u8981\u4e24\u4e2aUniform\u3002\u6700\u7ec8\u7684\u6548\u679c\u662f\u8fd9\u6837\u7684\uff1a \u73b0\u5728\uff0c\u6211\u4eec\u6709\u4e86\u7c92\u5b50\u52a8\u753b\u3002\u5728\u4e0b\u7ae0\u4e2d\uff0c\u6211\u4eec\u8bb2\u5b66\u4e60\u5982\u4f55\u4f18\u5316\u6e32\u67d3\u6d41\u7a0b\u3002\u6211\u4eec\u6b63\u5728\u6e32\u67d3\u5177\u6709\u76f8\u540c\u7f51\u683c\u7684\u591a\u4e2a\u5143\u7d20\uff0c\u5e76\u4e3a\u6bcf\u4e2a\u5143\u7d20\u8fdb\u884c\u7ed8\u5236\u8c03\u7528\u3002\u5728\u4e0b\u7ae0\u4e2d\uff0c\u6211\u4eec\u8bb2\u5b66\u4e60\u5982\u4f55\u5728\u5355\u4e2a\u8c03\u7528\u4e2d\u6e32\u67d3\u5b83\u4eec\u3002\u8fd9\u79cd\u6280\u672f\u4e0d\u4ec5\u9002\u7528\u4e8e\u7c92\u5b50\uff0c\u4e5f\u9002\u7528\u4e8e\u6e32\u67d3\u5171\u4eab\u540c\u4e00\u6a21\u578b\uff0c\u4f46\u88ab\u653e\u5728\u4e0d\u540c\u4f4d\u7f6e\u6216\u5177\u6709\u4e0d\u540c\u7eb9\u7406\u7684\u591a\u4e2a\u5143\u7d20\u7684\u573a\u666f\u3002","title":"\u7eb9\u7406\u96c6\uff08Texture Atlas\uff09"},{"location":"21-instanced-rendering/","text":"\u5b9e\u4f8b\u5316\u6e32\u67d3\uff08Instanced Rendering\uff09 \u5f88\u591a\u5b9e\u4f8b \u5728\u7ed8\u5236\u4e09\u7ef4\u573a\u666f\u65f6\uff0c\u7ecf\u5e38\u4f1a\u6709\u8bb8\u591a\u6a21\u578b\u7528\u76f8\u540c\u7684\u7f51\u683c\u8868\u793a\uff0c\u4f46\u5b83\u4eec\u5177\u6709\u4e0d\u540c\u7684\u53d8\u6362\u3002\u5728\u6b64\u60c5\u51b5\u4e0b\uff0c\u5c3d\u7ba1\u5b83\u4eec\u53ef\u80fd\u662f\u53ea\u6709\u51e0\u4e2a\u4e09\u89d2\u5f62\u7684\u7b80\u5355\u7269\u4f53\uff0c\u4f46\u6027\u80fd\u4ecd\u53ef\u80fd\u4f1a\u53d7\u5230\u5f71\u54cd\uff0c\u8fd9\u80cc\u540e\u7684\u539f\u56e0\u5c31\u662f\u6211\u4eec\u6e32\u67d3\u5b83\u4eec\u7684\u65b9\u5f0f\u3002 \u6211\u4eec\u57fa\u672c\u4e0a\u662f\u5728\u5faa\u73af\u4e2d\u904d\u5386\u6240\u6709\u6e38\u620f\u9879\uff0c\u5e76\u5bf9\u51fd\u6570 glDrawElements \u8fdb\u884c\u8c03\u7528\u3002\u5982\u524d\u51e0\u7ae0\u6240\u8bf4\u7684\uff0c\u5bf9OpenGL\u5e93\u7684\u8c03\u7528\u5e94\u8be5\u6700\u5c0f\u5316\u3002\u5bf9\u51fd\u6570 glDrawElements \u7684\u6bcf\u6b21\u8c03\u7528\u90fd\u4f1a\u9020\u6210\u4e00\u5b9a\u5f00\u9500\u3002\u8fd9\u5bf9\u4e8e\u6bcf\u4e2a GameItem \u5b9e\u4f8b\u4f1a\u53cd\u590d\u4ea7\u751f\u5f00\u9500\u3002 \u5728\u5904\u7406\u5927\u91cf\u76f8\u4f3c\u7269\u4f53\u65f6\uff0c\u4f7f\u7528\u4e00\u6b21\u8c03\u7528\u6e32\u67d3\u6240\u6709\u8fd9\u4e9b\u7269\u4f53\u4f1a\u66f4\u6709\u6548\u3002\u8fd9\u79cd\u6280\u672f\u88ab\u79f0\u4e3a\u5b9e\u4f8b\u5316\u6e32\u67d3\u3002\u4e3a\u4e86\u5b9e\u73b0\u540c\u65f6\u6e32\u67d3\u4e00\u7ec4\u5143\u7d20\uff0cOpenGL\u63d0\u4f9b\u4e86\u4e00\u7ec4\u540d\u4e3a glDrawXXXInstanced \u7684\u51fd\u6570\u3002\u5728\u672c\u4f8b\u4e2d\uff0c\u7531\u4e8e\u6211\u4eec\u6b63\u5728\u7ed8\u5236\u5143\u7d20\uff0c\u6240\u4ee5\u5c06\u4f7f\u7528\u540d\u4e3a glDrawElementsInstanced \u7684\u51fd\u6570\u3002\u8be5\u51fd\u6570\u63a5\u6536\u4e0e glDrawElements \u76f8\u540c\u7684\u53c2\u6570\uff0c\u5916\u52a0\u4e00\u4e2a\u989d\u5916\u7684\u53c2\u6570\uff0c\u7528\u4e8e\u8bbe\u7f6e\u8981\u7ed8\u5236\u7684\u5b9e\u4f8b\u6570\u3002 \u8fd9\u662f\u4e00\u4e2a\u5982\u4f55\u4f7f\u7528 glDrawElements \u7684\u793a\u4f8b\uff1a glDrawElements(GL_TRIANGLES, numVertices, GL_UNSIGNED_INT, 0) \u4ee5\u4e0b\u662f\u5b9e\u4f8b\u5316\u7248\u672c\u7684\u7528\u6cd5: glDrawElementsInstanced(GL_TRIANGLES, numVertices, GL_UNSIGNED_INT, 0, numInstances); \u4f46\u662f\u4f60\u73b0\u5728\u53ef\u80fd\u60f3\u77e5\u9053\uff0c\u5982\u4f55\u4e3a\u6bcf\u4e2a\u5b9e\u4f8b\u8bbe\u7f6e\u4e0d\u540c\u7684\u53d8\u6362\u3002\u73b0\u5728\uff0c\u5728\u7ed8\u5236\u6bcf\u4e2a\u5b9e\u4f8b\u4e4b\u524d\uff0c\u6211\u4eec\u5c06\u4f7f\u7528Uniform\u6765\u4f20\u9012\u4e0d\u540c\u7684\u53d8\u6362\u548c\u5b9e\u4f8b\u76f8\u5173\u7684\u6570\u636e\u3002\u5728\u8fdb\u884c\u6e32\u67d3\u8c03\u7528\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u4e3a\u6bcf\u9879\u8bbe\u7f6e\u7279\u5b9a\u7684\u6570\u636e\u3002\u5f53\u5b83\u4eec\u5f00\u59cb\u6e32\u67d3\u65f6\uff0c\u6211\u4eec\u5982\u4f55\u505a\u5230\u8fd9\u4e00\u70b9\u5462\uff1f \u5f53\u4f7f\u7528\u5b9e\u4f8b\u5316\u6e32\u67d3\u65f6\uff0c\u5728\u9876\u70b9\u7740\u8272\u5668\u4e2d\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u8f93\u5165\u53d8\u91cf\u6765\u50a8\u5b58\u5f53\u524d\u7ed8\u5236\u5b9e\u4f8b\u7684\u7d22\u5f15\u3002\u4f8b\u5982\uff0c\u4f7f\u7528\u8fd9\u4e2a\u5185\u7f6e\u53d8\u91cf\uff0c\u6211\u4eec\u53ef\u4ee5\u4f20\u9012\u4e00\u4e2a\u5305\u542b\u8981\u5e94\u7528\u5230\u6bcf\u4e2a\u5b9e\u4f8b\u7684\u53d8\u6362\u7684Uniform\u6570\u7ec4\uff0c\u5e76\u4ec5\u505a\u4e00\u6b21\u6e32\u67d3\u8c03\u7528\u3002 \u8fd9\u79cd\u65b9\u6cd5\u7684\u95ee\u9898\u662f\uff0c\u5b83\u4ecd\u7136\u4f1a\u5e26\u6765\u592a\u591a\u7684\u5f00\u9500\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u6211\u4eec\u80fd\u591f\u4f20\u9012\u7684Uniform\u6570\u91cf\u662f\u6709\u9650\u7684\u3002\u56e0\u6b64\uff0c\u9700\u8981\u4f7f\u7528\u53e6\u4e00\u79cd\u65b9\u6cd5\uff0c\u800c\u4e0d\u662f\u4f7f\u7528Uniform\u6570\u7ec4\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u5b9e\u4f8b\u5316\u6570\u7ec4\u3002 \u5982\u679c\u4f60\u8fd8\u8bb0\u5f97\u524d\u51e0\u7ae0\uff0c\u6bcf\u4e2a\u7f51\u683c\u7684\u6570\u636e\u90fd\u662f\u7531\u4e00\u7ec4\u540d\u4e3aVBO\u7684\u6570\u636e\u6570\u7ec4\u5b9a\u4e49\u7684\u3002\u8fd9\u4e9bVBO\u4e2d\u7684\u6570\u636e\u50a8\u5b58\u5728\u6bcf\u4e2a\u552f\u4e00\u7684 Mesh \u5b9e\u4f8b\u4e2d\u3002 \u4f7f\u7528\u6807\u51c6\u7684VBO\uff0c\u5728\u7740\u8272\u5668\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u8bbf\u95ee\u4e0e\u6bcf\u4e2a\u9876\u70b9\uff08\u5176\u4f4d\u7f6e\u3001\u989c\u8272\u3001\u7eb9\u7406\u7b49\uff09\u76f8\u5173\u7684\u6570\u636e\u3002\u65e0\u8bba\u4f55\u65f6\u8fd0\u884c\u7740\u8272\u5668\uff0c\u8f93\u5165\u53d8\u91cf\u90fd\u88ab\u8bbe\u7f6e\u4e3a\u6307\u5411\u4e0e\u6bcf\u4e2a\u9876\u70b9\u76f8\u5173\u7684\u6307\u5b9a\u6570\u636e\u3002\u4f7f\u7528\u5b9e\u4f8b\u5316\u6570\u7ec4\uff0c\u6211\u4eec\u53ef\u4ee5\u8bbe\u7f6e\u6bcf\u4e2a\u5b9e\u4f8b\u800c\u4e0d\u662f\u6bcf\u4e2a\u9876\u70b9\u6240\u66f4\u6539\u7684\u6570\u636e\u3002\u5982\u679c\u6211\u4eec\u5c06\u8fd9\u4e24\u79cd\u7c7b\u578b\u7ed3\u5408\u8d77\u6765\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528\u5e38\u89c4\u7684VBO\u6765\u50a8\u5b58\u6bcf\u4e2a\u9876\u70b9\u7684\u4fe1\u606f\uff08\u5750\u6807\uff0c\u7eb9\u7406\u5750\u6807\uff09\u548c\u7528VBO\u50a8\u5b58\u6bcf\u4e2a\u5b9e\u4f8b\u7684\u6570\u636e\uff08\u5982\u6a21\u578b\u89c2\u5bdf\u77e9\u9635\uff09\u3002 \u4e0b\u56fe\u5c55\u793a\u4e86\u7531\u4e09\u4e2a\u9876\u70b9\u7ec4\u6210\u7684\u7f51\u683c\uff0c\u6bcf\u4e2a\u9876\u70b9\u5b9a\u4e49\u4e86\u5750\u6807\u3001\u7eb9\u7406\u4e0e\u6cd5\u7ebf\u3002\u6bcf\u4e2a\u5143\u7d20\u7684\u7b2c\u4e00\u4e2a\u7d22\u5f15\u662f\u5b83\u6240\u5c5e\u7684\u5b9e\u4f8b\uff08\u84dd\u8272\uff09\u3002\u7b2c\u4e8c\u4e2a\u7d22\u5f15\u8868\u793a\u5b9e\u4f8b\u4e2d\u7684\u9876\u70b9\u4f4d\u7f6e\u3002 \u7f51\u683c\u4e5f\u7531\u4e24\u4e2a\u5b9e\u4f8bVBO\u5b9a\u4e49\u3002\u4e00\u4e2a\u7528\u4e8e\u6a21\u578b\u89c2\u5bdf\u77e9\u9635\uff0c\u53e6\u4e00\u4e2a\u7528\u4e8e\u5149\u7167\u89c2\u5bdf\u77e9\u9635\u3002\u5f53\u4e3a\u7b2c\u4e00\u4e2a\u5b9e\u4f8b\u6e32\u67d3\u9876\u70b9\uff08\u7b2c1X\u4e2a\uff09\u65f6\uff0c\u6a21\u578b\u89c2\u5bdf\u77e9\u9635\u548c\u5149\u7167\u89c2\u5bdf\u77e9\u9635\u662f\u76f8\u540c\u7684\uff08\u7b2c1\u4e2a\uff09\u3002\u5f53\u6e32\u67d3\u7b2c\u4e8c\u4e2a\u5b9e\u4f8b\u7684\u9876\u70b9\u65f6\uff0c\u5c06\u4f7f\u7528\u7b2c\u4e8c\u4e2a\u6a21\u578b\u89c2\u5bdf\u77e9\u9635\u548c\u5149\u7167\u89c2\u5bdf\u77e9\u9635\u3002 \u56e0\u6b64\uff0c\u5728\u6e32\u67d3\u7b2c\u4e00\u4e2a\u5b9e\u4f8b\u7684\u7b2c\u4e00\u4e2a\u9876\u70b9\u65f6\uff0c\u5c06\u4f7f\u7528V11\u3001T11\u548cN11\u4f5c\u4e3a\u5750\u6807\u3001\u7eb9\u7406\u548c\u6cd5\u7ebf\u6570\u636e\uff0c\u5e76\u4f7f\u7528MV1\u4f5c\u4e3a\u6a21\u578b\u89c2\u5bdf\u77e9\u9635\u3002\u5f53\u6e32\u67d3\u540c\u4e00\u4e2a\u5b9e\u4f8b\u7684\u7b2c\u4e8c\u4e2a\u9876\u70b9\u65f6\uff0c\u5c06\u4f7f\u7528V12\u3001T12\u548cN12\u4f5c\u4e3a\u5750\u6807\u3001\u7eb9\u7406\u548c\u6cd5\u7ebf\u6570\u636e\uff0c\u4ecd\u4f7f\u7528MV1\u4f5c\u4e3a\u6a21\u578b\u89c2\u5bdf\u77e9\u9635\u3002\u5728\u6e32\u67d3\u7b2c\u4e8c\u4e2a\u5b9e\u4f8b\u4e4b\u524d\uff0c\u4e0d\u4f1a\u4f7f\u7528MV2\u548cLV2\u3002 \u4e3a\u4e86\u5b9a\u4e49\u6bcf\u4e2a\u5b9e\u4f8b\u6570\u636e\uff0c\u6211\u4eec\u9700\u8981\u5728\u9876\u70b9\u5c5e\u6027\u4e4b\u540e\u8c03\u7528\u51fd\u6570 glVertexAttribDivisor \u3002\u8be5\u51fd\u6570\u63a5\u6536\u4e24\u4e2a\u53c2\u6570\uff1a index\uff1a\u9876\u70b9\u5c5e\u6027\u7684\u7d22\u5f15\uff08\u5728 glVertexAttribPointer \u51fd\u6570\u4e2d\u8bbe\u7f6e\u7684\uff09\u3002 divisor: \u5982\u679c\u8fd9\u4e2a\u503c\u4e3a0\uff0c\u90a3\u4e48\u5728\u6e32\u67d3\u65f6\uff0c\u6bcf\u4e2a\u9876\u70b9\u7684\u6570\u636e\u90fd\u4f1a\u6539\u53d8\u3002\u5982\u679c\u5c06\u5176\u8bbe\u7f6e\u4e3a1\uff0c\u5219\u6bcf\u6e32\u67d3\u4e00\u4e2a\u5b9e\u4f8b\uff0c\u6570\u636e\u66f4\u6539\u4e00\u6b21\u3002\u5982\u679c\u5b83\u88ab\u8bbe\u7f6e\u4e3a2\uff0c\u5219\u6bcf\u6e32\u67d3\u4e24\u4e2a\u5b9e\u4f8b\u5c31\u4f1a\u66f4\u6539\u4e00\u6b21\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002 \u56e0\u6b64\uff0c\u4e3a\u4e86\u8bbe\u7f6e\u5b9e\u4f8b\u7684\u6570\u636e\uff0c\u6211\u4eec\u9700\u8981\u5728\u6bcf\u4e2a\u5c5e\u6027\u5b9a\u4e49\u4e4b\u540e\u8fdb\u884c\u5982\u4e0b\u8c03\u7528\uff1a glVertexAttribDivisor(index, 1); \u8ba9\u6211\u4eec\u5f00\u59cb\u4fee\u6539\u4ee3\u7801\u5e93\uff0c\u4ee5\u652f\u6301\u5b9e\u4f8b\u5316\u6e32\u67d3\u3002\u7b2c\u4e00\u6b65\u662f\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a InstancedMesh \u7684\u65b0\u7c7b\uff0c\u8be5\u7c7b\u7ee7\u627f\u81ea Mesh \u7c7b\u3002\u8be5\u7c7b\u7684\u6784\u9020\u51fd\u6570\u7c7b\u4f3c\u4e8e Mesh \u7684\u6784\u9020\u51fd\u6570\uff0c\u4f46\u6709\u4e00\u4e2a\u989d\u5916\u7684\u53c2\u6570\uff0c\u5373\u5b9e\u4f8b\u6570\u3002 \u5728\u6784\u9020\u51fd\u6570\u4e2d\uff0c\u9664\u4e86\u4f9d\u8d56\u8d85\u7c7b\u7684\u6784\u9020\u51fd\u6570\u5916\uff0c\u6211\u4eec\u8fd8\u5c06\u521b\u5efa\u4e24\u4e2a\u65b0\u7684VBO\uff0c\u4e00\u4e2a\u7528\u4e8e\u6a21\u578b\u89c2\u5bdf\u77e9\u9635\uff0c\u53e6\u4e00\u4e2a\u7528\u4e8e\u5149\u7167\u89c2\u5bdf\u77e9\u9635\u3002\u521b\u5efa\u6a21\u578b\u89c2\u5bdf\u77e9\u9635\u7684\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a modelViewVBO = glGenBuffers(); vboIdList.add(modelViewVBO); this.modelViewBuffer = MemoryUtil.memAllocFloat(numInstances * MATRIX_SIZE_FLOATS); glBindBuffer(GL_ARRAY_BUFFER, modelViewVBO); int start = 5; for (int i = 0; i < 4; i++) { glVertexAttribPointer(start, 4, GL_FLOAT, false, MATRIX_SIZE_BYTES, i * VECTOR4F_SIZE_BYTES); glVertexAttribDivisor(start, 1); start++; } \u6211\u4eec\u9996\u5148\u8981\u505a\u7684\u4e8b\u662f\u521b\u5efa\u4e00\u4e2a\u65b0\u7684VBO\u548c\u4e00\u4e2a\u65b0\u7684 FloatBuffer \u4ee5\u5728\u5176\u5185\u50a8\u5b58\u6570\u636e\u3002\u7f13\u51b2\u533a\u7684\u5927\u5c0f\u662f\u7528\u6d6e\u70b9\u6570\u6570\u91cf\u8ba1\u7b97\u7684\uff0c\u6240\u4ee5\u5b83\u7b49\u4e8e\u5b9e\u4f8b\u6570\u4e58\u4ee54x4\u77e9\u9635\u7684\u6d6e\u70b9\u6570\u5927\u5c0f\uff08\u7b49\u4e8e16\uff09\u3002 \u4e00\u65e6VBO\u88ab\u7ed1\u5b9a\uff0c\u6211\u4eec\u5c31\u5f00\u59cb\u4e3a\u5b83\u5b9a\u4e49\u5c5e\u6027\u3002\u4f60\u53ef\u4ee5\u770b\u5230\u8fd9\u662f\u5728 for \u5faa\u73af\u4e2d\u5b8c\u6210\u7684\uff0c\u5faa\u73af\u8fdb\u884c\u4e86\u56db\u6b21\u3002\u6bcf\u8f6e\u5faa\u73af\u5b9a\u4e49\u4e00\u4e2a\u77e9\u9635\u5411\u91cf\u3002\u4e3a\u4ec0\u4e48\u4e0d\u7b80\u5355\u5730\u4e3a\u6574\u4e2a\u77e9\u9635\u5b9a\u4e49\u4e00\u4e2a\u5c5e\u6027\u5462\uff1f\u539f\u56e0\u662f\u9876\u70b9\u5c5e\u6027\u4e0d\u80fd\u50a8\u5b58\u8d85\u8fc7\u56db\u4e2a\u6d6e\u70b9\u6570\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u628a\u77e9\u9635\u5b9a\u4e49\u5206\u4e3a\u56db\u90e8\u5206\u3002\u8ba9\u6211\u4eec\u91cd\u65b0\u8ba4\u8bc6\u4e00\u4e0b glVertexAttribPointer \u7684\u53c2\u6570\uff1a Index: \u8981\u5b9a\u4e49\u7684\u5143\u7d20\u7684\u7d22\u5f15\u3002 Size: \u8be5\u5c5e\u6027\u7684\u5206\u91cf\u6570\u3002\u5728\u672c\u4f8b\u4e2d\uff0c\u5b83\u662f\u56db\u4e2a\u6d6e\u70b9\u6570\uff0c\u8fd9\u662f\u53ef\u63a5\u53d7\u7684\u6700\u5927\u503c\u3002 Type: \u6570\u636e\u7c7b\u578b\uff08\u5728\u672c\u4f8b\u4e2d\u4e3a\u6d6e\u70b9\u578b\uff09\u3002 Normalize: \u662f\u5426\u5e94\u8be5\u5f52\u4e00\u5316\u6307\u5b9a\u6570\u636e\u3002 Stride\uff08\u6b65\u957f\uff09: \u7406\u89e3\u8fd9\u91cc\u7684\u6982\u5ff5\u5f88\u91cd\u8981\uff0c\u5b83\u8bbe\u7f6e\u4e86\u8fde\u7eed\u5c5e\u6027\u4e4b\u95f4\u7684\u5b57\u8282\u504f\u79fb\u91cf\u3002\u5728\u672c\u4f8b\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u5c06\u5176\u8bbe\u7f6e\u4e3a\u6574\u4e2a\u77e9\u9635\u7684\u5b57\u8282\u5927\u5c0f\u3002\u8fd9\u5c31\u50cf\u4e00\u4e2a\u7528\u4e8e\u5305\u88c5\u6570\u636e\u7684\u6807\u8bb0\uff0c\u4ece\u800c\u53ef\u4ee5\u5728\u9876\u70b9\u6216\u5b9e\u4f8b\u4e4b\u95f4\u8fdb\u884c\u66f4\u6539\u3002 Pointer: \u6b64\u5c5e\u6027\u5b9a\u4e49\u5e94\u7528\u7684\u504f\u79fb\u91cf\u3002\u5728\u672c\u4f8b\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u5c06\u77e9\u9635\u5b9a\u4e49\u62c6\u5206\u4e3a\u56db\u6b21\u8c03\u7528\u3002\u4f9d\u77e9\u9635\u7684\u6bcf\u4e2a\u5411\u91cf\u589e\u52a0\u504f\u79fb\u91cf\u3002 \u5b9a\u4e49\u4e86\u9876\u70b9\u5c5e\u6027\u4e4b\u540e\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528\u76f8\u540c\u7684\u7d22\u5f15\u8c03\u7528 glVertexAttribDivisor \u3002 \u5149\u7167\u89c2\u5bdf\u77e9\u9635\u7684\u5b9a\u4e49\u4e0e\u4e0a\u8ff0\u8fc7\u7a0b\u7c7b\u4f3c\uff0c\u4f60\u53ef\u4ee5\u5728\u6e90\u4ee3\u7801\u4e2d\u67e5\u770b\u5b83\u3002\u7ee7\u7eed\u8fdb\u884c InstancedMesh \u7c7b\u7684\u5b9a\u4e49\uff0c\u91cd\u5199\u65b9\u6cd5\u4ee5\u5728\u6e32\u67d3\u4e4b\u524d\u542f\u7528\u9876\u70b9\u5c5e\u6027\uff08\u4ee5\u53ca\u5728\u6e32\u67d3\u4e4b\u540e\u8981\u7981\u7528\u5b83\u4eec\uff09\u662f\u5f88\u91cd\u8981\u7684\u3002 @Override protected void initRender() { super.initRender(); int start = 5; int numElements = 4 * 2; for (int i = 0; i < numElements; i++) { glEnableVertexAttribArray(start + i); } } @Override protected void endRender() { int start = 5; int numElements = 4 * 2; for (int i = 0; i < numElements; i++) { glDisableVertexAttribArray(start + i); } super.endRender(); } InstancedMesh \u7c7b\u5b9a\u4e49\u4e86\u4e00\u4e2a\u540d\u4e3a renderListInstanced \u7684\u516c\u5171\u65b9\u6cd5\uff0c\u5b83\u6e32\u67d3\u4e00\u7cfb\u5217\u7684\u6e38\u620f\u9879\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u5c06\u6e38\u620f\u9879\u5217\u8868\u5206\u5272\u4e3a\u5927\u5c0f\u4e0e\u521b\u5efa InstancedMesh \u6240\u8bbe\u5b9e\u4f8b\u6570\u91cf\u76f8\u7b49\u7684\u5757\u3002\u771f\u6b63\u7684\u6e32\u67d3\u65b9\u6cd5\u662f renderChunkInstanced \uff0c\u5b9a\u4e49\u5982\u4e0b\uff1a private void renderChunkInstanced(List<GameItem> gameItems, boolean depthMap, Transformation transformation, Matrix4f viewMatrix, Matrix4f lightViewMatrix) { this.modelViewBuffer.clear(); this.modelLightViewBuffer.clear(); int i = 0; for (GameItem gameItem : gameItems) { Matrix4f modelMatrix = transformation.buildModelMatrix(gameItem); if (!depthMap) { Matrix4f modelViewMatrix = transformation.buildModelViewMatrix(modelMatrix, viewMatrix); modelViewMatrix.get(MATRIX_SIZE_FLOATS * i, modelViewBuffer); } Matrix4f modelLightViewMatrix = transformation.buildModelLightViewMatrix(modelMatrix, lightViewMatrix); modelLightViewMatrix.get(MATRIX_SIZE_FLOATS * i, this.modelLightViewBuffer); i++; } glBindBuffer(GL_ARRAY_BUFFER, modelViewVBO); glBufferData(GL_ARRAY_BUFFER, modelViewBuffer, GL_DYNAMIC_DRAW); glBindBuffer(GL_ARRAY_BUFFER, modelLightViewVBO); glBufferData(GL_ARRAY_BUFFER, modelLightViewBuffer, GL_DYNAMIC_DRAW); glDrawElementsInstanced(GL_TRIANGLES, getVertexCount(), GL_UNSIGNED_INT, 0, gameItems.size()); glBindBuffer(GL_ARRAY_BUFFER, 0); } \u8be5\u65b9\u6cd5\u5f88\u7b80\u5355\uff0c\u6211\u4eec\u904d\u5386\u6e38\u620f\u9879\uff0c\u8ba1\u7b97\u6a21\u578b\u89c2\u5bdf\u77e9\u9635\u548c\u5149\u7167\u89c2\u5bdf\u77e9\u9635\u3002\u8fd9\u4e9b\u77e9\u9635\u88ab\u8f6c\u50a8\u5230\u5b83\u4eec\u5404\u81ea\u7684\u7f13\u51b2\u533a\u4e2d\u3002\u8fd9\u4e9b\u7f13\u51b2\u533a\u7684\u5185\u5bb9\u88ab\u53d1\u9001\u5230GPU\uff0c\u6700\u540e\u901a\u8fc7\u5bf9\u65b9\u6cd5 glDrawElementsInstanced \u7684\u8c03\u7528\u6765\u6e32\u67d3\u5b83\u4eec\u3002 \u56de\u5230\u7740\u8272\u5668\uff0c\u6211\u4eec\u9700\u8981\u4fee\u6539\u9876\u70b9\u7740\u8272\u5668\u4ee5\u652f\u6301\u5b9e\u4f8b\u5316\u6e32\u67d3\u3002\u9996\u5148\u6211\u4eec\u4e3a\u6a21\u578b\u89c2\u5bdf\u77e9\u9635\u6dfb\u52a0\u65b0\u7684\u8f93\u5165\u53c2\u6570\uff0c\u8fd9\u4e9b\u53c2\u6570\u5c06\u5728\u4f7f\u7528\u5b9e\u4f8b\u5316\u6e32\u67d3\u65f6\u4f20\u9012\u3002 layout (location=5) in mat4 modelViewInstancedMatrix; layout (location=9) in mat4 modelLightViewInstancedMatrix; \u5982\u4f60\u6240\u89c1\uff0c\u6a21\u578b\u89c2\u5bdf\u77e9\u9635\u4ece\u4f4d\u7f6e5\u5f00\u59cb\u3002\u7531\u4e8e\u77e9\u9635\u662f\u7531\u4e00\u7ec4\u5171\u56db\u4e2a\u5c5e\u6027\uff08\u6bcf\u4e2a\u5c5e\u6027\u50a8\u5b58\u4e00\u4e2a\u5411\u91cf\uff09\u5b9a\u4e49\u7684\uff0c\u6240\u4ee5\u5149\u7167\u89c2\u5bdf\u77e9\u9635\u4ece\u4f4d\u7f6e9\u5f00\u59cb\u3002\u56e0\u4e3a\u6211\u4eec\u60f3\u5728\u975e\u5b9e\u4f8b\u5316\u6e32\u67d3\u548c\u5b9e\u4f8b\u5316\u6e32\u67d3\u4e2d\u4f7f\u7528\u540c\u4e00\u7740\u8272\u5668\uff0c\u6240\u4ee5\u6211\u4eec\u5c06\u7ef4\u62a4\u6a21\u578b\u89c2\u5bdf\u77e9\u9635\u548c\u5149\u7167\u89c2\u5bdf\u77e9\u9635\u7684Uniform\u3002\u6211\u4eec\u53ea\u9700\u66f4\u6539\u5b83\u4eec\u7684\u540d\u5b57\u3002 uniform int isInstanced; uniform mat4 modelViewNonInstancedMatrix; \u2026 uniform mat4 modelLightViewNonInstancedMatrix; \u6211\u4eec\u521b\u5efa\u4e86\u53e6\u4e00\u4e2aUniform\u6765\u6307\u5b9a\u662f\u5426\u4f7f\u7528\u5b9e\u4f8b\u5316\u6e32\u67d3\u3002\u5728\u4f7f\u7528\u5b9e\u4f8b\u5316\u6e32\u67d3\u7684\u60c5\u51b5\u4e0b\u4ee3\u7801\u975e\u5e38\u7b80\u5355\uff0c\u6211\u4eec\u53ea\u4f7f\u7528\u8f93\u5165\u53c2\u6570\u4e2d\u7684\u77e9\u9635\u3002 void main() { vec4 initPos = vec4(0, 0, 0, 0); vec4 initNormal = vec4(0, 0, 0, 0); mat4 modelViewMatrix; mat4 lightViewMatrix; if ( isInstanced > 0 ) { modelViewMatrix = modelViewInstancedMatrix; lightViewMatrix = modelLightViewInstancedMatrix; initPos = vec4(position, 1.0); initNormal = vec4(vertexNormal, 0.0); } \u6211\u4eec\u6682\u65f6\u4e0d\u652f\u6301\u52a8\u753b\u5b9e\u4f8b\u5316\u6e32\u67d3\uff0c\u4ee5\u7b80\u5316\u793a\u4f8b\uff0c\u4f46\u662f\u8be5\u6280\u672f\u53ef\u4ee5\u5b8c\u7f8e\u5730\u7528\u4e8e\u6b64\u5904\u3002 \u6700\u540e\uff0c\u7740\u8272\u5668\u50cf\u5f80\u5e38\u4e00\u6837\u8bbe\u7f6e\u6070\u5f53\u7684\u503c\u3002 vec4 mvPos = modelViewMatrix * initPos; gl_Position = projectionMatrix * mvPos; outTexCoord = texCoord; mvVertexNormal = normalize(modelViewMatrix * initNormal).xyz; mvVertexPos = mvPos.xyz; mlightviewVertexPos = orthoProjectionMatrix * lightViewMatrix * initPos; outModelViewMatrix = modelViewMatrix; } \u5f53\u7136\uff0c Renderer \u7c7b\u5df2\u7ecf\u88ab\u4fee\u6539\uff0c\u4ee5\u652f\u6301Uniform\u7684\u4fee\u6539\uff0c\u5e76\u5c06\u975e\u5b9e\u4f8b\u5316\u7f51\u683c\u7684\u6e32\u67d3\u4ece\u5b9e\u4f8b\u5316\u7f51\u683c\u4e2d\u5206\u79bb\u51fa\u6765\u3002\u4f60\u53ef\u4ee5\u67e5\u770b\u6e90\u4ee3\u7801\u4e2d\u7684\u4fee\u6539\u3002 \u6b64\u5916\uff0cJOML\u7684\u4f5c\u8005 Kai Burjack \u8fd8\u5411\u6e90\u4ee3\u7801\u6dfb\u52a0\u4e86\u4e00\u4e9b\u4f18\u5316\u3002\u8fd9\u4e9b\u4f18\u5316\u5df2\u7ecf\u7528\u4e8e Transformation \u7c7b\uff0c\u5e76\u603b\u7ed3\u4e3a\u5982\u4e0b\u51e0\u6761\uff1a \u5220\u9664\u5197\u4f59\u8c03\u7528\uff0c\u4ee5\u8bbe\u7f6e\u5177\u6709\u5355\u4f4d\u503c\u7684\u77e9\u9635\u3002 \u4f7f\u7528\u56db\u5143\u6570\u8fdb\u884c\u66f4\u6709\u6548\u7684\u65cb\u8f6c\u3002 \u4f7f\u7528\u7279\u5b9a\u7684\u65cb\u8f6c\u548c\u5e73\u79fb\u77e9\u9635\u7684\u65b9\u6cd5\uff0c\u8fd9\u4e9b\u65b9\u6cd5\u662f\u9488\u5bf9\u8fd9\u4e9b\u64cd\u4f5c\u4f18\u5316\u7684\u3002 \u56de\u987e\u7c92\u5b50 \u5728\u5b9e\u4f8b\u5316\u6e32\u67d3\u7684\u652f\u6301\u4e0b\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u63d0\u9ad8\u7c92\u5b50\u6e32\u67d3\u7684\u6027\u80fd\u3002\u7c92\u5b50\u5c31\u662f\u6700\u597d\u7684\u7528\u4f8b\u3002 \u4e3a\u4e86\u5c06\u5b9e\u4f8b\u5316\u6e32\u67d3\u5e94\u7528\u5230\u7c92\u5b50\u4e0a\u6211\u4eec\u5fc5\u987b\u63d0\u4f9b\u5bf9\u7eb9\u7406\u96c6\u7684\u652f\u6301\u3002\u8fd9\u53ef\u4ee5\u901a\u8fc7\u6dfb\u52a0\u4e00\u4e2a\u5e26\u6709\u7eb9\u7406\u504f\u79fb\u91cf\u7684VBO\u6765\u5b9e\u73b0\u3002\u7eb9\u7406\u504f\u79fb\u91cf\u53ef\u4ee5\u7531\u4e24\u4e2a\u6d6e\u70b9\u6570\u7ec4\u6210\u7684\u5355\u4e2a\u5411\u91cf\u5b9a\u4e49\uff0c\u56e0\u6b64\u4e0d\u9700\u8981\u50cf\u77e9\u9635\u90a3\u6837\u62c6\u5206\u5b9a\u4e49\u3002 // \u7eb9\u7406\u504f\u79fb\u91cf glVertexAttribPointer(start, 2, GL_FLOAT, false, INSTANCE_SIZE_BYTES, strideStart); glVertexAttribDivisor(start, 1); \u4f46\u662f\uff0c\u6211\u4eec\u5c06\u5728\u5355\u4e2aVBO\u4e2d\u8bbe\u7f6e\u6240\u6709\u5b9e\u4f8b\u5c5e\u6027\uff0c\u800c\u4e0d\u662f\u6dfb\u52a0\u4e00\u4e2a\u65b0\u7684VBO\u3002\u4e0b\u56fe\u5c55\u793a\u4e86\u8fd9\u4e2a\u6982\u5ff5\u3002\u6211\u4eec\u5c06\u6240\u6709\u5c5e\u6027\u6253\u5305\u5728\u4e00\u4e2aVBO\u4e2d\uff0c\u6bcf\u4e2a\u5b9e\u4f8b\u7684\u503c\u90fd\u4f1a\u53d1\u751f\u53d8\u5316\u3002 \u4e3a\u4e86\u4f7f\u7528\u5355\u4e2aVBO\uff0c\u6211\u4eec\u9700\u8981\u4fee\u6539\u5b9e\u4f8b\u4e2d\u6240\u6709\u5c5e\u6027\u7684\u5c5e\u6027\u5927\u5c0f\u3002\u4ece\u4e0a\u8ff0\u4ee3\u7801\u4e2d\u53ef\u4ee5\u770b\u5230\uff0c\u7eb9\u7406\u504f\u79fb\u91cf\u7684\u5b9a\u4e49\u4f7f\u7528\u4e86\u4e00\u4e2a\u540d\u4e3a INSTANCE_SIZE_BYTES \u7684\u5e38\u91cf\u3002\u8fd9\u4e2a\u5e38\u91cf\u7b49\u4e8e\u4e24\u4e2a\u77e9\u9635\uff08\u4e00\u4e2a\u7528\u4e8e\u6a21\u578b\u89c2\u5bdf\u77e9\u9635\u5b9a\u4e49\uff0c\u53e6\u4e00\u4e2a\u7528\u4e8e\u5149\u7167\u89c2\u5bdf\u77e9\u9635\u5b9a\u4e49\uff09\u7684\u5b57\u8282\u5927\u5c0f\u518d\u52a0\u4e0a\u4e24\u4e2a\u6d6e\u70b9\u6570\uff08\u7eb9\u7406\u504f\u79fb\u91cf\uff09\u7684\u5b57\u8282\u5927\u5c0f\uff0c\u603b\u5171\u662f136\u3002\u6b65\u957f\u4e5f\u9700\u8981\u9002\u5f53\u5730\u8c03\u6574\u3002 \u4f60\u53ef\u4ee5\u5728\u6e90\u4ee3\u7801\u4e2d\u67e5\u770b\u4fee\u6539\u3002 Renderer \u7c7b\u4e5f\u9700\u8981\u4fee\u6539\uff0c\u4ee5\u5b9e\u7528\u5b9e\u4f8b\u5316\u6e32\u67d3\u7c92\u5b50\u548c\u652f\u6301\u7eb9\u7406\u96c6\u5728\u573a\u666f\u4e2d\u6e32\u67d3\u3002\u5728\u672c\u4f8b\u4e2d\uff0c\u652f\u6301\u8fd9\u4e24\u79cd\u7c7b\u578b\uff08\u975e\u5b9e\u4f8b\u5316\u548c\u5b9e\u4f8b\u5316\uff09\u7684\u6e32\u67d3\u662f\u6ca1\u6709\u610f\u4e49\u7684\uff0c\u6240\u4ee5\u4fee\u6539\u66f4\u7b80\u5355\u3002 \u7c92\u5b50\u7684\u9876\u70b9\u7740\u8272\u5668\u5982\u4e0b\u6240\u793a\uff1a #version 330 layout (location=0) in vec3 position; layout (location=1) in vec2 texCoord; layout (location=2) in vec3 vertexNormal; layout (location=5) in mat4 modelViewMatrix; layout (location=13) in vec2 texOffset; out vec2 outTexCoord; uniform mat4 projectionMatrix; uniform int numCols; uniform int numRows; void main() { gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0); // \u652f\u6301\u7eb9\u7406\u96c6\uff0c\u66f4\u65b0\u7eb9\u7406\u5750\u6807 float x = (texCoord.x / numCols + texOffset.x); float y = (texCoord.y / numRows + texOffset.y); outTexCoord = vec2(x, y);} \u4e0a\u8ff0\u4fee\u6539\u7684\u6548\u679c\uff0c\u770b\u8d77\u6765\u548c\u975e\u5b9e\u4f8b\u5316\u7c92\u5b50\u6e32\u67d3\u65f6\u5b8c\u5168\u4e00\u6837\uff0c\u4f46\u6027\u80fd\u66f4\u9ad8\u3002FPS\u8ba1\u6570\u5668\u5df2\u4f5c\u4e3a\u9009\u9879\u6dfb\u52a0\u5230\u7a97\u53e3\u6807\u9898\u4e2d\u3002\u4f60\u53ef\u4ee5\u4f7f\u7528\u5b9e\u4f8b\u5316\u6e32\u67d3\u548c\u975e\u5b9e\u4f8b\u5316\u6e32\u67d3\u6765\u770b\u770b\u81ea\u8eab\u7684\u6027\u80fd\u63d0\u5347\u3002 \u6269\u5c55 \u7ed3\u5408\u6211\u4eec\u73b0\u5728\u6240\u62e5\u6709\u7684\u6240\u6709\u57fa\u7840\u6784\u9020\uff0c\u6211\u5df2\u7ecf\u57fa\u4e8e\u4f7f\u7528\u9ad8\u5ea6\u56fe\u4fee\u6539\u4e86\u6e32\u67d3\u65b9\u5757\u6570\u636e\u7684\u4ee3\u7801\uff0c\u8fd8\u4f7f\u7528\u4e86\u7eb9\u7406\u96c6\u4ee5\u4f7f\u7528\u4e0d\u540c\u7684\u7eb9\u7406\u3002\u5b83\u8fd8\u878d\u5408\u4e86\u7c92\u5b50\u6e32\u67d3\u3002\u770b\u8d77\u6765\u662f\u8fd9\u6837\u7684\uff1a \u8bf7\u8bb0\u4f4f\uff0c\u8fd9\u8fd8\u6709\u5f88\u5927\u7684\u4f18\u5316\u7a7a\u95f4\uff0c\u4f46\u8fd9\u672c\u4e66\u7684\u76ee\u7684\u662f\u6307\u5bfc\u4f60\u5b66\u4e60LWJGL\u548cOpenGL\u7684\u6982\u5ff5\u548c\u6280\u672f\u3002\u6211\u4eec\u7684\u76ee\u6807\u4e0d\u662f\u521b\u5efa\u4e00\u4e2a\u5b8c\u6574\u7684\u6e38\u620f\u5f15\u64ce\uff08\u7edd\u5bf9\u4e0d\u662f\u4e00\u4e2a\u4f53\u7d20\u5f15\u64ce\uff0c\u5b83\u9700\u8981\u4e0d\u540c\u7684\u65b9\u6cd5\u548c\u66f4\u591a\u7684\u4f18\u5316\uff09\u3002","title":"\u5b9e\u4f8b\u5316\u6e32\u67d3"},{"location":"21-instanced-rendering/#instanced-rendering","text":"","title":"\u5b9e\u4f8b\u5316\u6e32\u67d3\uff08Instanced Rendering\uff09"},{"location":"21-instanced-rendering/#_1","text":"\u5728\u7ed8\u5236\u4e09\u7ef4\u573a\u666f\u65f6\uff0c\u7ecf\u5e38\u4f1a\u6709\u8bb8\u591a\u6a21\u578b\u7528\u76f8\u540c\u7684\u7f51\u683c\u8868\u793a\uff0c\u4f46\u5b83\u4eec\u5177\u6709\u4e0d\u540c\u7684\u53d8\u6362\u3002\u5728\u6b64\u60c5\u51b5\u4e0b\uff0c\u5c3d\u7ba1\u5b83\u4eec\u53ef\u80fd\u662f\u53ea\u6709\u51e0\u4e2a\u4e09\u89d2\u5f62\u7684\u7b80\u5355\u7269\u4f53\uff0c\u4f46\u6027\u80fd\u4ecd\u53ef\u80fd\u4f1a\u53d7\u5230\u5f71\u54cd\uff0c\u8fd9\u80cc\u540e\u7684\u539f\u56e0\u5c31\u662f\u6211\u4eec\u6e32\u67d3\u5b83\u4eec\u7684\u65b9\u5f0f\u3002 \u6211\u4eec\u57fa\u672c\u4e0a\u662f\u5728\u5faa\u73af\u4e2d\u904d\u5386\u6240\u6709\u6e38\u620f\u9879\uff0c\u5e76\u5bf9\u51fd\u6570 glDrawElements \u8fdb\u884c\u8c03\u7528\u3002\u5982\u524d\u51e0\u7ae0\u6240\u8bf4\u7684\uff0c\u5bf9OpenGL\u5e93\u7684\u8c03\u7528\u5e94\u8be5\u6700\u5c0f\u5316\u3002\u5bf9\u51fd\u6570 glDrawElements \u7684\u6bcf\u6b21\u8c03\u7528\u90fd\u4f1a\u9020\u6210\u4e00\u5b9a\u5f00\u9500\u3002\u8fd9\u5bf9\u4e8e\u6bcf\u4e2a GameItem \u5b9e\u4f8b\u4f1a\u53cd\u590d\u4ea7\u751f\u5f00\u9500\u3002 \u5728\u5904\u7406\u5927\u91cf\u76f8\u4f3c\u7269\u4f53\u65f6\uff0c\u4f7f\u7528\u4e00\u6b21\u8c03\u7528\u6e32\u67d3\u6240\u6709\u8fd9\u4e9b\u7269\u4f53\u4f1a\u66f4\u6709\u6548\u3002\u8fd9\u79cd\u6280\u672f\u88ab\u79f0\u4e3a\u5b9e\u4f8b\u5316\u6e32\u67d3\u3002\u4e3a\u4e86\u5b9e\u73b0\u540c\u65f6\u6e32\u67d3\u4e00\u7ec4\u5143\u7d20\uff0cOpenGL\u63d0\u4f9b\u4e86\u4e00\u7ec4\u540d\u4e3a glDrawXXXInstanced \u7684\u51fd\u6570\u3002\u5728\u672c\u4f8b\u4e2d\uff0c\u7531\u4e8e\u6211\u4eec\u6b63\u5728\u7ed8\u5236\u5143\u7d20\uff0c\u6240\u4ee5\u5c06\u4f7f\u7528\u540d\u4e3a glDrawElementsInstanced \u7684\u51fd\u6570\u3002\u8be5\u51fd\u6570\u63a5\u6536\u4e0e glDrawElements \u76f8\u540c\u7684\u53c2\u6570\uff0c\u5916\u52a0\u4e00\u4e2a\u989d\u5916\u7684\u53c2\u6570\uff0c\u7528\u4e8e\u8bbe\u7f6e\u8981\u7ed8\u5236\u7684\u5b9e\u4f8b\u6570\u3002 \u8fd9\u662f\u4e00\u4e2a\u5982\u4f55\u4f7f\u7528 glDrawElements \u7684\u793a\u4f8b\uff1a glDrawElements(GL_TRIANGLES, numVertices, GL_UNSIGNED_INT, 0) \u4ee5\u4e0b\u662f\u5b9e\u4f8b\u5316\u7248\u672c\u7684\u7528\u6cd5: glDrawElementsInstanced(GL_TRIANGLES, numVertices, GL_UNSIGNED_INT, 0, numInstances); \u4f46\u662f\u4f60\u73b0\u5728\u53ef\u80fd\u60f3\u77e5\u9053\uff0c\u5982\u4f55\u4e3a\u6bcf\u4e2a\u5b9e\u4f8b\u8bbe\u7f6e\u4e0d\u540c\u7684\u53d8\u6362\u3002\u73b0\u5728\uff0c\u5728\u7ed8\u5236\u6bcf\u4e2a\u5b9e\u4f8b\u4e4b\u524d\uff0c\u6211\u4eec\u5c06\u4f7f\u7528Uniform\u6765\u4f20\u9012\u4e0d\u540c\u7684\u53d8\u6362\u548c\u5b9e\u4f8b\u76f8\u5173\u7684\u6570\u636e\u3002\u5728\u8fdb\u884c\u6e32\u67d3\u8c03\u7528\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u4e3a\u6bcf\u9879\u8bbe\u7f6e\u7279\u5b9a\u7684\u6570\u636e\u3002\u5f53\u5b83\u4eec\u5f00\u59cb\u6e32\u67d3\u65f6\uff0c\u6211\u4eec\u5982\u4f55\u505a\u5230\u8fd9\u4e00\u70b9\u5462\uff1f \u5f53\u4f7f\u7528\u5b9e\u4f8b\u5316\u6e32\u67d3\u65f6\uff0c\u5728\u9876\u70b9\u7740\u8272\u5668\u4e2d\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u8f93\u5165\u53d8\u91cf\u6765\u50a8\u5b58\u5f53\u524d\u7ed8\u5236\u5b9e\u4f8b\u7684\u7d22\u5f15\u3002\u4f8b\u5982\uff0c\u4f7f\u7528\u8fd9\u4e2a\u5185\u7f6e\u53d8\u91cf\uff0c\u6211\u4eec\u53ef\u4ee5\u4f20\u9012\u4e00\u4e2a\u5305\u542b\u8981\u5e94\u7528\u5230\u6bcf\u4e2a\u5b9e\u4f8b\u7684\u53d8\u6362\u7684Uniform\u6570\u7ec4\uff0c\u5e76\u4ec5\u505a\u4e00\u6b21\u6e32\u67d3\u8c03\u7528\u3002 \u8fd9\u79cd\u65b9\u6cd5\u7684\u95ee\u9898\u662f\uff0c\u5b83\u4ecd\u7136\u4f1a\u5e26\u6765\u592a\u591a\u7684\u5f00\u9500\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u6211\u4eec\u80fd\u591f\u4f20\u9012\u7684Uniform\u6570\u91cf\u662f\u6709\u9650\u7684\u3002\u56e0\u6b64\uff0c\u9700\u8981\u4f7f\u7528\u53e6\u4e00\u79cd\u65b9\u6cd5\uff0c\u800c\u4e0d\u662f\u4f7f\u7528Uniform\u6570\u7ec4\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u5b9e\u4f8b\u5316\u6570\u7ec4\u3002 \u5982\u679c\u4f60\u8fd8\u8bb0\u5f97\u524d\u51e0\u7ae0\uff0c\u6bcf\u4e2a\u7f51\u683c\u7684\u6570\u636e\u90fd\u662f\u7531\u4e00\u7ec4\u540d\u4e3aVBO\u7684\u6570\u636e\u6570\u7ec4\u5b9a\u4e49\u7684\u3002\u8fd9\u4e9bVBO\u4e2d\u7684\u6570\u636e\u50a8\u5b58\u5728\u6bcf\u4e2a\u552f\u4e00\u7684 Mesh \u5b9e\u4f8b\u4e2d\u3002 \u4f7f\u7528\u6807\u51c6\u7684VBO\uff0c\u5728\u7740\u8272\u5668\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u8bbf\u95ee\u4e0e\u6bcf\u4e2a\u9876\u70b9\uff08\u5176\u4f4d\u7f6e\u3001\u989c\u8272\u3001\u7eb9\u7406\u7b49\uff09\u76f8\u5173\u7684\u6570\u636e\u3002\u65e0\u8bba\u4f55\u65f6\u8fd0\u884c\u7740\u8272\u5668\uff0c\u8f93\u5165\u53d8\u91cf\u90fd\u88ab\u8bbe\u7f6e\u4e3a\u6307\u5411\u4e0e\u6bcf\u4e2a\u9876\u70b9\u76f8\u5173\u7684\u6307\u5b9a\u6570\u636e\u3002\u4f7f\u7528\u5b9e\u4f8b\u5316\u6570\u7ec4\uff0c\u6211\u4eec\u53ef\u4ee5\u8bbe\u7f6e\u6bcf\u4e2a\u5b9e\u4f8b\u800c\u4e0d\u662f\u6bcf\u4e2a\u9876\u70b9\u6240\u66f4\u6539\u7684\u6570\u636e\u3002\u5982\u679c\u6211\u4eec\u5c06\u8fd9\u4e24\u79cd\u7c7b\u578b\u7ed3\u5408\u8d77\u6765\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528\u5e38\u89c4\u7684VBO\u6765\u50a8\u5b58\u6bcf\u4e2a\u9876\u70b9\u7684\u4fe1\u606f\uff08\u5750\u6807\uff0c\u7eb9\u7406\u5750\u6807\uff09\u548c\u7528VBO\u50a8\u5b58\u6bcf\u4e2a\u5b9e\u4f8b\u7684\u6570\u636e\uff08\u5982\u6a21\u578b\u89c2\u5bdf\u77e9\u9635\uff09\u3002 \u4e0b\u56fe\u5c55\u793a\u4e86\u7531\u4e09\u4e2a\u9876\u70b9\u7ec4\u6210\u7684\u7f51\u683c\uff0c\u6bcf\u4e2a\u9876\u70b9\u5b9a\u4e49\u4e86\u5750\u6807\u3001\u7eb9\u7406\u4e0e\u6cd5\u7ebf\u3002\u6bcf\u4e2a\u5143\u7d20\u7684\u7b2c\u4e00\u4e2a\u7d22\u5f15\u662f\u5b83\u6240\u5c5e\u7684\u5b9e\u4f8b\uff08\u84dd\u8272\uff09\u3002\u7b2c\u4e8c\u4e2a\u7d22\u5f15\u8868\u793a\u5b9e\u4f8b\u4e2d\u7684\u9876\u70b9\u4f4d\u7f6e\u3002 \u7f51\u683c\u4e5f\u7531\u4e24\u4e2a\u5b9e\u4f8bVBO\u5b9a\u4e49\u3002\u4e00\u4e2a\u7528\u4e8e\u6a21\u578b\u89c2\u5bdf\u77e9\u9635\uff0c\u53e6\u4e00\u4e2a\u7528\u4e8e\u5149\u7167\u89c2\u5bdf\u77e9\u9635\u3002\u5f53\u4e3a\u7b2c\u4e00\u4e2a\u5b9e\u4f8b\u6e32\u67d3\u9876\u70b9\uff08\u7b2c1X\u4e2a\uff09\u65f6\uff0c\u6a21\u578b\u89c2\u5bdf\u77e9\u9635\u548c\u5149\u7167\u89c2\u5bdf\u77e9\u9635\u662f\u76f8\u540c\u7684\uff08\u7b2c1\u4e2a\uff09\u3002\u5f53\u6e32\u67d3\u7b2c\u4e8c\u4e2a\u5b9e\u4f8b\u7684\u9876\u70b9\u65f6\uff0c\u5c06\u4f7f\u7528\u7b2c\u4e8c\u4e2a\u6a21\u578b\u89c2\u5bdf\u77e9\u9635\u548c\u5149\u7167\u89c2\u5bdf\u77e9\u9635\u3002 \u56e0\u6b64\uff0c\u5728\u6e32\u67d3\u7b2c\u4e00\u4e2a\u5b9e\u4f8b\u7684\u7b2c\u4e00\u4e2a\u9876\u70b9\u65f6\uff0c\u5c06\u4f7f\u7528V11\u3001T11\u548cN11\u4f5c\u4e3a\u5750\u6807\u3001\u7eb9\u7406\u548c\u6cd5\u7ebf\u6570\u636e\uff0c\u5e76\u4f7f\u7528MV1\u4f5c\u4e3a\u6a21\u578b\u89c2\u5bdf\u77e9\u9635\u3002\u5f53\u6e32\u67d3\u540c\u4e00\u4e2a\u5b9e\u4f8b\u7684\u7b2c\u4e8c\u4e2a\u9876\u70b9\u65f6\uff0c\u5c06\u4f7f\u7528V12\u3001T12\u548cN12\u4f5c\u4e3a\u5750\u6807\u3001\u7eb9\u7406\u548c\u6cd5\u7ebf\u6570\u636e\uff0c\u4ecd\u4f7f\u7528MV1\u4f5c\u4e3a\u6a21\u578b\u89c2\u5bdf\u77e9\u9635\u3002\u5728\u6e32\u67d3\u7b2c\u4e8c\u4e2a\u5b9e\u4f8b\u4e4b\u524d\uff0c\u4e0d\u4f1a\u4f7f\u7528MV2\u548cLV2\u3002 \u4e3a\u4e86\u5b9a\u4e49\u6bcf\u4e2a\u5b9e\u4f8b\u6570\u636e\uff0c\u6211\u4eec\u9700\u8981\u5728\u9876\u70b9\u5c5e\u6027\u4e4b\u540e\u8c03\u7528\u51fd\u6570 glVertexAttribDivisor \u3002\u8be5\u51fd\u6570\u63a5\u6536\u4e24\u4e2a\u53c2\u6570\uff1a index\uff1a\u9876\u70b9\u5c5e\u6027\u7684\u7d22\u5f15\uff08\u5728 glVertexAttribPointer \u51fd\u6570\u4e2d\u8bbe\u7f6e\u7684\uff09\u3002 divisor: \u5982\u679c\u8fd9\u4e2a\u503c\u4e3a0\uff0c\u90a3\u4e48\u5728\u6e32\u67d3\u65f6\uff0c\u6bcf\u4e2a\u9876\u70b9\u7684\u6570\u636e\u90fd\u4f1a\u6539\u53d8\u3002\u5982\u679c\u5c06\u5176\u8bbe\u7f6e\u4e3a1\uff0c\u5219\u6bcf\u6e32\u67d3\u4e00\u4e2a\u5b9e\u4f8b\uff0c\u6570\u636e\u66f4\u6539\u4e00\u6b21\u3002\u5982\u679c\u5b83\u88ab\u8bbe\u7f6e\u4e3a2\uff0c\u5219\u6bcf\u6e32\u67d3\u4e24\u4e2a\u5b9e\u4f8b\u5c31\u4f1a\u66f4\u6539\u4e00\u6b21\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002 \u56e0\u6b64\uff0c\u4e3a\u4e86\u8bbe\u7f6e\u5b9e\u4f8b\u7684\u6570\u636e\uff0c\u6211\u4eec\u9700\u8981\u5728\u6bcf\u4e2a\u5c5e\u6027\u5b9a\u4e49\u4e4b\u540e\u8fdb\u884c\u5982\u4e0b\u8c03\u7528\uff1a glVertexAttribDivisor(index, 1); \u8ba9\u6211\u4eec\u5f00\u59cb\u4fee\u6539\u4ee3\u7801\u5e93\uff0c\u4ee5\u652f\u6301\u5b9e\u4f8b\u5316\u6e32\u67d3\u3002\u7b2c\u4e00\u6b65\u662f\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a InstancedMesh \u7684\u65b0\u7c7b\uff0c\u8be5\u7c7b\u7ee7\u627f\u81ea Mesh \u7c7b\u3002\u8be5\u7c7b\u7684\u6784\u9020\u51fd\u6570\u7c7b\u4f3c\u4e8e Mesh \u7684\u6784\u9020\u51fd\u6570\uff0c\u4f46\u6709\u4e00\u4e2a\u989d\u5916\u7684\u53c2\u6570\uff0c\u5373\u5b9e\u4f8b\u6570\u3002 \u5728\u6784\u9020\u51fd\u6570\u4e2d\uff0c\u9664\u4e86\u4f9d\u8d56\u8d85\u7c7b\u7684\u6784\u9020\u51fd\u6570\u5916\uff0c\u6211\u4eec\u8fd8\u5c06\u521b\u5efa\u4e24\u4e2a\u65b0\u7684VBO\uff0c\u4e00\u4e2a\u7528\u4e8e\u6a21\u578b\u89c2\u5bdf\u77e9\u9635\uff0c\u53e6\u4e00\u4e2a\u7528\u4e8e\u5149\u7167\u89c2\u5bdf\u77e9\u9635\u3002\u521b\u5efa\u6a21\u578b\u89c2\u5bdf\u77e9\u9635\u7684\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a modelViewVBO = glGenBuffers(); vboIdList.add(modelViewVBO); this.modelViewBuffer = MemoryUtil.memAllocFloat(numInstances * MATRIX_SIZE_FLOATS); glBindBuffer(GL_ARRAY_BUFFER, modelViewVBO); int start = 5; for (int i = 0; i < 4; i++) { glVertexAttribPointer(start, 4, GL_FLOAT, false, MATRIX_SIZE_BYTES, i * VECTOR4F_SIZE_BYTES); glVertexAttribDivisor(start, 1); start++; } \u6211\u4eec\u9996\u5148\u8981\u505a\u7684\u4e8b\u662f\u521b\u5efa\u4e00\u4e2a\u65b0\u7684VBO\u548c\u4e00\u4e2a\u65b0\u7684 FloatBuffer \u4ee5\u5728\u5176\u5185\u50a8\u5b58\u6570\u636e\u3002\u7f13\u51b2\u533a\u7684\u5927\u5c0f\u662f\u7528\u6d6e\u70b9\u6570\u6570\u91cf\u8ba1\u7b97\u7684\uff0c\u6240\u4ee5\u5b83\u7b49\u4e8e\u5b9e\u4f8b\u6570\u4e58\u4ee54x4\u77e9\u9635\u7684\u6d6e\u70b9\u6570\u5927\u5c0f\uff08\u7b49\u4e8e16\uff09\u3002 \u4e00\u65e6VBO\u88ab\u7ed1\u5b9a\uff0c\u6211\u4eec\u5c31\u5f00\u59cb\u4e3a\u5b83\u5b9a\u4e49\u5c5e\u6027\u3002\u4f60\u53ef\u4ee5\u770b\u5230\u8fd9\u662f\u5728 for \u5faa\u73af\u4e2d\u5b8c\u6210\u7684\uff0c\u5faa\u73af\u8fdb\u884c\u4e86\u56db\u6b21\u3002\u6bcf\u8f6e\u5faa\u73af\u5b9a\u4e49\u4e00\u4e2a\u77e9\u9635\u5411\u91cf\u3002\u4e3a\u4ec0\u4e48\u4e0d\u7b80\u5355\u5730\u4e3a\u6574\u4e2a\u77e9\u9635\u5b9a\u4e49\u4e00\u4e2a\u5c5e\u6027\u5462\uff1f\u539f\u56e0\u662f\u9876\u70b9\u5c5e\u6027\u4e0d\u80fd\u50a8\u5b58\u8d85\u8fc7\u56db\u4e2a\u6d6e\u70b9\u6570\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u628a\u77e9\u9635\u5b9a\u4e49\u5206\u4e3a\u56db\u90e8\u5206\u3002\u8ba9\u6211\u4eec\u91cd\u65b0\u8ba4\u8bc6\u4e00\u4e0b glVertexAttribPointer \u7684\u53c2\u6570\uff1a Index: \u8981\u5b9a\u4e49\u7684\u5143\u7d20\u7684\u7d22\u5f15\u3002 Size: \u8be5\u5c5e\u6027\u7684\u5206\u91cf\u6570\u3002\u5728\u672c\u4f8b\u4e2d\uff0c\u5b83\u662f\u56db\u4e2a\u6d6e\u70b9\u6570\uff0c\u8fd9\u662f\u53ef\u63a5\u53d7\u7684\u6700\u5927\u503c\u3002 Type: \u6570\u636e\u7c7b\u578b\uff08\u5728\u672c\u4f8b\u4e2d\u4e3a\u6d6e\u70b9\u578b\uff09\u3002 Normalize: \u662f\u5426\u5e94\u8be5\u5f52\u4e00\u5316\u6307\u5b9a\u6570\u636e\u3002 Stride\uff08\u6b65\u957f\uff09: \u7406\u89e3\u8fd9\u91cc\u7684\u6982\u5ff5\u5f88\u91cd\u8981\uff0c\u5b83\u8bbe\u7f6e\u4e86\u8fde\u7eed\u5c5e\u6027\u4e4b\u95f4\u7684\u5b57\u8282\u504f\u79fb\u91cf\u3002\u5728\u672c\u4f8b\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u5c06\u5176\u8bbe\u7f6e\u4e3a\u6574\u4e2a\u77e9\u9635\u7684\u5b57\u8282\u5927\u5c0f\u3002\u8fd9\u5c31\u50cf\u4e00\u4e2a\u7528\u4e8e\u5305\u88c5\u6570\u636e\u7684\u6807\u8bb0\uff0c\u4ece\u800c\u53ef\u4ee5\u5728\u9876\u70b9\u6216\u5b9e\u4f8b\u4e4b\u95f4\u8fdb\u884c\u66f4\u6539\u3002 Pointer: \u6b64\u5c5e\u6027\u5b9a\u4e49\u5e94\u7528\u7684\u504f\u79fb\u91cf\u3002\u5728\u672c\u4f8b\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u5c06\u77e9\u9635\u5b9a\u4e49\u62c6\u5206\u4e3a\u56db\u6b21\u8c03\u7528\u3002\u4f9d\u77e9\u9635\u7684\u6bcf\u4e2a\u5411\u91cf\u589e\u52a0\u504f\u79fb\u91cf\u3002 \u5b9a\u4e49\u4e86\u9876\u70b9\u5c5e\u6027\u4e4b\u540e\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528\u76f8\u540c\u7684\u7d22\u5f15\u8c03\u7528 glVertexAttribDivisor \u3002 \u5149\u7167\u89c2\u5bdf\u77e9\u9635\u7684\u5b9a\u4e49\u4e0e\u4e0a\u8ff0\u8fc7\u7a0b\u7c7b\u4f3c\uff0c\u4f60\u53ef\u4ee5\u5728\u6e90\u4ee3\u7801\u4e2d\u67e5\u770b\u5b83\u3002\u7ee7\u7eed\u8fdb\u884c InstancedMesh \u7c7b\u7684\u5b9a\u4e49\uff0c\u91cd\u5199\u65b9\u6cd5\u4ee5\u5728\u6e32\u67d3\u4e4b\u524d\u542f\u7528\u9876\u70b9\u5c5e\u6027\uff08\u4ee5\u53ca\u5728\u6e32\u67d3\u4e4b\u540e\u8981\u7981\u7528\u5b83\u4eec\uff09\u662f\u5f88\u91cd\u8981\u7684\u3002 @Override protected void initRender() { super.initRender(); int start = 5; int numElements = 4 * 2; for (int i = 0; i < numElements; i++) { glEnableVertexAttribArray(start + i); } } @Override protected void endRender() { int start = 5; int numElements = 4 * 2; for (int i = 0; i < numElements; i++) { glDisableVertexAttribArray(start + i); } super.endRender(); } InstancedMesh \u7c7b\u5b9a\u4e49\u4e86\u4e00\u4e2a\u540d\u4e3a renderListInstanced \u7684\u516c\u5171\u65b9\u6cd5\uff0c\u5b83\u6e32\u67d3\u4e00\u7cfb\u5217\u7684\u6e38\u620f\u9879\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u5c06\u6e38\u620f\u9879\u5217\u8868\u5206\u5272\u4e3a\u5927\u5c0f\u4e0e\u521b\u5efa InstancedMesh \u6240\u8bbe\u5b9e\u4f8b\u6570\u91cf\u76f8\u7b49\u7684\u5757\u3002\u771f\u6b63\u7684\u6e32\u67d3\u65b9\u6cd5\u662f renderChunkInstanced \uff0c\u5b9a\u4e49\u5982\u4e0b\uff1a private void renderChunkInstanced(List<GameItem> gameItems, boolean depthMap, Transformation transformation, Matrix4f viewMatrix, Matrix4f lightViewMatrix) { this.modelViewBuffer.clear(); this.modelLightViewBuffer.clear(); int i = 0; for (GameItem gameItem : gameItems) { Matrix4f modelMatrix = transformation.buildModelMatrix(gameItem); if (!depthMap) { Matrix4f modelViewMatrix = transformation.buildModelViewMatrix(modelMatrix, viewMatrix); modelViewMatrix.get(MATRIX_SIZE_FLOATS * i, modelViewBuffer); } Matrix4f modelLightViewMatrix = transformation.buildModelLightViewMatrix(modelMatrix, lightViewMatrix); modelLightViewMatrix.get(MATRIX_SIZE_FLOATS * i, this.modelLightViewBuffer); i++; } glBindBuffer(GL_ARRAY_BUFFER, modelViewVBO); glBufferData(GL_ARRAY_BUFFER, modelViewBuffer, GL_DYNAMIC_DRAW); glBindBuffer(GL_ARRAY_BUFFER, modelLightViewVBO); glBufferData(GL_ARRAY_BUFFER, modelLightViewBuffer, GL_DYNAMIC_DRAW); glDrawElementsInstanced(GL_TRIANGLES, getVertexCount(), GL_UNSIGNED_INT, 0, gameItems.size()); glBindBuffer(GL_ARRAY_BUFFER, 0); } \u8be5\u65b9\u6cd5\u5f88\u7b80\u5355\uff0c\u6211\u4eec\u904d\u5386\u6e38\u620f\u9879\uff0c\u8ba1\u7b97\u6a21\u578b\u89c2\u5bdf\u77e9\u9635\u548c\u5149\u7167\u89c2\u5bdf\u77e9\u9635\u3002\u8fd9\u4e9b\u77e9\u9635\u88ab\u8f6c\u50a8\u5230\u5b83\u4eec\u5404\u81ea\u7684\u7f13\u51b2\u533a\u4e2d\u3002\u8fd9\u4e9b\u7f13\u51b2\u533a\u7684\u5185\u5bb9\u88ab\u53d1\u9001\u5230GPU\uff0c\u6700\u540e\u901a\u8fc7\u5bf9\u65b9\u6cd5 glDrawElementsInstanced \u7684\u8c03\u7528\u6765\u6e32\u67d3\u5b83\u4eec\u3002 \u56de\u5230\u7740\u8272\u5668\uff0c\u6211\u4eec\u9700\u8981\u4fee\u6539\u9876\u70b9\u7740\u8272\u5668\u4ee5\u652f\u6301\u5b9e\u4f8b\u5316\u6e32\u67d3\u3002\u9996\u5148\u6211\u4eec\u4e3a\u6a21\u578b\u89c2\u5bdf\u77e9\u9635\u6dfb\u52a0\u65b0\u7684\u8f93\u5165\u53c2\u6570\uff0c\u8fd9\u4e9b\u53c2\u6570\u5c06\u5728\u4f7f\u7528\u5b9e\u4f8b\u5316\u6e32\u67d3\u65f6\u4f20\u9012\u3002 layout (location=5) in mat4 modelViewInstancedMatrix; layout (location=9) in mat4 modelLightViewInstancedMatrix; \u5982\u4f60\u6240\u89c1\uff0c\u6a21\u578b\u89c2\u5bdf\u77e9\u9635\u4ece\u4f4d\u7f6e5\u5f00\u59cb\u3002\u7531\u4e8e\u77e9\u9635\u662f\u7531\u4e00\u7ec4\u5171\u56db\u4e2a\u5c5e\u6027\uff08\u6bcf\u4e2a\u5c5e\u6027\u50a8\u5b58\u4e00\u4e2a\u5411\u91cf\uff09\u5b9a\u4e49\u7684\uff0c\u6240\u4ee5\u5149\u7167\u89c2\u5bdf\u77e9\u9635\u4ece\u4f4d\u7f6e9\u5f00\u59cb\u3002\u56e0\u4e3a\u6211\u4eec\u60f3\u5728\u975e\u5b9e\u4f8b\u5316\u6e32\u67d3\u548c\u5b9e\u4f8b\u5316\u6e32\u67d3\u4e2d\u4f7f\u7528\u540c\u4e00\u7740\u8272\u5668\uff0c\u6240\u4ee5\u6211\u4eec\u5c06\u7ef4\u62a4\u6a21\u578b\u89c2\u5bdf\u77e9\u9635\u548c\u5149\u7167\u89c2\u5bdf\u77e9\u9635\u7684Uniform\u3002\u6211\u4eec\u53ea\u9700\u66f4\u6539\u5b83\u4eec\u7684\u540d\u5b57\u3002 uniform int isInstanced; uniform mat4 modelViewNonInstancedMatrix; \u2026 uniform mat4 modelLightViewNonInstancedMatrix; \u6211\u4eec\u521b\u5efa\u4e86\u53e6\u4e00\u4e2aUniform\u6765\u6307\u5b9a\u662f\u5426\u4f7f\u7528\u5b9e\u4f8b\u5316\u6e32\u67d3\u3002\u5728\u4f7f\u7528\u5b9e\u4f8b\u5316\u6e32\u67d3\u7684\u60c5\u51b5\u4e0b\u4ee3\u7801\u975e\u5e38\u7b80\u5355\uff0c\u6211\u4eec\u53ea\u4f7f\u7528\u8f93\u5165\u53c2\u6570\u4e2d\u7684\u77e9\u9635\u3002 void main() { vec4 initPos = vec4(0, 0, 0, 0); vec4 initNormal = vec4(0, 0, 0, 0); mat4 modelViewMatrix; mat4 lightViewMatrix; if ( isInstanced > 0 ) { modelViewMatrix = modelViewInstancedMatrix; lightViewMatrix = modelLightViewInstancedMatrix; initPos = vec4(position, 1.0); initNormal = vec4(vertexNormal, 0.0); } \u6211\u4eec\u6682\u65f6\u4e0d\u652f\u6301\u52a8\u753b\u5b9e\u4f8b\u5316\u6e32\u67d3\uff0c\u4ee5\u7b80\u5316\u793a\u4f8b\uff0c\u4f46\u662f\u8be5\u6280\u672f\u53ef\u4ee5\u5b8c\u7f8e\u5730\u7528\u4e8e\u6b64\u5904\u3002 \u6700\u540e\uff0c\u7740\u8272\u5668\u50cf\u5f80\u5e38\u4e00\u6837\u8bbe\u7f6e\u6070\u5f53\u7684\u503c\u3002 vec4 mvPos = modelViewMatrix * initPos; gl_Position = projectionMatrix * mvPos; outTexCoord = texCoord; mvVertexNormal = normalize(modelViewMatrix * initNormal).xyz; mvVertexPos = mvPos.xyz; mlightviewVertexPos = orthoProjectionMatrix * lightViewMatrix * initPos; outModelViewMatrix = modelViewMatrix; } \u5f53\u7136\uff0c Renderer \u7c7b\u5df2\u7ecf\u88ab\u4fee\u6539\uff0c\u4ee5\u652f\u6301Uniform\u7684\u4fee\u6539\uff0c\u5e76\u5c06\u975e\u5b9e\u4f8b\u5316\u7f51\u683c\u7684\u6e32\u67d3\u4ece\u5b9e\u4f8b\u5316\u7f51\u683c\u4e2d\u5206\u79bb\u51fa\u6765\u3002\u4f60\u53ef\u4ee5\u67e5\u770b\u6e90\u4ee3\u7801\u4e2d\u7684\u4fee\u6539\u3002 \u6b64\u5916\uff0cJOML\u7684\u4f5c\u8005 Kai Burjack \u8fd8\u5411\u6e90\u4ee3\u7801\u6dfb\u52a0\u4e86\u4e00\u4e9b\u4f18\u5316\u3002\u8fd9\u4e9b\u4f18\u5316\u5df2\u7ecf\u7528\u4e8e Transformation \u7c7b\uff0c\u5e76\u603b\u7ed3\u4e3a\u5982\u4e0b\u51e0\u6761\uff1a \u5220\u9664\u5197\u4f59\u8c03\u7528\uff0c\u4ee5\u8bbe\u7f6e\u5177\u6709\u5355\u4f4d\u503c\u7684\u77e9\u9635\u3002 \u4f7f\u7528\u56db\u5143\u6570\u8fdb\u884c\u66f4\u6709\u6548\u7684\u65cb\u8f6c\u3002 \u4f7f\u7528\u7279\u5b9a\u7684\u65cb\u8f6c\u548c\u5e73\u79fb\u77e9\u9635\u7684\u65b9\u6cd5\uff0c\u8fd9\u4e9b\u65b9\u6cd5\u662f\u9488\u5bf9\u8fd9\u4e9b\u64cd\u4f5c\u4f18\u5316\u7684\u3002","title":"\u5f88\u591a\u5b9e\u4f8b"},{"location":"21-instanced-rendering/#_2","text":"\u5728\u5b9e\u4f8b\u5316\u6e32\u67d3\u7684\u652f\u6301\u4e0b\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u63d0\u9ad8\u7c92\u5b50\u6e32\u67d3\u7684\u6027\u80fd\u3002\u7c92\u5b50\u5c31\u662f\u6700\u597d\u7684\u7528\u4f8b\u3002 \u4e3a\u4e86\u5c06\u5b9e\u4f8b\u5316\u6e32\u67d3\u5e94\u7528\u5230\u7c92\u5b50\u4e0a\u6211\u4eec\u5fc5\u987b\u63d0\u4f9b\u5bf9\u7eb9\u7406\u96c6\u7684\u652f\u6301\u3002\u8fd9\u53ef\u4ee5\u901a\u8fc7\u6dfb\u52a0\u4e00\u4e2a\u5e26\u6709\u7eb9\u7406\u504f\u79fb\u91cf\u7684VBO\u6765\u5b9e\u73b0\u3002\u7eb9\u7406\u504f\u79fb\u91cf\u53ef\u4ee5\u7531\u4e24\u4e2a\u6d6e\u70b9\u6570\u7ec4\u6210\u7684\u5355\u4e2a\u5411\u91cf\u5b9a\u4e49\uff0c\u56e0\u6b64\u4e0d\u9700\u8981\u50cf\u77e9\u9635\u90a3\u6837\u62c6\u5206\u5b9a\u4e49\u3002 // \u7eb9\u7406\u504f\u79fb\u91cf glVertexAttribPointer(start, 2, GL_FLOAT, false, INSTANCE_SIZE_BYTES, strideStart); glVertexAttribDivisor(start, 1); \u4f46\u662f\uff0c\u6211\u4eec\u5c06\u5728\u5355\u4e2aVBO\u4e2d\u8bbe\u7f6e\u6240\u6709\u5b9e\u4f8b\u5c5e\u6027\uff0c\u800c\u4e0d\u662f\u6dfb\u52a0\u4e00\u4e2a\u65b0\u7684VBO\u3002\u4e0b\u56fe\u5c55\u793a\u4e86\u8fd9\u4e2a\u6982\u5ff5\u3002\u6211\u4eec\u5c06\u6240\u6709\u5c5e\u6027\u6253\u5305\u5728\u4e00\u4e2aVBO\u4e2d\uff0c\u6bcf\u4e2a\u5b9e\u4f8b\u7684\u503c\u90fd\u4f1a\u53d1\u751f\u53d8\u5316\u3002 \u4e3a\u4e86\u4f7f\u7528\u5355\u4e2aVBO\uff0c\u6211\u4eec\u9700\u8981\u4fee\u6539\u5b9e\u4f8b\u4e2d\u6240\u6709\u5c5e\u6027\u7684\u5c5e\u6027\u5927\u5c0f\u3002\u4ece\u4e0a\u8ff0\u4ee3\u7801\u4e2d\u53ef\u4ee5\u770b\u5230\uff0c\u7eb9\u7406\u504f\u79fb\u91cf\u7684\u5b9a\u4e49\u4f7f\u7528\u4e86\u4e00\u4e2a\u540d\u4e3a INSTANCE_SIZE_BYTES \u7684\u5e38\u91cf\u3002\u8fd9\u4e2a\u5e38\u91cf\u7b49\u4e8e\u4e24\u4e2a\u77e9\u9635\uff08\u4e00\u4e2a\u7528\u4e8e\u6a21\u578b\u89c2\u5bdf\u77e9\u9635\u5b9a\u4e49\uff0c\u53e6\u4e00\u4e2a\u7528\u4e8e\u5149\u7167\u89c2\u5bdf\u77e9\u9635\u5b9a\u4e49\uff09\u7684\u5b57\u8282\u5927\u5c0f\u518d\u52a0\u4e0a\u4e24\u4e2a\u6d6e\u70b9\u6570\uff08\u7eb9\u7406\u504f\u79fb\u91cf\uff09\u7684\u5b57\u8282\u5927\u5c0f\uff0c\u603b\u5171\u662f136\u3002\u6b65\u957f\u4e5f\u9700\u8981\u9002\u5f53\u5730\u8c03\u6574\u3002 \u4f60\u53ef\u4ee5\u5728\u6e90\u4ee3\u7801\u4e2d\u67e5\u770b\u4fee\u6539\u3002 Renderer \u7c7b\u4e5f\u9700\u8981\u4fee\u6539\uff0c\u4ee5\u5b9e\u7528\u5b9e\u4f8b\u5316\u6e32\u67d3\u7c92\u5b50\u548c\u652f\u6301\u7eb9\u7406\u96c6\u5728\u573a\u666f\u4e2d\u6e32\u67d3\u3002\u5728\u672c\u4f8b\u4e2d\uff0c\u652f\u6301\u8fd9\u4e24\u79cd\u7c7b\u578b\uff08\u975e\u5b9e\u4f8b\u5316\u548c\u5b9e\u4f8b\u5316\uff09\u7684\u6e32\u67d3\u662f\u6ca1\u6709\u610f\u4e49\u7684\uff0c\u6240\u4ee5\u4fee\u6539\u66f4\u7b80\u5355\u3002 \u7c92\u5b50\u7684\u9876\u70b9\u7740\u8272\u5668\u5982\u4e0b\u6240\u793a\uff1a #version 330 layout (location=0) in vec3 position; layout (location=1) in vec2 texCoord; layout (location=2) in vec3 vertexNormal; layout (location=5) in mat4 modelViewMatrix; layout (location=13) in vec2 texOffset; out vec2 outTexCoord; uniform mat4 projectionMatrix; uniform int numCols; uniform int numRows; void main() { gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0); // \u652f\u6301\u7eb9\u7406\u96c6\uff0c\u66f4\u65b0\u7eb9\u7406\u5750\u6807 float x = (texCoord.x / numCols + texOffset.x); float y = (texCoord.y / numRows + texOffset.y); outTexCoord = vec2(x, y);} \u4e0a\u8ff0\u4fee\u6539\u7684\u6548\u679c\uff0c\u770b\u8d77\u6765\u548c\u975e\u5b9e\u4f8b\u5316\u7c92\u5b50\u6e32\u67d3\u65f6\u5b8c\u5168\u4e00\u6837\uff0c\u4f46\u6027\u80fd\u66f4\u9ad8\u3002FPS\u8ba1\u6570\u5668\u5df2\u4f5c\u4e3a\u9009\u9879\u6dfb\u52a0\u5230\u7a97\u53e3\u6807\u9898\u4e2d\u3002\u4f60\u53ef\u4ee5\u4f7f\u7528\u5b9e\u4f8b\u5316\u6e32\u67d3\u548c\u975e\u5b9e\u4f8b\u5316\u6e32\u67d3\u6765\u770b\u770b\u81ea\u8eab\u7684\u6027\u80fd\u63d0\u5347\u3002","title":"\u56de\u987e\u7c92\u5b50"},{"location":"21-instanced-rendering/#_3","text":"\u7ed3\u5408\u6211\u4eec\u73b0\u5728\u6240\u62e5\u6709\u7684\u6240\u6709\u57fa\u7840\u6784\u9020\uff0c\u6211\u5df2\u7ecf\u57fa\u4e8e\u4f7f\u7528\u9ad8\u5ea6\u56fe\u4fee\u6539\u4e86\u6e32\u67d3\u65b9\u5757\u6570\u636e\u7684\u4ee3\u7801\uff0c\u8fd8\u4f7f\u7528\u4e86\u7eb9\u7406\u96c6\u4ee5\u4f7f\u7528\u4e0d\u540c\u7684\u7eb9\u7406\u3002\u5b83\u8fd8\u878d\u5408\u4e86\u7c92\u5b50\u6e32\u67d3\u3002\u770b\u8d77\u6765\u662f\u8fd9\u6837\u7684\uff1a \u8bf7\u8bb0\u4f4f\uff0c\u8fd9\u8fd8\u6709\u5f88\u5927\u7684\u4f18\u5316\u7a7a\u95f4\uff0c\u4f46\u8fd9\u672c\u4e66\u7684\u76ee\u7684\u662f\u6307\u5bfc\u4f60\u5b66\u4e60LWJGL\u548cOpenGL\u7684\u6982\u5ff5\u548c\u6280\u672f\u3002\u6211\u4eec\u7684\u76ee\u6807\u4e0d\u662f\u521b\u5efa\u4e00\u4e2a\u5b8c\u6574\u7684\u6e38\u620f\u5f15\u64ce\uff08\u7edd\u5bf9\u4e0d\u662f\u4e00\u4e2a\u4f53\u7d20\u5f15\u64ce\uff0c\u5b83\u9700\u8981\u4e0d\u540c\u7684\u65b9\u6cd5\u548c\u66f4\u591a\u7684\u4f18\u5316\uff09\u3002","title":"\u6269\u5c55"},{"location":"22-audio/","text":"\u97f3\u9891\uff08Audio\uff09 \u5728\u6b64\u4e4b\u524d\u6211\u4eec\u4e00\u76f4\u5728\u5904\u7406\u56fe\u50cf\uff0c\u4f46\u6bcf\u4e2a\u6e38\u620f\u7684\u53e6\u4e00\u4e2a\u5173\u952e\u9762\u662f\u97f3\u9891\u3002\u672c\u7ae0\u5c06\u5728 OpenAL \uff08Open Audio Library\uff0c\u5f00\u653e\u97f3\u9891\u5e93\uff09\u7684\u5e2e\u52a9\u4e0b\u5b9e\u73b0\u8fd9\u4e2a\u529f\u80fd\u3002OpenAL\u5c31\u50cf\u662fOpenGL\u5728\u97f3\u9891\u7684\u76f8\u4f3c\u7269\uff0c\u5b83\u5141\u8bb8\u6211\u4eec\u901a\u8fc7\u62bd\u8c61\u5c42\u64ad\u653e\u58f0\u97f3\u3002\u8be5\u5c42\u5c06\u6211\u4eec\u4e0e\u97f3\u9891\u5b50\u7cfb\u7edf\u7684\u590d\u6742\u5e95\u5c42\u9694\u79bb\u5f00\u6765\u3002\u6b64\u5916\uff0c\u5b83\u8fd8\u5141\u8bb8\u6211\u4eec\u53ef\u4ee5\u4e09\u7ef4\u573a\u666f\u4e2d\u7279\u5b9a\u7684\u4f4d\u7f6e\u8bbe\u7f6e\u58f0\u97f3\uff0c\u201c\u6e32\u67d3\u201d\u58f0\u97f3\uff0c\u968f\u7740\u8ddd\u79bb\u8870\u51cf\u5e76\u6839\u636e\u5b83\u4eec\u7684\u901f\u5ea6\u8fdb\u884c\u4fee\u6539\uff08\u6a21\u62df \u591a\u666e\u52d2\u6548\u5e94 \uff09\u3002 LWJGL\u652f\u6301OpenGL\uff0c\u4e0d\u9700\u8981\u4efb\u4f55\u989d\u5916\u7684\u4e0b\u8f7d\uff0c\u5b83\u5c31\u5df2\u7ecf\u53ef\u4ee5\u4f7f\u7528\u4e86\u3002\u4f46\u662f\u5728\u5f00\u59cb\u5199\u4ee3\u7801\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u4ecb\u7ecd\u5904\u7406OpenGL\u65f6\u6240\u6d89\u53ca\u7684\u4e3b\u8981\u5143\u7d20\uff0c\u5b83\u4eec\u662f\uff1a \u7f13\u51b2\u533a\uff08Buffer\uff09\u3002 \u58f0\u6e90\uff08Source\uff09\u3002 \u4fa6\u542c\u8005\uff08Listener\uff09\u3002 \u7f13\u51b2\u533a\u50a8\u5b58\u97f3\u9891\u6570\u636e\uff0c\u5373\u97f3\u4e50\u6216\u97f3\u6548\u3002\u5b83\u4eec\u7c7b\u4f3c\u4e8eOpenGL\u4e2d\u7684\u7eb9\u7406\u3002OpenAL\u5e0c\u671b\u97f3\u9891\u6570\u636e\u91c7\u7528PCM\uff08Pulse Coded Modulation\uff0c\u8109\u51b2\u7f16\u7801\u8c03\u5236\uff09\u683c\u5f0f\uff08\u5355\u58f0\u9053\u6216\u591a\u58f0\u9053\uff09\uff0c\u56e0\u6b64\u6211\u4eec\u4e0d\u80fd\u53ea\u8f6c\u50a8MP3\u6216OGG\u6587\u4ef6\u800c\u4e0d\u9996\u5148\u5c06\u5b83\u4eec\u8f6c\u6362\u4e3aPCM\u3002 \u4e0b\u4e00\u4e2a\u5143\u7d20\u662f\u58f0\u6e90\uff0c\u5b83\u8868\u793a\u53d1\u51fa\u58f0\u97f3\u7684\u4e09\u7ef4\u7a7a\u95f4\u4e2d\u7684\u4f4d\u7f6e\uff08\u4e00\u4e2a\u70b9\uff09\u3002\u58f0\u6e90\u4e0e\u7f13\u51b2\u533a\u5173\u8054\uff08\u4e00\u6b21\u53ea\u80fd\u6709\u4e00\u4e2a\uff09\uff0c\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u5c5e\u6027\u5b9a\u4e49\uff1a \u4f4d\u7f6e\uff0c\u58f0\u6e90\u7684\u4f4d\u7f6e\uff08 x \uff0c y \u548c z \u5750\u6807\uff09\u3002\u987a\u4fbf\u4e00\u63d0\uff0cOpenAL\u548cOpenGL\u4e00\u6837\u4f7f\u7528\u53f3\u624b\u7b1b\u5361\u5c14\u5750\u6807\u7cfb\uff0c\u6240\u4ee5\u4f60\u53ef\u4ee5\u5047\u8bbe\uff08\u4e3a\u4e86\u7b80\u5316\uff09\u4f60\u7684\u4e16\u754c\u5750\u6807\u7b49\u4e8e\u58f0\u97f3\u7a7a\u95f4\u5750\u6807\u7cfb\u4e2d\u7684\u5750\u6807\u3002 \u901f\u5ea6\uff0c\u5b83\u6307\u5b9a\u58f0\u6e90\u79fb\u52a8\u7684\u901f\u5ea6\u3002\u8fd9\u662f\u7528\u6765\u6a21\u62df\u591a\u666e\u52d2\u6548\u5e94\u7684\u3002 \u589e\u76ca\uff0c\u7528\u6765\u6539\u53d8\u58f0\u97f3\u7684\u5927\u5c0f\uff08\u5c31\u50cf\u662f\u4e00\u4e2a\u653e\u5927\u56e0\u6570\uff09\u3002 \u6e90\u4ee3\u7801\u4e2d\u6709\u989d\u5916\u7684\u5c5e\u6027\uff0c\u7a0d\u540e\u5728\u8bb2\u89e3\u6e90\u4ee3\u7801\u65f6\u5c06\u63cf\u8ff0\u8fd9\u4e9b\u5c5e\u6027\u3002 \u6700\u540e\u4f46\u5e76\u4e0d\u91cd\u8981\u7684\u662f\uff0c\u4fa6\u542c\u8005\u662f\u662f\u4ea7\u751f\u7684\u58f0\u97f3\u5e94\u8be5\u88ab\u542c\u5230\u7684\u5730\u65b9\u3002\u4fa6\u542c\u5668\u5c31\u50cf\u662f\u88ab\u8bbe\u7f6e\u5728\u4e09\u7ef4\u97f3\u9891\u573a\u666f\u4e2d\u7528\u6765\u63a5\u6536\u58f0\u97f3\u7684\u9ea6\u514b\u98ce\u3002\u73b0\u5728\u53ea\u6709\u4e00\u4e2a\u4fa6\u542c\u5668\u3002\u56e0\u6b64\uff0c\u4eba\u4eec\u5e38\u8bf4\u7684\u97f3\u9891\u6e32\u67d3\u662f\u4ee5\u542c\u4f17\u7684\u89d2\u5ea6\u5b8c\u6210\u7684\u3002\u4fa6\u542c\u5668\u5171\u4eab\u4e00\u4e9b\u5c5e\u6027\uff0c\u4f46\u5b83\u8fd8\u6709\u4e00\u4e9b\u9644\u52a0\u5c5e\u6027\uff0c\u6bd4\u5982\u65b9\u5411\u3002\u65b9\u5411\u8868\u793a\u4fa6\u542c\u5668\u6240\u9762\u671d\u7684\u4f4d\u7f6e\u3002 \u56e0\u6b64\uff0c\u4e09\u7ef4\u97f3\u9891\u573a\u666f\u6709\u4e00\u7ec4\u53d1\u51fa\u58f0\u97f3\u7684\u58f0\u6e90\u548c\u63a5\u6536\u58f0\u97f3\u7684\u4fa6\u542c\u5668\u7ec4\u6210\u3002\u6700\u7ec8\u542c\u5230\u7684\u58f0\u97f3\u53d6\u51b3\u4e8e\u542c\u8005\u5230\u4e0d\u540c\u58f0\u6e90\u7684\u8ddd\u79bb\u3001\u76f8\u5bf9\u901f\u5ea6\u548c\u9009\u62e9\u7684\u4f20\u64ad\u6a21\u578b\uff08Propagation Model\uff09\u3002\u4e0b\u56fe\u5c55\u793a\u4e86\u4e00\u4e2a\u5305\u542b\u4e0d\u540c\u5143\u7d20\u7c7b\u578b\u7684\u4e09\u7ef4\u573a\u666f\u3002 \u90a3\u4e48\uff0c\u8ba9\u6211\u4eec\u5f00\u59cb\u7f16\u5199\u4ee3\u7801\uff0c\u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a org.lwjglb.engine.sound \u7684\u65b0\u5305\uff0c\u5b83\u5c06\u8d1f\u8d23\u7ba1\u7406\u6240\u6709\u8d1f\u8d23\u5904\u7406\u97f3\u9891\u7684\u7c7b\u3002\u6211\u4eec\u5c06\u9996\u5148\u4ece\u4e00\u4e2a\u540d\u4e3a SoundBuffer \u7684\u7c7b\u5f00\u59cb\uff0c\u5b83\u5c06\u8868\u793a\u4e00\u4e2aOpenAL\u7f13\u51b2\u533a\u3002\u8be5\u7c7b\u7684\u5b9a\u4e49\u5982\u4e0b\u7684\u4e00\u4e2a\u4ee3\u7801\u7247\u6bb5\u6240\u793a\uff1a package org.lwjglb.engine.sound; // import ... public class SoundBuffer { private final int bufferId; public SoundBuffer(String file) throws Exception { this.bufferId = alGenBuffers(); try (STBVorbisInfo info = STBVorbisInfo.malloc()) { ShortBuffer pcm = readVorbis(file, 32 * 1024, info); // \u590d\u5236\u5230\u7f13\u51b2\u533a alBufferData(buffer, info.channels() == 1 ? AL_FORMAT_MONO16 : AL_FORMAT_STEREO16, pcm, info.sample_rate()); } } public int getBufferId() { return this.bufferId; } public void cleanup() { alDeleteBuffers(this.bufferId); } // ... } \u8be5\u7c7b\u7684\u6784\u9020\u51fd\u6570\u9700\u8981\u4e00\u4e2a\u58f0\u97f3\u6587\u4ef6\uff08\u5b83\u53ef\u80fd\u4e0e\u5176\u4ed6\u8d44\u6e90\u4e00\u6837\u4f4d\u4e8e\u7c7b\u8def\u5f84\u4e2d\uff09\uff0c\u5e76\u4ece\u4e2d\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u7f13\u51b2\u533a\u3002\u6211\u4eec\u8981\u505a\u7684\u7b2c\u4e00\u4ef6\u4e8b\u662f\u8c03\u7528 alGenBuffers \u521b\u5efa\u4e00\u4e2aOpenAL\u7f13\u51b2\u533a\u3002\u6700\u540e\uff0c\u6211\u4eec\u7684\u58f0\u97f3\u7f13\u51b2\u533a\u5c06\u7528\u4e00\u4e2a\u6574\u6570\u6765\u8868\u793a\uff0c\u5c31\u50cf\u4e00\u4e2a\u6307\u5411\u5b83\u6240\u6301\u6709\u7684\u6570\u636e\u7684\u6307\u9488\u3002\u4e00\u65e6\u521b\u5efa\u4e86\u7f13\u51b2\u533a\uff0c\u6211\u4eec\u5c31\u5c06\u97f3\u9891\u6570\u636e\u8f6c\u50a8\u5230\u5176\u4e2d\u3002\u6784\u9020\u51fd\u6570\u9700\u8981OGG\u683c\u5f0f\u7684\u6587\u4ef6\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u5c06\u5176\u8f6c\u6362\u4e3aPCM\u683c\u5f0f\u3002\u4f60\u53ef\u4ee5\u67e5\u770b\u8fd9\u5982\u4f55\u5728\u6e90\u4ee3\u7801\u4e2d\u5b8c\u6210\u7684\uff0c\u65e0\u8bba\u5982\u4f55\uff0c\u6e90\u4ee3\u7801\u662f\u4eceLWJGL\u7684OpenAL\u6d4b\u8bd5\u4e2d\u63d0\u53d6\u7684\u3002 \u6b64\u524d\u7248\u672c\u7684LWJGL\u6709\u4e00\u4e2a\u540d\u4e3a WaveData \u7684\u5e2e\u52a9\u7c7b\uff0c\u7528\u4e8e\u52a0\u8f7dWAV\u683c\u5f0f\u7684\u97f3\u9891\u6587\u4ef6\u3002\u8fd9\u4e2a\u7c7b\u4e0d\u518d\u51fa\u73b0\u5728LWJGL3\u4e2d\u3002\u4e0d\u8fc7\uff0c\u4f60\u53ef\u4ee5\u4ece\u8be5\u7c7b\u83b7\u5f97\u6e90\u4ee3\u7801\u5e76\u5728\u6e38\u620f\u4e2d\u4f7f\u7528\u5b83\uff08\u53ef\u80fd\u4e0d\u9700\u8981\u4efb\u4f55\u4fee\u6539\uff09\u3002 SoundBuffer \u7c7b\u8fd8\u63d0\u4f9b\u4e86 cleanup \u65b9\u6cd5\u6765\u91ca\u653e\u8d44\u6e90\u3002 \u8ba9\u6211\u4eec\u7ee7\u7eed\u4e3aOpenAL\u5efa\u6a21\uff0c\u5b83\u5c06\u7531\u4e00\u4e2a\u540d\u4e3a SoundSource \u7684\u7c7b\u5b9e\u73b0\u3002\u7c7b\u5b9a\u4e49\u5982\u4e0b\uff1a package org.lwjglb.engine.sound; import org.joml.Vector3f; import static org.lwjgl.openal.AL10.*; public class SoundSource { private final int sourceId; public SoundSource(boolean loop, boolean relative) { this.sourceId = alGenSources(); if (loop) { alSourcei(sourceId, AL_LOOPING, AL_TRUE); } if (relative) { alSourcei(sourceId, AL_SOURCE_RELATIVE, AL_TRUE); } } public void setBuffer(int bufferId) { stop(); alSourcei(sourceId, AL_BUFFER, bufferId); } public void setPosition(Vector3f position) { alSource3f(sourceId, AL_POSITION, position.x, position.y, position.z); } public void setSpeed(Vector3f speed) { alSource3f(sourceId, AL_VELOCITY, speed.x, speed.y, speed.z); } public void setGain(float gain) { alSourcef(sourceId, AL_GAIN, gain); } public void setProperty(int param, float value) { alSourcef(sourceId, param, value); } public void play() { alSourcePlay(sourceId); } public boolean isPlaying() { return alGetSourcei(sourceId, AL_SOURCE_STATE) == AL_PLAYING; } public void pause() { alSourcePause(sourceId); } public void stop() { alSourceStop(sourceId); } public void cleanup() { stop(); alDeleteSources(sourceId); } } \u58f0\u6e90\u7c7b\u63d0\u4f9b\u4e86\u4e00\u4e9b\u65b9\u6cd5\u6765\u8bbe\u7f6e\u5b83\u7684\u4f4d\u7f6e\u3001\u589e\u76ca\u548c\u63a7\u5236\u65b9\u6cd5\u6765\u505c\u6b62\u548c\u6682\u505c\u64ad\u653e\u3002\u8bf7\u8bb0\u4f4f\uff0c\u58f0\u97f3\u63a7\u5236\u64cd\u4f5c\u662f\u5bf9\u4e00\u4e2a\u58f0\u6e90\uff08\u800c\u4e0d\u662f\u5bf9\u7f13\u51b2\u533a\uff09\u6267\u884c\u7684\u3002\u8bf7\u8bb0\u4f4f\uff0c\u591a\u4e2a\u6e90\u53ef\u4ee5\u5171\u4eab\u540c\u4e00\u4e2a\u7f13\u51b2\u533a\u3002\u4e0e SoundBuffer \u7c7b\u4e2d\u4e00\u6837\uff0c SoundBuffer \u7531\u4e00\u4e2a\u6807\u8bc6\u7b26\u6807\u8bb0\uff0c\u8be5\u6807\u8bc6\u7b26\u5728\u6bcf\u4e2a\u64cd\u4f5c\u4e2d\u4f7f\u7528\u3002\u8be5\u7c7b\u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e2a cleanup \u65b9\u6cd5\u6765\u91ca\u653e\u4fdd\u7559\u7684\u8d44\u6e90\u3002\u4f46\u662f\u8ba9\u6211\u4eec\u770b\u770b\u6784\u9020\u51fd\u6570\u3002\u6211\u4eec\u8981\u505a\u7684\u7b2c\u4e00\u4ef6\u4e8b\u662f\u8c03\u7528 alGenSources \u521b\u5efa\u58f0\u6e90\uff0c\u7136\u540e\u4f7f\u7528\u6784\u9020\u51fd\u6570\u53c2\u6570\u8bbe\u7f6e\u4e00\u4e9b\u6709\u8da3\u7684\u5c5e\u6027\u3002 \u7b2c\u4e00\u4e2a\u53c2\u6570 loop \uff0c\u8868\u793a\u8981\u64ad\u653e\u7684\u58f0\u97f3\u662f\u5426\u5e94\u8be5\u5904\u4e8e\u5faa\u73af\u6a21\u5f0f\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5f53\u901a\u8fc7\u58f0\u6e90\u8c03\u7528\u64ad\u653e\u64cd\u4f5c\u65f6\uff0c\u5f53\u58f0\u97f3\u64ad\u653e\u5230\u6700\u540e\u65f6\u5c06\u505c\u6b62\u3002\u8fd9\u5bf9\u4e8e\u4e00\u4e9b\u58f0\u97f3\u6765\u8bf4\u662f\u53ef\u4ee5\u7684\uff0c\u4f46\u662f\u5bf9\u4e8e\u5176\u4ed6\u4e00\u4e9b\u58f0\u97f3\uff0c\u6bd4\u5982\u80cc\u666f\u97f3\u4e50\uff0c\u5c31\u9700\u8981\u53cd\u590d\u64ad\u653e\u3002\u5f53\u58f0\u97f3\u505c\u6b62\u65f6\u4e0d\u9700\u8981\u624b\u52a8\u63a7\u5236\u5e76\u91cd\u65b0\u64ad\u653e\u58f0\u97f3\uff0c\u6211\u4eec\u5c31\u53ea\u7528\u5c06\u5faa\u73af\u5c5e\u6027\u8bbe\u7f6e\u4e3a true \uff1a alSourcei(sourceId, AL_LOOPING, AL_TRUE); \u3002 \u53e6\u4e00\u4e2a\u53c2\u6570 relative \uff0c\u63a7\u5236\u58f0\u6e90\u7684\u4f4d\u7f6e\u662f\u5426\u76f8\u5bf9\u4e8e\u4fa6\u542c\u5668\u3002\u5728\u672c\u4f8b\u4e2d\uff0c\u5f53\u4e3a\u58f0\u6e90\u8bbe\u7f6e\u4f4d\u7f6e\u65f6\uff0c\u6211\u4eec\u57fa\u672c\u4e0a\u662f\u5728\u5b9a\u4e49\u5230\u4fa6\u542c\u5668\u7684\u8ddd\u79bb\uff08\u4f7f\u7528\u60f3\u60f3\uff09\uff0c\u800c\u4e0d\u662fOpenAL\u4e09\u7ef4\u573a\u666f\u4e2d\u7684\u5750\u6807\uff0c\u4e5f\u4e0d\u662f\u4e16\u754c\u5750\u6807\u3002\u8fd9\u662f\u901a\u8fc7\u8c03\u7528 alSourcei(sourceId, AL_SOURCE_RELATIVE, AL_TRUE);\u201d \u542f\u7528\u7684\u3002\u4f46\u662f\uff0c\u6211\u4eec\u80fd\u7528\u5b83\u505a\u4ec0\u4e48\u5462\uff1f\u8fd9\u4e2a\u5c5e\u6027\u5f88\u6709\u8da3\uff0c\u4f8b\u5982\uff0c\u7528\u4e8e\u4e0d\u5e94\u8be5\u53d7\u5230\u4fa6\u542c\u5668\u8ddd\u79bb\u5f71\u54cd\uff08\u51cf\u5f31\uff09\u7684\u80cc\u666f\u58f0\u97f3\u3002\u4f8b\u5982\uff0c\u5728\u80cc\u666f\u97f3\u4e50\u6216\u4e0e\u64ad\u653e\u5668\u63a7\u4ef6\u76f8\u5173\u7684\u97f3\u6548\u3002\u5982\u679c\u6211\u4eec\u5c06\u8fd9\u4e9b\u58f0\u6e90\u8bbe\u7f6e\u4e3a\u76f8\u5bf9\u7684\uff0c\u5e76\u5c06\u5b83\u4eec\u7684\u4f4d\u7f6e\u8bbe\u7f6e\u4e3a (0, 0, 0) \uff0c\u5b83\u4eec\u5c06\u4e0d\u4f1a\u88ab\u51cf\u5f31\u3002 \u73b0\u5728\u8f6e\u5230\u4fa6\u542c\u5668\u4e86\uff0c\u5b83\u662f\u7531\u4e00\u4e2a\u540d\u4e3a SoundListener \u5b9a\u4e49\u7684\u3002\u4ee5\u4e0b\u662f\u8be5\u7c7b\u7684\u5b9a\u4e49\uff1a package org.lwjglb.engine.sound; import org.joml.Vector3f; import static org.lwjgl.openal.AL10.*; public class SoundListener { public SoundListener() { this(new Vector3f(0, 0, 0)); } public SoundListener(Vector3f position) { alListener3f(AL_POSITION, position.x, position.y, position.z); alListener3f(AL_VELOCITY, 0, 0, 0); } public void setSpeed(Vector3f speed) { alListener3f(AL_VELOCITY, speed.x, speed.y, speed.z); } public void setPosition(Vector3f position) { alListener3f(AL_POSITION, position.x, position.y, position.z); } public void setOrientation(Vector3f at, Vector3f up) { float[] data = new float[6]; data[0] = at.x; data[1] = at.y; data[2] = at.z; data[3] = up.x; data[4] = up.y; data[5] = up.z; alListenerfv(AL_ORIENTATION, data); } } \u4e0e\u524d\u9762\u7684\u7c7b\u4e0d\u540c\uff0c\u4f60\u5c06\u6ce8\u610f\u5230\u4e0d\u9700\u8981\u521b\u5efa\u4fa6\u542c\u5668\u3002\u603b\u4f1a\u6709\u4e00\u4e2a\u4fa6\u542c\u5668\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u521b\u5efa\u4e00\u4e2a\uff0c\u5b83\u5df2\u7ecf\u4e3a\u6211\u4eec\u51c6\u5907\u597d\u4e86\u3002\u56e0\u6b64\uff0c\u5728\u6784\u9020\u51fd\u6570\u4e2d\uff0c\u6211\u4eec\u53ea\u662f\u7b80\u5355\u5730\u8bbe\u7f6e\u5b83\u7684\u521d\u59cb\u4f4d\u7f6e\u3002\u57fa\u4e8e\u540c\u6837\u7684\u539f\u56e0\uff0c\u6ca1\u6709\u5fc5\u8981\u4f7f\u7528 cleanup \u65b9\u6cd5\u3002\u7c7b\u4e5f\u6709\u8bbe\u7f6e\u4fa6\u542c\u5668\u4f4d\u7f6e\u548c\u901f\u5ea6\u7684\u65b9\u6cd5\uff0c\u5c31\u50cf\u5728 SoundSource \u7c7b\u4e2d\u4e00\u6837\uff0c\u4f46\u662f\u6211\u4eec\u6709\u4e00\u4e2a\u989d\u5916\u7684\u65b9\u6cd5\u6765\u4fee\u6539\u4fa6\u542c\u5668\u7684\u65b9\u5411\u3002\u8ba9\u6211\u4eec\u56de\u987e\u4e00\u4e0b\u65b9\u5411\u662f\u4ec0\u4e48\u3002\u4fa6\u542c\u5668\u65b9\u5411\u7531\u4e24\u4e2a\u5411\u91cf\u5b9a\u4e49\uff0c at \u5411\u91cf\u548c up \u5411\u91cf\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a at \u5411\u91cf\u57fa\u672c\u4e0a\u6307\u5411\u4fa6\u542c\u5668\u6240\u671d\u5411\u7684\u4f4d\u7f6e\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5b83\u7684\u503c\u4e3a (0, 0, -1) \u3002 up \u5411\u91cf\u786e\u5b9a\u4fa6\u542c\u5668\u5411\u4e0a\u7684\u65b9\u5411\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5b83\u6307\u5411 (0, 1, 0) \u3002\u8fd9\u4e24\u4e2a\u5411\u91cf\u7684\u4e09\u4e2a\u5206\u91cf\u90fd\u662f\u5728 alListenerfv \u65b9\u6cd5\u8c03\u7528\u4e2d\u8bbe\u7f6e\u7684\u3002\u6b64\u65b9\u6cd5\u7528\u4e8e\u5c06\u4e00\u7ec4\u6d6e\u70b9\u6570\uff08\u6d6e\u70b9\u6570\u53d8\u91cf\uff09\u4f20\u9012\u5230\u5c5e\u6027\uff08\u5728\u672c\u4f8b\u4e2d\u4e3a\u65b9\u5411\uff09\u3002 \u5728\u7ee7\u7eed\u8bb2\u89e3\u4e4b\u524d\uff0c\u6709\u5fc5\u8981\u5f3a\u8c03\u4e00\u4e9b\u4e0e\u58f0\u97f3\u548c\u4fa6\u542c\u5668\u901f\u5ea6\u76f8\u5173\u7684\u6982\u5ff5\u3002\u58f0\u6e90\u4e0e\u4fa6\u542c\u5668\u4e4b\u95f4\u7684\u76f8\u5bf9\u901f\u5ea6\u4f1a\u5bfc\u81f4OpenAL\u6a21\u62df\u591a\u666e\u52d2\u6548\u5e94\u3002\u5982\u679c\u4f60\u4e0d\u77e5\u9053\u591a\u666e\u52d2\u6548\u5e94\u662f\u4ec0\u4e48\uff0c\u591a\u666e\u52d2\u6548\u5e94\u5c06\u5bfc\u81f4\u4e00\u4e2a\u79bb\u4f60\u8d8a\u6765\u8d8a\u8fd1\u7684\u7269\u4f53\u53d1\u51fa\u7684\u9891\u7387\u4f3c\u4e4e\u6bd4\u5b83\u79bb\u5f00\u65f6\u53d1\u51fa\u7684\u9891\u7387\u8981\u9ad8\u7684\u6548\u5e94\u3002\u95ee\u9898\u662f\uff0c\u4ec5\u4ec5\u901a\u8fc7\u8bbe\u7f6e\u58f0\u97f3\u548c\u4fa6\u542c\u5668\u901f\u5ea6\uff0cOpenAL\u4e0d\u4f1a\u4e3a\u4f60\u66f4\u65b0\u5b83\u4eec\u7684\u4f4d\u7f6e\u3002\u5b83\u5c06\u4f7f\u7528\u76f8\u5bf9\u901f\u5ea6\u6765\u8ba1\u7b97\u591a\u666e\u52d2\u6548\u5e94\uff0c\u4f46\u4f4d\u7f6e\u4e0d\u4f1a\u6539\u53d8\u3002\u56e0\u6b64\uff0c\u5982\u679c\u4f60\u60f3\u8981\u6a21\u62df\u4e00\u4e2a\u79fb\u52a8\u7684\u58f0\u6e90\u6216\u8005\u4fa6\u542c\u5668\uff0c\u4f60\u5fc5\u987b\u6ce8\u610f\u5728\u6e38\u620f\u5faa\u73af\u4e2d\u66f4\u65b0\u5b83\u4eec\u7684\u4f4d\u7f6e\u3002 \u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u5b9a\u4e49\u4e86\u5173\u952e\u5143\u7d20\uff0c\u4e3a\u4e86\u8ba9\u5b83\u4eec\u5de5\u4f5c\uff0c\u9700\u8981\u521d\u59cb\u5316OpenAL\u5e93\uff0c\u56e0\u6b64\u5c06\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a SoundManager \u7684\u65b0\u7c7b\u6765\u5904\u7406\u8fd9\u4e2a\u95ee\u9898\u3002\u4e0b\u9762\u662f\u5b9a\u4e49\u8be5\u7c7b\u7684\u4ee3\u7801\u7247\u6bb5\uff1a package org.lwjglb.engine.sound; // import ... public class SoundManager { private long device; private long context; private SoundListener listener; private final List<SoundBuffer> soundBufferList; private final Map<String, SoundSource> soundSourceMap; private final Matrix4f cameraMatrix; public SoundManager() { soundBufferList = new ArrayList<>(); soundSourceMap = new HashMap<>(); cameraMatrix = new Matrix4f(); } public void init() throws Exception { this.device = alcOpenDevice((ByteBuffer) null); if (device == NULL) { throw new IllegalStateException(\"Failed to open the default OpenAL device.\"); } ALCCapabilities deviceCaps = ALC.createCapabilities(device); this.context = alcCreateContext(device, (IntBuffer) null); if (context == NULL) { throw new IllegalStateException(\"Failed to create OpenAL context.\"); } alcMakeContextCurrent(context); AL.createCapabilities(deviceCaps); } \u8be5\u7c7b\u4fdd\u5b58\u5bf9 SoundBuffer \u548c SoundSource \u7684\u5b9e\u4f8b\u7684\u5f15\u7528\uff0c\u4ee5\u4fbf\u8ddf\u8e2a\u548c\u5728\u6b64\u4e4b\u540e\u6b63\u786e\u5730\u6e05\u7406\u5b83\u4eec\u3002 SoundBuffer \u50a8\u5b58\u5728\u4e00\u4e2a\u5217\u8868\u4e2d\uff0c\u4f46 SoundSource \u50a8\u5b58\u5728\u4e00\u4e2a Map \u4e2d\uff0c\u56e0\u6b64\u53ef\u4ee5\u901a\u8fc7\u540d\u79f0\u641c\u7d22\u5b83\u4eec\u3002 init \u65b9\u6cd5\u521d\u59cb\u5316OpenAL\u5b50\u7cfb\u7edf\uff1a \u5f00\u542f\u9ed8\u8ba4\u8bbe\u5907\u3002 \u4e3a\u8be5\u8bbe\u5907\u521b\u5efa\u529f\u80fd\u3002 \u521b\u5efa\u4e00\u4e2a\u58f0\u97f3\u73af\u5883\uff0c\u5c31\u50cf\u662fOpenGL\u90a3\u6837\uff0c\u5e76\u5c06\u5176\u8bbe\u7f6e\u4e3a\u5f53\u524d\u73af\u5883\u3002 SoundManager \u7c7b\u8fd8\u5177\u6709\u66f4\u65b0\u7ed9\u5b9a\u6444\u50cf\u673a\u4f4d\u7f6e\u7684\u4fa6\u542c\u5668\u671d\u5411\u7684\u65b9\u6cd5\u3002\u5728\u672c\u4f8b\u4e2d\uff0c\u4fa6\u542c\u5668\u5c06\u88ab\u8bbe\u7f6e\u5728\u6444\u50cf\u673a\u6240\u5728\u7684\u4f4d\u7f6e\u3002\u90a3\u4e48\uff0c\u7ed9\u5b9a\u6444\u50cf\u673a\u7684\u4f4d\u7f6e\u548c\u65cb\u8f6c\u4fe1\u606f\uff0c\u6211\u4eec\u5982\u4f55\u8ba1\u7b97 at \u548c up \u5411\u91cf\u5462\uff1f\u7b54\u6848\u662f\u4f7f\u7528\u4e0e\u6444\u50cf\u673a\u76f8\u5173\u8054\u7684\u89c2\u5bdf\u77e9\u9635\u3002\u6211\u4eec\u9700\u8981\u5c06 at (0, 0, -1) \u4e0e up (0, 1, 0) \u5411\u91cf\u8f6c\u6362\u4e3a\u8003\u8651\u6444\u50cf\u673a\u65cb\u8f6c\u7684\u5411\u91cf\u3002\u8ba9 cameraMatrix \u4e3a\u4e0e\u6444\u50cf\u673a\u5173\u8054\u7684\u89c2\u5bdf\u77e9\u9635\u3002\u5b9e\u73b0\u7684\u4ee3\u7801\u5982\u4e0b\uff1a Matrix4f invCam = new Matrix4f(cameraMatrix).invert(); Vector3f at = new Vector3f(0, 0, -1); invCam.transformDirection(at); Vector3f up = new Vector3f(0, 1, 0); invCam.transformDirection(up); \u6211\u4eec\u8981\u505a\u7684\u7b2c\u4e00\u4ef6\u4e8b\u662f\u9006\u8f6c\u6444\u50cf\u673a\u89c2\u5bdf\u77e9\u9635\u3002\u4e3a\u4ec0\u4e48\u8981\u8fd9\u4e48\u505a\uff1f\u8fd9\u6837\u60f3\uff0c\u89c2\u5bdf\u77e9\u9635\u4ece\u4e16\u754c\u7a7a\u95f4\u5750\u6807\u53d8\u6362\u5230\u89c2\u5bdf\u7a7a\u95f4\u3002\u6211\u4eec\u60f3\u8981\u7684\u6b63\u597d\u76f8\u53cd\uff0c\u6211\u4eec\u60f3\u8981\u4ece\u89c2\u5bdf\u7a7a\u95f4\u5750\u6807\uff08\u89c2\u5bdf\u77e9\u9635\uff09\u8f6c\u6362\u5230\u4e16\u754c\u7a7a\u95f4\u5750\u6807\uff0c\u8fd9\u662f\u4fa6\u542c\u5668\u5e94\u8be5\u88ab\u653e\u7f6e\u7684\u4f4d\u7f6e\u3002\u5bf9\u4e8e\u77e9\u9635\uff0c\u53cd\u6bd4\u901a\u5e38\u5c31\u610f\u5473\u7740\u9006\u8f6c\u3002\u4e00\u65e6\u6211\u4eec\u6709\u4e86\u8fd9\u4e2a\u77e9\u9635\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8f6c\u6362 at \u548c up \u5411\u91cf\uff0c\u4f7f\u7528\u8fd9\u4e2a\u77e9\u9635\u8ba1\u7b97\u65b0\u7684\u65b9\u5411\u3002 \u4f46\u662f\uff0c\u5982\u679c\u4f60\u67e5\u770b\u6e90\u4ee3\u7801\uff0c\u4f60\u4f1a\u770b\u5230\u5b9e\u73b0\u7565\u6709\u4e0d\u540c\uff0c\u6211\u4eec\u6240\u505a\u7684\u662f\uff1a Vector3f at = new Vector3f(); cameraMatrix.positiveZ(at).negate(); Vector3f up = new Vector3f(); cameraMatrix.positiveY(up); listener.setOrientation(at, up); \u4e0a\u8ff0\u4ee3\u7801\u7b49\u4ef7\u4e8e\u7b2c\u4e00\u79cd\u65b9\u6cd5\uff0c\u5b83\u53ea\u662f\u4e00\u79cd\u66f4\u9ad8\u6548\u7684\u65b9\u6cd5\u3002\u5b83\u4f7f\u7528\u4e86\u4e00\u79cd\u66f4\u5feb\u7684\u65b9\u6cd5\uff0c\u53ef\u4ee5\u5728 JOML \u5e93\u4e2d\u627e\u5230\uff0c\u8fd9\u79cd\u65b9\u6cd5\u4e0d\u9700\u8981\u8ba1\u7b97\u5b8c\u6574\u7684\u9006\u77e9\u9635\uff0c\u4f46\u662f\u53ef\u4ee5\u5f97\u5230\u76f8\u540c\u7684\u7ed3\u679c\u3002\u8fd9\u65b9\u6cd5\u662f\u7531LWJGL\u8bba\u575b\u4e2d\u7684 JOML\u4f5c\u8005 \u63d0\u4f9b\u7684\uff0c\u56e0\u6b64\u4f60\u53ef\u4ee5\u5728[\u90a3\u91cc]((http://forum.lwjgl.org/index.php?topic=6080.0)\u67e5\u770b\u66f4\u591a\u7ec6\u8282\u3002\u5982\u679c\u67e5\u770b\u6e90\u4ee3\u7801\uff0c\u4f60\u5c06\u770b\u5230 SoundManager \u7c7b\u8ba1\u7b97\u5b83\u81ea\u5df1\u7684\u89c2\u5bdf\u77e9\u9635\u526f\u672c\u3002\u8fd9\u5df2\u7ecf\u5728 Renderer \u7c7b\u4e2d\u5b8c\u6210\u4e86\u3002\u4e3a\u4e86\u4fdd\u6301\u4ee3\u7801\u7b80\u5355\uff0c\u5e76\u907f\u514d\u91cd\u6784\uff0c\u6211\u503e\u5411\u4e8e\u4f7f\u7528\u8fd9\u79cd\u65b9\u5f0f\u3002 \u8fd9\u5c31\u5b8c\u4e86\u3002\u6211\u4eec\u62e5\u6709\u64ad\u653e\u58f0\u97f3\u6240\u9700\u7684\u6240\u6709\u57fa\u7840\u7ed3\u6784\u3002\u4f60\u53ef\u4ee5\u67e5\u770b\u6e90\u4ee3\u7801\uff0c\u4e86\u89e3\u5982\u4f55\u4f7f\u7528\u6240\u6709\u4ee3\u7801\u3002\u4f60\u53ef\u4ee5\u770b\u5230\u97f3\u4e50\u662f\u5982\u4f55\u64ad\u653e\u7684\uff0c\u4ee5\u53ca\u4e0d\u540c\u6548\u679c\u7684\u58f0\u97f3\uff08\u8fd9\u4e9b\u6587\u4ef6\u662f\u4ece Freesound \u4e2d\u83b7\u5f97\u7684\uff0c\u8d21\u732e\u8005\u90fd\u50a8\u5b58\u5728\u540d\u4e3aCREDITS.txt\u7684\u4e00\u4e2a\u6587\u4ef6\u4e2d\uff09\u3002\u5982\u679c\u4f60\u83b7\u5f97\u4e00\u4e9b\u5176\u4ed6\u6587\u4ef6\uff0c\u4f60\u53ef\u4ee5\u4f1a\u6ce8\u610f\u5230\u58f0\u97f3\u8870\u51cf\u4e0e\u8ddd\u79bb\u6216\u4fa6\u542c\u5668\u7684\u65b9\u5411\u65e0\u5173\u3002\u8bf7\u68c0\u67e5\u8fd9\u4e9b\u58f0\u97f3\u662f\u5426\u662f\u5355\u58f0\u9053\uff0c\u662f\u5426\u4e0d\u662f\u7acb\u4f53\u58f0\u3002OpenGL\u4ec5\u80fd\u4f7f\u7528\u5355\u58f0\u9053\u58f0\u97f3\u8fdb\u884c\u8ba1\u7b97\u3002 \u540e\u8bb0\uff0cOpenAL\u8fd8\u5141\u8bb8\u4f60\u901a\u8fc7\u4f7f\u7528 alDistanceModel \u5e76\u4f20\u9012\u4f60\u60f3\u4f7f\u7528\u7684\u6a21\u578b\uff08 AL11.AL_EXPONENT_DISTANCE \uff0c AL_EXPONENT_DISTANCE_CLAMP \uff0c\u7b49\u7b49\uff09\u3002\u4f60\u53ef\u4ee5\u7528\u5b83\u4eec\u6765\u64ad\u653e\u5e76\u68c0\u67e5\u6548\u679c\u3002","title":"\u97f3\u6548"},{"location":"22-audio/#audio","text":"\u5728\u6b64\u4e4b\u524d\u6211\u4eec\u4e00\u76f4\u5728\u5904\u7406\u56fe\u50cf\uff0c\u4f46\u6bcf\u4e2a\u6e38\u620f\u7684\u53e6\u4e00\u4e2a\u5173\u952e\u9762\u662f\u97f3\u9891\u3002\u672c\u7ae0\u5c06\u5728 OpenAL \uff08Open Audio Library\uff0c\u5f00\u653e\u97f3\u9891\u5e93\uff09\u7684\u5e2e\u52a9\u4e0b\u5b9e\u73b0\u8fd9\u4e2a\u529f\u80fd\u3002OpenAL\u5c31\u50cf\u662fOpenGL\u5728\u97f3\u9891\u7684\u76f8\u4f3c\u7269\uff0c\u5b83\u5141\u8bb8\u6211\u4eec\u901a\u8fc7\u62bd\u8c61\u5c42\u64ad\u653e\u58f0\u97f3\u3002\u8be5\u5c42\u5c06\u6211\u4eec\u4e0e\u97f3\u9891\u5b50\u7cfb\u7edf\u7684\u590d\u6742\u5e95\u5c42\u9694\u79bb\u5f00\u6765\u3002\u6b64\u5916\uff0c\u5b83\u8fd8\u5141\u8bb8\u6211\u4eec\u53ef\u4ee5\u4e09\u7ef4\u573a\u666f\u4e2d\u7279\u5b9a\u7684\u4f4d\u7f6e\u8bbe\u7f6e\u58f0\u97f3\uff0c\u201c\u6e32\u67d3\u201d\u58f0\u97f3\uff0c\u968f\u7740\u8ddd\u79bb\u8870\u51cf\u5e76\u6839\u636e\u5b83\u4eec\u7684\u901f\u5ea6\u8fdb\u884c\u4fee\u6539\uff08\u6a21\u62df \u591a\u666e\u52d2\u6548\u5e94 \uff09\u3002 LWJGL\u652f\u6301OpenGL\uff0c\u4e0d\u9700\u8981\u4efb\u4f55\u989d\u5916\u7684\u4e0b\u8f7d\uff0c\u5b83\u5c31\u5df2\u7ecf\u53ef\u4ee5\u4f7f\u7528\u4e86\u3002\u4f46\u662f\u5728\u5f00\u59cb\u5199\u4ee3\u7801\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u4ecb\u7ecd\u5904\u7406OpenGL\u65f6\u6240\u6d89\u53ca\u7684\u4e3b\u8981\u5143\u7d20\uff0c\u5b83\u4eec\u662f\uff1a \u7f13\u51b2\u533a\uff08Buffer\uff09\u3002 \u58f0\u6e90\uff08Source\uff09\u3002 \u4fa6\u542c\u8005\uff08Listener\uff09\u3002 \u7f13\u51b2\u533a\u50a8\u5b58\u97f3\u9891\u6570\u636e\uff0c\u5373\u97f3\u4e50\u6216\u97f3\u6548\u3002\u5b83\u4eec\u7c7b\u4f3c\u4e8eOpenGL\u4e2d\u7684\u7eb9\u7406\u3002OpenAL\u5e0c\u671b\u97f3\u9891\u6570\u636e\u91c7\u7528PCM\uff08Pulse Coded Modulation\uff0c\u8109\u51b2\u7f16\u7801\u8c03\u5236\uff09\u683c\u5f0f\uff08\u5355\u58f0\u9053\u6216\u591a\u58f0\u9053\uff09\uff0c\u56e0\u6b64\u6211\u4eec\u4e0d\u80fd\u53ea\u8f6c\u50a8MP3\u6216OGG\u6587\u4ef6\u800c\u4e0d\u9996\u5148\u5c06\u5b83\u4eec\u8f6c\u6362\u4e3aPCM\u3002 \u4e0b\u4e00\u4e2a\u5143\u7d20\u662f\u58f0\u6e90\uff0c\u5b83\u8868\u793a\u53d1\u51fa\u58f0\u97f3\u7684\u4e09\u7ef4\u7a7a\u95f4\u4e2d\u7684\u4f4d\u7f6e\uff08\u4e00\u4e2a\u70b9\uff09\u3002\u58f0\u6e90\u4e0e\u7f13\u51b2\u533a\u5173\u8054\uff08\u4e00\u6b21\u53ea\u80fd\u6709\u4e00\u4e2a\uff09\uff0c\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u5c5e\u6027\u5b9a\u4e49\uff1a \u4f4d\u7f6e\uff0c\u58f0\u6e90\u7684\u4f4d\u7f6e\uff08 x \uff0c y \u548c z \u5750\u6807\uff09\u3002\u987a\u4fbf\u4e00\u63d0\uff0cOpenAL\u548cOpenGL\u4e00\u6837\u4f7f\u7528\u53f3\u624b\u7b1b\u5361\u5c14\u5750\u6807\u7cfb\uff0c\u6240\u4ee5\u4f60\u53ef\u4ee5\u5047\u8bbe\uff08\u4e3a\u4e86\u7b80\u5316\uff09\u4f60\u7684\u4e16\u754c\u5750\u6807\u7b49\u4e8e\u58f0\u97f3\u7a7a\u95f4\u5750\u6807\u7cfb\u4e2d\u7684\u5750\u6807\u3002 \u901f\u5ea6\uff0c\u5b83\u6307\u5b9a\u58f0\u6e90\u79fb\u52a8\u7684\u901f\u5ea6\u3002\u8fd9\u662f\u7528\u6765\u6a21\u62df\u591a\u666e\u52d2\u6548\u5e94\u7684\u3002 \u589e\u76ca\uff0c\u7528\u6765\u6539\u53d8\u58f0\u97f3\u7684\u5927\u5c0f\uff08\u5c31\u50cf\u662f\u4e00\u4e2a\u653e\u5927\u56e0\u6570\uff09\u3002 \u6e90\u4ee3\u7801\u4e2d\u6709\u989d\u5916\u7684\u5c5e\u6027\uff0c\u7a0d\u540e\u5728\u8bb2\u89e3\u6e90\u4ee3\u7801\u65f6\u5c06\u63cf\u8ff0\u8fd9\u4e9b\u5c5e\u6027\u3002 \u6700\u540e\u4f46\u5e76\u4e0d\u91cd\u8981\u7684\u662f\uff0c\u4fa6\u542c\u8005\u662f\u662f\u4ea7\u751f\u7684\u58f0\u97f3\u5e94\u8be5\u88ab\u542c\u5230\u7684\u5730\u65b9\u3002\u4fa6\u542c\u5668\u5c31\u50cf\u662f\u88ab\u8bbe\u7f6e\u5728\u4e09\u7ef4\u97f3\u9891\u573a\u666f\u4e2d\u7528\u6765\u63a5\u6536\u58f0\u97f3\u7684\u9ea6\u514b\u98ce\u3002\u73b0\u5728\u53ea\u6709\u4e00\u4e2a\u4fa6\u542c\u5668\u3002\u56e0\u6b64\uff0c\u4eba\u4eec\u5e38\u8bf4\u7684\u97f3\u9891\u6e32\u67d3\u662f\u4ee5\u542c\u4f17\u7684\u89d2\u5ea6\u5b8c\u6210\u7684\u3002\u4fa6\u542c\u5668\u5171\u4eab\u4e00\u4e9b\u5c5e\u6027\uff0c\u4f46\u5b83\u8fd8\u6709\u4e00\u4e9b\u9644\u52a0\u5c5e\u6027\uff0c\u6bd4\u5982\u65b9\u5411\u3002\u65b9\u5411\u8868\u793a\u4fa6\u542c\u5668\u6240\u9762\u671d\u7684\u4f4d\u7f6e\u3002 \u56e0\u6b64\uff0c\u4e09\u7ef4\u97f3\u9891\u573a\u666f\u6709\u4e00\u7ec4\u53d1\u51fa\u58f0\u97f3\u7684\u58f0\u6e90\u548c\u63a5\u6536\u58f0\u97f3\u7684\u4fa6\u542c\u5668\u7ec4\u6210\u3002\u6700\u7ec8\u542c\u5230\u7684\u58f0\u97f3\u53d6\u51b3\u4e8e\u542c\u8005\u5230\u4e0d\u540c\u58f0\u6e90\u7684\u8ddd\u79bb\u3001\u76f8\u5bf9\u901f\u5ea6\u548c\u9009\u62e9\u7684\u4f20\u64ad\u6a21\u578b\uff08Propagation Model\uff09\u3002\u4e0b\u56fe\u5c55\u793a\u4e86\u4e00\u4e2a\u5305\u542b\u4e0d\u540c\u5143\u7d20\u7c7b\u578b\u7684\u4e09\u7ef4\u573a\u666f\u3002 \u90a3\u4e48\uff0c\u8ba9\u6211\u4eec\u5f00\u59cb\u7f16\u5199\u4ee3\u7801\uff0c\u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a org.lwjglb.engine.sound \u7684\u65b0\u5305\uff0c\u5b83\u5c06\u8d1f\u8d23\u7ba1\u7406\u6240\u6709\u8d1f\u8d23\u5904\u7406\u97f3\u9891\u7684\u7c7b\u3002\u6211\u4eec\u5c06\u9996\u5148\u4ece\u4e00\u4e2a\u540d\u4e3a SoundBuffer \u7684\u7c7b\u5f00\u59cb\uff0c\u5b83\u5c06\u8868\u793a\u4e00\u4e2aOpenAL\u7f13\u51b2\u533a\u3002\u8be5\u7c7b\u7684\u5b9a\u4e49\u5982\u4e0b\u7684\u4e00\u4e2a\u4ee3\u7801\u7247\u6bb5\u6240\u793a\uff1a package org.lwjglb.engine.sound; // import ... public class SoundBuffer { private final int bufferId; public SoundBuffer(String file) throws Exception { this.bufferId = alGenBuffers(); try (STBVorbisInfo info = STBVorbisInfo.malloc()) { ShortBuffer pcm = readVorbis(file, 32 * 1024, info); // \u590d\u5236\u5230\u7f13\u51b2\u533a alBufferData(buffer, info.channels() == 1 ? AL_FORMAT_MONO16 : AL_FORMAT_STEREO16, pcm, info.sample_rate()); } } public int getBufferId() { return this.bufferId; } public void cleanup() { alDeleteBuffers(this.bufferId); } // ... } \u8be5\u7c7b\u7684\u6784\u9020\u51fd\u6570\u9700\u8981\u4e00\u4e2a\u58f0\u97f3\u6587\u4ef6\uff08\u5b83\u53ef\u80fd\u4e0e\u5176\u4ed6\u8d44\u6e90\u4e00\u6837\u4f4d\u4e8e\u7c7b\u8def\u5f84\u4e2d\uff09\uff0c\u5e76\u4ece\u4e2d\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u7f13\u51b2\u533a\u3002\u6211\u4eec\u8981\u505a\u7684\u7b2c\u4e00\u4ef6\u4e8b\u662f\u8c03\u7528 alGenBuffers \u521b\u5efa\u4e00\u4e2aOpenAL\u7f13\u51b2\u533a\u3002\u6700\u540e\uff0c\u6211\u4eec\u7684\u58f0\u97f3\u7f13\u51b2\u533a\u5c06\u7528\u4e00\u4e2a\u6574\u6570\u6765\u8868\u793a\uff0c\u5c31\u50cf\u4e00\u4e2a\u6307\u5411\u5b83\u6240\u6301\u6709\u7684\u6570\u636e\u7684\u6307\u9488\u3002\u4e00\u65e6\u521b\u5efa\u4e86\u7f13\u51b2\u533a\uff0c\u6211\u4eec\u5c31\u5c06\u97f3\u9891\u6570\u636e\u8f6c\u50a8\u5230\u5176\u4e2d\u3002\u6784\u9020\u51fd\u6570\u9700\u8981OGG\u683c\u5f0f\u7684\u6587\u4ef6\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u5c06\u5176\u8f6c\u6362\u4e3aPCM\u683c\u5f0f\u3002\u4f60\u53ef\u4ee5\u67e5\u770b\u8fd9\u5982\u4f55\u5728\u6e90\u4ee3\u7801\u4e2d\u5b8c\u6210\u7684\uff0c\u65e0\u8bba\u5982\u4f55\uff0c\u6e90\u4ee3\u7801\u662f\u4eceLWJGL\u7684OpenAL\u6d4b\u8bd5\u4e2d\u63d0\u53d6\u7684\u3002 \u6b64\u524d\u7248\u672c\u7684LWJGL\u6709\u4e00\u4e2a\u540d\u4e3a WaveData \u7684\u5e2e\u52a9\u7c7b\uff0c\u7528\u4e8e\u52a0\u8f7dWAV\u683c\u5f0f\u7684\u97f3\u9891\u6587\u4ef6\u3002\u8fd9\u4e2a\u7c7b\u4e0d\u518d\u51fa\u73b0\u5728LWJGL3\u4e2d\u3002\u4e0d\u8fc7\uff0c\u4f60\u53ef\u4ee5\u4ece\u8be5\u7c7b\u83b7\u5f97\u6e90\u4ee3\u7801\u5e76\u5728\u6e38\u620f\u4e2d\u4f7f\u7528\u5b83\uff08\u53ef\u80fd\u4e0d\u9700\u8981\u4efb\u4f55\u4fee\u6539\uff09\u3002 SoundBuffer \u7c7b\u8fd8\u63d0\u4f9b\u4e86 cleanup \u65b9\u6cd5\u6765\u91ca\u653e\u8d44\u6e90\u3002 \u8ba9\u6211\u4eec\u7ee7\u7eed\u4e3aOpenAL\u5efa\u6a21\uff0c\u5b83\u5c06\u7531\u4e00\u4e2a\u540d\u4e3a SoundSource \u7684\u7c7b\u5b9e\u73b0\u3002\u7c7b\u5b9a\u4e49\u5982\u4e0b\uff1a package org.lwjglb.engine.sound; import org.joml.Vector3f; import static org.lwjgl.openal.AL10.*; public class SoundSource { private final int sourceId; public SoundSource(boolean loop, boolean relative) { this.sourceId = alGenSources(); if (loop) { alSourcei(sourceId, AL_LOOPING, AL_TRUE); } if (relative) { alSourcei(sourceId, AL_SOURCE_RELATIVE, AL_TRUE); } } public void setBuffer(int bufferId) { stop(); alSourcei(sourceId, AL_BUFFER, bufferId); } public void setPosition(Vector3f position) { alSource3f(sourceId, AL_POSITION, position.x, position.y, position.z); } public void setSpeed(Vector3f speed) { alSource3f(sourceId, AL_VELOCITY, speed.x, speed.y, speed.z); } public void setGain(float gain) { alSourcef(sourceId, AL_GAIN, gain); } public void setProperty(int param, float value) { alSourcef(sourceId, param, value); } public void play() { alSourcePlay(sourceId); } public boolean isPlaying() { return alGetSourcei(sourceId, AL_SOURCE_STATE) == AL_PLAYING; } public void pause() { alSourcePause(sourceId); } public void stop() { alSourceStop(sourceId); } public void cleanup() { stop(); alDeleteSources(sourceId); } } \u58f0\u6e90\u7c7b\u63d0\u4f9b\u4e86\u4e00\u4e9b\u65b9\u6cd5\u6765\u8bbe\u7f6e\u5b83\u7684\u4f4d\u7f6e\u3001\u589e\u76ca\u548c\u63a7\u5236\u65b9\u6cd5\u6765\u505c\u6b62\u548c\u6682\u505c\u64ad\u653e\u3002\u8bf7\u8bb0\u4f4f\uff0c\u58f0\u97f3\u63a7\u5236\u64cd\u4f5c\u662f\u5bf9\u4e00\u4e2a\u58f0\u6e90\uff08\u800c\u4e0d\u662f\u5bf9\u7f13\u51b2\u533a\uff09\u6267\u884c\u7684\u3002\u8bf7\u8bb0\u4f4f\uff0c\u591a\u4e2a\u6e90\u53ef\u4ee5\u5171\u4eab\u540c\u4e00\u4e2a\u7f13\u51b2\u533a\u3002\u4e0e SoundBuffer \u7c7b\u4e2d\u4e00\u6837\uff0c SoundBuffer \u7531\u4e00\u4e2a\u6807\u8bc6\u7b26\u6807\u8bb0\uff0c\u8be5\u6807\u8bc6\u7b26\u5728\u6bcf\u4e2a\u64cd\u4f5c\u4e2d\u4f7f\u7528\u3002\u8be5\u7c7b\u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e2a cleanup \u65b9\u6cd5\u6765\u91ca\u653e\u4fdd\u7559\u7684\u8d44\u6e90\u3002\u4f46\u662f\u8ba9\u6211\u4eec\u770b\u770b\u6784\u9020\u51fd\u6570\u3002\u6211\u4eec\u8981\u505a\u7684\u7b2c\u4e00\u4ef6\u4e8b\u662f\u8c03\u7528 alGenSources \u521b\u5efa\u58f0\u6e90\uff0c\u7136\u540e\u4f7f\u7528\u6784\u9020\u51fd\u6570\u53c2\u6570\u8bbe\u7f6e\u4e00\u4e9b\u6709\u8da3\u7684\u5c5e\u6027\u3002 \u7b2c\u4e00\u4e2a\u53c2\u6570 loop \uff0c\u8868\u793a\u8981\u64ad\u653e\u7684\u58f0\u97f3\u662f\u5426\u5e94\u8be5\u5904\u4e8e\u5faa\u73af\u6a21\u5f0f\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5f53\u901a\u8fc7\u58f0\u6e90\u8c03\u7528\u64ad\u653e\u64cd\u4f5c\u65f6\uff0c\u5f53\u58f0\u97f3\u64ad\u653e\u5230\u6700\u540e\u65f6\u5c06\u505c\u6b62\u3002\u8fd9\u5bf9\u4e8e\u4e00\u4e9b\u58f0\u97f3\u6765\u8bf4\u662f\u53ef\u4ee5\u7684\uff0c\u4f46\u662f\u5bf9\u4e8e\u5176\u4ed6\u4e00\u4e9b\u58f0\u97f3\uff0c\u6bd4\u5982\u80cc\u666f\u97f3\u4e50\uff0c\u5c31\u9700\u8981\u53cd\u590d\u64ad\u653e\u3002\u5f53\u58f0\u97f3\u505c\u6b62\u65f6\u4e0d\u9700\u8981\u624b\u52a8\u63a7\u5236\u5e76\u91cd\u65b0\u64ad\u653e\u58f0\u97f3\uff0c\u6211\u4eec\u5c31\u53ea\u7528\u5c06\u5faa\u73af\u5c5e\u6027\u8bbe\u7f6e\u4e3a true \uff1a alSourcei(sourceId, AL_LOOPING, AL_TRUE); \u3002 \u53e6\u4e00\u4e2a\u53c2\u6570 relative \uff0c\u63a7\u5236\u58f0\u6e90\u7684\u4f4d\u7f6e\u662f\u5426\u76f8\u5bf9\u4e8e\u4fa6\u542c\u5668\u3002\u5728\u672c\u4f8b\u4e2d\uff0c\u5f53\u4e3a\u58f0\u6e90\u8bbe\u7f6e\u4f4d\u7f6e\u65f6\uff0c\u6211\u4eec\u57fa\u672c\u4e0a\u662f\u5728\u5b9a\u4e49\u5230\u4fa6\u542c\u5668\u7684\u8ddd\u79bb\uff08\u4f7f\u7528\u60f3\u60f3\uff09\uff0c\u800c\u4e0d\u662fOpenAL\u4e09\u7ef4\u573a\u666f\u4e2d\u7684\u5750\u6807\uff0c\u4e5f\u4e0d\u662f\u4e16\u754c\u5750\u6807\u3002\u8fd9\u662f\u901a\u8fc7\u8c03\u7528 alSourcei(sourceId, AL_SOURCE_RELATIVE, AL_TRUE);\u201d \u542f\u7528\u7684\u3002\u4f46\u662f\uff0c\u6211\u4eec\u80fd\u7528\u5b83\u505a\u4ec0\u4e48\u5462\uff1f\u8fd9\u4e2a\u5c5e\u6027\u5f88\u6709\u8da3\uff0c\u4f8b\u5982\uff0c\u7528\u4e8e\u4e0d\u5e94\u8be5\u53d7\u5230\u4fa6\u542c\u5668\u8ddd\u79bb\u5f71\u54cd\uff08\u51cf\u5f31\uff09\u7684\u80cc\u666f\u58f0\u97f3\u3002\u4f8b\u5982\uff0c\u5728\u80cc\u666f\u97f3\u4e50\u6216\u4e0e\u64ad\u653e\u5668\u63a7\u4ef6\u76f8\u5173\u7684\u97f3\u6548\u3002\u5982\u679c\u6211\u4eec\u5c06\u8fd9\u4e9b\u58f0\u6e90\u8bbe\u7f6e\u4e3a\u76f8\u5bf9\u7684\uff0c\u5e76\u5c06\u5b83\u4eec\u7684\u4f4d\u7f6e\u8bbe\u7f6e\u4e3a (0, 0, 0) \uff0c\u5b83\u4eec\u5c06\u4e0d\u4f1a\u88ab\u51cf\u5f31\u3002 \u73b0\u5728\u8f6e\u5230\u4fa6\u542c\u5668\u4e86\uff0c\u5b83\u662f\u7531\u4e00\u4e2a\u540d\u4e3a SoundListener \u5b9a\u4e49\u7684\u3002\u4ee5\u4e0b\u662f\u8be5\u7c7b\u7684\u5b9a\u4e49\uff1a package org.lwjglb.engine.sound; import org.joml.Vector3f; import static org.lwjgl.openal.AL10.*; public class SoundListener { public SoundListener() { this(new Vector3f(0, 0, 0)); } public SoundListener(Vector3f position) { alListener3f(AL_POSITION, position.x, position.y, position.z); alListener3f(AL_VELOCITY, 0, 0, 0); } public void setSpeed(Vector3f speed) { alListener3f(AL_VELOCITY, speed.x, speed.y, speed.z); } public void setPosition(Vector3f position) { alListener3f(AL_POSITION, position.x, position.y, position.z); } public void setOrientation(Vector3f at, Vector3f up) { float[] data = new float[6]; data[0] = at.x; data[1] = at.y; data[2] = at.z; data[3] = up.x; data[4] = up.y; data[5] = up.z; alListenerfv(AL_ORIENTATION, data); } } \u4e0e\u524d\u9762\u7684\u7c7b\u4e0d\u540c\uff0c\u4f60\u5c06\u6ce8\u610f\u5230\u4e0d\u9700\u8981\u521b\u5efa\u4fa6\u542c\u5668\u3002\u603b\u4f1a\u6709\u4e00\u4e2a\u4fa6\u542c\u5668\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u521b\u5efa\u4e00\u4e2a\uff0c\u5b83\u5df2\u7ecf\u4e3a\u6211\u4eec\u51c6\u5907\u597d\u4e86\u3002\u56e0\u6b64\uff0c\u5728\u6784\u9020\u51fd\u6570\u4e2d\uff0c\u6211\u4eec\u53ea\u662f\u7b80\u5355\u5730\u8bbe\u7f6e\u5b83\u7684\u521d\u59cb\u4f4d\u7f6e\u3002\u57fa\u4e8e\u540c\u6837\u7684\u539f\u56e0\uff0c\u6ca1\u6709\u5fc5\u8981\u4f7f\u7528 cleanup \u65b9\u6cd5\u3002\u7c7b\u4e5f\u6709\u8bbe\u7f6e\u4fa6\u542c\u5668\u4f4d\u7f6e\u548c\u901f\u5ea6\u7684\u65b9\u6cd5\uff0c\u5c31\u50cf\u5728 SoundSource \u7c7b\u4e2d\u4e00\u6837\uff0c\u4f46\u662f\u6211\u4eec\u6709\u4e00\u4e2a\u989d\u5916\u7684\u65b9\u6cd5\u6765\u4fee\u6539\u4fa6\u542c\u5668\u7684\u65b9\u5411\u3002\u8ba9\u6211\u4eec\u56de\u987e\u4e00\u4e0b\u65b9\u5411\u662f\u4ec0\u4e48\u3002\u4fa6\u542c\u5668\u65b9\u5411\u7531\u4e24\u4e2a\u5411\u91cf\u5b9a\u4e49\uff0c at \u5411\u91cf\u548c up \u5411\u91cf\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a at \u5411\u91cf\u57fa\u672c\u4e0a\u6307\u5411\u4fa6\u542c\u5668\u6240\u671d\u5411\u7684\u4f4d\u7f6e\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5b83\u7684\u503c\u4e3a (0, 0, -1) \u3002 up \u5411\u91cf\u786e\u5b9a\u4fa6\u542c\u5668\u5411\u4e0a\u7684\u65b9\u5411\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5b83\u6307\u5411 (0, 1, 0) \u3002\u8fd9\u4e24\u4e2a\u5411\u91cf\u7684\u4e09\u4e2a\u5206\u91cf\u90fd\u662f\u5728 alListenerfv \u65b9\u6cd5\u8c03\u7528\u4e2d\u8bbe\u7f6e\u7684\u3002\u6b64\u65b9\u6cd5\u7528\u4e8e\u5c06\u4e00\u7ec4\u6d6e\u70b9\u6570\uff08\u6d6e\u70b9\u6570\u53d8\u91cf\uff09\u4f20\u9012\u5230\u5c5e\u6027\uff08\u5728\u672c\u4f8b\u4e2d\u4e3a\u65b9\u5411\uff09\u3002 \u5728\u7ee7\u7eed\u8bb2\u89e3\u4e4b\u524d\uff0c\u6709\u5fc5\u8981\u5f3a\u8c03\u4e00\u4e9b\u4e0e\u58f0\u97f3\u548c\u4fa6\u542c\u5668\u901f\u5ea6\u76f8\u5173\u7684\u6982\u5ff5\u3002\u58f0\u6e90\u4e0e\u4fa6\u542c\u5668\u4e4b\u95f4\u7684\u76f8\u5bf9\u901f\u5ea6\u4f1a\u5bfc\u81f4OpenAL\u6a21\u62df\u591a\u666e\u52d2\u6548\u5e94\u3002\u5982\u679c\u4f60\u4e0d\u77e5\u9053\u591a\u666e\u52d2\u6548\u5e94\u662f\u4ec0\u4e48\uff0c\u591a\u666e\u52d2\u6548\u5e94\u5c06\u5bfc\u81f4\u4e00\u4e2a\u79bb\u4f60\u8d8a\u6765\u8d8a\u8fd1\u7684\u7269\u4f53\u53d1\u51fa\u7684\u9891\u7387\u4f3c\u4e4e\u6bd4\u5b83\u79bb\u5f00\u65f6\u53d1\u51fa\u7684\u9891\u7387\u8981\u9ad8\u7684\u6548\u5e94\u3002\u95ee\u9898\u662f\uff0c\u4ec5\u4ec5\u901a\u8fc7\u8bbe\u7f6e\u58f0\u97f3\u548c\u4fa6\u542c\u5668\u901f\u5ea6\uff0cOpenAL\u4e0d\u4f1a\u4e3a\u4f60\u66f4\u65b0\u5b83\u4eec\u7684\u4f4d\u7f6e\u3002\u5b83\u5c06\u4f7f\u7528\u76f8\u5bf9\u901f\u5ea6\u6765\u8ba1\u7b97\u591a\u666e\u52d2\u6548\u5e94\uff0c\u4f46\u4f4d\u7f6e\u4e0d\u4f1a\u6539\u53d8\u3002\u56e0\u6b64\uff0c\u5982\u679c\u4f60\u60f3\u8981\u6a21\u62df\u4e00\u4e2a\u79fb\u52a8\u7684\u58f0\u6e90\u6216\u8005\u4fa6\u542c\u5668\uff0c\u4f60\u5fc5\u987b\u6ce8\u610f\u5728\u6e38\u620f\u5faa\u73af\u4e2d\u66f4\u65b0\u5b83\u4eec\u7684\u4f4d\u7f6e\u3002 \u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u5b9a\u4e49\u4e86\u5173\u952e\u5143\u7d20\uff0c\u4e3a\u4e86\u8ba9\u5b83\u4eec\u5de5\u4f5c\uff0c\u9700\u8981\u521d\u59cb\u5316OpenAL\u5e93\uff0c\u56e0\u6b64\u5c06\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a SoundManager \u7684\u65b0\u7c7b\u6765\u5904\u7406\u8fd9\u4e2a\u95ee\u9898\u3002\u4e0b\u9762\u662f\u5b9a\u4e49\u8be5\u7c7b\u7684\u4ee3\u7801\u7247\u6bb5\uff1a package org.lwjglb.engine.sound; // import ... public class SoundManager { private long device; private long context; private SoundListener listener; private final List<SoundBuffer> soundBufferList; private final Map<String, SoundSource> soundSourceMap; private final Matrix4f cameraMatrix; public SoundManager() { soundBufferList = new ArrayList<>(); soundSourceMap = new HashMap<>(); cameraMatrix = new Matrix4f(); } public void init() throws Exception { this.device = alcOpenDevice((ByteBuffer) null); if (device == NULL) { throw new IllegalStateException(\"Failed to open the default OpenAL device.\"); } ALCCapabilities deviceCaps = ALC.createCapabilities(device); this.context = alcCreateContext(device, (IntBuffer) null); if (context == NULL) { throw new IllegalStateException(\"Failed to create OpenAL context.\"); } alcMakeContextCurrent(context); AL.createCapabilities(deviceCaps); } \u8be5\u7c7b\u4fdd\u5b58\u5bf9 SoundBuffer \u548c SoundSource \u7684\u5b9e\u4f8b\u7684\u5f15\u7528\uff0c\u4ee5\u4fbf\u8ddf\u8e2a\u548c\u5728\u6b64\u4e4b\u540e\u6b63\u786e\u5730\u6e05\u7406\u5b83\u4eec\u3002 SoundBuffer \u50a8\u5b58\u5728\u4e00\u4e2a\u5217\u8868\u4e2d\uff0c\u4f46 SoundSource \u50a8\u5b58\u5728\u4e00\u4e2a Map \u4e2d\uff0c\u56e0\u6b64\u53ef\u4ee5\u901a\u8fc7\u540d\u79f0\u641c\u7d22\u5b83\u4eec\u3002 init \u65b9\u6cd5\u521d\u59cb\u5316OpenAL\u5b50\u7cfb\u7edf\uff1a \u5f00\u542f\u9ed8\u8ba4\u8bbe\u5907\u3002 \u4e3a\u8be5\u8bbe\u5907\u521b\u5efa\u529f\u80fd\u3002 \u521b\u5efa\u4e00\u4e2a\u58f0\u97f3\u73af\u5883\uff0c\u5c31\u50cf\u662fOpenGL\u90a3\u6837\uff0c\u5e76\u5c06\u5176\u8bbe\u7f6e\u4e3a\u5f53\u524d\u73af\u5883\u3002 SoundManager \u7c7b\u8fd8\u5177\u6709\u66f4\u65b0\u7ed9\u5b9a\u6444\u50cf\u673a\u4f4d\u7f6e\u7684\u4fa6\u542c\u5668\u671d\u5411\u7684\u65b9\u6cd5\u3002\u5728\u672c\u4f8b\u4e2d\uff0c\u4fa6\u542c\u5668\u5c06\u88ab\u8bbe\u7f6e\u5728\u6444\u50cf\u673a\u6240\u5728\u7684\u4f4d\u7f6e\u3002\u90a3\u4e48\uff0c\u7ed9\u5b9a\u6444\u50cf\u673a\u7684\u4f4d\u7f6e\u548c\u65cb\u8f6c\u4fe1\u606f\uff0c\u6211\u4eec\u5982\u4f55\u8ba1\u7b97 at \u548c up \u5411\u91cf\u5462\uff1f\u7b54\u6848\u662f\u4f7f\u7528\u4e0e\u6444\u50cf\u673a\u76f8\u5173\u8054\u7684\u89c2\u5bdf\u77e9\u9635\u3002\u6211\u4eec\u9700\u8981\u5c06 at (0, 0, -1) \u4e0e up (0, 1, 0) \u5411\u91cf\u8f6c\u6362\u4e3a\u8003\u8651\u6444\u50cf\u673a\u65cb\u8f6c\u7684\u5411\u91cf\u3002\u8ba9 cameraMatrix \u4e3a\u4e0e\u6444\u50cf\u673a\u5173\u8054\u7684\u89c2\u5bdf\u77e9\u9635\u3002\u5b9e\u73b0\u7684\u4ee3\u7801\u5982\u4e0b\uff1a Matrix4f invCam = new Matrix4f(cameraMatrix).invert(); Vector3f at = new Vector3f(0, 0, -1); invCam.transformDirection(at); Vector3f up = new Vector3f(0, 1, 0); invCam.transformDirection(up); \u6211\u4eec\u8981\u505a\u7684\u7b2c\u4e00\u4ef6\u4e8b\u662f\u9006\u8f6c\u6444\u50cf\u673a\u89c2\u5bdf\u77e9\u9635\u3002\u4e3a\u4ec0\u4e48\u8981\u8fd9\u4e48\u505a\uff1f\u8fd9\u6837\u60f3\uff0c\u89c2\u5bdf\u77e9\u9635\u4ece\u4e16\u754c\u7a7a\u95f4\u5750\u6807\u53d8\u6362\u5230\u89c2\u5bdf\u7a7a\u95f4\u3002\u6211\u4eec\u60f3\u8981\u7684\u6b63\u597d\u76f8\u53cd\uff0c\u6211\u4eec\u60f3\u8981\u4ece\u89c2\u5bdf\u7a7a\u95f4\u5750\u6807\uff08\u89c2\u5bdf\u77e9\u9635\uff09\u8f6c\u6362\u5230\u4e16\u754c\u7a7a\u95f4\u5750\u6807\uff0c\u8fd9\u662f\u4fa6\u542c\u5668\u5e94\u8be5\u88ab\u653e\u7f6e\u7684\u4f4d\u7f6e\u3002\u5bf9\u4e8e\u77e9\u9635\uff0c\u53cd\u6bd4\u901a\u5e38\u5c31\u610f\u5473\u7740\u9006\u8f6c\u3002\u4e00\u65e6\u6211\u4eec\u6709\u4e86\u8fd9\u4e2a\u77e9\u9635\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8f6c\u6362 at \u548c up \u5411\u91cf\uff0c\u4f7f\u7528\u8fd9\u4e2a\u77e9\u9635\u8ba1\u7b97\u65b0\u7684\u65b9\u5411\u3002 \u4f46\u662f\uff0c\u5982\u679c\u4f60\u67e5\u770b\u6e90\u4ee3\u7801\uff0c\u4f60\u4f1a\u770b\u5230\u5b9e\u73b0\u7565\u6709\u4e0d\u540c\uff0c\u6211\u4eec\u6240\u505a\u7684\u662f\uff1a Vector3f at = new Vector3f(); cameraMatrix.positiveZ(at).negate(); Vector3f up = new Vector3f(); cameraMatrix.positiveY(up); listener.setOrientation(at, up); \u4e0a\u8ff0\u4ee3\u7801\u7b49\u4ef7\u4e8e\u7b2c\u4e00\u79cd\u65b9\u6cd5\uff0c\u5b83\u53ea\u662f\u4e00\u79cd\u66f4\u9ad8\u6548\u7684\u65b9\u6cd5\u3002\u5b83\u4f7f\u7528\u4e86\u4e00\u79cd\u66f4\u5feb\u7684\u65b9\u6cd5\uff0c\u53ef\u4ee5\u5728 JOML \u5e93\u4e2d\u627e\u5230\uff0c\u8fd9\u79cd\u65b9\u6cd5\u4e0d\u9700\u8981\u8ba1\u7b97\u5b8c\u6574\u7684\u9006\u77e9\u9635\uff0c\u4f46\u662f\u53ef\u4ee5\u5f97\u5230\u76f8\u540c\u7684\u7ed3\u679c\u3002\u8fd9\u65b9\u6cd5\u662f\u7531LWJGL\u8bba\u575b\u4e2d\u7684 JOML\u4f5c\u8005 \u63d0\u4f9b\u7684\uff0c\u56e0\u6b64\u4f60\u53ef\u4ee5\u5728[\u90a3\u91cc]((http://forum.lwjgl.org/index.php?topic=6080.0)\u67e5\u770b\u66f4\u591a\u7ec6\u8282\u3002\u5982\u679c\u67e5\u770b\u6e90\u4ee3\u7801\uff0c\u4f60\u5c06\u770b\u5230 SoundManager \u7c7b\u8ba1\u7b97\u5b83\u81ea\u5df1\u7684\u89c2\u5bdf\u77e9\u9635\u526f\u672c\u3002\u8fd9\u5df2\u7ecf\u5728 Renderer \u7c7b\u4e2d\u5b8c\u6210\u4e86\u3002\u4e3a\u4e86\u4fdd\u6301\u4ee3\u7801\u7b80\u5355\uff0c\u5e76\u907f\u514d\u91cd\u6784\uff0c\u6211\u503e\u5411\u4e8e\u4f7f\u7528\u8fd9\u79cd\u65b9\u5f0f\u3002 \u8fd9\u5c31\u5b8c\u4e86\u3002\u6211\u4eec\u62e5\u6709\u64ad\u653e\u58f0\u97f3\u6240\u9700\u7684\u6240\u6709\u57fa\u7840\u7ed3\u6784\u3002\u4f60\u53ef\u4ee5\u67e5\u770b\u6e90\u4ee3\u7801\uff0c\u4e86\u89e3\u5982\u4f55\u4f7f\u7528\u6240\u6709\u4ee3\u7801\u3002\u4f60\u53ef\u4ee5\u770b\u5230\u97f3\u4e50\u662f\u5982\u4f55\u64ad\u653e\u7684\uff0c\u4ee5\u53ca\u4e0d\u540c\u6548\u679c\u7684\u58f0\u97f3\uff08\u8fd9\u4e9b\u6587\u4ef6\u662f\u4ece Freesound \u4e2d\u83b7\u5f97\u7684\uff0c\u8d21\u732e\u8005\u90fd\u50a8\u5b58\u5728\u540d\u4e3aCREDITS.txt\u7684\u4e00\u4e2a\u6587\u4ef6\u4e2d\uff09\u3002\u5982\u679c\u4f60\u83b7\u5f97\u4e00\u4e9b\u5176\u4ed6\u6587\u4ef6\uff0c\u4f60\u53ef\u4ee5\u4f1a\u6ce8\u610f\u5230\u58f0\u97f3\u8870\u51cf\u4e0e\u8ddd\u79bb\u6216\u4fa6\u542c\u5668\u7684\u65b9\u5411\u65e0\u5173\u3002\u8bf7\u68c0\u67e5\u8fd9\u4e9b\u58f0\u97f3\u662f\u5426\u662f\u5355\u58f0\u9053\uff0c\u662f\u5426\u4e0d\u662f\u7acb\u4f53\u58f0\u3002OpenGL\u4ec5\u80fd\u4f7f\u7528\u5355\u58f0\u9053\u58f0\u97f3\u8fdb\u884c\u8ba1\u7b97\u3002 \u540e\u8bb0\uff0cOpenAL\u8fd8\u5141\u8bb8\u4f60\u901a\u8fc7\u4f7f\u7528 alDistanceModel \u5e76\u4f20\u9012\u4f60\u60f3\u4f7f\u7528\u7684\u6a21\u578b\uff08 AL11.AL_EXPONENT_DISTANCE \uff0c AL_EXPONENT_DISTANCE_CLAMP \uff0c\u7b49\u7b49\uff09\u3002\u4f60\u53ef\u4ee5\u7528\u5b83\u4eec\u6765\u64ad\u653e\u5e76\u68c0\u67e5\u6548\u679c\u3002","title":"\u97f3\u9891\uff08Audio\uff09"},{"location":"23-3d-object-picking/","text":"\u4e09\u7ef4\u7269\u4f53\u9009\u53d6\uff083D Object Picking\uff09 \u6444\u50cf\u673a\u9009\u53d6 \u6bcf\u4e00\u4e2a\u6e38\u620f\u7684\u5173\u952e\u4e4b\u4e00\u662f\u80fd\u4e0e\u73af\u5883\u4ea4\u4e92\uff0c\u8be5\u529f\u80fd\u8981\u6c42\u80fd\u591f\u5728\u4e09\u7ef4\u573a\u666f\u4e2d\u9009\u53d6\u7269\u4f53\u3002\u5728\u672c\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u63a2\u8ba8\u5982\u4f55\u5b9e\u73b0\u8fd9\u4e00\u529f\u80fd\u3002 \u4f46\u662f\uff0c\u5728\u5f00\u59cb\u8bb2\u8ff0\u9009\u53d6\u7269\u4f53\u7684\u6b65\u9aa4\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u4e00\u79cd\u8868\u793a\u6240\u9009\u7269\u4f53\u7684\u65b9\u6cd5\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u5fc5\u987b\u505a\u7684\u7b2c\u4e00\u4ef6\u4e8b\u662f\u6dfb\u52a0\u4e00\u4e2a\u5c5e\u6027\u5230 GameItem \u7c7b\uff0c\u8fd9\u5141\u8bb8\u6211\u4eec\u6807\u8bb0\u9009\u5b9a\u7684\u5bf9\u8c61\uff1a private boolean selected; \u7136\u540e\uff0c\u6211\u4eec\u9700\u8981\u80fd\u591f\u5728\u573a\u666f\u7740\u8272\u5668\u4e2d\u4f7f\u7528\u8be5\u503c\u3002\u8ba9\u6211\u4eec\u4ece\u7247\u5143\u7740\u8272\u5668\uff08 scene_fragment.fs \uff09\u5f00\u59cb\u3002\u5728\u672c\u4f8b\u4e2d\uff0c\u6211\u4eec\u5c06\u5047\u8bbe\u4ece\u9876\u70b9\u7740\u8272\u5668\u63a5\u6536\u4e00\u4e2a\u6807\u8bb0\uff0c\u8be5\u6807\u8bb0\u5c06\u786e\u5b9a\u8981\u6e32\u67d3\u7684\u7247\u5143\u662f\u5426\u662f\u9009\u5b9a\u7684\u7269\u4f53\u3002 in float outSelected; \u7136\u540e\uff0c\u5728\u7247\u5143\u7740\u8272\u5668\u7684\u7ed3\u5c3e\uff0c\u6211\u4eec\u5c06\u4fee\u6539\u6700\u7ec8\u7684\u7247\u5143\u989c\u8272\uff0c\u5982\u679c\u9009\u4e2d\uff0c\u5219\u5c06\u84dd\u8272\u5206\u91cf\u8bbe\u7f6e\u4e3a 1 . if ( outSelected > 0 ) { fragColor = vec4(fragColor.x, fragColor.y, 1, 1); } \u7136\u540e\uff0c\u6211\u4eec\u9700\u8981\u80fd\u591f\u4e3a\u6bcf\u4e2a GameItem \u8bbe\u7f6e\u8be5\u503c\u3002\u5982\u679c\u4f60\u56de\u60f3\u4e00\u4e0b\u524d\u9762\u7684\u7ae0\u8282\uff0c\u6211\u4eec\u6709\u4e24\u79cd\u60c5\u51b5\uff1a \u6e32\u67d3\u975e\u5b9e\u4f8b\u5316\u7f51\u683c\u3002 \u6e32\u67d3\u5b9e\u4f8b\u5316\u7f51\u683c\u3002 \u5728\u7b2c\u4e00\u79cd\u60c5\u51b5\u4e0b\uff0c\u6bcf\u4e2a GameItem \u7684\u6570\u636e\u901a\u8fc7Uniform\u4f20\u9012\uff0c\u56e0\u6b64\u6211\u4eec\u53ea\u9700\u8981\u5728\u9876\u70b9\u7740\u8272\u5668\u4e2d\u4e3a\u5b83\u6dfb\u52a0\u4e00\u4e2a\u65b0\u7684Uniform\u3002\u5728\u7b2c\u4e8c\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5b9e\u4f8b\u5316\u5c5e\u6027\u3002\u53ef\u4ee5\u770b\u5230\u4e0b\u8ff0\u4ee3\u7801\u4e2d\u96c6\u6210\u4e86\u4e24\u79cd\u60c5\u51b5\u5230\u9876\u70b9\u7740\u8272\u5668\u3002 layout (location=14) in float selectedInstanced; ... uniform float selectedNonInstanced; ... if ( isInstanced > 0 ) { outSelected = selectedInstanced; ... } else { outSelected = selectedNonInstanced; ... \u65e2\u7136\u5df2\u7ecf\u505a\u597d\u4e86\u57fa\u672c\u51c6\u5907\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5b9a\u4e49\u5982\u4f55\u9009\u62e9\u5bf9\u8c61\u3002\u5728\u7ee7\u7eed\u4e4b\u524d\uff0c\u5982\u679c\u4f60\u67e5\u9605\u6e90\u4ee3\u7801\uff0c\u4f60\u53ef\u80fd\u4f1a\u6ce8\u610f\u5230\u89c2\u5bdf\u77e9\u9635\u73b0\u5728\u50a8\u5b58\u5728 Camera \u7c7b\u4e2d\u3002\u8fd9\u662f\u56e0\u4e3a\u6211\u4eec\u5728\u6e90\u4ee3\u7801\u4e2d\u7684\u51e0\u4e2a\u7c7b\u91cd\u65b0\u8ba1\u7b97\u4e86\u89c2\u5bdf\u77e9\u9635\uff0c\u6b64\u524d\u5b83\u50a8\u5b58\u5728 Transformation \u548c SoundManager \u7c7b\u4e2d\u3002\u4e3a\u4e86\u8ba1\u7b97\u4ea4\u70b9\uff0c\u6211\u4eec\u5c31\u9700\u8981\u521b\u5efa\u53e6\u4e00\u4e2a\u526f\u672c\u3002\u4e0e\u5176\u521b\u5efa\u53e6\u4e00\u4e2a\u526f\u672c\uff0c\u6211\u4eec\u4e0d\u5982\u628a\u5b83\u96c6\u4e2d\u5230 Camera \u7c7b\u4e2d\u3002\u8fd9\u4e00\u66f4\u6539\u8fd8\u9700\u8981\u89c2\u5bdf\u77e9\u9635\u5728\u6e38\u620f\u4e3b\u5faa\u73af\u4e2d\u66f4\u65b0\u3002 \u8ba9\u6211\u4eec\u7ee7\u7eed\u7269\u4f53\u9009\u53d6\u7684\u8ba8\u8bba\u3002\u5728\u672c\u4f8b\u4e2d\uff0c\u6211\u4eec\u5c06\u57fa\u4e8e\u4e00\u4e2a\u7b80\u5355\u7684\u65b9\u6cd5\uff0c\u9009\u53d6\u5c06\u7531\u6444\u50cf\u673a\u81ea\u52a8\u5730\u5b8c\u6210\uff0c\u5c06\u9009\u62e9\u6444\u50cf\u673a\u6240\u9762\u5bf9\u7684\u6700\u8fd1\u7684\u7269\u4f53\u3002\u8ba9\u6211\u4eec\u8ba8\u8bba\u4e00\u4e0b\u5982\u4f55\u505a\u5230\u5b83\u3002 \u4e0b\u56fe\u662f\u6211\u4eec\u9700\u8981\u89e3\u51b3\u7684\u60c5\u51b5\uff1a \u6211\u4eec\u628a\u6444\u50cf\u673a\u653e\u5728\u4e16\u754c\u7a7a\u95f4\u7684\u67d0\u4e2a\u5750\u6807\u4e2d\uff0c\u9762\u671d\u4e00\u4e2a\u7279\u5b9a\u65b9\u5411\u3002\u4efb\u4f55\u4e00\u4e2a\u7269\u4f53\uff0c\u5982\u679c\u5b83\u4e0e\u6444\u50cf\u673a\u7684\u4f4d\u7f6e\u548c\u524d\u5411\u7684\u5149\u7ebf\u6295\u5c04\uff08Ray Cast\uff09\u76f8\u4ea4\uff0c\u90a3\u4e48\u5b83\u5c31\u662f\u5019\u9009\u7269\u4f53\u3002\u5728\u6240\u6709\u5019\u9009\u7269\u4f53\u4e2d\uff0c\u6211\u4eec\u53ea\u9700\u8981\u9009\u62e9\u6700\u8fd1\u7684\u4e00\u4e2a\u3002 \u5728\u672c\u4f8b\u4e2d\uff0c\u6e38\u620f\u9879\u662f\u7acb\u65b9\u4f53\uff0c\u56e0\u6b64\u9700\u8981\u8ba1\u7b97\u6444\u50cf\u673a\u7684\u524d\u5411\u5411\u91cf\u4e0e\u7acb\u65b9\u4f53\u7684\u4ea4\u70b9\u3002\u8fd9\u4f3c\u4e4e\u662f\u4e00\u4e2a\u975e\u5e38\u7279\u6b8a\u7684\u60c5\u51b5\uff0c\u4f46\u5b9e\u9645\u4e0a\u662f\u975e\u5e38\u5e38\u89c1\u7684\u3002\u5728\u8bb8\u591a\u6e38\u620f\u4e2d\uff0c\u6e38\u620f\u9879\u90fd\u4e0e\u6240\u8c13\u7684\u8fb9\u754c\u6846\uff08Bounding Box\uff09\u76f8\u5173\u8fde\u3002\u8fb9\u754c\u6846\u662f\u4e00\u4e2a\u77e9\u5f62\u6846\uff0c\u5b83\u56ca\u62ec\u4e86\u8be5\u7269\u4f53\u7684\u6240\u6709\u9876\u70b9\u3002\u4f8b\u5982\uff0c\u8fb9\u754c\u6846\u4e5f\u7528\u4e8e\u78b0\u649e\u68c0\u6d4b\u3002\u5b9e\u9645\u4e0a\uff0c\u5728\u52a8\u753b\u7ae0\u8282\u4e2d\uff0c\u4f60\u770b\u5230\u7684\u6bcf\u4e2a\u52a8\u753b\u5e27\u90fd\u5b9a\u4e49\u4e86\u4e00\u4e2a\u8fb9\u754c\u6846\uff0c\u8fd9\u6709\u52a9\u4e8e\u5728\u4efb\u610f\u7ed9\u5b9a\u65f6\u95f4\u8bbe\u7f6e\u8fb9\u754c\u3002 \u63a5\u4e0b\u6765\u8ba9\u6211\u4eec\u5f00\u59cb\u7f16\u7801\u3002\u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a CameraBoxSelectionDetector \u7684\u65b0\u7c7b\uff0c\u5b83\u6709\u4e00\u4e2a\u540d\u4e3a selectGameItem \u7684\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u5c06\u63a5\u6536\u6e38\u620f\u9879\u5217\u8868\u548c\u6444\u50cf\u673a\u3002\u65b9\u6cd5\u7684\u5b9a\u4e49\u5982\u4e0b\uff1a public void selectGameItem(GameItem[] gameItems, Camera camera) { GameItem selectedGameItem = null; float closestDistance = Float.POSITIVE_INFINITY; dir = camera.getViewMatrix().positiveZ(dir).negate(); for (GameItem gameItem : gameItems) { gameItem.setSelected(false); min.set(gameItem.getPosition()); max.set(gameItem.getPosition()); min.add(-gameItem.getScale(), -gameItem.getScale(), -gameItem.getScale()); max.add(gameItem.getScale(), gameItem.getScale(), gameItem.getScale()); if (Intersectionf.intersectRayAab(camera.getPosition(), dir, min, max, nearFar) && nearFar.x < closestDistance) { closestDistance = nearFar.x; selectedGameItem = gameItem; } } if (selectedGameItem != null) { selectedGameItem.setSelected(true); } } \u8be5\u65b9\u6cd5\u5c06\u8fed\u4ee3\u6e38\u620f\u9879\uff0c\u5c1d\u8bd5\u4ece\u4e2d\u83b7\u53d6\u4e0e\u6444\u50cf\u673a\u5149\u7ebf\u6295\u5c04\u76f8\u4ea4\u7684\u9879\u3002\u5b83\u9996\u5148\u5b9a\u4e49\u4e00\u4e2a\u540d\u4e3a closestDistance \u7684\u53d8\u91cf\uff0c\u8be5\u53d8\u91cf\u5c06\u50a8\u5b58\u6700\u8fd1\u7684\u8ddd\u79bb\u3002\u5bf9\u4e8e\u76f8\u4ea4\u7684\u6e38\u620f\u9879\uff0c\u5c06\u8ba1\u7b97\u6444\u50cf\u673a\u5230\u4ea4\u70b9\u7684\u8ddd\u79bb\uff0c\u5982\u679c\u8be5\u8ddd\u79bb\u5c0f\u4e8e\u50a8\u5b58\u5728 closestDistance \u4e2d\u7684\u503c\uff0c\u5219\u8be5\u9879\u5c06\u6210\u4e3a\u65b0\u7684\u5019\u9009\u9879\u3002 \u5728\u8fdb\u5165\u5faa\u73af\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u6444\u50cf\u673a\u6240\u9762\u5411\u7684\u65b9\u5411\u5411\u91cf\u3002\u8fd9\u5f88\u7b80\u5355\uff0c\u53ea\u9700\u4f7f\u7528\u89c6\u56fe\u77e9\u9635\u53bb\u83b7\u5f97\u8003\u8651\u76f8\u673a\u65cb\u8f6c\u7684Z\u65b9\u5411\u3002\u8bb0\u4f4f\uff0c\u6b63Z\u6307\u5411\u5c4f\u5e55\u5916\uff0c\u6240\u4ee5\u9700\u8981\u76f8\u53cd\u7684\u65b9\u5411\u5411\u91cf\uff0c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u8981\u53cd\u65b9\u5411\uff08 negate \uff09\u3002 \u5728\u6e38\u620f\u5faa\u73af\u4e2d\uff0c\u6bcf\u4e2a GameItem \u90fd\u8981\u8fdb\u884c\u76f8\u4ea4\u8ba1\u7b97\u3002\u4f46\u662f\uff0c\u6211\u4eec\u8be5\u600e\u4e48\u505a\u5462\uff1f\u8fd9\u5c31\u662f JOML \u5e93\u6765\u5e2e\u5fd9\u7684\u5730\u65b9\u4e86\u3002\u6211\u4eec\u4f7f\u7528\u7684\u662f JOML \u7684 Intersectionf \u7c7b\uff0c\u5b83\u63d0\u4f9b\u4e86\u51e0\u79cd\u8ba1\u7b97\u4e8c\u7ef4\u548c\u4e09\u7ef4\u4ea4\u70b9\u7684\u65b9\u6cd5\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u6211\u4eec\u4f7f\u7528\u7684\u662f intersectRayAab \u65b9\u6cd5\u3002 \u8be5\u65b9\u6cd5\u5b9e\u73b0\u4e86\u8f74\u5bf9\u9f50\u8fb9\u754c\u6846\uff08Axis Aligned Bounding Box\uff0c\u7b80\u79f0AABB\uff09\u4ea4\u70b9\u68c0\u6d4b\u7b97\u6cd5\u3002\u4f60\u53ef\u4ee5\u67e5\u770bJOML\u6587\u6863\u4e2d\u6307\u51fa\u7684 \u8be6\u7ec6\u4fe1\u606f \u3002 \u8be5\u65b9\u6cd5\u6d4b\u8bd5\u7531\u539f\u70b9\u548c\u65b9\u5411\u5b9a\u4e49\u7684\u5c04\u7ebf\u662f\u5426\u4e0e\u7531\u6700\u5c0f\u548c\u6700\u5927\u5750\u6807\u5b9a\u4e49\u7684\u8fb9\u754c\u6846\u76f8\u4ea4\u3002\u8fd9\u4e2a\u7b97\u6cd5\u662f\u6709\u6548\u7684\uff0c\u56e0\u4e3a\u6211\u4eec\u7684\u7acb\u65b9\u4f53\u662f\u8f74\u5bf9\u9f50\u7684\uff0c\u5982\u679c\u65cb\u8f6c\u5b83\u4eec\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u5c31\u4e0d\u8d77\u4f5c\u7528\u3002\u56e0\u6b64\uff0c\u8be5\u65b9\u6cd5\u63a5\u6536\u4ee5\u4e0b\u53c2\u6570\uff1a \u4e00\u4e2a\u539f\u70b9\uff1a\u5728\u672c\u4f8b\u4e2d\uff0c\u8fd9\u662f\u6444\u50cf\u673a\u7684\u4f4d\u7f6e\u3002 \u4e00\u4e2a\u65b9\u5411\uff1a\u5728\u8fd9\u91cc\u662f\u6444\u50cf\u673a\u7684\u671d\u5411\uff0c\u524d\u5411\u5411\u91cf\u3002 \u8fb9\u754c\u6846\u7684\u6700\u5c0f\u5750\u6807\u3002\u5728\u672c\u4f8b\u4e2d\uff0c\u7acb\u65b9\u4f53\u4ee5 GameItem \u5750\u6807\u4e3a\u4e2d\u5fc3\uff0c\u6700\u5c0f\u5750\u6807\u662f\u8be5\u5750\u6807\u51cf\u53bb\u6bd4\u4f8b\u3002\uff08\u5728\u5176\u539f\u59cb\u5927\u5c0f\u4e2d\uff0c\u7acb\u65b9\u4f53\u7684\u957f\u5ea6\u4e3a2\uff0c\u6bd4\u4f8b\u4e3a1\uff09\u3002 \u8fb9\u754c\u6846\u7684\u6700\u5927\u5750\u6807\u3002\u4e0d\u8a00\u800c\u55bb\u3002 \u4e00\u4e2a\u7ed3\u679c\u5411\u91cf\u3002\u5b83\u5c06\u50a8\u5b58\u5230\u8fdc\u8fd1\u4ea4\u70b9\u7684\u8ddd\u79bb\uff08\u5bf9\u4e8e\u4e00\u4e2a\u8f74\u5bf9\u9f50\u8fb9\u754c\u6846\u548c\u4e00\u6761\u5c04\u7ebf\uff0c\u6700\u591a\u6709\u4e24\u4e2a\u4ea4\u70b9\uff09\u3002 \u5982\u679c\u6709\u4ea4\u70b9\uff0c\u8be5\u65b9\u6cd5\u5c06\u8fd4\u56de true \u3002\u5982\u679c\u4e3a true \uff0c\u6211\u4eec\u5c06\u68c0\u67e5\u6700\u8fd1\u8ddd\u79bb\u5e76\u5728\u5fc5\u8981\u65f6\u66f4\u65b0\u5b83\uff0c\u5e76\u50a8\u5b58\u6240\u9009\u5019\u9009 GameItem \u7684\u5f15\u7528\u3002\u4e0b\u56fe\u5c55\u793a\u4e86\u8be5\u65b9\u6cd5\u4e2d\u6d89\u53ca\u7684\u6240\u6709\u8981\u7d20\u3002 \u4e00\u65e6\u5faa\u73af\u5b8c\u6210\uff0c\u5019\u9009 GamItem \u5c06\u88ab\u6807\u8bb0\u4e3a\u5df2\u9009\u5b9a\u3002 \u8fd9\u5c31\u662f\u5168\u90e8\u4e86\u3002 selectGameItem \u5c06\u5728 DummyGame \u7c7b\u7684\u66f4\u65b0\u65b9\u6cd5\u4e2d\u8c03\u7528\uff0c\u540c\u65f6\u8c03\u7528\u7684\u8fd8\u6709\u89c2\u5bdf\u77e9\u9635\u66f4\u65b0\u3002 // \u66f4\u65b0\u89c2\u5bdf\u77e9\u9635 camera.updateViewMatrix(); // \u66f4\u65b0\u58f0\u97f3\u76d1\u542c\u5668\u4f4d\u7f6e soundMgr.updateListenerPosition(camera); this.selectDetector.selectGameItem(gameItems, camera); \u6b64\u5916\uff0c\u4e00\u4e2a\u5341\u5b57\u7784\u51c6\u7ebf\uff08Cross-hair\uff09\u5df2\u6dfb\u52a0\u5230\u6e32\u67d3\u4e2d\uff0c\u4ee5\u68c0\u67e5\u4e00\u5207\u5de5\u4f5c\u6b63\u5e38\u3002\u7ed3\u679c\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u663e\u7136\uff0c\u8fd9\u91cc\u7ed9\u51fa\u7684\u65b9\u6cd5\u8fdc\u8fdc\u4e0d\u662f\u6700\u4f73\u7684\uff0c\u4f46\u5b83\u5c06\u4e3a\u4f60\u63d0\u4f9b\u57fa\u7840\u77e5\u8bc6\uff0c\u662f\u4f60\u80fd\u591f\u81ea\u5df1\u5f00\u53d1\u66f4\u590d\u6742\u7684\u65b9\u6cd5\u3002\u573a\u666f\u7684\u67d0\u4e9b\u90e8\u5206\u5f88\u5bb9\u6613\u88ab\u4e22\u5f03\uff0c\u6bd4\u5982\u6444\u50cf\u673a\u540e\u9762\u7684\u7269\u4f53\uff0c\u56e0\u4e3a\u5b83\u4eec\u4e0d\u4f1a\u76f8\u4ea4\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u4f60\u6362\u53ef\u4ee5\u6839\u636e\u6444\u50cf\u673a\u7684\u8ddd\u79bb\u6765\u786e\u5b9a\u7269\u4f53\uff0c\u4ee5\u52a0\u5feb\u8ba1\u7b97\u901f\u5ea6\u3002\u6b64\u5916\uff0c\u53ea\u6709\u5728\u6444\u50cf\u673a\u79fb\u52a8\u6216\u65cb\u8f6c\u540e\uff0c\u624d\u9700\u8981\u8fdb\u884c\u8ba1\u7b97\u3002 \u9f20\u6807\u9009\u53d6 \u7528\u6444\u50cf\u673a\u9009\u53d6\u7269\u4f53\u5b8c\u6210\u4e86\uff0c\u4f46\u5f53\u6211\u4eec\u60f3\u7528\u9f20\u6807\u81ea\u7531\u9009\u62e9\u7269\u4f53\u600e\u4e48\u529e\uff1f\u5728\u6b64\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5e0c\u671b\u6bcf\u5f53\u7528\u6237\u5355\u51fb\u5c4f\u5e55\u65f6\uff0c\u81ea\u52a8\u9009\u62e9\u6700\u8fd1\u7684\u5bf9\u8c61\u3002 \u5b9e\u73b0\u5b83\u7684\u65b9\u6cd5\u7c7b\u4f3c\u4e8e\u4e0a\u8ff0\u65b9\u6cd5\u3002\u5728\u4e4b\u524d\u7684\u65b9\u6cd5\u4e2d\uff0c\u6211\u4eec\u5f97\u5230\u4e86\u6444\u50cf\u673a\u7684\u4f4d\u7f6e\uff0c\u5e76\u6839\u636e\u6444\u50cf\u673a\u5f53\u524d\u7684\u65b9\u5411\u4f7f\u7528\u201c\u524d\u5411\u201d\u65b9\u5411\u4ece\u6444\u50cf\u673a\u751f\u6210\u5c04\u7ebf\u3002\u5728\u6b64\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u4ecd\u9700\u8981\u6295\u5c04\u5e7f\u897f\uff0c\u4f46\u65b9\u5411\u6307\u5411\u4e00\u4e2a\u8fdc\u79bb\u6444\u50cf\u673a\u7684\u70b9\uff0c\u4e5f\u5c31\u662f\u70b9\u51fb\u7684\u70b9\u3002\u5728\u672c\u4f8b\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528\u70b9\u51fb\u7684\u5750\u6807\u6765\u8ba1\u7b97\u65b9\u5411\u5411\u91cf\u3002 \u4f46\u662f\uff0c\u6211\u4eec\u5982\u4f55\u5c06\u89c6\u53e3\u7a7a\u95f4\u4e2d\u7684 (x,y) \u5750\u6807\u53d8\u6362\u5230\u4e16\u754c\u7a7a\u95f4\u5462\uff1f\u8ba9\u6211\u4eec\u56de\u987e\u4e00\u4e0b\u5982\u4f55\u4ece\u6a21\u578b\u7a7a\u95f4\u5750\u6807\u53d8\u6362\u5230\u89c2\u5bdf\u7a7a\u95f4\u3002\u4e3a\u4e86\u8fbe\u5230\u8fd9\u4e2a\u76ee\u7684\uff0c\u6240\u5e94\u7528\u7684\u4e0d\u540c\u5750\u6807\u53d8\u6362\u662f\uff1a \u6211\u4eec\u4f7f\u7528\u6a21\u578b\u77e9\u9635\u5c06\u6a21\u578b\u5750\u6807\u53d8\u6362\u5230\u4e16\u754c\u5750\u6807\u3002 \u6211\u4eec\u4f7f\u7528\u89c2\u5bdf\u77e9\u9635\uff08\u63d0\u4f9b\u6444\u50cf\u673a\u529f\u80fd\uff09\u5c06\u4e16\u754c\u5750\u6807\u8f6c\u6362\u5230\u89c2\u5bdf\u7a7a\u95f4\u5750\u6807\u3002 \u6211\u4eec\u901a\u8fc7\u5e94\u7528\u900f\u89c6\u6295\u5f71\u77e9\u9635\u5c06\u89c2\u5bdf\u5750\u6807\u53d8\u6362\u5230\u9f50\u6b21\u88c1\u526a\u7a7a\u95f4\uff08Homogeneous Clip Space\uff09\u3002 \u6700\u7ec8\u7684\u5c4f\u5e55\u5750\u6807\u7531OpenGL\u4e3a\u6211\u4eec\u81ea\u52a8\u8ba1\u7b97\u3002\u5728\u6b64\u4e4b\u524d\uff0c\u5b83\u4f20\u9012\u5230\u5f52\u4e00\u5316\u7684\u7ec8\u7aef\u7a7a\u95f4\uff08\u901a\u8fc7\u5c06 x,y,z \u5750\u6807\u9664\u4ee5 w \u5206\u91cf\uff09\uff0c\u7136\u540e\u4f20\u9012\u5230 x,y \u5c4f\u5e55\u5750\u6807\u3002 \u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u4ece\u5c4f\u5e55\u5750\u6807 (x,y) \u5230\u4e16\u754c\u5750\u6807\uff0c\u9006\u8def\u5f84\u904d\u5386\u3002 \u7b2c\u4e00\u6b65\u662f\u5c06\u5c4f\u5e55\u5750\u6807\u8f6c\u6362\u4e3a\u5f52\u4e00\u5316\u7684\u7ec8\u7aef\u7a7a\u95f4\u3002\u89c6\u53e3\u7a7a\u95f4\u4e2d\u7684 (x,y) \u5750\u6807\u7684\u8303\u56f4\u662f [0, \u5c4f\u5e55\u5bbd\u5ea6] [0, \u5c4f\u5e55\u9ad8\u5ea6] \u3002\u5c4f\u5e55\u5de6\u4e0a\u89d2\u7684\u5750\u6807\u4e3a (0, 0) \u3002\u6211\u4eec\u9700\u8981\u5c06\u5176\u8f6c\u6362\u4e3a [-1, 1] \u8303\u56f4\u5185\u7684\u5750\u6807\u3002 \u5f88\u7b80\u5355\u7684\u6570\u5b66\uff1a x = 2 \\cdot screen_x / screenwidth - 1 y = 1 - 2 * screen_y / screenheight \u4f46\u662f\uff0c\u6211\u4eec\u5982\u4f55\u8ba1\u7b97 z \u5206\u91cf\u5462\uff1f\u7b54\u6848\u5f88\u7b80\u5355\uff0c\u6211\u4eec\u53ea\u9700\u7ed9\u5b83\u5206\u914d -1 \u503c\uff0c\u8fd9\u6837\u5e7f\u897f\u5c31\u53ef\u4ee5\u6307\u5411\u6700\u8fdc\u7684\u53ef\u89c1\u8ddd\u79bb\uff08\u8bf7\u8bb0\u4f4f\uff0c\u5728OpenGL\u4e2d\uff0c -1 \u6307\u5411\u9891\u5e55\uff09\u3002\u73b0\u5728\u6211\u4eec\u6709\u4e86\u5f52\u4e00\u5316\u7ec8\u7aef\u7a7a\u95f4\u4e2d\u7684\u5750\u6807\u3002 \u4e3a\u4e86\u7ee7\u7eed\u53d8\u6362\uff0c\u6211\u4eec\u9700\u8981\u5c06\u5b83\u4eec\u8f6c\u6362\u4e3a\u9f50\u6b21\u526a\u5207\u7a7a\u95f4\u3002\u6211\u4eec\u9700\u8981\u6709\u4e00\u4e2a w \u5206\u91cf\uff0c\u5b83\u4f7f\u7528\u9f50\u6b21\u5750\u6807\u3002\u867d\u7136\u8fd9\u4e2a\u6982\u5ff5\u5728\u524d\u51e0\u7ae0\u5df2\u7ecf\u4ecb\u7ecd\u8fc7\u4e86\uff0c\u4f46\u8ba9\u6211\u4eec\u518d\u56de\u987e\u5b83\u3002\u4e3a\u4e86\u8868\u793a\u4e00\u4e2a\u4e09\u7ef4\u70b9\uff0c\u6211\u4eec\u9700\u8981 x \uff0c y \u548c z \u5206\u91cf\uff0c\u4f46\u662f\u6211\u4eec\u4e00\u76f4\u5728\u5904\u7406\u4e00\u4e2a\u989d\u5916\u7684 w \u5206\u91cf\u3002\u6211\u4eec\u9700\u8981\u8fd9\u4e2a\u989d\u5916\u7684\u5206\u91cf\u6765\u4f7f\u7528\u77e9\u9635\u6267\u884c\u4e0d\u540c\u7684\u53d8\u6362\u3002\u6709\u4e9b\u53d8\u5316\u4e0d\u9700\u8981\u8fd9\u4e2a\u989d\u5916\u7684\u5206\u91cf\uff0c\u4f46\u6709\u4e9b\u53d8\u6362\u9700\u8981\u3002\u4f8b\u5982\uff0c\u5982\u679c\u6211\u4eec\u53ea\u6709 x \uff0c y \u548c z \u5206\u91cf\uff0c\u90a3\u4e48\u53d8\u6362\u77e9\u9635\u5c31\u4e0d\u80fd\u5de5\u4f5c\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u6dfb\u52a0\u4e86 w \u5206\u91cf\uff0c\u5e76\u4e3a\u5b83\u4eec\u8d4b\u503c\u4e3a 1 \uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u5904\u74064x4\u77e9\u9635\u4e86\u3002 \u6b64\u5916\uff0c\u5927\u591a\u6570\u53d8\u6362\uff0c\u6216\u8005\u66f4\u7cbe\u786e\u5730\u8bf4\uff0c\u5927\u591a\u6570\u53d8\u6362\u77e9\u9635\u90fd\u4e0d\u4f1a\u66f4\u6539 w \u5206\u91cf\u3002\u6295\u5f71\u77e9\u9635\u662f\u4e00\u4e2a\u4f8b\u5916\uff0c\u8be5\u77e9\u9635\u5c06 w \u5206\u91cf\u66f4\u6539\u4e3a\u4e0e z \u5206\u91cf\u6210\u6bd4\u4f8b\u3002 \u901a\u8fc7\u5c06 x \uff0c y \u548c z \u5206\u91cf\u5904\u4ee5 w \uff0c\u5c31\u53ef\u4ee5\u5b9e\u73b0\u4ece\u9f50\u6b21\u88c1\u526a\u7a7a\u95f4\u5230\u5f52\u4e00\u5316\u7684\u7ec8\u7aef\u5750\u6807\u7684\u8f6c\u6362\u3002\u7531\u4e8e\u8fd9\u4e2a\u5206\u91cf\u4e0e z \u5206\u91cf\u6210\u6bd4\u4f8b\uff0c\u610f\u5473\u7740\u8fdc\u5904\u7684\u7269\u4f53\u88ab\u753b\u5f97\u66f4\u5c0f\u3002\u5728\u672c\u4f8b\u4e2d\uff0c\u9700\u8981\u53cd\u5176\u9053\u800c\u884c\u4e4b\uff0c\u6211\u4eec\u53ef\u4ee5\u5ffd\u7565\u8fd9\u4e00\u6b65\uff0c\u53ea\u9700\u8981\u5c06 w \u5206\u91cf\u8bbe\u7f6e\u4e3a 1 \uff0c\u5e76\u4fdd\u7559\u5176\u5b83\u7ec4\u4ef6\u7684\u539f\u59cb\u503c\u3002 \u6211\u4eec\u73b0\u5728\u9700\u8981\u56de\u5230\u89c2\u5bdf\u7a7a\u95f4\u3002\u8fd9\u5f88\u7b80\u5355\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8ba1\u7b97\u6295\u5f71\u77e9\u9635\u7684\u9006\u77e9\u9635\u5e76\u5c06\u5b83\u4e0e4\u4e2a\u5206\u91cf\u5411\u91cf\u76f8\u4e58\u3002\u5b8c\u6210\u4e4b\u540e\uff0c\u6211\u4eec\u5c31\u9700\u8981\u628a\u5b83\u4eec\u8f6c\u6362\u6210\u4e16\u754c\u7a7a\u95f4\u3002\u540c\u6837\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4f7f\u7528\u89c2\u5bdf\u77e9\u9635\uff0c\u8ba1\u7b97\u5b83\u7684\u9006\u77e9\u9635\u7136\u540e\u4e58\u4ee5\u5411\u91cf\u3002 \u8bb0\u4f4f\uff0c\u6211\u4eec\u53ea\u5bf9\u65b9\u5411\u611f\u5174\u8da3\uff0c\u56e0\u6b64\uff0c\u5728\u672c\u4f8b\u4e2d\uff0c\u6211\u4eec\u5c06 w \u5206\u91cf\u8bbe\u7f6e\u4e3a 0 \u3002\u6211\u4eec\u8fd8\u53ef\u4ee5\u5c06 z \u7ec4\u4ef6\u518d\u6b21\u8bbe\u7f6e\u4e3a -1 \uff0c\u56e0\u4e3a\u6211\u4eec\u5e0c\u671b\u5b83\u6307\u5411\u9891\u5e55\u3002\u4e00\u65e6\u8fd9\u6837\u505a\u5e76\u5e94\u7528\u9006\u77e9\u9635\uff0c\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u4e16\u754c\u7a7a\u95f4\u4e2d\u7684\u5411\u91cf\u3002\u6211\u4eec\u8ba1\u7b97\u4e86\u5c04\u7ebf\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e0e\u6444\u50cf\u673a\u9009\u53d6\u76f8\u540c\u7684\u7b97\u6cd5\u3002 \u6211\u4eec\u521b\u5efa\u4e86\u4e00\u4e2a\u540d\u4e3a MouseBoxSelectionDetector \u7684\u65b0\u7c7b\uff0c\u5b83\u5b9e\u73b0\u4e86\u4e0a\u8ff0\u6b65\u9aa4\u3002\u6b64\u5916\uff0c\u6211\u4eec\u5c06\u6295\u5f71\u77e9\u9635\u79fb\u52a8\u5230 Window \u7c7b\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5728\u51e0\u4e2a\u5730\u65b9\u4f7f\u7528\u5b83\u4eec\u3002\u6211\u4eec\u8fd8\u91cd\u6784\u4e86\u4e00\u70b9 CameraBoxSelectionDetector \uff0c\u6240\u4ee5 MouseBoxSelectionDetector \u53ef\u4ee5\u7ee7\u627f\u548c\u4f7f\u7528\u78b0\u649e\u68c0\u6d4b\u65b9\u6cd5\u3002\u4f60\u53ef\u4ee5\u76f4\u63a5\u67e5\u770b\u6e90\u4ee3\u7801\uff0c\u56e0\u4e3a\u5b9e\u73b0\u975e\u5e38\u7b80\u5355\u3002 \u7ed3\u679c\u5982\u4e0b\u6240\u793a\uff1a \u4f60\u53ea\u9700\u7528\u9f20\u6807\u5355\u51fb\u8be5\u65b9\u5757\u5373\u53ef\u8fdb\u884c\u9009\u53d6\u3002 \u4e4b\u540e\u4f60\u53ef\u4ee5\u53c2\u8003\u4e00\u7bc7 \u4f18\u79c0\u6587\u7ae0 \u4e2d\u80cc\u5b8c\u6240\u89e3\u91ca\u7684\u6b65\u9aa4\u7684\u7ec6\u8282\uff0c\u5176\u4e2d\u5305\u542b\u4e86\u6d89\u53ca\u4e0d\u540c\u65b9\u6848\u7684\u975e\u5e38\u8be6\u7ec6\u7684\u8bf4\u660e\u3002","title":"\u4e09\u7ef4\u7269\u4f53\u9009\u53d6"},{"location":"23-3d-object-picking/#3d-object-picking","text":"","title":"\u4e09\u7ef4\u7269\u4f53\u9009\u53d6\uff083D Object Picking\uff09"},{"location":"23-3d-object-picking/#_1","text":"\u6bcf\u4e00\u4e2a\u6e38\u620f\u7684\u5173\u952e\u4e4b\u4e00\u662f\u80fd\u4e0e\u73af\u5883\u4ea4\u4e92\uff0c\u8be5\u529f\u80fd\u8981\u6c42\u80fd\u591f\u5728\u4e09\u7ef4\u573a\u666f\u4e2d\u9009\u53d6\u7269\u4f53\u3002\u5728\u672c\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u63a2\u8ba8\u5982\u4f55\u5b9e\u73b0\u8fd9\u4e00\u529f\u80fd\u3002 \u4f46\u662f\uff0c\u5728\u5f00\u59cb\u8bb2\u8ff0\u9009\u53d6\u7269\u4f53\u7684\u6b65\u9aa4\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u4e00\u79cd\u8868\u793a\u6240\u9009\u7269\u4f53\u7684\u65b9\u6cd5\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u5fc5\u987b\u505a\u7684\u7b2c\u4e00\u4ef6\u4e8b\u662f\u6dfb\u52a0\u4e00\u4e2a\u5c5e\u6027\u5230 GameItem \u7c7b\uff0c\u8fd9\u5141\u8bb8\u6211\u4eec\u6807\u8bb0\u9009\u5b9a\u7684\u5bf9\u8c61\uff1a private boolean selected; \u7136\u540e\uff0c\u6211\u4eec\u9700\u8981\u80fd\u591f\u5728\u573a\u666f\u7740\u8272\u5668\u4e2d\u4f7f\u7528\u8be5\u503c\u3002\u8ba9\u6211\u4eec\u4ece\u7247\u5143\u7740\u8272\u5668\uff08 scene_fragment.fs \uff09\u5f00\u59cb\u3002\u5728\u672c\u4f8b\u4e2d\uff0c\u6211\u4eec\u5c06\u5047\u8bbe\u4ece\u9876\u70b9\u7740\u8272\u5668\u63a5\u6536\u4e00\u4e2a\u6807\u8bb0\uff0c\u8be5\u6807\u8bb0\u5c06\u786e\u5b9a\u8981\u6e32\u67d3\u7684\u7247\u5143\u662f\u5426\u662f\u9009\u5b9a\u7684\u7269\u4f53\u3002 in float outSelected; \u7136\u540e\uff0c\u5728\u7247\u5143\u7740\u8272\u5668\u7684\u7ed3\u5c3e\uff0c\u6211\u4eec\u5c06\u4fee\u6539\u6700\u7ec8\u7684\u7247\u5143\u989c\u8272\uff0c\u5982\u679c\u9009\u4e2d\uff0c\u5219\u5c06\u84dd\u8272\u5206\u91cf\u8bbe\u7f6e\u4e3a 1 . if ( outSelected > 0 ) { fragColor = vec4(fragColor.x, fragColor.y, 1, 1); } \u7136\u540e\uff0c\u6211\u4eec\u9700\u8981\u80fd\u591f\u4e3a\u6bcf\u4e2a GameItem \u8bbe\u7f6e\u8be5\u503c\u3002\u5982\u679c\u4f60\u56de\u60f3\u4e00\u4e0b\u524d\u9762\u7684\u7ae0\u8282\uff0c\u6211\u4eec\u6709\u4e24\u79cd\u60c5\u51b5\uff1a \u6e32\u67d3\u975e\u5b9e\u4f8b\u5316\u7f51\u683c\u3002 \u6e32\u67d3\u5b9e\u4f8b\u5316\u7f51\u683c\u3002 \u5728\u7b2c\u4e00\u79cd\u60c5\u51b5\u4e0b\uff0c\u6bcf\u4e2a GameItem \u7684\u6570\u636e\u901a\u8fc7Uniform\u4f20\u9012\uff0c\u56e0\u6b64\u6211\u4eec\u53ea\u9700\u8981\u5728\u9876\u70b9\u7740\u8272\u5668\u4e2d\u4e3a\u5b83\u6dfb\u52a0\u4e00\u4e2a\u65b0\u7684Uniform\u3002\u5728\u7b2c\u4e8c\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5b9e\u4f8b\u5316\u5c5e\u6027\u3002\u53ef\u4ee5\u770b\u5230\u4e0b\u8ff0\u4ee3\u7801\u4e2d\u96c6\u6210\u4e86\u4e24\u79cd\u60c5\u51b5\u5230\u9876\u70b9\u7740\u8272\u5668\u3002 layout (location=14) in float selectedInstanced; ... uniform float selectedNonInstanced; ... if ( isInstanced > 0 ) { outSelected = selectedInstanced; ... } else { outSelected = selectedNonInstanced; ... \u65e2\u7136\u5df2\u7ecf\u505a\u597d\u4e86\u57fa\u672c\u51c6\u5907\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5b9a\u4e49\u5982\u4f55\u9009\u62e9\u5bf9\u8c61\u3002\u5728\u7ee7\u7eed\u4e4b\u524d\uff0c\u5982\u679c\u4f60\u67e5\u9605\u6e90\u4ee3\u7801\uff0c\u4f60\u53ef\u80fd\u4f1a\u6ce8\u610f\u5230\u89c2\u5bdf\u77e9\u9635\u73b0\u5728\u50a8\u5b58\u5728 Camera \u7c7b\u4e2d\u3002\u8fd9\u662f\u56e0\u4e3a\u6211\u4eec\u5728\u6e90\u4ee3\u7801\u4e2d\u7684\u51e0\u4e2a\u7c7b\u91cd\u65b0\u8ba1\u7b97\u4e86\u89c2\u5bdf\u77e9\u9635\uff0c\u6b64\u524d\u5b83\u50a8\u5b58\u5728 Transformation \u548c SoundManager \u7c7b\u4e2d\u3002\u4e3a\u4e86\u8ba1\u7b97\u4ea4\u70b9\uff0c\u6211\u4eec\u5c31\u9700\u8981\u521b\u5efa\u53e6\u4e00\u4e2a\u526f\u672c\u3002\u4e0e\u5176\u521b\u5efa\u53e6\u4e00\u4e2a\u526f\u672c\uff0c\u6211\u4eec\u4e0d\u5982\u628a\u5b83\u96c6\u4e2d\u5230 Camera \u7c7b\u4e2d\u3002\u8fd9\u4e00\u66f4\u6539\u8fd8\u9700\u8981\u89c2\u5bdf\u77e9\u9635\u5728\u6e38\u620f\u4e3b\u5faa\u73af\u4e2d\u66f4\u65b0\u3002 \u8ba9\u6211\u4eec\u7ee7\u7eed\u7269\u4f53\u9009\u53d6\u7684\u8ba8\u8bba\u3002\u5728\u672c\u4f8b\u4e2d\uff0c\u6211\u4eec\u5c06\u57fa\u4e8e\u4e00\u4e2a\u7b80\u5355\u7684\u65b9\u6cd5\uff0c\u9009\u53d6\u5c06\u7531\u6444\u50cf\u673a\u81ea\u52a8\u5730\u5b8c\u6210\uff0c\u5c06\u9009\u62e9\u6444\u50cf\u673a\u6240\u9762\u5bf9\u7684\u6700\u8fd1\u7684\u7269\u4f53\u3002\u8ba9\u6211\u4eec\u8ba8\u8bba\u4e00\u4e0b\u5982\u4f55\u505a\u5230\u5b83\u3002 \u4e0b\u56fe\u662f\u6211\u4eec\u9700\u8981\u89e3\u51b3\u7684\u60c5\u51b5\uff1a \u6211\u4eec\u628a\u6444\u50cf\u673a\u653e\u5728\u4e16\u754c\u7a7a\u95f4\u7684\u67d0\u4e2a\u5750\u6807\u4e2d\uff0c\u9762\u671d\u4e00\u4e2a\u7279\u5b9a\u65b9\u5411\u3002\u4efb\u4f55\u4e00\u4e2a\u7269\u4f53\uff0c\u5982\u679c\u5b83\u4e0e\u6444\u50cf\u673a\u7684\u4f4d\u7f6e\u548c\u524d\u5411\u7684\u5149\u7ebf\u6295\u5c04\uff08Ray Cast\uff09\u76f8\u4ea4\uff0c\u90a3\u4e48\u5b83\u5c31\u662f\u5019\u9009\u7269\u4f53\u3002\u5728\u6240\u6709\u5019\u9009\u7269\u4f53\u4e2d\uff0c\u6211\u4eec\u53ea\u9700\u8981\u9009\u62e9\u6700\u8fd1\u7684\u4e00\u4e2a\u3002 \u5728\u672c\u4f8b\u4e2d\uff0c\u6e38\u620f\u9879\u662f\u7acb\u65b9\u4f53\uff0c\u56e0\u6b64\u9700\u8981\u8ba1\u7b97\u6444\u50cf\u673a\u7684\u524d\u5411\u5411\u91cf\u4e0e\u7acb\u65b9\u4f53\u7684\u4ea4\u70b9\u3002\u8fd9\u4f3c\u4e4e\u662f\u4e00\u4e2a\u975e\u5e38\u7279\u6b8a\u7684\u60c5\u51b5\uff0c\u4f46\u5b9e\u9645\u4e0a\u662f\u975e\u5e38\u5e38\u89c1\u7684\u3002\u5728\u8bb8\u591a\u6e38\u620f\u4e2d\uff0c\u6e38\u620f\u9879\u90fd\u4e0e\u6240\u8c13\u7684\u8fb9\u754c\u6846\uff08Bounding Box\uff09\u76f8\u5173\u8fde\u3002\u8fb9\u754c\u6846\u662f\u4e00\u4e2a\u77e9\u5f62\u6846\uff0c\u5b83\u56ca\u62ec\u4e86\u8be5\u7269\u4f53\u7684\u6240\u6709\u9876\u70b9\u3002\u4f8b\u5982\uff0c\u8fb9\u754c\u6846\u4e5f\u7528\u4e8e\u78b0\u649e\u68c0\u6d4b\u3002\u5b9e\u9645\u4e0a\uff0c\u5728\u52a8\u753b\u7ae0\u8282\u4e2d\uff0c\u4f60\u770b\u5230\u7684\u6bcf\u4e2a\u52a8\u753b\u5e27\u90fd\u5b9a\u4e49\u4e86\u4e00\u4e2a\u8fb9\u754c\u6846\uff0c\u8fd9\u6709\u52a9\u4e8e\u5728\u4efb\u610f\u7ed9\u5b9a\u65f6\u95f4\u8bbe\u7f6e\u8fb9\u754c\u3002 \u63a5\u4e0b\u6765\u8ba9\u6211\u4eec\u5f00\u59cb\u7f16\u7801\u3002\u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a CameraBoxSelectionDetector \u7684\u65b0\u7c7b\uff0c\u5b83\u6709\u4e00\u4e2a\u540d\u4e3a selectGameItem \u7684\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u5c06\u63a5\u6536\u6e38\u620f\u9879\u5217\u8868\u548c\u6444\u50cf\u673a\u3002\u65b9\u6cd5\u7684\u5b9a\u4e49\u5982\u4e0b\uff1a public void selectGameItem(GameItem[] gameItems, Camera camera) { GameItem selectedGameItem = null; float closestDistance = Float.POSITIVE_INFINITY; dir = camera.getViewMatrix().positiveZ(dir).negate(); for (GameItem gameItem : gameItems) { gameItem.setSelected(false); min.set(gameItem.getPosition()); max.set(gameItem.getPosition()); min.add(-gameItem.getScale(), -gameItem.getScale(), -gameItem.getScale()); max.add(gameItem.getScale(), gameItem.getScale(), gameItem.getScale()); if (Intersectionf.intersectRayAab(camera.getPosition(), dir, min, max, nearFar) && nearFar.x < closestDistance) { closestDistance = nearFar.x; selectedGameItem = gameItem; } } if (selectedGameItem != null) { selectedGameItem.setSelected(true); } } \u8be5\u65b9\u6cd5\u5c06\u8fed\u4ee3\u6e38\u620f\u9879\uff0c\u5c1d\u8bd5\u4ece\u4e2d\u83b7\u53d6\u4e0e\u6444\u50cf\u673a\u5149\u7ebf\u6295\u5c04\u76f8\u4ea4\u7684\u9879\u3002\u5b83\u9996\u5148\u5b9a\u4e49\u4e00\u4e2a\u540d\u4e3a closestDistance \u7684\u53d8\u91cf\uff0c\u8be5\u53d8\u91cf\u5c06\u50a8\u5b58\u6700\u8fd1\u7684\u8ddd\u79bb\u3002\u5bf9\u4e8e\u76f8\u4ea4\u7684\u6e38\u620f\u9879\uff0c\u5c06\u8ba1\u7b97\u6444\u50cf\u673a\u5230\u4ea4\u70b9\u7684\u8ddd\u79bb\uff0c\u5982\u679c\u8be5\u8ddd\u79bb\u5c0f\u4e8e\u50a8\u5b58\u5728 closestDistance \u4e2d\u7684\u503c\uff0c\u5219\u8be5\u9879\u5c06\u6210\u4e3a\u65b0\u7684\u5019\u9009\u9879\u3002 \u5728\u8fdb\u5165\u5faa\u73af\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u6444\u50cf\u673a\u6240\u9762\u5411\u7684\u65b9\u5411\u5411\u91cf\u3002\u8fd9\u5f88\u7b80\u5355\uff0c\u53ea\u9700\u4f7f\u7528\u89c6\u56fe\u77e9\u9635\u53bb\u83b7\u5f97\u8003\u8651\u76f8\u673a\u65cb\u8f6c\u7684Z\u65b9\u5411\u3002\u8bb0\u4f4f\uff0c\u6b63Z\u6307\u5411\u5c4f\u5e55\u5916\uff0c\u6240\u4ee5\u9700\u8981\u76f8\u53cd\u7684\u65b9\u5411\u5411\u91cf\uff0c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u8981\u53cd\u65b9\u5411\uff08 negate \uff09\u3002 \u5728\u6e38\u620f\u5faa\u73af\u4e2d\uff0c\u6bcf\u4e2a GameItem \u90fd\u8981\u8fdb\u884c\u76f8\u4ea4\u8ba1\u7b97\u3002\u4f46\u662f\uff0c\u6211\u4eec\u8be5\u600e\u4e48\u505a\u5462\uff1f\u8fd9\u5c31\u662f JOML \u5e93\u6765\u5e2e\u5fd9\u7684\u5730\u65b9\u4e86\u3002\u6211\u4eec\u4f7f\u7528\u7684\u662f JOML \u7684 Intersectionf \u7c7b\uff0c\u5b83\u63d0\u4f9b\u4e86\u51e0\u79cd\u8ba1\u7b97\u4e8c\u7ef4\u548c\u4e09\u7ef4\u4ea4\u70b9\u7684\u65b9\u6cd5\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u6211\u4eec\u4f7f\u7528\u7684\u662f intersectRayAab \u65b9\u6cd5\u3002 \u8be5\u65b9\u6cd5\u5b9e\u73b0\u4e86\u8f74\u5bf9\u9f50\u8fb9\u754c\u6846\uff08Axis Aligned Bounding Box\uff0c\u7b80\u79f0AABB\uff09\u4ea4\u70b9\u68c0\u6d4b\u7b97\u6cd5\u3002\u4f60\u53ef\u4ee5\u67e5\u770bJOML\u6587\u6863\u4e2d\u6307\u51fa\u7684 \u8be6\u7ec6\u4fe1\u606f \u3002 \u8be5\u65b9\u6cd5\u6d4b\u8bd5\u7531\u539f\u70b9\u548c\u65b9\u5411\u5b9a\u4e49\u7684\u5c04\u7ebf\u662f\u5426\u4e0e\u7531\u6700\u5c0f\u548c\u6700\u5927\u5750\u6807\u5b9a\u4e49\u7684\u8fb9\u754c\u6846\u76f8\u4ea4\u3002\u8fd9\u4e2a\u7b97\u6cd5\u662f\u6709\u6548\u7684\uff0c\u56e0\u4e3a\u6211\u4eec\u7684\u7acb\u65b9\u4f53\u662f\u8f74\u5bf9\u9f50\u7684\uff0c\u5982\u679c\u65cb\u8f6c\u5b83\u4eec\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u5c31\u4e0d\u8d77\u4f5c\u7528\u3002\u56e0\u6b64\uff0c\u8be5\u65b9\u6cd5\u63a5\u6536\u4ee5\u4e0b\u53c2\u6570\uff1a \u4e00\u4e2a\u539f\u70b9\uff1a\u5728\u672c\u4f8b\u4e2d\uff0c\u8fd9\u662f\u6444\u50cf\u673a\u7684\u4f4d\u7f6e\u3002 \u4e00\u4e2a\u65b9\u5411\uff1a\u5728\u8fd9\u91cc\u662f\u6444\u50cf\u673a\u7684\u671d\u5411\uff0c\u524d\u5411\u5411\u91cf\u3002 \u8fb9\u754c\u6846\u7684\u6700\u5c0f\u5750\u6807\u3002\u5728\u672c\u4f8b\u4e2d\uff0c\u7acb\u65b9\u4f53\u4ee5 GameItem \u5750\u6807\u4e3a\u4e2d\u5fc3\uff0c\u6700\u5c0f\u5750\u6807\u662f\u8be5\u5750\u6807\u51cf\u53bb\u6bd4\u4f8b\u3002\uff08\u5728\u5176\u539f\u59cb\u5927\u5c0f\u4e2d\uff0c\u7acb\u65b9\u4f53\u7684\u957f\u5ea6\u4e3a2\uff0c\u6bd4\u4f8b\u4e3a1\uff09\u3002 \u8fb9\u754c\u6846\u7684\u6700\u5927\u5750\u6807\u3002\u4e0d\u8a00\u800c\u55bb\u3002 \u4e00\u4e2a\u7ed3\u679c\u5411\u91cf\u3002\u5b83\u5c06\u50a8\u5b58\u5230\u8fdc\u8fd1\u4ea4\u70b9\u7684\u8ddd\u79bb\uff08\u5bf9\u4e8e\u4e00\u4e2a\u8f74\u5bf9\u9f50\u8fb9\u754c\u6846\u548c\u4e00\u6761\u5c04\u7ebf\uff0c\u6700\u591a\u6709\u4e24\u4e2a\u4ea4\u70b9\uff09\u3002 \u5982\u679c\u6709\u4ea4\u70b9\uff0c\u8be5\u65b9\u6cd5\u5c06\u8fd4\u56de true \u3002\u5982\u679c\u4e3a true \uff0c\u6211\u4eec\u5c06\u68c0\u67e5\u6700\u8fd1\u8ddd\u79bb\u5e76\u5728\u5fc5\u8981\u65f6\u66f4\u65b0\u5b83\uff0c\u5e76\u50a8\u5b58\u6240\u9009\u5019\u9009 GameItem \u7684\u5f15\u7528\u3002\u4e0b\u56fe\u5c55\u793a\u4e86\u8be5\u65b9\u6cd5\u4e2d\u6d89\u53ca\u7684\u6240\u6709\u8981\u7d20\u3002 \u4e00\u65e6\u5faa\u73af\u5b8c\u6210\uff0c\u5019\u9009 GamItem \u5c06\u88ab\u6807\u8bb0\u4e3a\u5df2\u9009\u5b9a\u3002 \u8fd9\u5c31\u662f\u5168\u90e8\u4e86\u3002 selectGameItem \u5c06\u5728 DummyGame \u7c7b\u7684\u66f4\u65b0\u65b9\u6cd5\u4e2d\u8c03\u7528\uff0c\u540c\u65f6\u8c03\u7528\u7684\u8fd8\u6709\u89c2\u5bdf\u77e9\u9635\u66f4\u65b0\u3002 // \u66f4\u65b0\u89c2\u5bdf\u77e9\u9635 camera.updateViewMatrix(); // \u66f4\u65b0\u58f0\u97f3\u76d1\u542c\u5668\u4f4d\u7f6e soundMgr.updateListenerPosition(camera); this.selectDetector.selectGameItem(gameItems, camera); \u6b64\u5916\uff0c\u4e00\u4e2a\u5341\u5b57\u7784\u51c6\u7ebf\uff08Cross-hair\uff09\u5df2\u6dfb\u52a0\u5230\u6e32\u67d3\u4e2d\uff0c\u4ee5\u68c0\u67e5\u4e00\u5207\u5de5\u4f5c\u6b63\u5e38\u3002\u7ed3\u679c\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u663e\u7136\uff0c\u8fd9\u91cc\u7ed9\u51fa\u7684\u65b9\u6cd5\u8fdc\u8fdc\u4e0d\u662f\u6700\u4f73\u7684\uff0c\u4f46\u5b83\u5c06\u4e3a\u4f60\u63d0\u4f9b\u57fa\u7840\u77e5\u8bc6\uff0c\u662f\u4f60\u80fd\u591f\u81ea\u5df1\u5f00\u53d1\u66f4\u590d\u6742\u7684\u65b9\u6cd5\u3002\u573a\u666f\u7684\u67d0\u4e9b\u90e8\u5206\u5f88\u5bb9\u6613\u88ab\u4e22\u5f03\uff0c\u6bd4\u5982\u6444\u50cf\u673a\u540e\u9762\u7684\u7269\u4f53\uff0c\u56e0\u4e3a\u5b83\u4eec\u4e0d\u4f1a\u76f8\u4ea4\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u4f60\u6362\u53ef\u4ee5\u6839\u636e\u6444\u50cf\u673a\u7684\u8ddd\u79bb\u6765\u786e\u5b9a\u7269\u4f53\uff0c\u4ee5\u52a0\u5feb\u8ba1\u7b97\u901f\u5ea6\u3002\u6b64\u5916\uff0c\u53ea\u6709\u5728\u6444\u50cf\u673a\u79fb\u52a8\u6216\u65cb\u8f6c\u540e\uff0c\u624d\u9700\u8981\u8fdb\u884c\u8ba1\u7b97\u3002","title":"\u6444\u50cf\u673a\u9009\u53d6"},{"location":"23-3d-object-picking/#_2","text":"\u7528\u6444\u50cf\u673a\u9009\u53d6\u7269\u4f53\u5b8c\u6210\u4e86\uff0c\u4f46\u5f53\u6211\u4eec\u60f3\u7528\u9f20\u6807\u81ea\u7531\u9009\u62e9\u7269\u4f53\u600e\u4e48\u529e\uff1f\u5728\u6b64\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5e0c\u671b\u6bcf\u5f53\u7528\u6237\u5355\u51fb\u5c4f\u5e55\u65f6\uff0c\u81ea\u52a8\u9009\u62e9\u6700\u8fd1\u7684\u5bf9\u8c61\u3002 \u5b9e\u73b0\u5b83\u7684\u65b9\u6cd5\u7c7b\u4f3c\u4e8e\u4e0a\u8ff0\u65b9\u6cd5\u3002\u5728\u4e4b\u524d\u7684\u65b9\u6cd5\u4e2d\uff0c\u6211\u4eec\u5f97\u5230\u4e86\u6444\u50cf\u673a\u7684\u4f4d\u7f6e\uff0c\u5e76\u6839\u636e\u6444\u50cf\u673a\u5f53\u524d\u7684\u65b9\u5411\u4f7f\u7528\u201c\u524d\u5411\u201d\u65b9\u5411\u4ece\u6444\u50cf\u673a\u751f\u6210\u5c04\u7ebf\u3002\u5728\u6b64\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u4ecd\u9700\u8981\u6295\u5c04\u5e7f\u897f\uff0c\u4f46\u65b9\u5411\u6307\u5411\u4e00\u4e2a\u8fdc\u79bb\u6444\u50cf\u673a\u7684\u70b9\uff0c\u4e5f\u5c31\u662f\u70b9\u51fb\u7684\u70b9\u3002\u5728\u672c\u4f8b\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528\u70b9\u51fb\u7684\u5750\u6807\u6765\u8ba1\u7b97\u65b9\u5411\u5411\u91cf\u3002 \u4f46\u662f\uff0c\u6211\u4eec\u5982\u4f55\u5c06\u89c6\u53e3\u7a7a\u95f4\u4e2d\u7684 (x,y) \u5750\u6807\u53d8\u6362\u5230\u4e16\u754c\u7a7a\u95f4\u5462\uff1f\u8ba9\u6211\u4eec\u56de\u987e\u4e00\u4e0b\u5982\u4f55\u4ece\u6a21\u578b\u7a7a\u95f4\u5750\u6807\u53d8\u6362\u5230\u89c2\u5bdf\u7a7a\u95f4\u3002\u4e3a\u4e86\u8fbe\u5230\u8fd9\u4e2a\u76ee\u7684\uff0c\u6240\u5e94\u7528\u7684\u4e0d\u540c\u5750\u6807\u53d8\u6362\u662f\uff1a \u6211\u4eec\u4f7f\u7528\u6a21\u578b\u77e9\u9635\u5c06\u6a21\u578b\u5750\u6807\u53d8\u6362\u5230\u4e16\u754c\u5750\u6807\u3002 \u6211\u4eec\u4f7f\u7528\u89c2\u5bdf\u77e9\u9635\uff08\u63d0\u4f9b\u6444\u50cf\u673a\u529f\u80fd\uff09\u5c06\u4e16\u754c\u5750\u6807\u8f6c\u6362\u5230\u89c2\u5bdf\u7a7a\u95f4\u5750\u6807\u3002 \u6211\u4eec\u901a\u8fc7\u5e94\u7528\u900f\u89c6\u6295\u5f71\u77e9\u9635\u5c06\u89c2\u5bdf\u5750\u6807\u53d8\u6362\u5230\u9f50\u6b21\u88c1\u526a\u7a7a\u95f4\uff08Homogeneous Clip Space\uff09\u3002 \u6700\u7ec8\u7684\u5c4f\u5e55\u5750\u6807\u7531OpenGL\u4e3a\u6211\u4eec\u81ea\u52a8\u8ba1\u7b97\u3002\u5728\u6b64\u4e4b\u524d\uff0c\u5b83\u4f20\u9012\u5230\u5f52\u4e00\u5316\u7684\u7ec8\u7aef\u7a7a\u95f4\uff08\u901a\u8fc7\u5c06 x,y,z \u5750\u6807\u9664\u4ee5 w \u5206\u91cf\uff09\uff0c\u7136\u540e\u4f20\u9012\u5230 x,y \u5c4f\u5e55\u5750\u6807\u3002 \u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u4ece\u5c4f\u5e55\u5750\u6807 (x,y) \u5230\u4e16\u754c\u5750\u6807\uff0c\u9006\u8def\u5f84\u904d\u5386\u3002 \u7b2c\u4e00\u6b65\u662f\u5c06\u5c4f\u5e55\u5750\u6807\u8f6c\u6362\u4e3a\u5f52\u4e00\u5316\u7684\u7ec8\u7aef\u7a7a\u95f4\u3002\u89c6\u53e3\u7a7a\u95f4\u4e2d\u7684 (x,y) \u5750\u6807\u7684\u8303\u56f4\u662f [0, \u5c4f\u5e55\u5bbd\u5ea6] [0, \u5c4f\u5e55\u9ad8\u5ea6] \u3002\u5c4f\u5e55\u5de6\u4e0a\u89d2\u7684\u5750\u6807\u4e3a (0, 0) \u3002\u6211\u4eec\u9700\u8981\u5c06\u5176\u8f6c\u6362\u4e3a [-1, 1] \u8303\u56f4\u5185\u7684\u5750\u6807\u3002 \u5f88\u7b80\u5355\u7684\u6570\u5b66\uff1a x = 2 \\cdot screen_x / screenwidth - 1 y = 1 - 2 * screen_y / screenheight \u4f46\u662f\uff0c\u6211\u4eec\u5982\u4f55\u8ba1\u7b97 z \u5206\u91cf\u5462\uff1f\u7b54\u6848\u5f88\u7b80\u5355\uff0c\u6211\u4eec\u53ea\u9700\u7ed9\u5b83\u5206\u914d -1 \u503c\uff0c\u8fd9\u6837\u5e7f\u897f\u5c31\u53ef\u4ee5\u6307\u5411\u6700\u8fdc\u7684\u53ef\u89c1\u8ddd\u79bb\uff08\u8bf7\u8bb0\u4f4f\uff0c\u5728OpenGL\u4e2d\uff0c -1 \u6307\u5411\u9891\u5e55\uff09\u3002\u73b0\u5728\u6211\u4eec\u6709\u4e86\u5f52\u4e00\u5316\u7ec8\u7aef\u7a7a\u95f4\u4e2d\u7684\u5750\u6807\u3002 \u4e3a\u4e86\u7ee7\u7eed\u53d8\u6362\uff0c\u6211\u4eec\u9700\u8981\u5c06\u5b83\u4eec\u8f6c\u6362\u4e3a\u9f50\u6b21\u526a\u5207\u7a7a\u95f4\u3002\u6211\u4eec\u9700\u8981\u6709\u4e00\u4e2a w \u5206\u91cf\uff0c\u5b83\u4f7f\u7528\u9f50\u6b21\u5750\u6807\u3002\u867d\u7136\u8fd9\u4e2a\u6982\u5ff5\u5728\u524d\u51e0\u7ae0\u5df2\u7ecf\u4ecb\u7ecd\u8fc7\u4e86\uff0c\u4f46\u8ba9\u6211\u4eec\u518d\u56de\u987e\u5b83\u3002\u4e3a\u4e86\u8868\u793a\u4e00\u4e2a\u4e09\u7ef4\u70b9\uff0c\u6211\u4eec\u9700\u8981 x \uff0c y \u548c z \u5206\u91cf\uff0c\u4f46\u662f\u6211\u4eec\u4e00\u76f4\u5728\u5904\u7406\u4e00\u4e2a\u989d\u5916\u7684 w \u5206\u91cf\u3002\u6211\u4eec\u9700\u8981\u8fd9\u4e2a\u989d\u5916\u7684\u5206\u91cf\u6765\u4f7f\u7528\u77e9\u9635\u6267\u884c\u4e0d\u540c\u7684\u53d8\u6362\u3002\u6709\u4e9b\u53d8\u5316\u4e0d\u9700\u8981\u8fd9\u4e2a\u989d\u5916\u7684\u5206\u91cf\uff0c\u4f46\u6709\u4e9b\u53d8\u6362\u9700\u8981\u3002\u4f8b\u5982\uff0c\u5982\u679c\u6211\u4eec\u53ea\u6709 x \uff0c y \u548c z \u5206\u91cf\uff0c\u90a3\u4e48\u53d8\u6362\u77e9\u9635\u5c31\u4e0d\u80fd\u5de5\u4f5c\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u6dfb\u52a0\u4e86 w \u5206\u91cf\uff0c\u5e76\u4e3a\u5b83\u4eec\u8d4b\u503c\u4e3a 1 \uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u5904\u74064x4\u77e9\u9635\u4e86\u3002 \u6b64\u5916\uff0c\u5927\u591a\u6570\u53d8\u6362\uff0c\u6216\u8005\u66f4\u7cbe\u786e\u5730\u8bf4\uff0c\u5927\u591a\u6570\u53d8\u6362\u77e9\u9635\u90fd\u4e0d\u4f1a\u66f4\u6539 w \u5206\u91cf\u3002\u6295\u5f71\u77e9\u9635\u662f\u4e00\u4e2a\u4f8b\u5916\uff0c\u8be5\u77e9\u9635\u5c06 w \u5206\u91cf\u66f4\u6539\u4e3a\u4e0e z \u5206\u91cf\u6210\u6bd4\u4f8b\u3002 \u901a\u8fc7\u5c06 x \uff0c y \u548c z \u5206\u91cf\u5904\u4ee5 w \uff0c\u5c31\u53ef\u4ee5\u5b9e\u73b0\u4ece\u9f50\u6b21\u88c1\u526a\u7a7a\u95f4\u5230\u5f52\u4e00\u5316\u7684\u7ec8\u7aef\u5750\u6807\u7684\u8f6c\u6362\u3002\u7531\u4e8e\u8fd9\u4e2a\u5206\u91cf\u4e0e z \u5206\u91cf\u6210\u6bd4\u4f8b\uff0c\u610f\u5473\u7740\u8fdc\u5904\u7684\u7269\u4f53\u88ab\u753b\u5f97\u66f4\u5c0f\u3002\u5728\u672c\u4f8b\u4e2d\uff0c\u9700\u8981\u53cd\u5176\u9053\u800c\u884c\u4e4b\uff0c\u6211\u4eec\u53ef\u4ee5\u5ffd\u7565\u8fd9\u4e00\u6b65\uff0c\u53ea\u9700\u8981\u5c06 w \u5206\u91cf\u8bbe\u7f6e\u4e3a 1 \uff0c\u5e76\u4fdd\u7559\u5176\u5b83\u7ec4\u4ef6\u7684\u539f\u59cb\u503c\u3002 \u6211\u4eec\u73b0\u5728\u9700\u8981\u56de\u5230\u89c2\u5bdf\u7a7a\u95f4\u3002\u8fd9\u5f88\u7b80\u5355\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8ba1\u7b97\u6295\u5f71\u77e9\u9635\u7684\u9006\u77e9\u9635\u5e76\u5c06\u5b83\u4e0e4\u4e2a\u5206\u91cf\u5411\u91cf\u76f8\u4e58\u3002\u5b8c\u6210\u4e4b\u540e\uff0c\u6211\u4eec\u5c31\u9700\u8981\u628a\u5b83\u4eec\u8f6c\u6362\u6210\u4e16\u754c\u7a7a\u95f4\u3002\u540c\u6837\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4f7f\u7528\u89c2\u5bdf\u77e9\u9635\uff0c\u8ba1\u7b97\u5b83\u7684\u9006\u77e9\u9635\u7136\u540e\u4e58\u4ee5\u5411\u91cf\u3002 \u8bb0\u4f4f\uff0c\u6211\u4eec\u53ea\u5bf9\u65b9\u5411\u611f\u5174\u8da3\uff0c\u56e0\u6b64\uff0c\u5728\u672c\u4f8b\u4e2d\uff0c\u6211\u4eec\u5c06 w \u5206\u91cf\u8bbe\u7f6e\u4e3a 0 \u3002\u6211\u4eec\u8fd8\u53ef\u4ee5\u5c06 z \u7ec4\u4ef6\u518d\u6b21\u8bbe\u7f6e\u4e3a -1 \uff0c\u56e0\u4e3a\u6211\u4eec\u5e0c\u671b\u5b83\u6307\u5411\u9891\u5e55\u3002\u4e00\u65e6\u8fd9\u6837\u505a\u5e76\u5e94\u7528\u9006\u77e9\u9635\uff0c\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u4e16\u754c\u7a7a\u95f4\u4e2d\u7684\u5411\u91cf\u3002\u6211\u4eec\u8ba1\u7b97\u4e86\u5c04\u7ebf\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e0e\u6444\u50cf\u673a\u9009\u53d6\u76f8\u540c\u7684\u7b97\u6cd5\u3002 \u6211\u4eec\u521b\u5efa\u4e86\u4e00\u4e2a\u540d\u4e3a MouseBoxSelectionDetector \u7684\u65b0\u7c7b\uff0c\u5b83\u5b9e\u73b0\u4e86\u4e0a\u8ff0\u6b65\u9aa4\u3002\u6b64\u5916\uff0c\u6211\u4eec\u5c06\u6295\u5f71\u77e9\u9635\u79fb\u52a8\u5230 Window \u7c7b\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5728\u51e0\u4e2a\u5730\u65b9\u4f7f\u7528\u5b83\u4eec\u3002\u6211\u4eec\u8fd8\u91cd\u6784\u4e86\u4e00\u70b9 CameraBoxSelectionDetector \uff0c\u6240\u4ee5 MouseBoxSelectionDetector \u53ef\u4ee5\u7ee7\u627f\u548c\u4f7f\u7528\u78b0\u649e\u68c0\u6d4b\u65b9\u6cd5\u3002\u4f60\u53ef\u4ee5\u76f4\u63a5\u67e5\u770b\u6e90\u4ee3\u7801\uff0c\u56e0\u4e3a\u5b9e\u73b0\u975e\u5e38\u7b80\u5355\u3002 \u7ed3\u679c\u5982\u4e0b\u6240\u793a\uff1a \u4f60\u53ea\u9700\u7528\u9f20\u6807\u5355\u51fb\u8be5\u65b9\u5757\u5373\u53ef\u8fdb\u884c\u9009\u53d6\u3002 \u4e4b\u540e\u4f60\u53ef\u4ee5\u53c2\u8003\u4e00\u7bc7 \u4f18\u79c0\u6587\u7ae0 \u4e2d\u80cc\u5b8c\u6240\u89e3\u91ca\u7684\u6b65\u9aa4\u7684\u7ec6\u8282\uff0c\u5176\u4e2d\u5305\u542b\u4e86\u6d89\u53ca\u4e0d\u540c\u65b9\u6848\u7684\u975e\u5e38\u8be6\u7ec6\u7684\u8bf4\u660e\u3002","title":"\u9f20\u6807\u9009\u53d6"},{"location":"24-hud-revisited/","text":"\u56de\u987eHUD - NanoVG\uff08HUD Revisited - NanoVG\uff09 \u5728\u6b64\u524d\u7684\u7ae0\u8282\u4e2d\uff0c\u6211\u4eec\u8bb2\u89e3\u4e86\u5982\u4f55\u4f7f\u7528\u6b63\u4ea4\u6295\u5f71\u5728\u573a\u666f\u9876\u90e8\u521b\u5efa\u4e00\u4e2aHUD\u4ee5\u6e32\u67d3\u56fe\u5f62\u548c\u7eb9\u7406\u3002\u5728\u672c\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u5b66\u4e60\u5982\u4f55\u4f7f\u7528 NanoVG \u5e93\u6765\u6e32\u67d3\u6297\u952f\u9f7f\u77e2\u91cf\u56fe\u5f62\uff0c\u4ece\u800c\u4ee5\u7b80\u5355\u7684\u65b9\u5f0f\u521b\u5efa\u66f4\u590d\u6742\u7684HUD\u3002 \u4f60\u53ef\u4ee5\u4f7f\u7528\u8bb8\u591a\u5176\u4ed6\u5e93\u6765\u5b8c\u6210\u6b64\u4e8b\uff0c\u4f8b\u5982 Nifty GUI \uff0c Nuklear \u7b49\u3002\u5728\u672c\u7ae0\u662f\uff0c\u6211\u4eec\u5c06\u91cd\u70b9\u4ecb\u7ecdNanoVG\uff0c\u56e0\u4e3a\u5b83\u4f7f\u7528\u8d77\u6765\u975e\u5e38\u7b80\u5355\uff0c\u4f46\u662f\u5982\u679c\u4f60\u5e0c\u671b\u5f00\u53d1\u53ef\u4e0e\u6309\u94ae\u3001\u83dc\u5355\u548c\u7a97\u53e3\u4ea4\u4e92\u7684\u590d\u6742GUI\uff0c\u90a3\u4f60\u53ef\u80fd\u9700\u8981\u7684\u662f Nifty GUI \u3002 \u4f7f\u7528 NanoVG \u9996\u5148\u662f\u8981\u5728 pom.xml \u6587\u4ef6\u4e2d\u6dfb\u52a0\u4f9d\u8d56\u9879\uff08\u4e00\u4e2a\u662f\u7528\u4e8e\u7f16\u8bd1\u65f6\u6240\u9700\u7684\u4f9d\u8d56\u9879\uff0c\u53e6\u4e00\u4e2a\u662f\u7528\u4e8e\u8fd0\u884c\u65f6\u6240\u9700\u7684\u672c\u5730\u4ee3\u7801\uff09\uff1a ... <dependency> <groupId>org.lwjgl</groupId> <artifactId>lwjgl-nanovg</artifactId> <version>${lwjgl.version}</version> </dependency> ... <dependency> <groupId>org.lwjgl</groupId> <artifactId>lwjgl-nanovg</artifactId> <version>${lwjgl.version}</version> <classifier>${native.target}</classifier> <scope>runtime</scope> </dependency> \u5728\u5f00\u59cb\u4f7f\u7528 NanoVG \u4e4b\u524d\uff0c\u6211\u4eec\u5fc5\u987b\u5728OpenGL\u8bbe\u7f6e\u4e00\u4e9b\u4e1c\u897f\uff0c\u4ee5\u4fbf\u793a\u4f8b\u80fd\u591f\u6b63\u5e38\u5de5\u4f5c\u3002\u6211\u4eec\u9700\u8981\u542f\u7528\u5bf9\u6a21\u677f\u6d4b\u8bd5\uff08Stencil Test\uff09\u7684\u652f\u6301\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u5df2\u7ecf\u8bb2\u89e3\u4e86\u989c\u8272\u548c\u6df1\u5ea6\u7f13\u51b2\u533a\uff0c\u4f46\u6211\u4eec\u6ca1\u6709\u63d0\u5230\u6a21\u677f\u7f13\u51b2\u533a\u3002\u8be5\u7f13\u51b2\u533a\u4e3a\u7528\u4e8e\u63a7\u5236\u5e94\u7ed8\u5236\u54ea\u4e9b\u50cf\u7d20\u7684\u6bcf\u4e2a\u50cf\u7d20\u50a8\u5b58\u4e00\u4e2a\u503c\uff08\u6574\u6570\uff09\uff0c\u7528\u4e8e\u6839\u636e\u50a8\u5b58\u7684\u503c\u4ee5\u5c4f\u853d\u6216\u653e\u5f03\u7ed8\u56fe\u533a\u57df\u3002\u4f8b\u5982\uff0c\u5b83\u53ef\u4ee5\u7528\u6765\u4ee5\u4e00\u79cd\u7b80\u5355\u7684\u65b9\u5f0f\u5207\u5272\u573a\u666f\u7684\u67d0\u4e9b\u90e8\u5206\u3002\u6211\u4eec\u901a\u8fc7\u5c06\u6b64\u884c\u6dfb\u52a0\u5230 Window \u7c7b\u4e2d\u6765\u542f\u7528\u6a21\u677f\u6d4b\u8bd5\uff08\u5728\u542f\u7528\u6df1\u5ea6\u6d4b\u8bd5\u4e4b\u540e\uff09\uff1a glEnable(GL_STENCIL_TEST); \u56e0\u4e3a\u6211\u4eec\u4f7f\u7528\u7684\u662f\u53e6\u4e00\u4e2a\u7f13\u51b2\u533a\uff0c\u6240\u4ee5\u5728\u6bcf\u6b21\u6e32\u67d3\u8c03\u7528\u4e4b\u524d\uff0c\u6211\u4eec\u8fd8\u5fc5\u987b\u6ce8\u610f\u5220\u9664\u5b83\u7684\u503c\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u4fee\u6539 Renderer \u7c7b\u7684 clear \u65b9\u6cd5\uff1a public void clear() { glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT | GL_STENCIL_BUFFER_BIT); } \u6211\u4eec\u8fd8\u5c06\u6dfb\u52a0\u4e00\u4e2a\u65b0\u7684\u7a97\u53e3\u9009\u9879\u6765\u6fc0\u6d3b\u6297\u952f\u9f7f\uff08Anti-aliasing\uff09\u3002\u56e0\u6b64\uff0c\u5728 Window \u7c7b\u4e2d\uff0c\u6211\u4eec\u5c06\u901a\u8fc7\u5982\u4e0b\u65b9\u5f0f\u542f\u7528\u5b83\uff1a if (opts.antialiasing) { glfwWindowHint(GLFW_SAMPLES, 4); } \u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 NanoVG \u5e93\u4e86\u3002\u6211\u4eec\u8981\u505a\u7684\u7b2c\u4e00\u4ef6\u4e8b\u5c31\u662f\u5220\u6389\u6211\u4eec\u521b\u5efa\u7684HUD\u4ee3\u7801\uff0c\u5373\u7740\u8272\u5668\uff0c IHud \u63a5\u53e3\uff0c Renderer \u7c7b\u4e2d\u7684HUD\u6e32\u67d3\u65b9\u6cd5\u7b49\u3002\u4f60\u53ef\u4ee5\u5728\u6e90\u4ee3\u7801\u4e2d\u67e5\u770b\u3002 \u5728\u6b64\u60c5\u51b5\u4e0b\uff0c\u65b0\u7684 Hud \u7c7b\u5c06\u8d1f\u8d23\u5176\u6e32\u67d3\uff0c\u56e0\u6b64\u6211\u4eec\u4e0d\u9700\u8981\u5c06\u5176\u59d4\u6258\u7ed9 Renderer \u7c7b\u3002\u8ba9\u6211\u4eec\u5148\u5b9a\u4e49\u8fd9\u4e2a\u7c7b\uff0c\u5b83\u5c06\u6709\u4e00\u4e2a init \u65b9\u6cd5\u6765\u8bbe\u7f6e\u5e93\u548c\u6784\u5efaHUD\u6240\u9700\u8981\u7684\u8d44\u6e90\u3002\u65b9\u6cd5\u5b9a\u4e49\u5982\u4e0b\uff1a public void init(Window window) throws Exception { this.vg = window.getOptions().antialiasing ? nvgCreate(NVG_ANTIALIAS | NVG_STENCIL_STROKES) : nvgCreate(NVG_STENCIL_STROKES); if (this.vg == NULL) { throw new Exception(\"Could not init nanovg\"); } fontBuffer = Utils.ioResourceToByteBuffer(\"/fonts/OpenSans-Bold.ttf\", 150 * 1024); int font = nvgCreateFontMem(vg, FONT_NAME, fontBuffer, 0); if (font == -1) { throw new Exception(\"Could not add font\"); } colour = NVGColor.create(); posx = MemoryUtil.memAllocDouble(1); posy = MemoryUtil.memAllocDouble(1); counter = 0; } \u6211\u4eec\u9996\u5148\u8981\u505a\u7684\u662f\u521b\u5efa\u4e00\u4e2aNanoVG\u4e0a\u4e0b\u6587\u3002\u5728\u672c\u4f8b\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u7684\u662fOpenGL3.0\u540e\u7aef\uff0c\u56e0\u6b64\u6211\u4eec\u5f15\u7528\u7684\u662f org.lwjgl.nanovg.NanoVGGL3 \u547d\u540d\u7a7a\u95f4\u3002\u5982\u679c\u6297\u952f\u9f7f\u88ab\u542f\u7528\uff0c\u6211\u4eec\u5c06\u8bbe\u7f6e NVG_ANTIALIAS \u6807\u5fd7\u3002 \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u4f7f\u7528\u6b64\u524d\u52a0\u8f7d\u5230 ByteBuffer \u4e2d\u7684TrueType\u5b57\u4f53\u6765\u521b\u5efa\u5b57\u4f53\u3002\u6211\u4eec\u4e3a\u5b83\u6307\u5b9a\u4e00\u4e2a\u540d\u8bcd\uff0c\u4ee5\u4fbf\u7a0d\u540e\u5728\u6e32\u67d3\u6587\u672c\u65f6\u4f7f\u7528\u5b83\u3002\u5173\u4e8e\u8fd9\u70b9\uff0c\u4e00\u4ef6\u5f88\u91cd\u8981\u7684\u4e8b\u60c5\u662f\u7528\u4e8e\u52a0\u8f7d\u5b57\u4f53\u7684 ByteBuffer \u5fc5\u987b\u5728\u4f7f\u7528\u5b57\u4f53\u65f6\u50a8\u5b58\u5728\u5185\u5b58\u4e2d\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5b83\u4e0d\u80fd\u88ab\u56de\u6536\uff0c\u5426\u5219\u4f60\u5c06\u5f97\u5230\u4e00\u4e2a\u4e0d\u9519\u7684\u6838\u5fc3\u5d29\u6e83\u3002\u8fd9\u5c31\u662f\u5c06\u5b83\u50a8\u5b58\u4e3a\u7c7b\u5c5e\u6027\u7684\u539f\u56e0\u3002 \u7136\u540e\uff0c\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u989c\u8272\u5b9e\u4f8b\u548c\u4e00\u4e9b\u6709\u7528\u7684\u53d8\u91cf\uff0c\u8fd9\u4e9b\u53d8\u91cf\u5c06\u5728\u6e32\u67d3\u65f6\u4f7f\u7528\u3002\u5728\u521d\u59cb\u5316\u6e32\u67d3\u4e4b\u524d\uff0c\u5728\u6e38\u620f\u521d\u59cb\u5316\u65b9\u6cd5\u4e2d\u8c03\u7528\u8be5\u65b9\u6cd5\uff1a @Override public void init(Window window) throws Exception { hud.init(window); renderer.init(window); ... Hud \u7c7b\u8fd8\u5b9a\u4e49\u4e86\u4e00\u4e2a\u6e32\u67d3\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u5e94\u5728\u6e32\u67d3\u573a\u666f\u540e\u8c03\u7528\uff0c\u4ee5\u4fbf\u5728\u5176\u4e0a\u7ed8\u5236Hud\u3002 @Override public void render(Window window) { renderer.render(window, camera, scene); hud.render(window); } Hud\u7c7b\u7684 render \u65b9\u6cd5\u7684\u5f00\u5934\u5982\u4e0b\u6240\u793a\uff1a public void render(Window window) { nvgBeginFrame(vg, window.getWidth(), window.getHeight(), 1); \u9996\u5148\u5fc5\u987b\u8981\u505a\u7684\u7b2c\u4e00\u4ef6\u4e8b\u662f\u8c03\u7528 nvgBeginFrame \u65b9\u6cd5\u3002\u6240\u6709NanoVG\u6e32\u67d3\u64cd\u4f5c\u90fd\u5fc5\u987b\u4fdd\u62a4\u5728 nvgBeginFrame \u548c nvgEndFrame \u8c03\u7528\u4e4b\u95f4\u3002 nvgBeginFrame \u63a5\u53d7\u4ee5\u4e0b\u53c2\u6570\uff1a NanoVG\u73af\u5883 \u8981\u6e32\u67d3\u7684\u7a97\u53e3\u7684\u5927\u5c0f\uff08\u5bbd\u5ea6\u548c\u9ad8\u5ea6\uff09\u3002 \u50cf\u7d20\u6bd4\u3002\u5982\u679c\u9700\u8981\u652f\u6301Hi-DPI\uff0c\u53ef\u4ee5\u4fee\u6539\u6b64\u503c\u3002\u5bf9\u4e8e\u672c\u4f8b\uff0c\u6211\u4eec\u53ea\u5c06\u5176\u8bbe\u7f6e\u4e3a1\u3002 \u7136\u540e\u6211\u4eec\u521b\u5efa\u4e86\u51e0\u4e2a\u5360\u636e\u6574\u4e2a\u5c4f\u5e55\u7684\u8272\u5e26\u3002\u7b2c\u4e00\u6761\u662f\u8fd9\u6837\u7ed8\u5236\u7684\uff1a // \u4e0a\u8272\u5e26 nvgBeginPath(vg); nvgRect(vg, 0, window.getHeight() - 100, window.getWidth(), 50); nvgFillColor(vg, rgba(0x23, 0xa1, 0xf1, 200, colour)); nvgFill(vg); \u6e32\u67d3\u56fe\u5f62\u65f6\uff0c\u5e94\u8c03\u7528\u7684\u7b2c\u4e00\u4e2a\u65b9\u6cd5\u662f nvgBeginPath \uff0c\u5b83\u6307\u793aNanoVG\u5f00\u59cb\u7ed8\u5236\u65b0\u56fe\u5f62\u3002\u7136\u540e\u5b9a\u4e49\u8981\u7ed8\u5236\u7684\u5185\u5bb9\uff0c\u4e00\u4e2a\u77e9\u5f62\uff0c\u586b\u5145\u989c\u8272\u5e76\u901a\u8fc7\u8c03\u7528 nvgFill \u7ed8\u5236\u5b83\u3002 \u4f60\u53ef\u4ee5\u67e5\u770b\u6e90\u4ee3\u7801\u7684\u5176\u4ed6\u90e8\u5206\uff0c\u4ee5\u4e86\u89e3\u5176\u4f59\u56fe\u5f62\u662f\u5982\u4f55\u7ed8\u5236\u7684\u3002\u5f53\u6e32\u67d3\u6587\u672c\u662f\uff0c\u4e0d\u9700\u8981\u5728\u6e32\u67d3\u524d\u8c03\u7528 nvgBeginPath \u3002 \u5b8c\u6210\u6240\u6709\u56fe\u5f62\u7684\u7ed8\u5236\u540e\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8c03\u7528 nvgEndFrame \u6765\u7ed3\u675f\u6e32\u67d3\uff0c\u4f46\u5728\u79bb\u5f00\u65b9\u6cd5\u4e4b\u524d\u8fd8\u6709\u4e00\u4ef6\u91cd\u8981\u7684\u4e8b\u60c5\u8981\u505a\u3002\u6211\u4eec\u5fc5\u987b\u6062\u590dOpenGL\u72b6\u6001\uff0cNanoVG\u4fee\u6539OpenGL\u4ee5\u6267\u884c\u5176\u64cd\u4f5c\uff0c\u5982\u679c\u72b6\u6001\u672a\u6b63\u786e\u8fd8\u539f\uff0c\u4f60\u53ef\u80fd\u4f1a\u770b\u5230\u573a\u666f\u6ca1\u6709\u6b63\u786e\u6e32\u67d3\uff0c\u751a\u81f3\u88ab\u64e6\u9664\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u6062\u590d\u6e32\u67d3\u6240\u9700\u7684\u76f8\u5173OpenGL\u72b6\u6001\u3002\u8fd9\u662f\u59d4\u6d3e\u5230 Window \u7c7b\u4e2d\u7684\uff1a // \u8fd8\u539f\u72b6\u6001 window.restoreState(); \u65b9\u6cd5\u7684\u5b9a\u4e49\u5982\u4e0b\uff1a public void restoreState() { glEnable(GL_DEPTH_TEST); glEnable(GL_STENCIL_TEST); glBlendFunc(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA); if (opts.cullFace) { glEnable(GL_CULL_FACE); glCullFace(GL_BACK); } } \u8fd9\u5c31\u5b8c\u4e8b\u4e86\uff08\u9664\u4e86\u4e00\u4e9b\u5176\u5b83\u7684\u6e05\u7406\u65b9\u6cd5\uff09\uff0c\u4ee3\u7801\u5b8c\u6210\u4e86\u3002\u5f53\u4f60\u8fd0\u884c\u793a\u4f8b\u65f6\uff0c\u4f60\u5c06\u5f97\u5230\u5982\u4e0b\u7ed3\u679c\uff1a","title":"\u56de\u987eHUD - NanoVG"},{"location":"24-hud-revisited/#hud-nanovghud-revisited-nanovg","text":"\u5728\u6b64\u524d\u7684\u7ae0\u8282\u4e2d\uff0c\u6211\u4eec\u8bb2\u89e3\u4e86\u5982\u4f55\u4f7f\u7528\u6b63\u4ea4\u6295\u5f71\u5728\u573a\u666f\u9876\u90e8\u521b\u5efa\u4e00\u4e2aHUD\u4ee5\u6e32\u67d3\u56fe\u5f62\u548c\u7eb9\u7406\u3002\u5728\u672c\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u5b66\u4e60\u5982\u4f55\u4f7f\u7528 NanoVG \u5e93\u6765\u6e32\u67d3\u6297\u952f\u9f7f\u77e2\u91cf\u56fe\u5f62\uff0c\u4ece\u800c\u4ee5\u7b80\u5355\u7684\u65b9\u5f0f\u521b\u5efa\u66f4\u590d\u6742\u7684HUD\u3002 \u4f60\u53ef\u4ee5\u4f7f\u7528\u8bb8\u591a\u5176\u4ed6\u5e93\u6765\u5b8c\u6210\u6b64\u4e8b\uff0c\u4f8b\u5982 Nifty GUI \uff0c Nuklear \u7b49\u3002\u5728\u672c\u7ae0\u662f\uff0c\u6211\u4eec\u5c06\u91cd\u70b9\u4ecb\u7ecdNanoVG\uff0c\u56e0\u4e3a\u5b83\u4f7f\u7528\u8d77\u6765\u975e\u5e38\u7b80\u5355\uff0c\u4f46\u662f\u5982\u679c\u4f60\u5e0c\u671b\u5f00\u53d1\u53ef\u4e0e\u6309\u94ae\u3001\u83dc\u5355\u548c\u7a97\u53e3\u4ea4\u4e92\u7684\u590d\u6742GUI\uff0c\u90a3\u4f60\u53ef\u80fd\u9700\u8981\u7684\u662f Nifty GUI \u3002 \u4f7f\u7528 NanoVG \u9996\u5148\u662f\u8981\u5728 pom.xml \u6587\u4ef6\u4e2d\u6dfb\u52a0\u4f9d\u8d56\u9879\uff08\u4e00\u4e2a\u662f\u7528\u4e8e\u7f16\u8bd1\u65f6\u6240\u9700\u7684\u4f9d\u8d56\u9879\uff0c\u53e6\u4e00\u4e2a\u662f\u7528\u4e8e\u8fd0\u884c\u65f6\u6240\u9700\u7684\u672c\u5730\u4ee3\u7801\uff09\uff1a ... <dependency> <groupId>org.lwjgl</groupId> <artifactId>lwjgl-nanovg</artifactId> <version>${lwjgl.version}</version> </dependency> ... <dependency> <groupId>org.lwjgl</groupId> <artifactId>lwjgl-nanovg</artifactId> <version>${lwjgl.version}</version> <classifier>${native.target}</classifier> <scope>runtime</scope> </dependency> \u5728\u5f00\u59cb\u4f7f\u7528 NanoVG \u4e4b\u524d\uff0c\u6211\u4eec\u5fc5\u987b\u5728OpenGL\u8bbe\u7f6e\u4e00\u4e9b\u4e1c\u897f\uff0c\u4ee5\u4fbf\u793a\u4f8b\u80fd\u591f\u6b63\u5e38\u5de5\u4f5c\u3002\u6211\u4eec\u9700\u8981\u542f\u7528\u5bf9\u6a21\u677f\u6d4b\u8bd5\uff08Stencil Test\uff09\u7684\u652f\u6301\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u5df2\u7ecf\u8bb2\u89e3\u4e86\u989c\u8272\u548c\u6df1\u5ea6\u7f13\u51b2\u533a\uff0c\u4f46\u6211\u4eec\u6ca1\u6709\u63d0\u5230\u6a21\u677f\u7f13\u51b2\u533a\u3002\u8be5\u7f13\u51b2\u533a\u4e3a\u7528\u4e8e\u63a7\u5236\u5e94\u7ed8\u5236\u54ea\u4e9b\u50cf\u7d20\u7684\u6bcf\u4e2a\u50cf\u7d20\u50a8\u5b58\u4e00\u4e2a\u503c\uff08\u6574\u6570\uff09\uff0c\u7528\u4e8e\u6839\u636e\u50a8\u5b58\u7684\u503c\u4ee5\u5c4f\u853d\u6216\u653e\u5f03\u7ed8\u56fe\u533a\u57df\u3002\u4f8b\u5982\uff0c\u5b83\u53ef\u4ee5\u7528\u6765\u4ee5\u4e00\u79cd\u7b80\u5355\u7684\u65b9\u5f0f\u5207\u5272\u573a\u666f\u7684\u67d0\u4e9b\u90e8\u5206\u3002\u6211\u4eec\u901a\u8fc7\u5c06\u6b64\u884c\u6dfb\u52a0\u5230 Window \u7c7b\u4e2d\u6765\u542f\u7528\u6a21\u677f\u6d4b\u8bd5\uff08\u5728\u542f\u7528\u6df1\u5ea6\u6d4b\u8bd5\u4e4b\u540e\uff09\uff1a glEnable(GL_STENCIL_TEST); \u56e0\u4e3a\u6211\u4eec\u4f7f\u7528\u7684\u662f\u53e6\u4e00\u4e2a\u7f13\u51b2\u533a\uff0c\u6240\u4ee5\u5728\u6bcf\u6b21\u6e32\u67d3\u8c03\u7528\u4e4b\u524d\uff0c\u6211\u4eec\u8fd8\u5fc5\u987b\u6ce8\u610f\u5220\u9664\u5b83\u7684\u503c\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u4fee\u6539 Renderer \u7c7b\u7684 clear \u65b9\u6cd5\uff1a public void clear() { glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT | GL_STENCIL_BUFFER_BIT); } \u6211\u4eec\u8fd8\u5c06\u6dfb\u52a0\u4e00\u4e2a\u65b0\u7684\u7a97\u53e3\u9009\u9879\u6765\u6fc0\u6d3b\u6297\u952f\u9f7f\uff08Anti-aliasing\uff09\u3002\u56e0\u6b64\uff0c\u5728 Window \u7c7b\u4e2d\uff0c\u6211\u4eec\u5c06\u901a\u8fc7\u5982\u4e0b\u65b9\u5f0f\u542f\u7528\u5b83\uff1a if (opts.antialiasing) { glfwWindowHint(GLFW_SAMPLES, 4); } \u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 NanoVG \u5e93\u4e86\u3002\u6211\u4eec\u8981\u505a\u7684\u7b2c\u4e00\u4ef6\u4e8b\u5c31\u662f\u5220\u6389\u6211\u4eec\u521b\u5efa\u7684HUD\u4ee3\u7801\uff0c\u5373\u7740\u8272\u5668\uff0c IHud \u63a5\u53e3\uff0c Renderer \u7c7b\u4e2d\u7684HUD\u6e32\u67d3\u65b9\u6cd5\u7b49\u3002\u4f60\u53ef\u4ee5\u5728\u6e90\u4ee3\u7801\u4e2d\u67e5\u770b\u3002 \u5728\u6b64\u60c5\u51b5\u4e0b\uff0c\u65b0\u7684 Hud \u7c7b\u5c06\u8d1f\u8d23\u5176\u6e32\u67d3\uff0c\u56e0\u6b64\u6211\u4eec\u4e0d\u9700\u8981\u5c06\u5176\u59d4\u6258\u7ed9 Renderer \u7c7b\u3002\u8ba9\u6211\u4eec\u5148\u5b9a\u4e49\u8fd9\u4e2a\u7c7b\uff0c\u5b83\u5c06\u6709\u4e00\u4e2a init \u65b9\u6cd5\u6765\u8bbe\u7f6e\u5e93\u548c\u6784\u5efaHUD\u6240\u9700\u8981\u7684\u8d44\u6e90\u3002\u65b9\u6cd5\u5b9a\u4e49\u5982\u4e0b\uff1a public void init(Window window) throws Exception { this.vg = window.getOptions().antialiasing ? nvgCreate(NVG_ANTIALIAS | NVG_STENCIL_STROKES) : nvgCreate(NVG_STENCIL_STROKES); if (this.vg == NULL) { throw new Exception(\"Could not init nanovg\"); } fontBuffer = Utils.ioResourceToByteBuffer(\"/fonts/OpenSans-Bold.ttf\", 150 * 1024); int font = nvgCreateFontMem(vg, FONT_NAME, fontBuffer, 0); if (font == -1) { throw new Exception(\"Could not add font\"); } colour = NVGColor.create(); posx = MemoryUtil.memAllocDouble(1); posy = MemoryUtil.memAllocDouble(1); counter = 0; } \u6211\u4eec\u9996\u5148\u8981\u505a\u7684\u662f\u521b\u5efa\u4e00\u4e2aNanoVG\u4e0a\u4e0b\u6587\u3002\u5728\u672c\u4f8b\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u7684\u662fOpenGL3.0\u540e\u7aef\uff0c\u56e0\u6b64\u6211\u4eec\u5f15\u7528\u7684\u662f org.lwjgl.nanovg.NanoVGGL3 \u547d\u540d\u7a7a\u95f4\u3002\u5982\u679c\u6297\u952f\u9f7f\u88ab\u542f\u7528\uff0c\u6211\u4eec\u5c06\u8bbe\u7f6e NVG_ANTIALIAS \u6807\u5fd7\u3002 \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u4f7f\u7528\u6b64\u524d\u52a0\u8f7d\u5230 ByteBuffer \u4e2d\u7684TrueType\u5b57\u4f53\u6765\u521b\u5efa\u5b57\u4f53\u3002\u6211\u4eec\u4e3a\u5b83\u6307\u5b9a\u4e00\u4e2a\u540d\u8bcd\uff0c\u4ee5\u4fbf\u7a0d\u540e\u5728\u6e32\u67d3\u6587\u672c\u65f6\u4f7f\u7528\u5b83\u3002\u5173\u4e8e\u8fd9\u70b9\uff0c\u4e00\u4ef6\u5f88\u91cd\u8981\u7684\u4e8b\u60c5\u662f\u7528\u4e8e\u52a0\u8f7d\u5b57\u4f53\u7684 ByteBuffer \u5fc5\u987b\u5728\u4f7f\u7528\u5b57\u4f53\u65f6\u50a8\u5b58\u5728\u5185\u5b58\u4e2d\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5b83\u4e0d\u80fd\u88ab\u56de\u6536\uff0c\u5426\u5219\u4f60\u5c06\u5f97\u5230\u4e00\u4e2a\u4e0d\u9519\u7684\u6838\u5fc3\u5d29\u6e83\u3002\u8fd9\u5c31\u662f\u5c06\u5b83\u50a8\u5b58\u4e3a\u7c7b\u5c5e\u6027\u7684\u539f\u56e0\u3002 \u7136\u540e\uff0c\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u989c\u8272\u5b9e\u4f8b\u548c\u4e00\u4e9b\u6709\u7528\u7684\u53d8\u91cf\uff0c\u8fd9\u4e9b\u53d8\u91cf\u5c06\u5728\u6e32\u67d3\u65f6\u4f7f\u7528\u3002\u5728\u521d\u59cb\u5316\u6e32\u67d3\u4e4b\u524d\uff0c\u5728\u6e38\u620f\u521d\u59cb\u5316\u65b9\u6cd5\u4e2d\u8c03\u7528\u8be5\u65b9\u6cd5\uff1a @Override public void init(Window window) throws Exception { hud.init(window); renderer.init(window); ... Hud \u7c7b\u8fd8\u5b9a\u4e49\u4e86\u4e00\u4e2a\u6e32\u67d3\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u5e94\u5728\u6e32\u67d3\u573a\u666f\u540e\u8c03\u7528\uff0c\u4ee5\u4fbf\u5728\u5176\u4e0a\u7ed8\u5236Hud\u3002 @Override public void render(Window window) { renderer.render(window, camera, scene); hud.render(window); } Hud\u7c7b\u7684 render \u65b9\u6cd5\u7684\u5f00\u5934\u5982\u4e0b\u6240\u793a\uff1a public void render(Window window) { nvgBeginFrame(vg, window.getWidth(), window.getHeight(), 1); \u9996\u5148\u5fc5\u987b\u8981\u505a\u7684\u7b2c\u4e00\u4ef6\u4e8b\u662f\u8c03\u7528 nvgBeginFrame \u65b9\u6cd5\u3002\u6240\u6709NanoVG\u6e32\u67d3\u64cd\u4f5c\u90fd\u5fc5\u987b\u4fdd\u62a4\u5728 nvgBeginFrame \u548c nvgEndFrame \u8c03\u7528\u4e4b\u95f4\u3002 nvgBeginFrame \u63a5\u53d7\u4ee5\u4e0b\u53c2\u6570\uff1a NanoVG\u73af\u5883 \u8981\u6e32\u67d3\u7684\u7a97\u53e3\u7684\u5927\u5c0f\uff08\u5bbd\u5ea6\u548c\u9ad8\u5ea6\uff09\u3002 \u50cf\u7d20\u6bd4\u3002\u5982\u679c\u9700\u8981\u652f\u6301Hi-DPI\uff0c\u53ef\u4ee5\u4fee\u6539\u6b64\u503c\u3002\u5bf9\u4e8e\u672c\u4f8b\uff0c\u6211\u4eec\u53ea\u5c06\u5176\u8bbe\u7f6e\u4e3a1\u3002 \u7136\u540e\u6211\u4eec\u521b\u5efa\u4e86\u51e0\u4e2a\u5360\u636e\u6574\u4e2a\u5c4f\u5e55\u7684\u8272\u5e26\u3002\u7b2c\u4e00\u6761\u662f\u8fd9\u6837\u7ed8\u5236\u7684\uff1a // \u4e0a\u8272\u5e26 nvgBeginPath(vg); nvgRect(vg, 0, window.getHeight() - 100, window.getWidth(), 50); nvgFillColor(vg, rgba(0x23, 0xa1, 0xf1, 200, colour)); nvgFill(vg); \u6e32\u67d3\u56fe\u5f62\u65f6\uff0c\u5e94\u8c03\u7528\u7684\u7b2c\u4e00\u4e2a\u65b9\u6cd5\u662f nvgBeginPath \uff0c\u5b83\u6307\u793aNanoVG\u5f00\u59cb\u7ed8\u5236\u65b0\u56fe\u5f62\u3002\u7136\u540e\u5b9a\u4e49\u8981\u7ed8\u5236\u7684\u5185\u5bb9\uff0c\u4e00\u4e2a\u77e9\u5f62\uff0c\u586b\u5145\u989c\u8272\u5e76\u901a\u8fc7\u8c03\u7528 nvgFill \u7ed8\u5236\u5b83\u3002 \u4f60\u53ef\u4ee5\u67e5\u770b\u6e90\u4ee3\u7801\u7684\u5176\u4ed6\u90e8\u5206\uff0c\u4ee5\u4e86\u89e3\u5176\u4f59\u56fe\u5f62\u662f\u5982\u4f55\u7ed8\u5236\u7684\u3002\u5f53\u6e32\u67d3\u6587\u672c\u662f\uff0c\u4e0d\u9700\u8981\u5728\u6e32\u67d3\u524d\u8c03\u7528 nvgBeginPath \u3002 \u5b8c\u6210\u6240\u6709\u56fe\u5f62\u7684\u7ed8\u5236\u540e\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8c03\u7528 nvgEndFrame \u6765\u7ed3\u675f\u6e32\u67d3\uff0c\u4f46\u5728\u79bb\u5f00\u65b9\u6cd5\u4e4b\u524d\u8fd8\u6709\u4e00\u4ef6\u91cd\u8981\u7684\u4e8b\u60c5\u8981\u505a\u3002\u6211\u4eec\u5fc5\u987b\u6062\u590dOpenGL\u72b6\u6001\uff0cNanoVG\u4fee\u6539OpenGL\u4ee5\u6267\u884c\u5176\u64cd\u4f5c\uff0c\u5982\u679c\u72b6\u6001\u672a\u6b63\u786e\u8fd8\u539f\uff0c\u4f60\u53ef\u80fd\u4f1a\u770b\u5230\u573a\u666f\u6ca1\u6709\u6b63\u786e\u6e32\u67d3\uff0c\u751a\u81f3\u88ab\u64e6\u9664\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u6062\u590d\u6e32\u67d3\u6240\u9700\u7684\u76f8\u5173OpenGL\u72b6\u6001\u3002\u8fd9\u662f\u59d4\u6d3e\u5230 Window \u7c7b\u4e2d\u7684\uff1a // \u8fd8\u539f\u72b6\u6001 window.restoreState(); \u65b9\u6cd5\u7684\u5b9a\u4e49\u5982\u4e0b\uff1a public void restoreState() { glEnable(GL_DEPTH_TEST); glEnable(GL_STENCIL_TEST); glBlendFunc(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA); if (opts.cullFace) { glEnable(GL_CULL_FACE); glCullFace(GL_BACK); } } \u8fd9\u5c31\u5b8c\u4e8b\u4e86\uff08\u9664\u4e86\u4e00\u4e9b\u5176\u5b83\u7684\u6e05\u7406\u65b9\u6cd5\uff09\uff0c\u4ee3\u7801\u5b8c\u6210\u4e86\u3002\u5f53\u4f60\u8fd0\u884c\u793a\u4f8b\u65f6\uff0c\u4f60\u5c06\u5f97\u5230\u5982\u4e0b\u7ed3\u679c\uff1a","title":"\u56de\u987eHUD - NanoVG\uff08HUD Revisited - NanoVG\uff09"},{"location":"25-optimizations-frustum-culling/","text":"\u4f18\u5316 - \u622a\u9525\u5254\u9664\uff08Optimizations - Frustum Culling\uff09 \u4f18\u5316 - \u622a\u9525\u5254\u9664\u4e00 \u73b0\u5728\u6211\u4eec\u4f7f\u7528\u4e86\u8bb8\u591a\u4e0d\u540c\u7684\u56fe\u5f62\u6548\u679c\uff0c\u4f8b\u5982\u5149\u7167\u3001\u7c92\u5b50\u7b49\u3002\u6b64\u5916\uff0c\u6211\u4eec\u8fd8\u5b66\u4e60\u4e86\u5982\u4f55\u5b9e\u4f8b\u5316\u6e32\u67d3\uff0c\u4ee5\u51cf\u5c11\u7ed8\u5236\u8bb8\u591a\u76f8\u4f3c\u5bf9\u8c61\u7684\u5f00\u9500\u3002\u7136\u800c\uff0c\u6211\u4eec\u4ecd\u6709\u8db3\u591f\u7684\u7a7a\u95f4\u8fdb\u884c\u4e00\u4e9b\u7b80\u5355\u7684\u4f18\u5316\uff0c\u8fd9\u5c06\u589e\u52a0\u53ef\u4ee5\u8fbe\u5230\u7684\u5e27\u7387\uff08FPS\uff09\u3002 \u4f60\u53ef\u80fd\u60f3\u77e5\u9053\u4e3a\u4ec0\u4e48\u6211\u4eec\u4f1a\u5728\u6bcf\u4e00\u5e27\u4e2d\u7ed8\u5236\u6574\u4e2a\u6e38\u620f\u9879\u5217\u8868\uff0c\u5373\u4f7f\u5176\u4e2d\u4e00\u4e9b\u9879\u4e0d\u53ef\u89c1\uff08\u56e0\u4e3a\u5b83\u4eec\u5728\u6444\u50cf\u673a\u540e\u9762\u6216\u8ddd\u79bb\u6444\u50cf\u673a\u592a\u8fdc\uff09\u3002\u4f60\u751a\u81f3\u53ef\u80fd\u8ba4\u4e3a\u8fd9\u662f\u7531OpenGL\u81ea\u52a8\u5904\u7406\u7684\uff0c\u8fd9\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u662f\u6b63\u786e\u7684\u3002OpenGL\u5c06\u653e\u5f03\u4f4d\u4e8e\u53ef\u89c1\u533a\u57df\u4e4b\u5916\u7684\u9876\u70b9\u7684\u6e32\u67d3\uff0c\u8fd9\u79f0\u4f5c\u88c1\u526a\uff08Clipping\uff09\u3002\u88c1\u526a\u7684\u95ee\u9898\u662f\uff0c\u5728\u6267\u884c\u9876\u70b9\u7740\u8272\u4e4b\u540e\uff0c\u6309\u9876\u70b9\u8fdb\u884c\u5904\u7406\u7684\u3002\u56e0\u6b64\uff0c\u5373\u4f7f\u6b64\u64cd\u4f5c\u8282\u7701\u4e86\u8d44\u6e90\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u901a\u8fc7\u4e0d\u5c1d\u8bd5\u6e32\u67d3\u4e0d\u53ef\u89c1\u7684\u5bf9\u8c61\u6765\u63d0\u9ad8\u6548\u7387\u3002\u6211\u4eec\u4e0d\u4f1a\u901a\u8fc7\u5c06\u6570\u636e\u53d1\u9001\u5230GPU\u4ee5\u53ca\u5bf9\u8fd9\u4e9b\u5bf9\u8c61\u7684\u6bcf\u4e2a\u9876\u70b9\u8fdb\u884c\u53d8\u6362\u6765\u6d6a\u8d39\u8d44\u6e90\u3002\u6211\u4eec\u9700\u8981\u79fb\u9664\u4e0d\u5305\u542b\u5728\u89c6\u9525\u4f53\uff08View Frustum\uff09\u4e2d\u7684\u5bf9\u8c61\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u9700\u8981\u8fdb\u884c\u622a\u9525\u5254\u9664\u3002 \u4f46\u662f\uff0c\u9996\u5148\u8ba9\u6211\u4eec\u56de\u987e\u4e00\u4e0b\u4ec0\u4e48\u662f\u89c6\u9525\u4f53\u3002\u89c6\u9525\u4f53\u662f\u4e00\u4e2a\u7ed3\u5408\u6444\u50cf\u673a\u7684\u4f4d\u7f6e\u548c\u65cb\u8f6c\u4ee5\u53ca\u4f7f\u7528\u7684\u6295\u5f71\uff0c\u5305\u542b\u6240\u6709\u53ef\u89c1\u7269\u4f53\u7684\u4f53\u79ef\u3002\u901a\u5e38\uff0c\u89c6\u9525\u4f53\u662f\u4e00\u4e2a\u56db\u68f1\u53f0\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u5982\u4f60\u6240\u89c1\uff0c\u89c6\u9525\u4f53\u7531\u516d\u4e2a\u5e73\u9762\u5b9a\u4e49\uff0c\u4f4d\u4e8e\u89c6\u9525\u4f53\u4e4b\u5916\u7684\u4efb\u4f55\u5185\u5bb9\u90fd\u4e0d\u4f1a\u6e32\u67d3\u3002\u56e0\u6b64\uff0c\u622a\u9525\u5254\u9664\u662f\u79fb\u9664\u89c6\u9525\u4f53\u4e4b\u5916\u7684\u5bf9\u8c61\u7684\u8fc7\u7a0b\u3002 \u56e0\u6b64\uff0c\u4e3a\u4e86\u8fdb\u884c\u622a\u9525\u5254\u9664\uff0c\u6211\u4eec\u9700\u8981\uff1a \u4f7f\u7528\u89c2\u5bdf\u548c\u6295\u5f71\u77e9\u9635\u4e2d\u5305\u542b\u7684\u6570\u636e\u8ba1\u7b97\u622a\u9525\u5e73\u9762\u3002 \u5bf9\u6bcf\u4e2a\u6e38\u620f\u9879\u68c0\u67e5\u5b83\u662f\u5426\u5305\u542b\u5728\u89c6\u9525\u4f53\u4e2d\uff0c\u6362\u53e5\u8bdd\u8bf4\uff0c\u5728\u5927\u5c0f\u622a\u9525\u5e73\u9762\u4e4b\u95f4\u3002\u5e76\u4ece\u6e32\u67d3\u6d41\u7a0b\u4e2d\u5220\u9664\u90a3\u4e9b\u4e0d\u5305\u542b\u5728\u5176\u4e2d\u7684\u3002 \u90a3\u4e48\u8ba9\u6211\u4eec\u4ece\u8ba1\u7b97\u622a\u9525\u5e73\u9762\u5f00\u59cb\u3002\u5e73\u9762\u7531\u5305\u542b\u5728\u5176\u4e2d\u7684\u70b9\u548c\u4e0e\u8be5\u5e73\u9762\u6b63\u4ea4\u7684\u5411\u91cf\u5b9a\u4e49\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u5e73\u9762\u65b9\u7a0b\u7684\u5b9a\u4e49\u5982\u4e0b\uff1a Ax+By+Cz+D=0 \u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u8ba1\u7b97\u89c6\u9525\u4f53\u7684\u516d\u4e2a\u4fa7\u9762\u7684\u516d\u4e2a\u5e73\u9762\u65b9\u7a0b\u3002\u4e3a\u4e86\u8fbe\u6210\u8fd9\u4e2a\u76ee\u6807\uff0c\u4f60\u57fa\u672c\u4e0a\u6709\u4e24\u4e2a\u9009\u9879\u3002\u4f60\u53ef\u4ee5\u8fdb\u884c\u7e41\u7410\u7684\u8ba1\u7b97\uff0c\u5f97\u5230\u516d\u4e2a\u5e73\u9762\u65b9\u7a0b\u7684\u6765\u81ea\u4e0a\u8ff0\u65b9\u7a0b\u7684\u56db\u4e2a\u5e38\u6570\uff08A\u3001B\u3001C\u548cD\uff09\u3002\u53e6\u4e00\u4e2a\u9009\u9879\u662f\u8ba9 JOML \u5e93\u4e3a\u4f60\u8ba1\u7b97\u8fd9\u4e2a\u503c\u3002\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u9009\u62e9\u540e\u4e00\u4e2a\u9009\u9879\u3002 \u8ba9\u6211\u4eec\u5f00\u59cb\u7f16\u7801\u5427\u3002\u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a FrustumCullingFilter \u7684\u65b0\u7c7b\uff0c\u8ddf\u5b83\u7684\u540d\u5b57\u76f8\u540c\uff0c\u5b83\u5c06\u6839\u636e\u89c6\u9525\u4f53\u6267\u884c\u7b5b\u9009\u64cd\u4f5c\u3002 public class FrustumCullingFilter { private static final int NUM_PLANES = 6; private final Matrix4f prjViewMatrix; private final Vector4f[] frustumPlanes; public FrustumCullingFilter() { prjViewMatrix = new Matrix4f(); frustumPlanes = new Vector4f[NUM_PLANES]; for (int i = 0; i < NUM_PLANES; i++) { frustumPlanes[i] = new Vector4f(); } } FrustumCullingFilter \u7c7b\u4e5f\u5c06\u6709\u4e00\u4e2a\u65b9\u6cd5\u6765\u8ba1\u7b97\u5e73\u9762\u65b9\u7a0b\uff0c\u540d\u4e3a updateFrustum \uff0c\u5b83\u5c06\u5728\u6e32\u67d3\u4e4b\u524d\u8c03\u7528\u3002\u65b9\u6cd5\u5b9a\u4e49\u5982\u4e0b\uff1a public void updateFrustum(Matrix4f projMatrix, Matrix4f viewMatrix) { // \u8ba1\u7b97\u6295\u5f71\u89c2\u5bdf\u77e9\u9635 prjViewMatrix.set(projMatrix); prjViewMatrix.mul(viewMatrix); // \u83b7\u53d6\u89c6\u9525\u4f53\u5e73\u9762 for (int i = 0; i < NUM_PLANES; i++) { prjViewMatrix.frustumPlane(i, frustumPlanes[i]); } } \u9996\u5148\uff0c\u6211\u4eec\u50a8\u5b58\u6295\u5f71\u77e9\u9635\u7684\u526f\u672c\uff0c\u5e76\u5c06\u5176\u4e0e\u89c2\u5bdf\u77e9\u9635\u76f8\u4e58\uff0c\u5f97\u5230\u6295\u5f71\u89c2\u5bdf\u77e9\u9635\u3002\u7136\u540e\uff0c\u4f7f\u7528\u8fd9\u4e2a\u53d8\u6362\u77e9\u9635\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4e3a\u6bcf\u4e2a\u622a\u9525\u5e73\u9762\u8c03\u7528 frustumPlane \u65b9\u6cd5\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u8fd9\u4e9b\u5e73\u9762\u65b9\u7a0b\u662f\u7528\u4e16\u754c\u5750\u6807\u8868\u793a\u7684\uff0c\u6240\u4ee5\u6240\u6709\u7684\u8ba1\u7b97\u90fd\u8981\u5728\u8fd9\u4e2a\u7a7a\u95f4\u4e2d\u8fdb\u884c\u3002 \u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u8ba1\u7b97\u4e86\u6240\u6709\u5e73\u9762\uff0c\u6211\u4eec\u53ea\u9700\u8981\u68c0\u67e5 GameItem \u5b9e\u4f8b\u662f\u5426\u5728\u622a\u9525\u4f53\u4e2d\u3002\u8be5\u600e\u4e48\u505a\uff1f\u8ba9\u6211\u4eec\u9996\u5148\u786e\u8ba4\u4e00\u4e0b\u5982\u4f55\u68c0\u67e5\u4e00\u4e2a\u70b9\u662f\u5426\u5728\u622a\u9525\u4f53\u5185\uff0c\u53ef\u4ee5\u901a\u8fc7\u8ba1\u7b97\u70b9\u5230\u6bcf\u4e2a\u5e73\u9762\u7684\u6709\u7b26\u53f7\u7684\u8ddd\u79bb\u6765\u5b9e\u73b0\u8fd9\u4e00\u70b9\u3002\u5982\u679c\u70b9\u5230\u5e73\u9762\u7684\u8ddd\u79bb\u662f\u6b63\u7684\uff0c\u8fd9\u610f\u5473\u7740\u70b9\u5728\u5e73\u9762\u7684\u524d\u9762\uff08\u6839\u636e\u5176\u6cd5\u7ebf\uff09\u3002\u5982\u679c\u662f\u8d1f\u7684\uff0c\u5219\u610f\u5473\u7740\u70b9\u5728\u5e73\u9762\u7684\u540e\u9762\u3002 \u56e0\u6b64\uff0c\u5982\u679c\u5230\u622a\u9525\u7684\u6240\u6709\u5e73\u9762\u7684\u8ddd\u79bb\u4e3a\u6b63\uff0c\u5219\u4e00\u4e2a\u70b9\u4f4d\u4e8e\u89c6\u9525\u4f53\u7684\u5185\u90e8\u3002\u70b9\u5230\u5e73\u9762\u7684\u8ddd\u79bb\u5b9a\u4e49\u5982\u4e0b\uff1a \u8ddd\u79bb=Ax_{0}+By_{0}+Cz_{0}+D \uff0c\u5176\u4e2d x_{0} \u3001 y_{0} \u548c z_{0} \u662f\u70b9\u7684\u5750\u6807\u3002 \u56e0\u6b64\uff0c\u5982\u679c Ax_{0}+By_{0}+Cz_{0}+D <= 0 \u5219\u70b9\u5728\u5e73\u9762\u7684\u540e\u9762\u3002 \u4f46\u662f\uff0c\u6211\u4eec\u6ca1\u6709\u70b9\uff0c\u53ea\u6709\u590d\u6742\u7684\u7f51\u683c\uff0c\u6211\u4eec\u4e0d\u80fd\u4ec5\u4ec5\u7528\u70b9\u6765\u68c0\u67e5\u4e00\u4e2a\u7269\u54c1\u662f\u5426\u5728\u622a\u9525\u4f53\u5185\u3002\u4f60\u53ef\u4ee5\u8003\u8651\u68c0\u67e5 GameItem \u7684\u6bcf\u4e2a\u9876\u70b9\uff0c\u770b\u770b\u5b83\u662f\u5426\u5728\u622a\u9525\u4f53\u5185\u3002\u5982\u679c\u4efb\u4f55\u4e00\u4e2a\u70b9\u5728\u91cc\u9762\uff0c\u6e38\u620f\u9879\u5e94\u8be5\u88ab\u7ed8\u5236\u51fa\u6765\u3002\u4f46\u8fd9\u5c31\u662fOpenGL\u5728\u88c1\u526a\u65f6\u6240\u505a\u7684\uff0c\u4e5f\u662f\u6211\u4eec\u8981\u907f\u514d\u7684\u3002\u8bb0\u4f4f\uff0c\u7f51\u683c\u8d8a\u590d\u6742\uff0c\u622a\u9525\u5254\u9664\u7684\u597d\u5904\u8d8a\u660e\u663e\u3002 \u6211\u4eec\u9700\u8981\u628a\u6bcf\u4e00\u4e2a GameItem \u653e\u5230\u4e00\u4e2a\u7b80\u5355\u7684\u4f53\u4e2d\uff0c\u8fd9\u4e2a\u4f53\u5f88\u5bb9\u6613\u68c0\u67e5\u3002\u8fd9\u91cc\u6211\u4eec\u6709\u4e24\u4e2a\u9009\u9879\uff1a \u8fb9\u754c\u76d2\uff08Bounding Box\uff09\u3002 \u8fb9\u754c\u7403\uff08Bounding Sphere\uff09\u3002 \u5728\u672c\u4f8b\u4e2d\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u7403\u4f53\uff0c\u56e0\u4e3a\u8fd9\u662f\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u3002\u6211\u4eec\u5c06\u628a\u6bcf\u4e00\u4e2a\u6e38\u620f\u9879\u653e\u5728\u4e00\u4e2a\u7403\u4f53\u4e2d\uff0c\u5e76\u68c0\u67e5\u7403\u4f53\u662f\u5426\u4f4d\u4e8e\u89c6\u9525\u4f53\u4e2d\u3002\u4e3a\u4e86\u505a\u5230\u5b83\uff0c\u6211\u4eec\u53ea\u9700\u8981\u7403\u4f53\u7684\u4e2d\u5fc3\u548c\u534a\u5f84\u3002\u68c0\u67e5\u5b83\u51e0\u4e4e\u7b49\u540c\u4e8e\u68c0\u67e5\u70b9\uff0c\u4f46\u662f\u6211\u4eec\u9700\u8981\u8003\u8651\u677f\u7532\u3002\u5982\u679c\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\uff0c\u5219\u7403\u4f53\u5c06\u4f4d\u4e8e\u622a\u9525\u4e4b\u5916\uff1a \u8ddd\u79bb=Ax_{0}+By_{0}+Cz_{0} <= -\u534a\u5f84 \u3002 \u56e0\u6b64\uff0c\u6211\u4eec\u5c06\u5728 FrustumCullingFilter \u7c7b\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u65b0\u65b9\u6cd5\u6765\u68c0\u67e5\u7403\u4f53\u662f\u5426\u5728\u622a\u9525\u4e2d\u3002\u65b9\u6cd5\u7684\u5b9a\u4e49\u5982\u4e0b\uff1a public boolean insideFrustum(float x0, float y0, float z0, float boundingRadius) { boolean result = true; for (int i = 0; i < NUM_PLANES; i++) { Vector4f plane = frustumPlanes[i]; if (plane.x * x0 + plane.y * y0 + plane.z * z0 + plane.w <= -boundingRadius) { result = false; return result; } } return result; } \u7136\u540e\uff0c\u6211\u4eec\u5c06\u6dfb\u52a0\u8fc7\u6ee4\u89c6\u9525\u4f53\u5916\u7684\u6e38\u620f\u9879\u7684\u65b9\u6cd5\uff1a public void filter(List<GameItem> gameItems, float meshBoundingRadius) { float boundingRadius; Vector3f pos; for (GameItem gameItem : gameItems) { boundingRadius = gameItem.getScale() * meshBoundingRadius; pos = gameItem.getPosition(); gameItem.setInsideFrustum(insideFrustum(pos.x, pos.y, pos.z, boundingRadius)); } } \u6211\u4eec\u5728 GameItem \u7c7b\u4e2d\u6dfb\u52a0\u4e86\u4e00\u4e2a\u65b0\u7684\u5c5e\u6027 insideFrustum \u6765\u8ddf\u8e2a\u53ef\u89c1\u6027\u3002\u5982\u4f60\u6240\u89c1\uff0c\u8fb9\u754c\u7403\u7684\u677f\u7532\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u3002\u8fd9\u662f\u7531\u4e8e\u8fb9\u754c\u7403\u4e0e Mesh \u7ba1\u7406\uff0c\u5b83\u4e0d\u662f GameItem \u7684\u5c5e\u6027\u3002\u4f46\u662f\uff0c\u8bf7\u8bb0\u4f4f\uff0c\u6211\u4eec\u5fc5\u987b\u5728\u4e16\u754c\u5750\u6807\u4e2d\u64cd\u4f5c\uff0c\u5e76\u4e14\u8fb9\u754c\u7403\u7684\u534a\u5f84\u5c06\u5728\u6a21\u578b\u7a7a\u95f4\u9707\u3002\u6211\u4eec\u5c06\u5e94\u7528\u4e3a GameItem \u8bbe\u7f6e\u7684\u6bd4\u4f8b\u5c06\u5176\u8f6c\u6362\u4e3a\u4e16\u754c\u7a7a\u95f4\uff0c\u6211\u4eec\u8fd8\u5047\u8bbe GameItem \u7684\u4f4d\u7f6e\u662f\u7403\u4f53\u7684\u4e2d\u5fc3\uff08\u5728\u4e16\u754c\u7a7a\u95f4\u5750\u6807\u7cfb\u4e2d\uff09\u3002 \u6700\u540e\u4e00\u4e2a\u65b9\u6cd5\u53ea\u662f\u4e00\u4e2a\u5b9e\u7528\u65b9\u6cd5\uff0c\u5b83\u63a5\u53d7\u7f51\u683c\u8868\u5e76\u8fc7\u6ee4\u5176\u4e2d\u5305\u542b\u7684\u6240\u6709 GameItem \u5b9e\u4f8b\uff1a public void filter(Map<? extends Mesh, List<GameItem>> mapMesh) { for (Map.Entry<? extends Mesh, List<GameItem>> entry : mapMesh.entrySet()) { List<GameItem> gameItems = entry.getValue(); filter(gameItems, entry.getKey().getBoundingRadius()); } } \u5c31\u8fd9\u6837\u3002\u6211\u4eec\u53ef\u4ee5\u5728\u6e32\u67d3\u6d41\u7a0b\u4e2d\u4f7f\u7528\u8be5\u7c7b\uff0c\u53ea\u9700\u8981\u66f4\u65b0\u622a\u9525\u5e73\u9762\uff0c\u8ba1\u7b97\u51fa\u54ea\u4e9b\u6e38\u620f\u9879\u662f\u53ef\u89c1\u7684\uff0c\u5e76\u5728\u7ed8\u5236\u5b9e\u4f8b\u7f51\u683c\u548c\u975e\u5b9e\u4f8b\u7f51\u683c\u65f6\u8fc7\u6ee4\u6389\u5b83\u4eec\uff1a frustumFilter.updateFrustum(window.getProjectionMatrix(), camera.getViewMatrix()); frustumFilter.filter(scene.getGameMeshes()); frustumFilter.filter(scene.getGameInstancedMeshes()); \u4f60\u53ef\u4ee5\u542f\u7528\u6216\u7981\u7528\u8fc7\u6ee4\u529f\u80fd\uff0c\u5e76\u53ef\u4ee5\u68c0\u67e5\u4f60\u53ef\u4ee5\u8fbe\u5230\u7684FPS\u7684\u589e\u52a0\u548c\u51cf\u5c11\u3002\u5728\u8fc7\u6ee4\u65f6\u4e0d\u8003\u8651\u7c92\u5b50\uff0c\u4f46\u662f\u6dfb\u52a0\u5b83\u662f\u5f88\u7b80\u5355\u7684\u3002\u5bf9\u4e8e\u7c92\u5b50\uff0c\u5728\u4efb\u4f55\u60c5\u51b5\u4e0b\u6700\u597d\u68c0\u67e5\u53d1\u5c04\u5668\u7684\u4f4d\u7f6e\uff0c\u800c\u4e0d\u662f\u68c0\u67e5\u6bcf\u4e2a\u7c92\u5b50\u3002 \u4f18\u5316 - \u622a\u9525\u5254\u9664\u4e8c \u89e3\u91ca\u4e86\u622a\u9525\u5254\u9664\u7684\u57fa\u7840\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 JOML \u5e93\u4e2d\u63d0\u4f9b\u7684\u66f4\u7cbe\u7ec6\u7684\u65b9\u6cd5\u3002\u5b83\u7279\u522b\u5730\u63d0\u4f9b\u4e86\u4e00\u4e2a\u540d\u4e3a FrustumIntersection \u7684\u7c7b\uff0c\u8be5\u7c7b\u4ee5\u6309\u6b64 \u6587\u7ae0 \u6240\u8ff0\u7684\u4e00\u79cd\u66f4\u6709\u6548\u7684\u65b9\u5f0f\u83b7\u53d6\u89c6\u9525\u4f53\u7684\u5e73\u9762\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u8be5\u7c7b\u8fd8\u63d0\u4f9b\u4e86\u6d4b\u8bd5\u8fb9\u754c\u76d2\u3001\u70b9\u548c\u7403\u4f53\u7684\u65b9\u6cd5\u3002 \u90a3\u4e48\uff0c\u8ba9\u6211\u4eec\u4fee\u6539 FrustumCullingFilter \u7c7b\u3002\u5c5e\u6027\u548c\u6784\u9020\u51fd\u6570\u7b80\u5316\u5982\u4e0b\uff1a public class FrustumCullingFilter { private final Matrix4f prjViewMatrix; private FrustumIntersection frustumInt; public FrustumCullingFilter() { prjViewMatrix = new Matrix4f(); frustumInt = new FrustumIntersection(); } updateFrustum \u65b9\u6cd5\u53ea\u662f\u5c06\u5e73\u9762\u83b7\u53d6\u59d4\u6258\u7ed9 FrustumIntersection \u5b9e\u4f8b\uff1a public void updateFrustum(Matrix4f projMatrix, Matrix4f viewMatrix) { // \u8ba1\u7b97\u6295\u5f71\u8bc6\u56fe\u77e9\u9635 prjViewMatrix.set(projMatrix); prjViewMatrix.mul(viewMatrix); // \u66f4\u65b0\u622a\u9525\u76f8\u4ea4\u7c7b frustumInt.set(prjViewMatrix); } insideFrustum \u65b9\u6cd5\u66f4\u7b80\u5355\uff1a public boolean insideFrustum(float x0, float y0, float z0, float boundingRadius) { return frustumInt.testSphere(x0, y0, z0, boundingRadius); } \u4f7f\u7528\u8be5\u65b9\u6cd5\uff0c\u4f60\u751a\u81f3\u53ef\u4ee5\u8fbe\u5230\u66f4\u9ad8\u7684FPS\u3002\u6b64\u5916\uff0c\u8fd8\u5411 Window \u7c7b\u4e2d\u6dfb\u52a0\u4e86\u4e00\u4e2a\u5168\u5c40\u6807\u8bb0\uff0c\u4ee5\u542f\u7528\u6216\u7981\u7528\u622a\u9525\u5254\u9664\u3002 GameItem \u7c7b\u4e5f\u6709\u542f\u7528\u6216\u7981\u7528\u8fc7\u6ee4\u7684\u6807\u8bb0\uff0c\u56e0\u4e3a\u5bf9\u4e8e\u67d0\u4e9b\u9879\uff0c\u622a\u9525\u5254\u9664\u8fc7\u6ee4\u53ef\u80fd\u6ca1\u6709\u610f\u4e49\u3002","title":"\u4f18\u5316 - \u622a\u9525\u5254\u9664"},{"location":"25-optimizations-frustum-culling/#-optimizations-frustum-culling","text":"","title":"\u4f18\u5316 - \u622a\u9525\u5254\u9664\uff08Optimizations - Frustum Culling\uff09"},{"location":"25-optimizations-frustum-culling/#-","text":"\u73b0\u5728\u6211\u4eec\u4f7f\u7528\u4e86\u8bb8\u591a\u4e0d\u540c\u7684\u56fe\u5f62\u6548\u679c\uff0c\u4f8b\u5982\u5149\u7167\u3001\u7c92\u5b50\u7b49\u3002\u6b64\u5916\uff0c\u6211\u4eec\u8fd8\u5b66\u4e60\u4e86\u5982\u4f55\u5b9e\u4f8b\u5316\u6e32\u67d3\uff0c\u4ee5\u51cf\u5c11\u7ed8\u5236\u8bb8\u591a\u76f8\u4f3c\u5bf9\u8c61\u7684\u5f00\u9500\u3002\u7136\u800c\uff0c\u6211\u4eec\u4ecd\u6709\u8db3\u591f\u7684\u7a7a\u95f4\u8fdb\u884c\u4e00\u4e9b\u7b80\u5355\u7684\u4f18\u5316\uff0c\u8fd9\u5c06\u589e\u52a0\u53ef\u4ee5\u8fbe\u5230\u7684\u5e27\u7387\uff08FPS\uff09\u3002 \u4f60\u53ef\u80fd\u60f3\u77e5\u9053\u4e3a\u4ec0\u4e48\u6211\u4eec\u4f1a\u5728\u6bcf\u4e00\u5e27\u4e2d\u7ed8\u5236\u6574\u4e2a\u6e38\u620f\u9879\u5217\u8868\uff0c\u5373\u4f7f\u5176\u4e2d\u4e00\u4e9b\u9879\u4e0d\u53ef\u89c1\uff08\u56e0\u4e3a\u5b83\u4eec\u5728\u6444\u50cf\u673a\u540e\u9762\u6216\u8ddd\u79bb\u6444\u50cf\u673a\u592a\u8fdc\uff09\u3002\u4f60\u751a\u81f3\u53ef\u80fd\u8ba4\u4e3a\u8fd9\u662f\u7531OpenGL\u81ea\u52a8\u5904\u7406\u7684\uff0c\u8fd9\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u662f\u6b63\u786e\u7684\u3002OpenGL\u5c06\u653e\u5f03\u4f4d\u4e8e\u53ef\u89c1\u533a\u57df\u4e4b\u5916\u7684\u9876\u70b9\u7684\u6e32\u67d3\uff0c\u8fd9\u79f0\u4f5c\u88c1\u526a\uff08Clipping\uff09\u3002\u88c1\u526a\u7684\u95ee\u9898\u662f\uff0c\u5728\u6267\u884c\u9876\u70b9\u7740\u8272\u4e4b\u540e\uff0c\u6309\u9876\u70b9\u8fdb\u884c\u5904\u7406\u7684\u3002\u56e0\u6b64\uff0c\u5373\u4f7f\u6b64\u64cd\u4f5c\u8282\u7701\u4e86\u8d44\u6e90\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u901a\u8fc7\u4e0d\u5c1d\u8bd5\u6e32\u67d3\u4e0d\u53ef\u89c1\u7684\u5bf9\u8c61\u6765\u63d0\u9ad8\u6548\u7387\u3002\u6211\u4eec\u4e0d\u4f1a\u901a\u8fc7\u5c06\u6570\u636e\u53d1\u9001\u5230GPU\u4ee5\u53ca\u5bf9\u8fd9\u4e9b\u5bf9\u8c61\u7684\u6bcf\u4e2a\u9876\u70b9\u8fdb\u884c\u53d8\u6362\u6765\u6d6a\u8d39\u8d44\u6e90\u3002\u6211\u4eec\u9700\u8981\u79fb\u9664\u4e0d\u5305\u542b\u5728\u89c6\u9525\u4f53\uff08View Frustum\uff09\u4e2d\u7684\u5bf9\u8c61\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u9700\u8981\u8fdb\u884c\u622a\u9525\u5254\u9664\u3002 \u4f46\u662f\uff0c\u9996\u5148\u8ba9\u6211\u4eec\u56de\u987e\u4e00\u4e0b\u4ec0\u4e48\u662f\u89c6\u9525\u4f53\u3002\u89c6\u9525\u4f53\u662f\u4e00\u4e2a\u7ed3\u5408\u6444\u50cf\u673a\u7684\u4f4d\u7f6e\u548c\u65cb\u8f6c\u4ee5\u53ca\u4f7f\u7528\u7684\u6295\u5f71\uff0c\u5305\u542b\u6240\u6709\u53ef\u89c1\u7269\u4f53\u7684\u4f53\u79ef\u3002\u901a\u5e38\uff0c\u89c6\u9525\u4f53\u662f\u4e00\u4e2a\u56db\u68f1\u53f0\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u5982\u4f60\u6240\u89c1\uff0c\u89c6\u9525\u4f53\u7531\u516d\u4e2a\u5e73\u9762\u5b9a\u4e49\uff0c\u4f4d\u4e8e\u89c6\u9525\u4f53\u4e4b\u5916\u7684\u4efb\u4f55\u5185\u5bb9\u90fd\u4e0d\u4f1a\u6e32\u67d3\u3002\u56e0\u6b64\uff0c\u622a\u9525\u5254\u9664\u662f\u79fb\u9664\u89c6\u9525\u4f53\u4e4b\u5916\u7684\u5bf9\u8c61\u7684\u8fc7\u7a0b\u3002 \u56e0\u6b64\uff0c\u4e3a\u4e86\u8fdb\u884c\u622a\u9525\u5254\u9664\uff0c\u6211\u4eec\u9700\u8981\uff1a \u4f7f\u7528\u89c2\u5bdf\u548c\u6295\u5f71\u77e9\u9635\u4e2d\u5305\u542b\u7684\u6570\u636e\u8ba1\u7b97\u622a\u9525\u5e73\u9762\u3002 \u5bf9\u6bcf\u4e2a\u6e38\u620f\u9879\u68c0\u67e5\u5b83\u662f\u5426\u5305\u542b\u5728\u89c6\u9525\u4f53\u4e2d\uff0c\u6362\u53e5\u8bdd\u8bf4\uff0c\u5728\u5927\u5c0f\u622a\u9525\u5e73\u9762\u4e4b\u95f4\u3002\u5e76\u4ece\u6e32\u67d3\u6d41\u7a0b\u4e2d\u5220\u9664\u90a3\u4e9b\u4e0d\u5305\u542b\u5728\u5176\u4e2d\u7684\u3002 \u90a3\u4e48\u8ba9\u6211\u4eec\u4ece\u8ba1\u7b97\u622a\u9525\u5e73\u9762\u5f00\u59cb\u3002\u5e73\u9762\u7531\u5305\u542b\u5728\u5176\u4e2d\u7684\u70b9\u548c\u4e0e\u8be5\u5e73\u9762\u6b63\u4ea4\u7684\u5411\u91cf\u5b9a\u4e49\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u5e73\u9762\u65b9\u7a0b\u7684\u5b9a\u4e49\u5982\u4e0b\uff1a Ax+By+Cz+D=0 \u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u8ba1\u7b97\u89c6\u9525\u4f53\u7684\u516d\u4e2a\u4fa7\u9762\u7684\u516d\u4e2a\u5e73\u9762\u65b9\u7a0b\u3002\u4e3a\u4e86\u8fbe\u6210\u8fd9\u4e2a\u76ee\u6807\uff0c\u4f60\u57fa\u672c\u4e0a\u6709\u4e24\u4e2a\u9009\u9879\u3002\u4f60\u53ef\u4ee5\u8fdb\u884c\u7e41\u7410\u7684\u8ba1\u7b97\uff0c\u5f97\u5230\u516d\u4e2a\u5e73\u9762\u65b9\u7a0b\u7684\u6765\u81ea\u4e0a\u8ff0\u65b9\u7a0b\u7684\u56db\u4e2a\u5e38\u6570\uff08A\u3001B\u3001C\u548cD\uff09\u3002\u53e6\u4e00\u4e2a\u9009\u9879\u662f\u8ba9 JOML \u5e93\u4e3a\u4f60\u8ba1\u7b97\u8fd9\u4e2a\u503c\u3002\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u9009\u62e9\u540e\u4e00\u4e2a\u9009\u9879\u3002 \u8ba9\u6211\u4eec\u5f00\u59cb\u7f16\u7801\u5427\u3002\u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a FrustumCullingFilter \u7684\u65b0\u7c7b\uff0c\u8ddf\u5b83\u7684\u540d\u5b57\u76f8\u540c\uff0c\u5b83\u5c06\u6839\u636e\u89c6\u9525\u4f53\u6267\u884c\u7b5b\u9009\u64cd\u4f5c\u3002 public class FrustumCullingFilter { private static final int NUM_PLANES = 6; private final Matrix4f prjViewMatrix; private final Vector4f[] frustumPlanes; public FrustumCullingFilter() { prjViewMatrix = new Matrix4f(); frustumPlanes = new Vector4f[NUM_PLANES]; for (int i = 0; i < NUM_PLANES; i++) { frustumPlanes[i] = new Vector4f(); } } FrustumCullingFilter \u7c7b\u4e5f\u5c06\u6709\u4e00\u4e2a\u65b9\u6cd5\u6765\u8ba1\u7b97\u5e73\u9762\u65b9\u7a0b\uff0c\u540d\u4e3a updateFrustum \uff0c\u5b83\u5c06\u5728\u6e32\u67d3\u4e4b\u524d\u8c03\u7528\u3002\u65b9\u6cd5\u5b9a\u4e49\u5982\u4e0b\uff1a public void updateFrustum(Matrix4f projMatrix, Matrix4f viewMatrix) { // \u8ba1\u7b97\u6295\u5f71\u89c2\u5bdf\u77e9\u9635 prjViewMatrix.set(projMatrix); prjViewMatrix.mul(viewMatrix); // \u83b7\u53d6\u89c6\u9525\u4f53\u5e73\u9762 for (int i = 0; i < NUM_PLANES; i++) { prjViewMatrix.frustumPlane(i, frustumPlanes[i]); } } \u9996\u5148\uff0c\u6211\u4eec\u50a8\u5b58\u6295\u5f71\u77e9\u9635\u7684\u526f\u672c\uff0c\u5e76\u5c06\u5176\u4e0e\u89c2\u5bdf\u77e9\u9635\u76f8\u4e58\uff0c\u5f97\u5230\u6295\u5f71\u89c2\u5bdf\u77e9\u9635\u3002\u7136\u540e\uff0c\u4f7f\u7528\u8fd9\u4e2a\u53d8\u6362\u77e9\u9635\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4e3a\u6bcf\u4e2a\u622a\u9525\u5e73\u9762\u8c03\u7528 frustumPlane \u65b9\u6cd5\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u8fd9\u4e9b\u5e73\u9762\u65b9\u7a0b\u662f\u7528\u4e16\u754c\u5750\u6807\u8868\u793a\u7684\uff0c\u6240\u4ee5\u6240\u6709\u7684\u8ba1\u7b97\u90fd\u8981\u5728\u8fd9\u4e2a\u7a7a\u95f4\u4e2d\u8fdb\u884c\u3002 \u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u8ba1\u7b97\u4e86\u6240\u6709\u5e73\u9762\uff0c\u6211\u4eec\u53ea\u9700\u8981\u68c0\u67e5 GameItem \u5b9e\u4f8b\u662f\u5426\u5728\u622a\u9525\u4f53\u4e2d\u3002\u8be5\u600e\u4e48\u505a\uff1f\u8ba9\u6211\u4eec\u9996\u5148\u786e\u8ba4\u4e00\u4e0b\u5982\u4f55\u68c0\u67e5\u4e00\u4e2a\u70b9\u662f\u5426\u5728\u622a\u9525\u4f53\u5185\uff0c\u53ef\u4ee5\u901a\u8fc7\u8ba1\u7b97\u70b9\u5230\u6bcf\u4e2a\u5e73\u9762\u7684\u6709\u7b26\u53f7\u7684\u8ddd\u79bb\u6765\u5b9e\u73b0\u8fd9\u4e00\u70b9\u3002\u5982\u679c\u70b9\u5230\u5e73\u9762\u7684\u8ddd\u79bb\u662f\u6b63\u7684\uff0c\u8fd9\u610f\u5473\u7740\u70b9\u5728\u5e73\u9762\u7684\u524d\u9762\uff08\u6839\u636e\u5176\u6cd5\u7ebf\uff09\u3002\u5982\u679c\u662f\u8d1f\u7684\uff0c\u5219\u610f\u5473\u7740\u70b9\u5728\u5e73\u9762\u7684\u540e\u9762\u3002 \u56e0\u6b64\uff0c\u5982\u679c\u5230\u622a\u9525\u7684\u6240\u6709\u5e73\u9762\u7684\u8ddd\u79bb\u4e3a\u6b63\uff0c\u5219\u4e00\u4e2a\u70b9\u4f4d\u4e8e\u89c6\u9525\u4f53\u7684\u5185\u90e8\u3002\u70b9\u5230\u5e73\u9762\u7684\u8ddd\u79bb\u5b9a\u4e49\u5982\u4e0b\uff1a \u8ddd\u79bb=Ax_{0}+By_{0}+Cz_{0}+D \uff0c\u5176\u4e2d x_{0} \u3001 y_{0} \u548c z_{0} \u662f\u70b9\u7684\u5750\u6807\u3002 \u56e0\u6b64\uff0c\u5982\u679c Ax_{0}+By_{0}+Cz_{0}+D <= 0 \u5219\u70b9\u5728\u5e73\u9762\u7684\u540e\u9762\u3002 \u4f46\u662f\uff0c\u6211\u4eec\u6ca1\u6709\u70b9\uff0c\u53ea\u6709\u590d\u6742\u7684\u7f51\u683c\uff0c\u6211\u4eec\u4e0d\u80fd\u4ec5\u4ec5\u7528\u70b9\u6765\u68c0\u67e5\u4e00\u4e2a\u7269\u54c1\u662f\u5426\u5728\u622a\u9525\u4f53\u5185\u3002\u4f60\u53ef\u4ee5\u8003\u8651\u68c0\u67e5 GameItem \u7684\u6bcf\u4e2a\u9876\u70b9\uff0c\u770b\u770b\u5b83\u662f\u5426\u5728\u622a\u9525\u4f53\u5185\u3002\u5982\u679c\u4efb\u4f55\u4e00\u4e2a\u70b9\u5728\u91cc\u9762\uff0c\u6e38\u620f\u9879\u5e94\u8be5\u88ab\u7ed8\u5236\u51fa\u6765\u3002\u4f46\u8fd9\u5c31\u662fOpenGL\u5728\u88c1\u526a\u65f6\u6240\u505a\u7684\uff0c\u4e5f\u662f\u6211\u4eec\u8981\u907f\u514d\u7684\u3002\u8bb0\u4f4f\uff0c\u7f51\u683c\u8d8a\u590d\u6742\uff0c\u622a\u9525\u5254\u9664\u7684\u597d\u5904\u8d8a\u660e\u663e\u3002 \u6211\u4eec\u9700\u8981\u628a\u6bcf\u4e00\u4e2a GameItem \u653e\u5230\u4e00\u4e2a\u7b80\u5355\u7684\u4f53\u4e2d\uff0c\u8fd9\u4e2a\u4f53\u5f88\u5bb9\u6613\u68c0\u67e5\u3002\u8fd9\u91cc\u6211\u4eec\u6709\u4e24\u4e2a\u9009\u9879\uff1a \u8fb9\u754c\u76d2\uff08Bounding Box\uff09\u3002 \u8fb9\u754c\u7403\uff08Bounding Sphere\uff09\u3002 \u5728\u672c\u4f8b\u4e2d\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u7403\u4f53\uff0c\u56e0\u4e3a\u8fd9\u662f\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u3002\u6211\u4eec\u5c06\u628a\u6bcf\u4e00\u4e2a\u6e38\u620f\u9879\u653e\u5728\u4e00\u4e2a\u7403\u4f53\u4e2d\uff0c\u5e76\u68c0\u67e5\u7403\u4f53\u662f\u5426\u4f4d\u4e8e\u89c6\u9525\u4f53\u4e2d\u3002\u4e3a\u4e86\u505a\u5230\u5b83\uff0c\u6211\u4eec\u53ea\u9700\u8981\u7403\u4f53\u7684\u4e2d\u5fc3\u548c\u534a\u5f84\u3002\u68c0\u67e5\u5b83\u51e0\u4e4e\u7b49\u540c\u4e8e\u68c0\u67e5\u70b9\uff0c\u4f46\u662f\u6211\u4eec\u9700\u8981\u8003\u8651\u677f\u7532\u3002\u5982\u679c\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\uff0c\u5219\u7403\u4f53\u5c06\u4f4d\u4e8e\u622a\u9525\u4e4b\u5916\uff1a \u8ddd\u79bb=Ax_{0}+By_{0}+Cz_{0} <= -\u534a\u5f84 \u3002 \u56e0\u6b64\uff0c\u6211\u4eec\u5c06\u5728 FrustumCullingFilter \u7c7b\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u65b0\u65b9\u6cd5\u6765\u68c0\u67e5\u7403\u4f53\u662f\u5426\u5728\u622a\u9525\u4e2d\u3002\u65b9\u6cd5\u7684\u5b9a\u4e49\u5982\u4e0b\uff1a public boolean insideFrustum(float x0, float y0, float z0, float boundingRadius) { boolean result = true; for (int i = 0; i < NUM_PLANES; i++) { Vector4f plane = frustumPlanes[i]; if (plane.x * x0 + plane.y * y0 + plane.z * z0 + plane.w <= -boundingRadius) { result = false; return result; } } return result; } \u7136\u540e\uff0c\u6211\u4eec\u5c06\u6dfb\u52a0\u8fc7\u6ee4\u89c6\u9525\u4f53\u5916\u7684\u6e38\u620f\u9879\u7684\u65b9\u6cd5\uff1a public void filter(List<GameItem> gameItems, float meshBoundingRadius) { float boundingRadius; Vector3f pos; for (GameItem gameItem : gameItems) { boundingRadius = gameItem.getScale() * meshBoundingRadius; pos = gameItem.getPosition(); gameItem.setInsideFrustum(insideFrustum(pos.x, pos.y, pos.z, boundingRadius)); } } \u6211\u4eec\u5728 GameItem \u7c7b\u4e2d\u6dfb\u52a0\u4e86\u4e00\u4e2a\u65b0\u7684\u5c5e\u6027 insideFrustum \u6765\u8ddf\u8e2a\u53ef\u89c1\u6027\u3002\u5982\u4f60\u6240\u89c1\uff0c\u8fb9\u754c\u7403\u7684\u677f\u7532\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u3002\u8fd9\u662f\u7531\u4e8e\u8fb9\u754c\u7403\u4e0e Mesh \u7ba1\u7406\uff0c\u5b83\u4e0d\u662f GameItem \u7684\u5c5e\u6027\u3002\u4f46\u662f\uff0c\u8bf7\u8bb0\u4f4f\uff0c\u6211\u4eec\u5fc5\u987b\u5728\u4e16\u754c\u5750\u6807\u4e2d\u64cd\u4f5c\uff0c\u5e76\u4e14\u8fb9\u754c\u7403\u7684\u534a\u5f84\u5c06\u5728\u6a21\u578b\u7a7a\u95f4\u9707\u3002\u6211\u4eec\u5c06\u5e94\u7528\u4e3a GameItem \u8bbe\u7f6e\u7684\u6bd4\u4f8b\u5c06\u5176\u8f6c\u6362\u4e3a\u4e16\u754c\u7a7a\u95f4\uff0c\u6211\u4eec\u8fd8\u5047\u8bbe GameItem \u7684\u4f4d\u7f6e\u662f\u7403\u4f53\u7684\u4e2d\u5fc3\uff08\u5728\u4e16\u754c\u7a7a\u95f4\u5750\u6807\u7cfb\u4e2d\uff09\u3002 \u6700\u540e\u4e00\u4e2a\u65b9\u6cd5\u53ea\u662f\u4e00\u4e2a\u5b9e\u7528\u65b9\u6cd5\uff0c\u5b83\u63a5\u53d7\u7f51\u683c\u8868\u5e76\u8fc7\u6ee4\u5176\u4e2d\u5305\u542b\u7684\u6240\u6709 GameItem \u5b9e\u4f8b\uff1a public void filter(Map<? extends Mesh, List<GameItem>> mapMesh) { for (Map.Entry<? extends Mesh, List<GameItem>> entry : mapMesh.entrySet()) { List<GameItem> gameItems = entry.getValue(); filter(gameItems, entry.getKey().getBoundingRadius()); } } \u5c31\u8fd9\u6837\u3002\u6211\u4eec\u53ef\u4ee5\u5728\u6e32\u67d3\u6d41\u7a0b\u4e2d\u4f7f\u7528\u8be5\u7c7b\uff0c\u53ea\u9700\u8981\u66f4\u65b0\u622a\u9525\u5e73\u9762\uff0c\u8ba1\u7b97\u51fa\u54ea\u4e9b\u6e38\u620f\u9879\u662f\u53ef\u89c1\u7684\uff0c\u5e76\u5728\u7ed8\u5236\u5b9e\u4f8b\u7f51\u683c\u548c\u975e\u5b9e\u4f8b\u7f51\u683c\u65f6\u8fc7\u6ee4\u6389\u5b83\u4eec\uff1a frustumFilter.updateFrustum(window.getProjectionMatrix(), camera.getViewMatrix()); frustumFilter.filter(scene.getGameMeshes()); frustumFilter.filter(scene.getGameInstancedMeshes()); \u4f60\u53ef\u4ee5\u542f\u7528\u6216\u7981\u7528\u8fc7\u6ee4\u529f\u80fd\uff0c\u5e76\u53ef\u4ee5\u68c0\u67e5\u4f60\u53ef\u4ee5\u8fbe\u5230\u7684FPS\u7684\u589e\u52a0\u548c\u51cf\u5c11\u3002\u5728\u8fc7\u6ee4\u65f6\u4e0d\u8003\u8651\u7c92\u5b50\uff0c\u4f46\u662f\u6dfb\u52a0\u5b83\u662f\u5f88\u7b80\u5355\u7684\u3002\u5bf9\u4e8e\u7c92\u5b50\uff0c\u5728\u4efb\u4f55\u60c5\u51b5\u4e0b\u6700\u597d\u68c0\u67e5\u53d1\u5c04\u5668\u7684\u4f4d\u7f6e\uff0c\u800c\u4e0d\u662f\u68c0\u67e5\u6bcf\u4e2a\u7c92\u5b50\u3002","title":"\u4f18\u5316 - \u622a\u9525\u5254\u9664\u4e00"},{"location":"25-optimizations-frustum-culling/#-_1","text":"\u89e3\u91ca\u4e86\u622a\u9525\u5254\u9664\u7684\u57fa\u7840\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 JOML \u5e93\u4e2d\u63d0\u4f9b\u7684\u66f4\u7cbe\u7ec6\u7684\u65b9\u6cd5\u3002\u5b83\u7279\u522b\u5730\u63d0\u4f9b\u4e86\u4e00\u4e2a\u540d\u4e3a FrustumIntersection \u7684\u7c7b\uff0c\u8be5\u7c7b\u4ee5\u6309\u6b64 \u6587\u7ae0 \u6240\u8ff0\u7684\u4e00\u79cd\u66f4\u6709\u6548\u7684\u65b9\u5f0f\u83b7\u53d6\u89c6\u9525\u4f53\u7684\u5e73\u9762\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u8be5\u7c7b\u8fd8\u63d0\u4f9b\u4e86\u6d4b\u8bd5\u8fb9\u754c\u76d2\u3001\u70b9\u548c\u7403\u4f53\u7684\u65b9\u6cd5\u3002 \u90a3\u4e48\uff0c\u8ba9\u6211\u4eec\u4fee\u6539 FrustumCullingFilter \u7c7b\u3002\u5c5e\u6027\u548c\u6784\u9020\u51fd\u6570\u7b80\u5316\u5982\u4e0b\uff1a public class FrustumCullingFilter { private final Matrix4f prjViewMatrix; private FrustumIntersection frustumInt; public FrustumCullingFilter() { prjViewMatrix = new Matrix4f(); frustumInt = new FrustumIntersection(); } updateFrustum \u65b9\u6cd5\u53ea\u662f\u5c06\u5e73\u9762\u83b7\u53d6\u59d4\u6258\u7ed9 FrustumIntersection \u5b9e\u4f8b\uff1a public void updateFrustum(Matrix4f projMatrix, Matrix4f viewMatrix) { // \u8ba1\u7b97\u6295\u5f71\u8bc6\u56fe\u77e9\u9635 prjViewMatrix.set(projMatrix); prjViewMatrix.mul(viewMatrix); // \u66f4\u65b0\u622a\u9525\u76f8\u4ea4\u7c7b frustumInt.set(prjViewMatrix); } insideFrustum \u65b9\u6cd5\u66f4\u7b80\u5355\uff1a public boolean insideFrustum(float x0, float y0, float z0, float boundingRadius) { return frustumInt.testSphere(x0, y0, z0, boundingRadius); } \u4f7f\u7528\u8be5\u65b9\u6cd5\uff0c\u4f60\u751a\u81f3\u53ef\u4ee5\u8fbe\u5230\u66f4\u9ad8\u7684FPS\u3002\u6b64\u5916\uff0c\u8fd8\u5411 Window \u7c7b\u4e2d\u6dfb\u52a0\u4e86\u4e00\u4e2a\u5168\u5c40\u6807\u8bb0\uff0c\u4ee5\u542f\u7528\u6216\u7981\u7528\u622a\u9525\u5254\u9664\u3002 GameItem \u7c7b\u4e5f\u6709\u542f\u7528\u6216\u7981\u7528\u8fc7\u6ee4\u7684\u6807\u8bb0\uff0c\u56e0\u4e3a\u5bf9\u4e8e\u67d0\u4e9b\u9879\uff0c\u622a\u9525\u5254\u9664\u8fc7\u6ee4\u53ef\u80fd\u6ca1\u6709\u610f\u4e49\u3002","title":"\u4f18\u5316 - \u622a\u9525\u5254\u9664\u4e8c"},{"location":"26-cascaded-shadow-maps/","text":"\u7ea7\u8054\u9634\u5f71\u6620\u5c04\uff08Cascaded Shadow Maps\uff09 \u5728\u9634\u5f71\u4e00\u7ae0\u4e2d\uff0c\u6211\u4eec\u4ecb\u7ecd\u4e86\u9634\u5f71\u6620\u5c04\u6280\u672f\uff0c\u4ee5\u4fbf\u5728\u6e32\u67d3\u4e09\u7ef4\u573a\u666f\u65f6\u4f7f\u7528\u5e73\u884c\u5149\u663e\u793a\u9634\u5f71\u3002\u6b64\u524d\u4ecb\u7ecd\u7684\u65b9\u6848\u4e2d\u8981\u6c42\u4f60\u624b\u52a8\u8c03\u6574\u4e00\u4e9b\u53c2\u6570\u4ee5\u6539\u8fdb\u6548\u679c\u3002\u5728\u672c\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u4fee\u6539\u8be5\u6280\u672f\uff0c\u4ee5\u81ea\u52a8\u5316\u6240\u6709\u6d41\u7a0b\uff0c\u5e76\u6539\u8fdb\u5728\u5f00\u653e\u7a7a\u95f4\u4e2d\u7684\u6548\u679c\u3002\u4e3a\u4e86\u8fbe\u5230\u76ee\u7684\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u4e00\u79cd\u79f0\u4e3a\u7ea7\u8054\u9634\u5f71\u6620\u5c04\uff08CMS\uff0cCascaded Shadow Map\uff09\u7684\u6280\u672f\u3002 \u8ba9\u6211\u4eec\u9996\u5148\u770b\u4e00\u4e0b\u5982\u4f55\u81ea\u52a8\u6784\u9020\u7528\u4e8e\u6e32\u67d3\u9634\u5f71\u7684\u5149\u7167\u89c6\u56fe\u77e9\u9635\u548c\u6b63\u4ea4\u6295\u5f71\u77e9\u9635\u3002\u5982\u679c\u4f60\u56de\u60f3\u9634\u5f71\u4e00\u7ae0\uff0c\u6211\u4eec\u9700\u8981\u4ece\u5149\u7ebf\u7684\u89d2\u5ea6\u6765\u7ed8\u5236\u573a\u666f\u3002\u8fd9\u610f\u5473\u7740\u521b\u5efa\u4e00\u4e2a\u5149\u7167\u89c6\u56fe\u77e9\u9635\uff0c\u5b83\u5c31\u50cf\u4e00\u4e2a\u4f5c\u7528\u4e8e\u5149\u6e90\u7684\u6444\u50cf\u673a\u548c\u4e00\u4e2a\u6295\u5f71\u77e9\u9635\u3002\u7531\u4e8e\u5149\u662f\u5b9a\u5411\u7684\uff0c\u800c\u4e14\u5e94\u8be5\u4f4d\u4e8e\u65e0\u7a77\u8fdc\u5904\uff0c\u6240\u4ee5\u6211\u4eec\u9009\u62e9\u4e86\u6b63\u4ea4\u6295\u5f71\u3002 \u6211\u4eec\u5e0c\u671b\u6240\u6709\u53ef\u89c1\u7684\u7269\u4f53\u90fd\u9002\u7528\u4e8e\u5149\u7167\u89c6\u56fe\u6295\u5f71\u77e9\u9635\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u5c06\u89c6\u622a\u9525\u653e\u5165\u5149\u622a\u9525\u4e2d\u3002\u4e0b\u56fe\u662f\u6211\u4eec\u6700\u7ec8\u60f3\u8981\u5b9e\u73b0\u7684\u6548\u679c\uff1a \u8be5\u5982\u4f55\u6784\u9020\u5b83\uff1f\u9996\u5148\u662f\u8ba1\u7b97\u89c2\u5bdf\u6295\u5f71\u77e9\u9635\u7684\u622a\u9525\u9876\u70b9\u3002\u6211\u4eec\u5f97\u5230\u4e16\u754c\u7a7a\u95f4\u7684\u5750\u6807\uff0c\u7136\u540e\u8ba1\u7b97\u8fd9\u4e2a\u622a\u9525\u7684\u4e2d\u5fc3\uff0c\u8fd9\u53ef\u4ee5\u901a\u8fc7\u5c06\u6240\u6709\u7684\u9876\u70b9\u7684\u5750\u6807\u76f8\u52a0\u5e76\u5c06\u7ed3\u679c\u9664\u4ee5\u9876\u70b9\u7684\u6570\u91cf\u6765\u8ba1\u7b97\u3002 \u6709\u4e86\u8fd9\u4e9b\u6570\u636e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u8bbe\u7f6e\u5149\u6e90\u7684\u4f4d\u7f6e\u3002\u5176\u4f4d\u7f6e\u53ca\u5176\u65b9\u5411\u5c06\u7528\u4e8e\u6784\u5efa\u5149\u7167\u89c6\u56fe\u77e9\u9635\u3002\u4e3a\u4e86\u8ba1\u7b97\u4f4d\u7f6e\uff0c\u6211\u4eec\u4ece\u6b64\u524d\u5f97\u5230\u7684\u89c6\u9525\u4f53\u7684\u4e2d\u5fc3\u5f00\u59cb\uff0c\u9006\u7740\u5149\u7684\u65b9\u5411\uff0c\u53d6\u76f8\u5f53\u4e8e\u89c6\u9525\u4f53\u7684\u8fd1Z\u5e73\u9762\u548c\u8fdcZ\u5e73\u9762\u7684\u8ddd\u79bb\u7684\u4e00\u70b9\u3002 \u6784\u5efa\u5b8c\u6210\u5149\u7167\u89c6\u56fe\u77e9\u9635\uff0c\u6211\u4eec\u9700\u8981\u8bbe\u7f6e\u6b63\u4ea4\u6295\u5f71\u77e9\u9635\u3002\u4e3a\u4e86\u8ba1\u7b97\u5b83\u4eec\uff0c\u6211\u4eec\u5c06\u622a\u9525\u7684\u9876\u70b9\u8f6c\u6362\u5230\u5149\u7167\u89c6\u56fe\u7a7a\u95f4\uff0c\u53ea\u9700\u8981\u5c06\u5b83\u4eec\u4e58\u4ee5\u521a\u521a\u6784\u5efa\u7684\u5149\u7167\u89c6\u56fe\u77e9\u9635\u3002\u6295\u5f71\u77e9\u9635\u7684\u5c3a\u5bf8\u662f\u6700\u5927\u548c\u6700\u5c0f\u7684X\u548cY\u503c\uff0c\u8fd1Z\u5e73\u9762\u53ef\u4ee5\u8bbe\u7f6e\u4e3a\u4e0e\u6807\u51c6\u6295\u5f71\u77e9\u9635\u76f8\u540c\u7684\u503c\uff0c\u8fdcZ\u5e73\u9762\u5219\u662f\u5149\u7167\u89c6\u56fe\u7a7a\u95f4\u4e2d\u622a\u9525\u9876\u70b9\u7684\u6700\u5927\u548c\u6700\u5c0fZ\u503c\u4e4b\u95f4\u7684\u8ddd\u79bb\u3002 \u4f46\u662f\uff0c\u5982\u679c\u5728\u9634\u5f71\u793a\u4f8b\u4ee3\u7801\u7684\u57fa\u7840\u4e0a\u5b9e\u73b0\u4e0a\u8ff0\u7b97\u6cd5\uff0c\u5219\u53ef\u80fd\u4f1a\u5bf9\u9634\u5f71\u8d28\u91cf\u611f\u5230\u5931\u671b\u3002 \u539f\u56e0\u662f\u9634\u5f71\u5206\u8fa8\u7387\u53d7\u7eb9\u7406\u5927\u5c0f\u7684\u9650\u5236\u3002\u6211\u4eec\u73b0\u5728\u6b63\u8986\u76d6\u4e00\u4e2a\u6f5c\u5728\u7684\u5de8\u5927\u533a\u57df\uff0c\u5e76\u4e14\u6211\u4eec\u7528\u6765\u50a8\u5b58\u6df1\u5ea6\u4fe1\u606f\u7684\u7eb9\u7406\u6ca1\u6709\u8db3\u591f\u7684\u5206\u8fa8\u7387\u6765\u53d6\u5f97\u826f\u597d\u7684\u6548\u679c\u3002\u4f60\u53ef\u80fd\u8ba4\u4e3a\u89e3\u51b3\u65b9\u6cd5\u53ea\u662f\u63d0\u9ad8\u7eb9\u7406\u5206\u8fa8\u7387\uff0c\u4f46\u8fd9\u5e76\u4e0d\u8db3\u4ee5\u5b8c\u5168\u89e3\u51b3\u95ee\u9898\uff0c\u4f60\u9700\u8981\u5de8\u5927\u7684\u7eb9\u7406\u3002 \u6709\u4e00\u4e2a\u66f4\u806a\u660e\u7684\u89e3\u51b3\u65b9\u6848\u3002\u5176\u5173\u952e\u662f\uff0c\u9760\u8fd1\u6444\u50cf\u673a\u7684\u7269\u4f53\u9700\u8981\u6bd4\u8fdc\u5904\u7269\u4f53\u7684\u9634\u5f71\u6709\u66f4\u9ad8\u7684\u8d28\u91cf\u3002\u4e00\u79cd\u65b9\u6cd5\u662f\u53ea\u6e32\u67d3\u9760\u8fd1\u6444\u50cf\u673a\u7684\u5bf9\u8c61\u7684\u9634\u5f71\uff0c\u4f46\u8fd9\u4f1a\u5bfc\u81f4\u9634\u5f71\u5728\u573a\u666f\u4e2d\u79fb\u52a8\u65f6\u51fa\u73b0\u6216\u6d88\u5931\u3002 \u7ea7\u8054\u9634\u5f71\u6620\u5c04\uff08CSM\uff09\u4f7f\u7528\u7684\u65b9\u6cd5\u662f\u5c06\u89c6\u9525\u4f53\u5206\u5272\u4e3a\u591a\u4e2a\u90e8\u5206\u3002\u79bb\u6444\u50cf\u673a\u8f83\u8fd1\u7684\u90e8\u5206\u4f1a\u8986\u76d6\u8f83\u5c0f\u7684\u533a\u57df\uff0c\u800c\u8ddd\u79bb\u8f83\u8fdc\u7684\u90e8\u5206\u4f1a\u8986\u76d6\u66f4\u5e7f\u7684\u533a\u57df\u3002\u4e0b\u56fe\u663e\u793a\u4e86\u628a\u4e00\u4e2a\u89c6\u9525\u4f53\u5206\u4e3a\u4e09\u4e2a\u90e8\u5206\u3002 \u5bf9\u4e8e\u6bcf\u4e2a\u90e8\u5206\uff0c\u5c06\u6e32\u67d3\u6df1\u5ea6\u7eb9\u7406\uff0c\u8c03\u6574\u5149\u7167\u89c6\u56fe\u548c\u6295\u5f71\u77e9\u9635\u4ee5\u5408\u9002\u5730\u8986\u76d6\u6bcf\u4e2a\u5206\u5272\u7684\u90e8\u5206\u3002\u56e0\u6b64\uff0c\u50a8\u5b58\u6df1\u5ea6\u6620\u5c04\u7684\u7eb9\u7406\u8986\u76d6\u89c6\u9525\u4f53\u7684\u533a\u57df\u7f29\u5c0f\u4e86\u3002\u800c\u4e14\uff0c\u7531\u4e8e\u79bb\u6444\u50cf\u673a\u6700\u8fd1\u7684\u90e8\u5206\u4f1a\u5360\u7528\u8f83\u5c11\u7684\u7a7a\u95f4\uff0c\u56e0\u6b64\u6df1\u5ea6\u5206\u8fa8\u7387\u4f1a\u63d0\u9ad8\u3002 \u4ece\u4e0a\u8ff0\u89e3\u91ca\u53ef\u4ee5\u770b\u51fa\uff0c\u6211\u4eec\u9700\u8981\u5c3d\u53ef\u80fd\u591a\u7684\u5c06\u6df1\u5ea6\u56fe\u8fdb\u884c\u5206\u5272\uff0c\u6211\u4eec\u8fd8\u5c06\u66f4\u6539\u6bcf\u4e2a\u5149\u7167\u89c6\u56fe\u548c\u6295\u5f71\u77e9\u9635\u3002\u56e0\u6b64\uff0c\u8981\u4f7f\u7528CSM\u9700\u8981\u505a\u7684\u4e8b\u60c5\u662f\uff1a \u5c06\u89c6\u9525\u4f53\u5206\u4e3an\u4e2a\u90e8\u5206\u3002 \u6e32\u67d3\u6df1\u5ea6\u7eb9\u7406\u65f6\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u90e8\u5206\uff1a \u8ba1\u7b97\u5149\u7167\u89c6\u56fe\u548c\u6295\u5f71\u77e9\u9635\u3002 \u4ece\u5149\u6e90\u7684\u89d2\u5ea6\u5c06\u573a\u666f\u6e32\u67d3\u4e3a\u5355\u72ec\u7684\u6df1\u5ea6\u56fe\u3002 \u6e32\u67d3\u573a\u666f\u65f6\uff1a \u4f7f\u7528\u6b64\u524d\u8ba1\u7b97\u7684\u6df1\u5ea6\u56fe\u3002 \u786e\u5b9a\u8981\u7ed8\u5236\u7684\u7247\u6bb5\u6240\u5c5e\u7684\u90e8\u5206\u3002 \u8ba1\u7b97\u9634\u5f71\u56e0\u5b50\uff0c\u5982\u9634\u5f71\u6620\u5c04\u4e2d\u6240\u8ff0\u3002 \u5982\u4f60\u6240\u89c1\uff0cCSM\u7684\u4e3b\u8981\u7f3a\u70b9\u662f\u6211\u4eec\u9700\u8981\u4ece\u706f\u5149\u7684\u89d2\u5ea6\u4e3a\u6bcf\u4e2a\u90e8\u5206\u6e32\u67d3\u573a\u666f\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u901a\u5e38\u53ea\u7528\u4e8e\u5f00\u653e\u7a7a\u95f4\u7684\u539f\u56e0\u3002\u4e0d\u7ba1\u600e\u4e48\u8bf4\uff0c\u6211\u4eec\u5c06\u53ef\u4ee5\u770b\u5230\u5982\u4f55\u8f7b\u677e\u5730\u51cf\u5c11\u5f00\u9500\u3002 \u6240\u4ee5\uff0c\u8ba9\u6211\u4eec\u770b\u770b\u4ee3\u7801\u3002\u4f46\u662f\u5728\u7ee7\u7eed\u4e4b\u524d\uff0c\u6709\u4e00\u4e2a\u5c0f\u5c0f\u7684\u63d0\u9192\uff0c\u6211\u4e0d\u4f1a\u5728\u8fd9\u91cc\u5199\u4e0a\u5b8c\u6574\u7684\u6e90\u4ee3\u7801\uff0c\u56e0\u4e3a\u8fd9\u4f1a\u975e\u5e38\u67af\u71e5\u3002\u76f8\u53cd\uff0c\u6211\u5c06\u4ecb\u7ecd\u4e3b\u8981\u7c7b\u3001\u5b83\u4eec\u7684\u804c\u8d23\u548c\u53ef\u80fd\u9700\u8981\u8fdb\u4e00\u6b65\u89e3\u91ca\u7684\u7247\u6bb5\uff0c\u4ee5\u4fbf\u66f4\u597d\u5730\u7406\u89e3\u3002\u6240\u6709\u4e0e\u7740\u8272\u76f8\u5173\u7684\u7c7b\u90fd\u5df2\u79fb\u52a8\u5230\u4e00\u4e2a\u540d\u4e3a org.lwjglb.engine.graph.shadow \u7684\u65b0\u5305\u4e2d\u3002 \u6e32\u67d3\u9634\u5f71\u7684\u4ee3\u7801\uff0c\u6362\u53e5\u8bdd\u8bf4\uff0c\u4ece\u5149\u5f71\u900f\u89c6\u7684\u573a\u666f\u5df2\u7ecf\u79fb\u52a8\u5230\u4e86 ShadowRenderer \u7c7b\u4e2d\u3002\uff08\u8be5\u4ee3\u7801\u4ee5\u524d\u5728 Renderer \u7c7b\u4e2d\uff09\u3002 \u7c7b\u5b9a\u4e49\u4e86\u4ee5\u4e0b\u5e38\u91cf\uff1a public static final int NUM_CASCADES = 3; public static final float[] CASCADE_SPLITS = new float[]{Window.Z_FAR / 20.0f, Window.Z_FAR / 10.0f, Window.Z_FAR}; \u9996\u5148\u662f\u5c42\u7ea7\u6216\u62c6\u5206\u7684\u6570\u91cf\u3002\u7b2c\u4e8c\u4e2a\u5b9a\u4e49\u4e86\u6bcf\u4e2a\u62c6\u5206\u7684\u90e8\u5206\u7684\u8fdcZ\u5e73\u9762\u7684\u4f4d\u7f6e\u3002\u5982\u4f60\u6240\u89c1\uff0c\u5b83\u4eec\u7684\u95f4\u8ddd\u5e76\u4e0d\u76f8\u7b49\u3002\u79bb\u6444\u50cf\u673a\u8f83\u8fd1\u7684\u90e8\u5206\u5728Z\u5e73\u9762\u4e0a\u7684\u8ddd\u79bb\u6700\u77ed\u3002 \u7c7b\u8fd8\u50a8\u5b58\u4e86\u7528\u4e8e\u6e32\u67d3\u6df1\u5ea6\u56fe\u7684\u7740\u8272\u5668\u7a0b\u5e8f\u7684\u5f15\u7528\uff0c\u4e00\u4e2a\u5217\u8868\uff0c\u5176\u4e2d\u5305\u542b\u4e0e\u6bcf\u4e2a\u90e8\u5206\u76f8\u5173\u8054\u7684\u4fe1\u606f\uff0c\u5176\u7531 ShadowCascade \u7c7b\u5b9a\u4e49\uff0c\u4ee5\u53ca\u5bf9\u50a8\u5b58\u6df1\u5ea6\u56fe\u6570\u636e\uff08\u7eb9\u7406\uff09\u7684\u5bf9\u8c61\u7684\u5f15\u7528\uff0c\u7531 ShadowBuffer \u7c7b\u5b9a\u4e49\u3002 ShadowRenderer \u7c7b\u5177\u6709\u7528\u4e8e\u8bbe\u7f6e\u7740\u8272\u5668\u548c\u6240\u9700\u5c5e\u6027\u7684\u65b9\u6cd5\u4ee5\u53ca\u4e00\u4e2a\u6e32\u67d3\u65b9\u6cd5\u3002 render \u65b9\u6cd5\u7684\u5b9a\u4e49\u5982\u4e0b\u6240\u793a\uff1a public void render(Window window, Scene scene, Camera camera, Transformation transformation, Renderer renderer) { update(window, camera.getViewMatrix(), scene); // \u8bbe\u7f6e\u89c6\u53e3\u4ee5\u5339\u914d\u7eb9\u7406\u5927\u5c0f glBindFramebuffer(GL_FRAMEBUFFER, shadowBuffer.getDepthMapFBO()); glViewport(0, 0, ShadowBuffer.SHADOW_MAP_WIDTH, ShadowBuffer.SHADOW_MAP_HEIGHT); glClear(GL_DEPTH_BUFFER_BIT); depthShaderProgram.bind(); // \u4e3a\u6bcf\u5c42\u56fe\u6e32\u67d3\u573a\u666f for (int i = 0; i < NUM_CASCADES; i++) { ShadowCascade shadowCascade = shadowCascades.get(i); depthShaderProgram.setUniform(\"orthoProjectionMatrix\", shadowCascade.getOrthoProjMatrix()); depthShaderProgram.setUniform(\"lightViewMatrix\", shadowCascade.getLightViewMatrix()); glFramebufferTexture2D(GL_FRAMEBUFFER, GL_DEPTH_ATTACHMENT, GL_TEXTURE_2D, shadowBuffer.getDepthMapTexture().getIds()[i], 0); glClear(GL_DEPTH_BUFFER_BIT); renderNonInstancedMeshes(scene, transformation); renderInstancedMeshes(scene, transformation); } // \u89e3\u7ed1 depthShaderProgram.unbind(); glBindFramebuffer(GL_FRAMEBUFFER, 0); } \u5982\u4f60\u6240\u89c1\uff0c\u6211\u4eec\u4e3a\u6bcf\u4e2a\u90e8\u5206\u6267\u884c\u7684\u51e0\u4e2a\u6e32\u67d3\u8fc7\u7a0b\uff0c\u7c7b\u4f3c\u4e8e\u6b64\u524d\u9634\u5f71\u56fe\u7684\u6e32\u67d3\u65b9\u6cd5\u3002\u5728\u6bcf\u6b21\u6267\u884c\u4e2d\uff0c\u6211\u4eec\u90fd\u4f1a\u4f7f\u7528\u76f8\u5173\u7684 ShadowCascade \u5b9e\u4f8b\u4e2d\u4fdd\u51fd\u7684\u4fe1\u606f\u66f4\u6539\u5149\u7167\u89c6\u56fe\u77e9\u9635\u548c\u6b63\u4ea4\u6295\u5f71\u77e9\u9635\u3002 \u6b64\u5916\uff0c\u5728\u6bcf\u6b21\u6267\u884c\u4e2d\uff0c\u6211\u4eec\u90fd\u9700\u8981\u66f4\u6539\u6b63\u5728\u4f7f\u7528\u7684\u7eb9\u7406\u3002\u6bcf\u6b21\u90fd\u4f1a\u5c06\u6df1\u5ea6\u4fe1\u606f\u6e32\u67d3\u4e3a\u4e0d\u540c\u7684\u7eb9\u7406\u3002\u6b64\u4fe1\u606f\u50a8\u5b58\u5728 ShadowBuffer \u7c7b\u4e2d\uff0c\u5e76\u8bbe\u7f6e\u4e3a\u4f9bFBO\u4f7f\u7528\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a glFramebufferTexture2D(GL_FRAMEBUFFER, GL_DEPTH_ATTACHMENT, GL_TEXTURE_2D, shadowBuffer.getDepthMapTexture().getIds()[i], 0); \u6b63\u5982\u521a\u521a\u63d0\u5230\u7684\uff0c ShadowBuffer \u7c7b\u50a8\u5b58\u4e0e\u7528\u4e8e\u50a8\u5b58\u6df1\u5ea6\u4fe1\u606f\u7684\u7eb9\u7406\u76f8\u5173\u7684\u4fe1\u606f\u3002\u4ee3\u7801\u4e0e\u9634\u5f71\u7ae0\u8282\u4e2d\u4f7f\u7528\u7684\u4ee3\u7801\u975e\u5e38\u76f8\u4f3c\uff0c\u53ea\u662f\u6211\u4eec\u4f7f\u7528\u7684\u662f\u7eb9\u7406\u6570\u7ec4\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u521b\u5efa\u4e86\u4e00\u4e2a\u65b0\u7684\u7c7b ArrTexture \uff0c\u5b83\u521b\u5efa\u4e86\u4e00\u4e2a\u5177\u6709\u76f8\u540c\u5c5e\u6027\u7684\u7eb9\u7406\u6570\u7ec4\u3002\u6b64\u7c7b\u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e2a bind \u65b9\u6cd5\uff0c\u7528\u4e8e\u7ed1\u5b9a\u6240\u6709\u7eb9\u7406\u6570\u7ec4\uff0c\u4ee5\u4fbf\u5728\u573a\u666f\u7740\u8272\u5668\u4e2d\u4f7f\u7528\u5b83\u4eec\u3002\u8be5\u65b9\u6cd5\u63a5\u6536\u4e00\u4e2a\u53c2\u6570\uff0c\u4ece\u67d0\u4e2a\u7eb9\u7406\u5355\u5143\u5f00\u59cb\u7ed1\u5b9a\u3002 public void bindTextures(int start) { for (int i = 0; i < ShadowRenderer.NUM_CASCADES; i++) { glActiveTexture(start + i); glBindTexture(GL_TEXTURE_2D, depthMap.getIds()[i]); } } ShadowCascade \u7c7b\u50a8\u5b58\u4e0e\u4e00\u4e2a\u90e8\u5206\u5173\u8054\u7684\u5149\u7167\u89c6\u56fe\u548c\u6b63\u4ea4\u6295\u5f71\u77e9\u9635\u3002\u6bcf\u4e2a\u5206\u5272\u7684\u90e8\u5206\u7531\u4e00\u4e2a\u8fd1Z\u5e73\u9762\u8ddd\u79bb\u548c\u4e00\u4e2a\u8fdcZ\u5e73\u9762\u8ddd\u79bb\u5b9a\u4e49\uff0c\u5e76\u6839\u636e\u8be5\u4fe1\u606f\u8ba1\u7b97\u77e9\u9635\u3002 \u8be5\u7c7b\u63d0\u4f9b\u5e76\u66f4\u65b0\u4e86\u4ee5\u89c2\u5bdf\u77e9\u9635\u548c\u5149\u7167\u65b9\u5411\u4e3a\u8f93\u5165\u7684\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u9996\u5148\u8ba1\u7b97\u4e16\u754c\u7a7a\u95f4\u4e2d\u7684\u89c6\u9525\u9876\u70b9\uff0c\u7136\u540e\u8ba1\u7b97\u51fa\u5149\u6e90\u7684\u4f4d\u7f6e\u3002\u6839\u636e\u5149\u7684\u65b9\u5411\uff0c\u4ece\u622a\u9525\u7684\u4e2d\u5fc3\u5230\u76f8\u5f53\u4e8e\u8fdcZ\u5e73\u9762\u5230\u8fd1Z\u5e73\u9762\u4e4b\u95f4\u7684\u8ddd\u79bb\u7684\u8ddd\u79bb\uff0c\u8ba1\u7b97\u51fa\u8be5\u4f4d\u7f6e\u3002 public void update(Window window, Matrix4f viewMatrix, DirectionalLight light) { // \u4e3a\u6b64\u5c42\u751f\u6210\u6295\u5f71\u8bc6\u56fe\u77e9\u9635 float aspectRatio = (float) window.getWidth() / (float) window.getHeight(); projViewMatrix.setPerspective(Window.FOV, aspectRatio, zNear, zFar); projViewMatrix.mul(viewMatrix); // \u8ba1\u7b97\u4e16\u754c\u7a7a\u95f4\u4e2d\u7684\u622a\u9525\u9876\u70b9 float maxZ = -Float.MAX_VALUE; float minZ = Float.MAX_VALUE; for (int i = 0; i < FRUSTUM_CORNERS; i++) { Vector3f corner = frustumCorners[i]; corner.set(0, 0, 0); projViewMatrix.frustumCorner(i, corner); centroid.add(corner); centroid.div(8.0f); minZ = Math.min(minZ, corner.z); maxZ = Math.max(maxZ, corner.z); } // \u4ece\u8d28\u5fc3\u9006\u7740\u5149\u7684\u65b9\u5411\u4e0amax.z-min.z\u7684\u8ddd\u79bb Vector3f lightDirection = light.getDirection(); Vector3f lightPosInc = new Vector3f().set(lightDirection); float distance = maxZ - minZ; lightPosInc.mul(distance); Vector3f lightPosition = new Vector3f(); lightPosition.set(centroid); lightPosition.add(lightPosInc); updateLightViewMatrix(lightDirection, lightPosition); updateLightProjectionMatrix(); } \u6839\u636e\u5149\u6e90\u7684\u4f4d\u7f6e\u548c\u65b9\u5411\uff0c\u6211\u4eec\u53ef\u4ee5\u6784\u9020\u5149\u7167\u89c6\u56fe\u77e9\u9635\u3002\u8fd9\u662f\u5728 updateLightViewMatrix \u65b9\u6cd5\u4e2d\u5b8c\u6210\u7684\uff1a private void updateLightViewMatrix(Vector3f lightDirection, Vector3f lightPosition) { float lightAngleX = (float) Math.toDegrees(Math.acos(lightDirection.z)); float lightAngleY = (float) Math.toDegrees(Math.asin(lightDirection.x)); float lightAngleZ = 0; Transformation.updateGenericViewMatrix(lightPosition, new Vector3f(lightAngleX, lightAngleY, lightAngleZ), lightViewMatrix); } \u6700\u540e\uff0c\u6211\u4eec\u9700\u8981\u6784\u9020\u6b63\u4ea4\u6295\u5f71\u77e9\u9635\u3002\u8fd9\u662f\u5728 updateLightProjectionMatrix \u65b9\u6cd5\u4e2d\u5b8c\u6210\u7684\u3002\u8be5\u65b9\u6cd5\u5c06\u89c6\u9525\u4f53\u5750\u6807\u8f6c\u6362\u5230\u5149\u7167\u7a7a\u95f4\u3002\u7136\u540e\u6211\u4eec\u5f97\u5230x\u3001y\u5750\u6807\u7684\u6700\u5c0f\u503c\u548c\u6700\u5927\u503c\u6765\u6784\u9020\u5305\u56f4\u89c6\u9525\u4f53\u7684\u8fb9\u754c\u6846\u3002\u8fd1Z\u5e73\u9762\u53ef\u4ee5\u8bbe\u7f6e\u4e3a0\uff0c\u8fdcZ\u5e73\u9762\u53ef\u4ee5\u8bbe\u7f6e\u4e3a\u5750\u6807\u7684\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u4e4b\u95f4\u7684\u8ddd\u79bb\u3002 private void updateLightProjectionMatrix() { // \u73b0\u5728\u8ba1\u7b97\u5149\u7167\u7a7a\u95f4\u4e2d\u7684\u622a\u9525\u5927\u5c0f\u3002 float minX = Float.MAX_VALUE; float maxX = -Float.MAX_VALUE; float minY = Float.MAX_VALUE; float maxY = -Float.MAX_VALUE; float minZ = Float.MAX_VALUE; float maxZ = -Float.MAX_VALUE; for (int i = 0; i < FRUSTUM_CORNERS; i++) { Vector3f corner = frustumCorners[i]; tmpVec.set(corner, 1); tmpVec.mul(lightViewMatrix); minX = Math.min(tmpVec.x, minX); maxX = Math.max(tmpVec.x, maxX); minY = Math.min(tmpVec.y, minY); maxY = Math.max(tmpVec.y, maxY); minZ = Math.min(tmpVec.z, minZ); maxZ = Math.max(tmpVec.z, maxZ); } float distz = maxZ - minZ; orthoProjMatrix.setOrtho(minX, maxX, minY, maxY, 0, distz); } \u8bb0\u4f4f\uff0c\u6b63\u4ea4\u6295\u5f71\u5c31\u50cf\u4e00\u4e2a\u8fb9\u754c\u6846\uff0c\u5e94\u8be5\u5305\u542b\u6240\u6709\u5c06\u8981\u6e32\u67d3\u7684\u5bf9\u8c61\u3002\u8be5\u8fb9\u754c\u6846\u4ee5\u5149\u7167\u89c6\u56fe\u5750\u6807\u7a7a\u95f4\u8868\u793a\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u8981\u505a\u7684\u662f\u8ba1\u7b97\u5305\u56f4\u89c6\u9525\u4f53\u7684\u6700\u5c0f\u8fb9\u754c\u6846\uff0c\u8f74\u4e0e\u5149\u6e90\u4f4d\u7f6e\u5bf9\u9f50\u3002 Renderer \u7c7b\u5df2\u88ab\u4fee\u6539\u4e3a\u4f7f\u7528\u89c6\u56fe\u5305\u4e2d\u7684\u7c7b\u4ee5\u53ca\u4fee\u6539\u4f20\u9012\u7ed9\u6e32\u67d3\u5668\u7684\u4fe1\u606f\u3002\u5728\u6e32\u67d3\u5668\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u5904\u7406\u6a21\u578b\u3001\u6a21\u578b\u89c2\u5bdf\u548c\u5149\u7167\u89c6\u56fe\u77e9\u9635\u3002\u5728\u6b64\u524d\u7684\u7ae0\u8282\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u6a21\u578b\u89c2\u5bdf\u6216\u5149\u7167\u89c6\u56fe\u77e9\u9635\u6765\u51cf\u5c11\u64cd\u4f5c\u7684\u6570\u91cf\u3002\u5728\u672c\u4f8b\u4e2d\uff0c\u6211\u4eec\u9009\u62e9\u7b80\u5316\u8981\u4f20\u9012\u7684\u5143\u7d20\u7684\u6570\u91cf\uff0c\u73b0\u5728\u53ea\u5c06\u6a21\u578b\u3001\u89c2\u5bdf\u548c\u5149\u7167\u77e9\u9635\u4f20\u9012\u7ed9\u7740\u8272\u5668\u3002\u6b64\u5916\uff0c\u5bf9\u4e8e\u7c92\u5b50\uff0c\u6211\u4eec\u9700\u8981\u4fdd\u7559\u6bd4\u4f8b\uff0c\u56e0\u4e3a\u6211\u4eec\u4e0d\u518d\u4f20\u9012\u6a21\u578b\u89c2\u5bdf\u77e9\u9635\uff0c\u6240\u4ee5\u73b0\u5728\u4fe1\u606f\u5c06\u4e22\u5931\u3002\u6211\u4eec\u91cd\u7528\u7528\u4e8e\u6807\u8bb0\u6240\u9009\u9879\u7684\u5c5e\u6027\u6765\u8bbe\u7f6e\u6bd4\u4f8b\u4fe1\u606f\u3002\u5728\u7c92\u5b50\u7740\u8272\u4e2d\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u8be5\u503c\u518d\u6b21\u8bbe\u7f6e\u7f29\u653e\u3002 \u5728\u573a\u666f\u7684\u9876\u70b9\u7740\u8272\u5668\u4e2d\uff0c\u6211\u4eec\u4e3a\u6bcf\u4e2a\u90e8\u5206\u8ba1\u7b97\u6a21\u578b\u5149\u7167\u89c6\u56fe\u77e9\u9635\uff0c\u5e76\u5c06\u5176\u4f5c\u4e3a\u8f93\u51fa\u4f20\u9012\u7ed9\u7247\u5143\u7740\u8272\u5668\u3002 mvVertexPos = mvPos.xyz; for (int i = 0 ; i < NUM_CASCADES ; i++) { mlightviewVertexPos[i] = orthoProjectionMatrix[i] * lightViewMatrix[i] * modelMatrix * vec4(position, 1.0); } \u5728\u7247\u5143\u7740\u8272\u5668\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u8fd9\u4e9b\u503c\u6839\u636e\u7247\u5143\u6240\u5904\u7684\u90e8\u5206\u6765\u67e5\u8be2\u9002\u5f53\u7684\u6df1\u5ea6\u56fe\u3002\u8fd9\u9700\u8981\u5728\u7247\u5143\u7740\u8272\u5668\u4e2d\u5b8c\u6210\uff0c\u56e0\u4e3a\u5bf9\u4e8e\u7279\u5b9a\u9879\u76ee\uff0c\u5b83\u4eec\u7684\u7247\u5143\u53ef\u80fd\u4f4d\u4e8e\u4e0d\u540c\u7684\u90e8\u5206\u4e2d\u3002 \u6b64\u5916\uff0c\u5728\u7247\u5143\u7740\u8272\u5668\u4e2d\uff0c\u6211\u4eec\u5fc5\u987b\u51b3\u5b9a\u8981\u5206\u6210\u54ea\u4e2a\u90e8\u5206\u3002\u4e3a\u4e86\u5b9e\u73b0\u5b83\uff0c\u6211\u4eec\u4f7f\u7528\u7247\u5143\u7684Z\u503c\uff0c\u5e76\u5c06\u5176\u4e0e\u6bcf\u4e2a\u90e8\u5206\u7684\u6700\u5927Z\u503c\u8fdb\u884c\u6bd4\u8f83\uff0c\u4e5f\u5c31\u662f\u8fdcZ\u5e73\u9762\u503c\u3002\u8fd9\u4e9b\u6570\u636e\u4f5c\u4e3a\u4e00\u4e2a\u65b0\u7684Uniform\u4f20\u9012\uff1a uniform float cascadeFarPlanes[NUM_CASCADES]; \u5982\u4e0b\u6240\u793a\uff0c\u6211\u4eec\u8ba1\u7b97\u5206\u5272\u7684\u90e8\u5206\uff0c\u53d8\u91cf idx \u5c06\u50a8\u5b58\u8981\u4f7f\u7528\u7684\u90e8\u5206\uff1a int idx; for (int i=0; i<NUM_CASCADES; i++) { if ( abs(mvVertexPos.z) < cascadeFarPlanes[i] ) { idx = i; break; } } \u6b64\u5916\uff0c\u5728\u573a\u666f\u7740\u8272\u5668\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u4f20\u9012\u4e00\u4e2a\u7eb9\u7406\u6570\u7ec4\uff0c\u4e00\u4e2a sampler2D \u6570\u7ec4\uff0c\u7528\u4e8e\u6df1\u5ea6\u56fe\uff0c\u5373\u4e0e\u6211\u4eec\u5206\u5272\u90e8\u5206\u76f8\u5173\u8054\u7684\u7eb9\u7406\u3002\u6e90\u4ee3\u7801\u7528\u4e00\u4e2aUniform\u5217\u8868\uff08\u800c\u4e0d\u662f\u4f7f\u7528\u6570\u7ec4\uff09\u50a8\u5b58\u7528\u4e8e\u5f15\u7528\u4e0e\u6bcf\u4e2a\u90e8\u5206\u5173\u8054\u7684\u6df1\u5ea6\u56fe\u7684\u7eb9\u7406\u5355\u5143\u3002 uniform sampler2D normalMap; uniform sampler2D shadowMap_0; uniform sampler2D shadowMap_1; uniform sampler2D shadowMap_2; \u5c06\u5176\u66f4\u6539\u4e3a\u4e00\u7ec4Uniform\u4f1a\u5bfc\u81f4\u96be\u4ee5\u8ffd\u8e2a\u6b64\u793a\u4f8b\u7684\u5176\u4ed6\u7eb9\u7406\u51fa\u73b0\u7684\u95ee\u9898\u3002\u5728\u4efb\u4f55\u60c5\u51b5\u4e0b\uff0c\u4f60\u90fd\u53ef\u4ee5\u5c1d\u8bd5\u5728\u4ee3\u7801\u4e2d\u4fee\u6539\u5b83\u3002 \u6e90\u4ee3\u7801\u4e2d\u7684\u5176\u4f59\u4fee\u6539\u548c\u7740\u8272\u5668\u53ea\u662f\u57fa\u4e8e\u4e0a\u8ff0\u66f4\u6539\u6240\u9700\u7684\u8c03\u6574\uff0c\u4f60\u53ef\u4ee5\u76f4\u63a5\u5728\u6e90\u4ee3\u7801\u4e0a\u67e5\u770b\u5b83\u3002 \u6700\u540e\uff0c\u5f53\u5f15\u5165\u8fd9\u4e9b\u66f4\u6539\u65f6\uff0c\u4f60\u53ef\u80fd\u4f1a\u53d1\u73b0\u6027\u80fd\u4e0b\u964d\uff0c\u8fd9\u662f\u56e0\u4e3a\u6211\u4eec\u7ed8\u5236\u7684\u6df1\u5ea6\u56fe\u662f\u6b64\u524d\u7684\u4e09\u500d\u3002\u5982\u679c\u6444\u50cf\u673a\u672a\u88ab\u79fb\u52a8\u6216\u573a\u666f\u9879\u672a\u53d1\u751f\u66f4\u6539\uff0c\u5219\u4e0d\u9700\u8981\u53cd\u590d\u6e32\u67d3\u6df1\u5ea6\u56fe\u3002\u6df1\u5ea6\u56fe\u50a8\u5b58\u5728\u7eb9\u7406\u4e2d\uff0c\u56e0\u6b64\u4e0d\u9700\u8981\u6bcf\u6b21\u6e32\u67d3\u8c03\u7528\u6e05\u9664\u5b83\u4eec\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u5728 render \u65b9\u6cd5\u4e2d\u6dfb\u52a0\u4e86\u4e00\u4e2a\u65b0\u53d8\u91cf\uff0c\u7528\u4e8e\u6307\u793a\u662f\u5426\u66f4\u65b0\u6df1\u5ea6\u56fe\uff0c\u4ee5\u907f\u514d\u66f4\u65b0\u6df1\u5ea6\u56fe\uff0c\u4f7f\u5176\u4fdd\u6301\u4e0d\u53d8\uff0c\u8fd9\u4f1a\u663e\u8457\u63d0\u9ad8FPS\u3002\u6700\u7ec8\uff0c\u4f60\u4f1a\u5f97\u5230\u8fd9\u6837\u7684\u6548\u679c\uff1a","title":"\u7ea7\u8054\u9634\u5f71\u6620\u5c04"},{"location":"26-cascaded-shadow-maps/#cascaded-shadow-maps","text":"\u5728\u9634\u5f71\u4e00\u7ae0\u4e2d\uff0c\u6211\u4eec\u4ecb\u7ecd\u4e86\u9634\u5f71\u6620\u5c04\u6280\u672f\uff0c\u4ee5\u4fbf\u5728\u6e32\u67d3\u4e09\u7ef4\u573a\u666f\u65f6\u4f7f\u7528\u5e73\u884c\u5149\u663e\u793a\u9634\u5f71\u3002\u6b64\u524d\u4ecb\u7ecd\u7684\u65b9\u6848\u4e2d\u8981\u6c42\u4f60\u624b\u52a8\u8c03\u6574\u4e00\u4e9b\u53c2\u6570\u4ee5\u6539\u8fdb\u6548\u679c\u3002\u5728\u672c\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u4fee\u6539\u8be5\u6280\u672f\uff0c\u4ee5\u81ea\u52a8\u5316\u6240\u6709\u6d41\u7a0b\uff0c\u5e76\u6539\u8fdb\u5728\u5f00\u653e\u7a7a\u95f4\u4e2d\u7684\u6548\u679c\u3002\u4e3a\u4e86\u8fbe\u5230\u76ee\u7684\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u4e00\u79cd\u79f0\u4e3a\u7ea7\u8054\u9634\u5f71\u6620\u5c04\uff08CMS\uff0cCascaded Shadow Map\uff09\u7684\u6280\u672f\u3002 \u8ba9\u6211\u4eec\u9996\u5148\u770b\u4e00\u4e0b\u5982\u4f55\u81ea\u52a8\u6784\u9020\u7528\u4e8e\u6e32\u67d3\u9634\u5f71\u7684\u5149\u7167\u89c6\u56fe\u77e9\u9635\u548c\u6b63\u4ea4\u6295\u5f71\u77e9\u9635\u3002\u5982\u679c\u4f60\u56de\u60f3\u9634\u5f71\u4e00\u7ae0\uff0c\u6211\u4eec\u9700\u8981\u4ece\u5149\u7ebf\u7684\u89d2\u5ea6\u6765\u7ed8\u5236\u573a\u666f\u3002\u8fd9\u610f\u5473\u7740\u521b\u5efa\u4e00\u4e2a\u5149\u7167\u89c6\u56fe\u77e9\u9635\uff0c\u5b83\u5c31\u50cf\u4e00\u4e2a\u4f5c\u7528\u4e8e\u5149\u6e90\u7684\u6444\u50cf\u673a\u548c\u4e00\u4e2a\u6295\u5f71\u77e9\u9635\u3002\u7531\u4e8e\u5149\u662f\u5b9a\u5411\u7684\uff0c\u800c\u4e14\u5e94\u8be5\u4f4d\u4e8e\u65e0\u7a77\u8fdc\u5904\uff0c\u6240\u4ee5\u6211\u4eec\u9009\u62e9\u4e86\u6b63\u4ea4\u6295\u5f71\u3002 \u6211\u4eec\u5e0c\u671b\u6240\u6709\u53ef\u89c1\u7684\u7269\u4f53\u90fd\u9002\u7528\u4e8e\u5149\u7167\u89c6\u56fe\u6295\u5f71\u77e9\u9635\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u5c06\u89c6\u622a\u9525\u653e\u5165\u5149\u622a\u9525\u4e2d\u3002\u4e0b\u56fe\u662f\u6211\u4eec\u6700\u7ec8\u60f3\u8981\u5b9e\u73b0\u7684\u6548\u679c\uff1a \u8be5\u5982\u4f55\u6784\u9020\u5b83\uff1f\u9996\u5148\u662f\u8ba1\u7b97\u89c2\u5bdf\u6295\u5f71\u77e9\u9635\u7684\u622a\u9525\u9876\u70b9\u3002\u6211\u4eec\u5f97\u5230\u4e16\u754c\u7a7a\u95f4\u7684\u5750\u6807\uff0c\u7136\u540e\u8ba1\u7b97\u8fd9\u4e2a\u622a\u9525\u7684\u4e2d\u5fc3\uff0c\u8fd9\u53ef\u4ee5\u901a\u8fc7\u5c06\u6240\u6709\u7684\u9876\u70b9\u7684\u5750\u6807\u76f8\u52a0\u5e76\u5c06\u7ed3\u679c\u9664\u4ee5\u9876\u70b9\u7684\u6570\u91cf\u6765\u8ba1\u7b97\u3002 \u6709\u4e86\u8fd9\u4e9b\u6570\u636e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u8bbe\u7f6e\u5149\u6e90\u7684\u4f4d\u7f6e\u3002\u5176\u4f4d\u7f6e\u53ca\u5176\u65b9\u5411\u5c06\u7528\u4e8e\u6784\u5efa\u5149\u7167\u89c6\u56fe\u77e9\u9635\u3002\u4e3a\u4e86\u8ba1\u7b97\u4f4d\u7f6e\uff0c\u6211\u4eec\u4ece\u6b64\u524d\u5f97\u5230\u7684\u89c6\u9525\u4f53\u7684\u4e2d\u5fc3\u5f00\u59cb\uff0c\u9006\u7740\u5149\u7684\u65b9\u5411\uff0c\u53d6\u76f8\u5f53\u4e8e\u89c6\u9525\u4f53\u7684\u8fd1Z\u5e73\u9762\u548c\u8fdcZ\u5e73\u9762\u7684\u8ddd\u79bb\u7684\u4e00\u70b9\u3002 \u6784\u5efa\u5b8c\u6210\u5149\u7167\u89c6\u56fe\u77e9\u9635\uff0c\u6211\u4eec\u9700\u8981\u8bbe\u7f6e\u6b63\u4ea4\u6295\u5f71\u77e9\u9635\u3002\u4e3a\u4e86\u8ba1\u7b97\u5b83\u4eec\uff0c\u6211\u4eec\u5c06\u622a\u9525\u7684\u9876\u70b9\u8f6c\u6362\u5230\u5149\u7167\u89c6\u56fe\u7a7a\u95f4\uff0c\u53ea\u9700\u8981\u5c06\u5b83\u4eec\u4e58\u4ee5\u521a\u521a\u6784\u5efa\u7684\u5149\u7167\u89c6\u56fe\u77e9\u9635\u3002\u6295\u5f71\u77e9\u9635\u7684\u5c3a\u5bf8\u662f\u6700\u5927\u548c\u6700\u5c0f\u7684X\u548cY\u503c\uff0c\u8fd1Z\u5e73\u9762\u53ef\u4ee5\u8bbe\u7f6e\u4e3a\u4e0e\u6807\u51c6\u6295\u5f71\u77e9\u9635\u76f8\u540c\u7684\u503c\uff0c\u8fdcZ\u5e73\u9762\u5219\u662f\u5149\u7167\u89c6\u56fe\u7a7a\u95f4\u4e2d\u622a\u9525\u9876\u70b9\u7684\u6700\u5927\u548c\u6700\u5c0fZ\u503c\u4e4b\u95f4\u7684\u8ddd\u79bb\u3002 \u4f46\u662f\uff0c\u5982\u679c\u5728\u9634\u5f71\u793a\u4f8b\u4ee3\u7801\u7684\u57fa\u7840\u4e0a\u5b9e\u73b0\u4e0a\u8ff0\u7b97\u6cd5\uff0c\u5219\u53ef\u80fd\u4f1a\u5bf9\u9634\u5f71\u8d28\u91cf\u611f\u5230\u5931\u671b\u3002 \u539f\u56e0\u662f\u9634\u5f71\u5206\u8fa8\u7387\u53d7\u7eb9\u7406\u5927\u5c0f\u7684\u9650\u5236\u3002\u6211\u4eec\u73b0\u5728\u6b63\u8986\u76d6\u4e00\u4e2a\u6f5c\u5728\u7684\u5de8\u5927\u533a\u57df\uff0c\u5e76\u4e14\u6211\u4eec\u7528\u6765\u50a8\u5b58\u6df1\u5ea6\u4fe1\u606f\u7684\u7eb9\u7406\u6ca1\u6709\u8db3\u591f\u7684\u5206\u8fa8\u7387\u6765\u53d6\u5f97\u826f\u597d\u7684\u6548\u679c\u3002\u4f60\u53ef\u80fd\u8ba4\u4e3a\u89e3\u51b3\u65b9\u6cd5\u53ea\u662f\u63d0\u9ad8\u7eb9\u7406\u5206\u8fa8\u7387\uff0c\u4f46\u8fd9\u5e76\u4e0d\u8db3\u4ee5\u5b8c\u5168\u89e3\u51b3\u95ee\u9898\uff0c\u4f60\u9700\u8981\u5de8\u5927\u7684\u7eb9\u7406\u3002 \u6709\u4e00\u4e2a\u66f4\u806a\u660e\u7684\u89e3\u51b3\u65b9\u6848\u3002\u5176\u5173\u952e\u662f\uff0c\u9760\u8fd1\u6444\u50cf\u673a\u7684\u7269\u4f53\u9700\u8981\u6bd4\u8fdc\u5904\u7269\u4f53\u7684\u9634\u5f71\u6709\u66f4\u9ad8\u7684\u8d28\u91cf\u3002\u4e00\u79cd\u65b9\u6cd5\u662f\u53ea\u6e32\u67d3\u9760\u8fd1\u6444\u50cf\u673a\u7684\u5bf9\u8c61\u7684\u9634\u5f71\uff0c\u4f46\u8fd9\u4f1a\u5bfc\u81f4\u9634\u5f71\u5728\u573a\u666f\u4e2d\u79fb\u52a8\u65f6\u51fa\u73b0\u6216\u6d88\u5931\u3002 \u7ea7\u8054\u9634\u5f71\u6620\u5c04\uff08CSM\uff09\u4f7f\u7528\u7684\u65b9\u6cd5\u662f\u5c06\u89c6\u9525\u4f53\u5206\u5272\u4e3a\u591a\u4e2a\u90e8\u5206\u3002\u79bb\u6444\u50cf\u673a\u8f83\u8fd1\u7684\u90e8\u5206\u4f1a\u8986\u76d6\u8f83\u5c0f\u7684\u533a\u57df\uff0c\u800c\u8ddd\u79bb\u8f83\u8fdc\u7684\u90e8\u5206\u4f1a\u8986\u76d6\u66f4\u5e7f\u7684\u533a\u57df\u3002\u4e0b\u56fe\u663e\u793a\u4e86\u628a\u4e00\u4e2a\u89c6\u9525\u4f53\u5206\u4e3a\u4e09\u4e2a\u90e8\u5206\u3002 \u5bf9\u4e8e\u6bcf\u4e2a\u90e8\u5206\uff0c\u5c06\u6e32\u67d3\u6df1\u5ea6\u7eb9\u7406\uff0c\u8c03\u6574\u5149\u7167\u89c6\u56fe\u548c\u6295\u5f71\u77e9\u9635\u4ee5\u5408\u9002\u5730\u8986\u76d6\u6bcf\u4e2a\u5206\u5272\u7684\u90e8\u5206\u3002\u56e0\u6b64\uff0c\u50a8\u5b58\u6df1\u5ea6\u6620\u5c04\u7684\u7eb9\u7406\u8986\u76d6\u89c6\u9525\u4f53\u7684\u533a\u57df\u7f29\u5c0f\u4e86\u3002\u800c\u4e14\uff0c\u7531\u4e8e\u79bb\u6444\u50cf\u673a\u6700\u8fd1\u7684\u90e8\u5206\u4f1a\u5360\u7528\u8f83\u5c11\u7684\u7a7a\u95f4\uff0c\u56e0\u6b64\u6df1\u5ea6\u5206\u8fa8\u7387\u4f1a\u63d0\u9ad8\u3002 \u4ece\u4e0a\u8ff0\u89e3\u91ca\u53ef\u4ee5\u770b\u51fa\uff0c\u6211\u4eec\u9700\u8981\u5c3d\u53ef\u80fd\u591a\u7684\u5c06\u6df1\u5ea6\u56fe\u8fdb\u884c\u5206\u5272\uff0c\u6211\u4eec\u8fd8\u5c06\u66f4\u6539\u6bcf\u4e2a\u5149\u7167\u89c6\u56fe\u548c\u6295\u5f71\u77e9\u9635\u3002\u56e0\u6b64\uff0c\u8981\u4f7f\u7528CSM\u9700\u8981\u505a\u7684\u4e8b\u60c5\u662f\uff1a \u5c06\u89c6\u9525\u4f53\u5206\u4e3an\u4e2a\u90e8\u5206\u3002 \u6e32\u67d3\u6df1\u5ea6\u7eb9\u7406\u65f6\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u90e8\u5206\uff1a \u8ba1\u7b97\u5149\u7167\u89c6\u56fe\u548c\u6295\u5f71\u77e9\u9635\u3002 \u4ece\u5149\u6e90\u7684\u89d2\u5ea6\u5c06\u573a\u666f\u6e32\u67d3\u4e3a\u5355\u72ec\u7684\u6df1\u5ea6\u56fe\u3002 \u6e32\u67d3\u573a\u666f\u65f6\uff1a \u4f7f\u7528\u6b64\u524d\u8ba1\u7b97\u7684\u6df1\u5ea6\u56fe\u3002 \u786e\u5b9a\u8981\u7ed8\u5236\u7684\u7247\u6bb5\u6240\u5c5e\u7684\u90e8\u5206\u3002 \u8ba1\u7b97\u9634\u5f71\u56e0\u5b50\uff0c\u5982\u9634\u5f71\u6620\u5c04\u4e2d\u6240\u8ff0\u3002 \u5982\u4f60\u6240\u89c1\uff0cCSM\u7684\u4e3b\u8981\u7f3a\u70b9\u662f\u6211\u4eec\u9700\u8981\u4ece\u706f\u5149\u7684\u89d2\u5ea6\u4e3a\u6bcf\u4e2a\u90e8\u5206\u6e32\u67d3\u573a\u666f\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u901a\u5e38\u53ea\u7528\u4e8e\u5f00\u653e\u7a7a\u95f4\u7684\u539f\u56e0\u3002\u4e0d\u7ba1\u600e\u4e48\u8bf4\uff0c\u6211\u4eec\u5c06\u53ef\u4ee5\u770b\u5230\u5982\u4f55\u8f7b\u677e\u5730\u51cf\u5c11\u5f00\u9500\u3002 \u6240\u4ee5\uff0c\u8ba9\u6211\u4eec\u770b\u770b\u4ee3\u7801\u3002\u4f46\u662f\u5728\u7ee7\u7eed\u4e4b\u524d\uff0c\u6709\u4e00\u4e2a\u5c0f\u5c0f\u7684\u63d0\u9192\uff0c\u6211\u4e0d\u4f1a\u5728\u8fd9\u91cc\u5199\u4e0a\u5b8c\u6574\u7684\u6e90\u4ee3\u7801\uff0c\u56e0\u4e3a\u8fd9\u4f1a\u975e\u5e38\u67af\u71e5\u3002\u76f8\u53cd\uff0c\u6211\u5c06\u4ecb\u7ecd\u4e3b\u8981\u7c7b\u3001\u5b83\u4eec\u7684\u804c\u8d23\u548c\u53ef\u80fd\u9700\u8981\u8fdb\u4e00\u6b65\u89e3\u91ca\u7684\u7247\u6bb5\uff0c\u4ee5\u4fbf\u66f4\u597d\u5730\u7406\u89e3\u3002\u6240\u6709\u4e0e\u7740\u8272\u76f8\u5173\u7684\u7c7b\u90fd\u5df2\u79fb\u52a8\u5230\u4e00\u4e2a\u540d\u4e3a org.lwjglb.engine.graph.shadow \u7684\u65b0\u5305\u4e2d\u3002 \u6e32\u67d3\u9634\u5f71\u7684\u4ee3\u7801\uff0c\u6362\u53e5\u8bdd\u8bf4\uff0c\u4ece\u5149\u5f71\u900f\u89c6\u7684\u573a\u666f\u5df2\u7ecf\u79fb\u52a8\u5230\u4e86 ShadowRenderer \u7c7b\u4e2d\u3002\uff08\u8be5\u4ee3\u7801\u4ee5\u524d\u5728 Renderer \u7c7b\u4e2d\uff09\u3002 \u7c7b\u5b9a\u4e49\u4e86\u4ee5\u4e0b\u5e38\u91cf\uff1a public static final int NUM_CASCADES = 3; public static final float[] CASCADE_SPLITS = new float[]{Window.Z_FAR / 20.0f, Window.Z_FAR / 10.0f, Window.Z_FAR}; \u9996\u5148\u662f\u5c42\u7ea7\u6216\u62c6\u5206\u7684\u6570\u91cf\u3002\u7b2c\u4e8c\u4e2a\u5b9a\u4e49\u4e86\u6bcf\u4e2a\u62c6\u5206\u7684\u90e8\u5206\u7684\u8fdcZ\u5e73\u9762\u7684\u4f4d\u7f6e\u3002\u5982\u4f60\u6240\u89c1\uff0c\u5b83\u4eec\u7684\u95f4\u8ddd\u5e76\u4e0d\u76f8\u7b49\u3002\u79bb\u6444\u50cf\u673a\u8f83\u8fd1\u7684\u90e8\u5206\u5728Z\u5e73\u9762\u4e0a\u7684\u8ddd\u79bb\u6700\u77ed\u3002 \u7c7b\u8fd8\u50a8\u5b58\u4e86\u7528\u4e8e\u6e32\u67d3\u6df1\u5ea6\u56fe\u7684\u7740\u8272\u5668\u7a0b\u5e8f\u7684\u5f15\u7528\uff0c\u4e00\u4e2a\u5217\u8868\uff0c\u5176\u4e2d\u5305\u542b\u4e0e\u6bcf\u4e2a\u90e8\u5206\u76f8\u5173\u8054\u7684\u4fe1\u606f\uff0c\u5176\u7531 ShadowCascade \u7c7b\u5b9a\u4e49\uff0c\u4ee5\u53ca\u5bf9\u50a8\u5b58\u6df1\u5ea6\u56fe\u6570\u636e\uff08\u7eb9\u7406\uff09\u7684\u5bf9\u8c61\u7684\u5f15\u7528\uff0c\u7531 ShadowBuffer \u7c7b\u5b9a\u4e49\u3002 ShadowRenderer \u7c7b\u5177\u6709\u7528\u4e8e\u8bbe\u7f6e\u7740\u8272\u5668\u548c\u6240\u9700\u5c5e\u6027\u7684\u65b9\u6cd5\u4ee5\u53ca\u4e00\u4e2a\u6e32\u67d3\u65b9\u6cd5\u3002 render \u65b9\u6cd5\u7684\u5b9a\u4e49\u5982\u4e0b\u6240\u793a\uff1a public void render(Window window, Scene scene, Camera camera, Transformation transformation, Renderer renderer) { update(window, camera.getViewMatrix(), scene); // \u8bbe\u7f6e\u89c6\u53e3\u4ee5\u5339\u914d\u7eb9\u7406\u5927\u5c0f glBindFramebuffer(GL_FRAMEBUFFER, shadowBuffer.getDepthMapFBO()); glViewport(0, 0, ShadowBuffer.SHADOW_MAP_WIDTH, ShadowBuffer.SHADOW_MAP_HEIGHT); glClear(GL_DEPTH_BUFFER_BIT); depthShaderProgram.bind(); // \u4e3a\u6bcf\u5c42\u56fe\u6e32\u67d3\u573a\u666f for (int i = 0; i < NUM_CASCADES; i++) { ShadowCascade shadowCascade = shadowCascades.get(i); depthShaderProgram.setUniform(\"orthoProjectionMatrix\", shadowCascade.getOrthoProjMatrix()); depthShaderProgram.setUniform(\"lightViewMatrix\", shadowCascade.getLightViewMatrix()); glFramebufferTexture2D(GL_FRAMEBUFFER, GL_DEPTH_ATTACHMENT, GL_TEXTURE_2D, shadowBuffer.getDepthMapTexture().getIds()[i], 0); glClear(GL_DEPTH_BUFFER_BIT); renderNonInstancedMeshes(scene, transformation); renderInstancedMeshes(scene, transformation); } // \u89e3\u7ed1 depthShaderProgram.unbind(); glBindFramebuffer(GL_FRAMEBUFFER, 0); } \u5982\u4f60\u6240\u89c1\uff0c\u6211\u4eec\u4e3a\u6bcf\u4e2a\u90e8\u5206\u6267\u884c\u7684\u51e0\u4e2a\u6e32\u67d3\u8fc7\u7a0b\uff0c\u7c7b\u4f3c\u4e8e\u6b64\u524d\u9634\u5f71\u56fe\u7684\u6e32\u67d3\u65b9\u6cd5\u3002\u5728\u6bcf\u6b21\u6267\u884c\u4e2d\uff0c\u6211\u4eec\u90fd\u4f1a\u4f7f\u7528\u76f8\u5173\u7684 ShadowCascade \u5b9e\u4f8b\u4e2d\u4fdd\u51fd\u7684\u4fe1\u606f\u66f4\u6539\u5149\u7167\u89c6\u56fe\u77e9\u9635\u548c\u6b63\u4ea4\u6295\u5f71\u77e9\u9635\u3002 \u6b64\u5916\uff0c\u5728\u6bcf\u6b21\u6267\u884c\u4e2d\uff0c\u6211\u4eec\u90fd\u9700\u8981\u66f4\u6539\u6b63\u5728\u4f7f\u7528\u7684\u7eb9\u7406\u3002\u6bcf\u6b21\u90fd\u4f1a\u5c06\u6df1\u5ea6\u4fe1\u606f\u6e32\u67d3\u4e3a\u4e0d\u540c\u7684\u7eb9\u7406\u3002\u6b64\u4fe1\u606f\u50a8\u5b58\u5728 ShadowBuffer \u7c7b\u4e2d\uff0c\u5e76\u8bbe\u7f6e\u4e3a\u4f9bFBO\u4f7f\u7528\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a glFramebufferTexture2D(GL_FRAMEBUFFER, GL_DEPTH_ATTACHMENT, GL_TEXTURE_2D, shadowBuffer.getDepthMapTexture().getIds()[i], 0); \u6b63\u5982\u521a\u521a\u63d0\u5230\u7684\uff0c ShadowBuffer \u7c7b\u50a8\u5b58\u4e0e\u7528\u4e8e\u50a8\u5b58\u6df1\u5ea6\u4fe1\u606f\u7684\u7eb9\u7406\u76f8\u5173\u7684\u4fe1\u606f\u3002\u4ee3\u7801\u4e0e\u9634\u5f71\u7ae0\u8282\u4e2d\u4f7f\u7528\u7684\u4ee3\u7801\u975e\u5e38\u76f8\u4f3c\uff0c\u53ea\u662f\u6211\u4eec\u4f7f\u7528\u7684\u662f\u7eb9\u7406\u6570\u7ec4\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u521b\u5efa\u4e86\u4e00\u4e2a\u65b0\u7684\u7c7b ArrTexture \uff0c\u5b83\u521b\u5efa\u4e86\u4e00\u4e2a\u5177\u6709\u76f8\u540c\u5c5e\u6027\u7684\u7eb9\u7406\u6570\u7ec4\u3002\u6b64\u7c7b\u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e2a bind \u65b9\u6cd5\uff0c\u7528\u4e8e\u7ed1\u5b9a\u6240\u6709\u7eb9\u7406\u6570\u7ec4\uff0c\u4ee5\u4fbf\u5728\u573a\u666f\u7740\u8272\u5668\u4e2d\u4f7f\u7528\u5b83\u4eec\u3002\u8be5\u65b9\u6cd5\u63a5\u6536\u4e00\u4e2a\u53c2\u6570\uff0c\u4ece\u67d0\u4e2a\u7eb9\u7406\u5355\u5143\u5f00\u59cb\u7ed1\u5b9a\u3002 public void bindTextures(int start) { for (int i = 0; i < ShadowRenderer.NUM_CASCADES; i++) { glActiveTexture(start + i); glBindTexture(GL_TEXTURE_2D, depthMap.getIds()[i]); } } ShadowCascade \u7c7b\u50a8\u5b58\u4e0e\u4e00\u4e2a\u90e8\u5206\u5173\u8054\u7684\u5149\u7167\u89c6\u56fe\u548c\u6b63\u4ea4\u6295\u5f71\u77e9\u9635\u3002\u6bcf\u4e2a\u5206\u5272\u7684\u90e8\u5206\u7531\u4e00\u4e2a\u8fd1Z\u5e73\u9762\u8ddd\u79bb\u548c\u4e00\u4e2a\u8fdcZ\u5e73\u9762\u8ddd\u79bb\u5b9a\u4e49\uff0c\u5e76\u6839\u636e\u8be5\u4fe1\u606f\u8ba1\u7b97\u77e9\u9635\u3002 \u8be5\u7c7b\u63d0\u4f9b\u5e76\u66f4\u65b0\u4e86\u4ee5\u89c2\u5bdf\u77e9\u9635\u548c\u5149\u7167\u65b9\u5411\u4e3a\u8f93\u5165\u7684\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u9996\u5148\u8ba1\u7b97\u4e16\u754c\u7a7a\u95f4\u4e2d\u7684\u89c6\u9525\u9876\u70b9\uff0c\u7136\u540e\u8ba1\u7b97\u51fa\u5149\u6e90\u7684\u4f4d\u7f6e\u3002\u6839\u636e\u5149\u7684\u65b9\u5411\uff0c\u4ece\u622a\u9525\u7684\u4e2d\u5fc3\u5230\u76f8\u5f53\u4e8e\u8fdcZ\u5e73\u9762\u5230\u8fd1Z\u5e73\u9762\u4e4b\u95f4\u7684\u8ddd\u79bb\u7684\u8ddd\u79bb\uff0c\u8ba1\u7b97\u51fa\u8be5\u4f4d\u7f6e\u3002 public void update(Window window, Matrix4f viewMatrix, DirectionalLight light) { // \u4e3a\u6b64\u5c42\u751f\u6210\u6295\u5f71\u8bc6\u56fe\u77e9\u9635 float aspectRatio = (float) window.getWidth() / (float) window.getHeight(); projViewMatrix.setPerspective(Window.FOV, aspectRatio, zNear, zFar); projViewMatrix.mul(viewMatrix); // \u8ba1\u7b97\u4e16\u754c\u7a7a\u95f4\u4e2d\u7684\u622a\u9525\u9876\u70b9 float maxZ = -Float.MAX_VALUE; float minZ = Float.MAX_VALUE; for (int i = 0; i < FRUSTUM_CORNERS; i++) { Vector3f corner = frustumCorners[i]; corner.set(0, 0, 0); projViewMatrix.frustumCorner(i, corner); centroid.add(corner); centroid.div(8.0f); minZ = Math.min(minZ, corner.z); maxZ = Math.max(maxZ, corner.z); } // \u4ece\u8d28\u5fc3\u9006\u7740\u5149\u7684\u65b9\u5411\u4e0amax.z-min.z\u7684\u8ddd\u79bb Vector3f lightDirection = light.getDirection(); Vector3f lightPosInc = new Vector3f().set(lightDirection); float distance = maxZ - minZ; lightPosInc.mul(distance); Vector3f lightPosition = new Vector3f(); lightPosition.set(centroid); lightPosition.add(lightPosInc); updateLightViewMatrix(lightDirection, lightPosition); updateLightProjectionMatrix(); } \u6839\u636e\u5149\u6e90\u7684\u4f4d\u7f6e\u548c\u65b9\u5411\uff0c\u6211\u4eec\u53ef\u4ee5\u6784\u9020\u5149\u7167\u89c6\u56fe\u77e9\u9635\u3002\u8fd9\u662f\u5728 updateLightViewMatrix \u65b9\u6cd5\u4e2d\u5b8c\u6210\u7684\uff1a private void updateLightViewMatrix(Vector3f lightDirection, Vector3f lightPosition) { float lightAngleX = (float) Math.toDegrees(Math.acos(lightDirection.z)); float lightAngleY = (float) Math.toDegrees(Math.asin(lightDirection.x)); float lightAngleZ = 0; Transformation.updateGenericViewMatrix(lightPosition, new Vector3f(lightAngleX, lightAngleY, lightAngleZ), lightViewMatrix); } \u6700\u540e\uff0c\u6211\u4eec\u9700\u8981\u6784\u9020\u6b63\u4ea4\u6295\u5f71\u77e9\u9635\u3002\u8fd9\u662f\u5728 updateLightProjectionMatrix \u65b9\u6cd5\u4e2d\u5b8c\u6210\u7684\u3002\u8be5\u65b9\u6cd5\u5c06\u89c6\u9525\u4f53\u5750\u6807\u8f6c\u6362\u5230\u5149\u7167\u7a7a\u95f4\u3002\u7136\u540e\u6211\u4eec\u5f97\u5230x\u3001y\u5750\u6807\u7684\u6700\u5c0f\u503c\u548c\u6700\u5927\u503c\u6765\u6784\u9020\u5305\u56f4\u89c6\u9525\u4f53\u7684\u8fb9\u754c\u6846\u3002\u8fd1Z\u5e73\u9762\u53ef\u4ee5\u8bbe\u7f6e\u4e3a0\uff0c\u8fdcZ\u5e73\u9762\u53ef\u4ee5\u8bbe\u7f6e\u4e3a\u5750\u6807\u7684\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u4e4b\u95f4\u7684\u8ddd\u79bb\u3002 private void updateLightProjectionMatrix() { // \u73b0\u5728\u8ba1\u7b97\u5149\u7167\u7a7a\u95f4\u4e2d\u7684\u622a\u9525\u5927\u5c0f\u3002 float minX = Float.MAX_VALUE; float maxX = -Float.MAX_VALUE; float minY = Float.MAX_VALUE; float maxY = -Float.MAX_VALUE; float minZ = Float.MAX_VALUE; float maxZ = -Float.MAX_VALUE; for (int i = 0; i < FRUSTUM_CORNERS; i++) { Vector3f corner = frustumCorners[i]; tmpVec.set(corner, 1); tmpVec.mul(lightViewMatrix); minX = Math.min(tmpVec.x, minX); maxX = Math.max(tmpVec.x, maxX); minY = Math.min(tmpVec.y, minY); maxY = Math.max(tmpVec.y, maxY); minZ = Math.min(tmpVec.z, minZ); maxZ = Math.max(tmpVec.z, maxZ); } float distz = maxZ - minZ; orthoProjMatrix.setOrtho(minX, maxX, minY, maxY, 0, distz); } \u8bb0\u4f4f\uff0c\u6b63\u4ea4\u6295\u5f71\u5c31\u50cf\u4e00\u4e2a\u8fb9\u754c\u6846\uff0c\u5e94\u8be5\u5305\u542b\u6240\u6709\u5c06\u8981\u6e32\u67d3\u7684\u5bf9\u8c61\u3002\u8be5\u8fb9\u754c\u6846\u4ee5\u5149\u7167\u89c6\u56fe\u5750\u6807\u7a7a\u95f4\u8868\u793a\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u8981\u505a\u7684\u662f\u8ba1\u7b97\u5305\u56f4\u89c6\u9525\u4f53\u7684\u6700\u5c0f\u8fb9\u754c\u6846\uff0c\u8f74\u4e0e\u5149\u6e90\u4f4d\u7f6e\u5bf9\u9f50\u3002 Renderer \u7c7b\u5df2\u88ab\u4fee\u6539\u4e3a\u4f7f\u7528\u89c6\u56fe\u5305\u4e2d\u7684\u7c7b\u4ee5\u53ca\u4fee\u6539\u4f20\u9012\u7ed9\u6e32\u67d3\u5668\u7684\u4fe1\u606f\u3002\u5728\u6e32\u67d3\u5668\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u5904\u7406\u6a21\u578b\u3001\u6a21\u578b\u89c2\u5bdf\u548c\u5149\u7167\u89c6\u56fe\u77e9\u9635\u3002\u5728\u6b64\u524d\u7684\u7ae0\u8282\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u6a21\u578b\u89c2\u5bdf\u6216\u5149\u7167\u89c6\u56fe\u77e9\u9635\u6765\u51cf\u5c11\u64cd\u4f5c\u7684\u6570\u91cf\u3002\u5728\u672c\u4f8b\u4e2d\uff0c\u6211\u4eec\u9009\u62e9\u7b80\u5316\u8981\u4f20\u9012\u7684\u5143\u7d20\u7684\u6570\u91cf\uff0c\u73b0\u5728\u53ea\u5c06\u6a21\u578b\u3001\u89c2\u5bdf\u548c\u5149\u7167\u77e9\u9635\u4f20\u9012\u7ed9\u7740\u8272\u5668\u3002\u6b64\u5916\uff0c\u5bf9\u4e8e\u7c92\u5b50\uff0c\u6211\u4eec\u9700\u8981\u4fdd\u7559\u6bd4\u4f8b\uff0c\u56e0\u4e3a\u6211\u4eec\u4e0d\u518d\u4f20\u9012\u6a21\u578b\u89c2\u5bdf\u77e9\u9635\uff0c\u6240\u4ee5\u73b0\u5728\u4fe1\u606f\u5c06\u4e22\u5931\u3002\u6211\u4eec\u91cd\u7528\u7528\u4e8e\u6807\u8bb0\u6240\u9009\u9879\u7684\u5c5e\u6027\u6765\u8bbe\u7f6e\u6bd4\u4f8b\u4fe1\u606f\u3002\u5728\u7c92\u5b50\u7740\u8272\u4e2d\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u8be5\u503c\u518d\u6b21\u8bbe\u7f6e\u7f29\u653e\u3002 \u5728\u573a\u666f\u7684\u9876\u70b9\u7740\u8272\u5668\u4e2d\uff0c\u6211\u4eec\u4e3a\u6bcf\u4e2a\u90e8\u5206\u8ba1\u7b97\u6a21\u578b\u5149\u7167\u89c6\u56fe\u77e9\u9635\uff0c\u5e76\u5c06\u5176\u4f5c\u4e3a\u8f93\u51fa\u4f20\u9012\u7ed9\u7247\u5143\u7740\u8272\u5668\u3002 mvVertexPos = mvPos.xyz; for (int i = 0 ; i < NUM_CASCADES ; i++) { mlightviewVertexPos[i] = orthoProjectionMatrix[i] * lightViewMatrix[i] * modelMatrix * vec4(position, 1.0); } \u5728\u7247\u5143\u7740\u8272\u5668\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u8fd9\u4e9b\u503c\u6839\u636e\u7247\u5143\u6240\u5904\u7684\u90e8\u5206\u6765\u67e5\u8be2\u9002\u5f53\u7684\u6df1\u5ea6\u56fe\u3002\u8fd9\u9700\u8981\u5728\u7247\u5143\u7740\u8272\u5668\u4e2d\u5b8c\u6210\uff0c\u56e0\u4e3a\u5bf9\u4e8e\u7279\u5b9a\u9879\u76ee\uff0c\u5b83\u4eec\u7684\u7247\u5143\u53ef\u80fd\u4f4d\u4e8e\u4e0d\u540c\u7684\u90e8\u5206\u4e2d\u3002 \u6b64\u5916\uff0c\u5728\u7247\u5143\u7740\u8272\u5668\u4e2d\uff0c\u6211\u4eec\u5fc5\u987b\u51b3\u5b9a\u8981\u5206\u6210\u54ea\u4e2a\u90e8\u5206\u3002\u4e3a\u4e86\u5b9e\u73b0\u5b83\uff0c\u6211\u4eec\u4f7f\u7528\u7247\u5143\u7684Z\u503c\uff0c\u5e76\u5c06\u5176\u4e0e\u6bcf\u4e2a\u90e8\u5206\u7684\u6700\u5927Z\u503c\u8fdb\u884c\u6bd4\u8f83\uff0c\u4e5f\u5c31\u662f\u8fdcZ\u5e73\u9762\u503c\u3002\u8fd9\u4e9b\u6570\u636e\u4f5c\u4e3a\u4e00\u4e2a\u65b0\u7684Uniform\u4f20\u9012\uff1a uniform float cascadeFarPlanes[NUM_CASCADES]; \u5982\u4e0b\u6240\u793a\uff0c\u6211\u4eec\u8ba1\u7b97\u5206\u5272\u7684\u90e8\u5206\uff0c\u53d8\u91cf idx \u5c06\u50a8\u5b58\u8981\u4f7f\u7528\u7684\u90e8\u5206\uff1a int idx; for (int i=0; i<NUM_CASCADES; i++) { if ( abs(mvVertexPos.z) < cascadeFarPlanes[i] ) { idx = i; break; } } \u6b64\u5916\uff0c\u5728\u573a\u666f\u7740\u8272\u5668\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u4f20\u9012\u4e00\u4e2a\u7eb9\u7406\u6570\u7ec4\uff0c\u4e00\u4e2a sampler2D \u6570\u7ec4\uff0c\u7528\u4e8e\u6df1\u5ea6\u56fe\uff0c\u5373\u4e0e\u6211\u4eec\u5206\u5272\u90e8\u5206\u76f8\u5173\u8054\u7684\u7eb9\u7406\u3002\u6e90\u4ee3\u7801\u7528\u4e00\u4e2aUniform\u5217\u8868\uff08\u800c\u4e0d\u662f\u4f7f\u7528\u6570\u7ec4\uff09\u50a8\u5b58\u7528\u4e8e\u5f15\u7528\u4e0e\u6bcf\u4e2a\u90e8\u5206\u5173\u8054\u7684\u6df1\u5ea6\u56fe\u7684\u7eb9\u7406\u5355\u5143\u3002 uniform sampler2D normalMap; uniform sampler2D shadowMap_0; uniform sampler2D shadowMap_1; uniform sampler2D shadowMap_2; \u5c06\u5176\u66f4\u6539\u4e3a\u4e00\u7ec4Uniform\u4f1a\u5bfc\u81f4\u96be\u4ee5\u8ffd\u8e2a\u6b64\u793a\u4f8b\u7684\u5176\u4ed6\u7eb9\u7406\u51fa\u73b0\u7684\u95ee\u9898\u3002\u5728\u4efb\u4f55\u60c5\u51b5\u4e0b\uff0c\u4f60\u90fd\u53ef\u4ee5\u5c1d\u8bd5\u5728\u4ee3\u7801\u4e2d\u4fee\u6539\u5b83\u3002 \u6e90\u4ee3\u7801\u4e2d\u7684\u5176\u4f59\u4fee\u6539\u548c\u7740\u8272\u5668\u53ea\u662f\u57fa\u4e8e\u4e0a\u8ff0\u66f4\u6539\u6240\u9700\u7684\u8c03\u6574\uff0c\u4f60\u53ef\u4ee5\u76f4\u63a5\u5728\u6e90\u4ee3\u7801\u4e0a\u67e5\u770b\u5b83\u3002 \u6700\u540e\uff0c\u5f53\u5f15\u5165\u8fd9\u4e9b\u66f4\u6539\u65f6\uff0c\u4f60\u53ef\u80fd\u4f1a\u53d1\u73b0\u6027\u80fd\u4e0b\u964d\uff0c\u8fd9\u662f\u56e0\u4e3a\u6211\u4eec\u7ed8\u5236\u7684\u6df1\u5ea6\u56fe\u662f\u6b64\u524d\u7684\u4e09\u500d\u3002\u5982\u679c\u6444\u50cf\u673a\u672a\u88ab\u79fb\u52a8\u6216\u573a\u666f\u9879\u672a\u53d1\u751f\u66f4\u6539\uff0c\u5219\u4e0d\u9700\u8981\u53cd\u590d\u6e32\u67d3\u6df1\u5ea6\u56fe\u3002\u6df1\u5ea6\u56fe\u50a8\u5b58\u5728\u7eb9\u7406\u4e2d\uff0c\u56e0\u6b64\u4e0d\u9700\u8981\u6bcf\u6b21\u6e32\u67d3\u8c03\u7528\u6e05\u9664\u5b83\u4eec\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u5728 render \u65b9\u6cd5\u4e2d\u6dfb\u52a0\u4e86\u4e00\u4e2a\u65b0\u53d8\u91cf\uff0c\u7528\u4e8e\u6307\u793a\u662f\u5426\u66f4\u65b0\u6df1\u5ea6\u56fe\uff0c\u4ee5\u907f\u514d\u66f4\u65b0\u6df1\u5ea6\u56fe\uff0c\u4f7f\u5176\u4fdd\u6301\u4e0d\u53d8\uff0c\u8fd9\u4f1a\u663e\u8457\u63d0\u9ad8FPS\u3002\u6700\u7ec8\uff0c\u4f60\u4f1a\u5f97\u5230\u8fd9\u6837\u7684\u6548\u679c\uff1a","title":"\u7ea7\u8054\u9634\u5f71\u6620\u5c04\uff08Cascaded Shadow Maps\uff09"},{"location":"27-assimp/","text":"Assimp\u5e93\uff08Assimp\uff09 \u9759\u6001\u7f51\u683c \u52a0\u8f7d\u4e0d\u540c\u683c\u5f0f\u7684\u590d\u6742\u4e09\u7ef4\u6a21\u578b\u7684\u529f\u80fd\u5bf9\u4e8e\u7f16\u5199\u6e38\u620f\u81f3\u5173\u91cd\u8981\uff0c\u4e3a\u5176\u4e2d\u4e00\u4e9b\u7f16\u5199\u89e3\u6790\u5668\u9700\u8981\u5927\u91cf\u7684\u5de5\u4f5c\uff0c\u5373\u4fbf\u53ea\u652f\u6301\u4e00\u79cd\u683c\u5f0f\u4e5f\u53ef\u80fd\u5f88\u8017\u65f6\u3002\u4f8b\u5982\uff0c\u5728\u7b2c\u4e5d\u7ae0\u4e2d\u63cf\u8ff0\u7684wavefront\u52a0\u8f7d\u5668\u53ea\u89e3\u6790\u4e86\u89c4\u8303\u4e2d\u7684\u4e00\u5c0f\u90e8\u5206\uff08\u6839\u672c\u4e0d\u5904\u7406\u6750\u8d28\uff09\u3002 \u5e78\u8fd0\u7684\u662f\uff0c\u5df2\u7ecf\u53ef\u4ee5\u4f7f\u7528 Assimp \u5e93\u6765\u89e3\u6790\u8bb8\u591a\u5e38\u89c1\u76843D\u683c\u5f0f\u3002\u5b83\u662f\u4e00\u4e2aC++\u5e93\uff0c\u53ef\u4ee5\u4ee5\u5404\u79cd\u683c\u5f0f\u52a0\u8f7d\u9759\u6001\u548c\u52a8\u753b\u6a21\u578b\u3002LWJGL\u63d0\u4f9b\u4e86\u7ed1\u5b9a\u4ee5\u4fbf\u4eceJava\u4ee3\u7801\u4e2d\u4f7f\u7528\u5b83\u4eec\u3002\u5728\u672c\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u5b66\u4e60\u5982\u4f55\u4f7f\u7528\u5b83\u3002 \u9996\u5148\u662f\u5c06Assimp\u7684Maven\u4f9d\u8d56\u9879\u6dfb\u52a0\u5230 pom.xml \u6587\u4ef6\u4e2d\u3002\u6211\u4eec\u9700\u8981\u6dfb\u52a0\u7f16\u8bd1\u65f6\u548c\u8fd0\u884c\u65f6\u4f9d\u8d56\u9879\u3002 <dependency> <groupId>org.lwjgl</groupId> <artifactId>lwjgl-assimp</artifactId> <version>${lwjgl.version}</version> </dependency> <dependency> <groupId>org.lwjgl</groupId> <artifactId>lwjgl-assimp</artifactId> <version>${lwjgl.version}</version> <classifier>${native.target}</classifier> <scope>runtime</scope> </dependency> \u4e00\u65e6\u8bbe\u7f6e\u4e86\u4f9d\u8d56\u9879\uff0c\u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a StaticMeshesLoader \u7684\u65b0\u7c7b\uff0c\u8be5\u7c7b\u5c06\u7528\u4e8e\u52a0\u8f7d\u4e0d\u5e26\u52a8\u753b\u7684\u7f51\u683c\uff0c\u8be5\u7c7b\u5b9a\u4e49\u4e86\u4e24\u4e2a\u9759\u6001\u516c\u5171\u65b9\u6cd5\uff1a public static Mesh[] load(String resourcePath, String texturesDir) throws Exception { return load(resourcePath, texturesDir, aiProcess_JoinIdenticalVertices | aiProcess_Triangulate | aiProcess_FixInfacingNormals); } public static Mesh[] load(String resourcePath, String texturesDir, int flags) throws Exception { // .... \u4e24\u79cd\u65b9\u6cd5\u90fd\u6709\u4ee5\u4e0b\u53c2\u6570\uff1a * resourcePath \uff1a\u6a21\u578b\u6587\u4ef6\u6240\u5728\u7684\u6587\u4ef6\u8def\u5f84\u3002\u8fd9\u662f\u4e00\u4e2a\u7edd\u5bf9\u8def\u5f84\uff0c\u56e0\u4e3aAssimp\u53ef\u80fd\u9700\u8981\u52a0\u8f7d\u5176\u4ed6\u6587\u4ef6\uff08\u4f8b\u5982wavefront\u3001OBJ\u7b49\u6587\u4ef6\u7684\u6750\u8d28\u6587\u4ef6\uff09\uff0c\u5e76\u4e14\u53ef\u80fd\u4f7f\u7528\u4e0e\u8d44\u6e90\u8def\u5f84\u76f8\u540c\u7684\u57fa\u8def\u5f84\u3002\u5982\u679c\u5c06\u8d44\u6e90\u5d4c\u5165JAR\u6587\u4ef6\u4e2d\uff0c\u90a3\u4e48assimp\u5c06\u65e0\u6cd5\u5bfc\u5165\u5b83\uff0c\u56e0\u6b64\u5b83\u5fc5\u987b\u662f\u6587\u4ef6\u7cfb\u7edf\u8def\u5f84\u3002 * texturesDir \uff1a\u4fdd\u5b58\u6b64\u6a21\u578b\u7684\u6587\u4ef6\u5939\u8def\u5f84\u3002\u8fd9\u662fCLASSPATH\u7684\u76f8\u5bf9\u8def\u5f84\u3002\u4f8b\u5982\uff0cwavefront\u6750\u8d28\u6587\u4ef6\u53ef\u4ee5\u5b9a\u4e49\u591a\u4e2a\u7eb9\u7406\u6587\u4ef6\u3002\u4ee3\u7801\u5e0c\u671b\u6b64\u6587\u4ef6\u4f4d\u4e8e texturesDir \u76ee\u5f55\u4e0b\u3002\u5982\u679c\u53d1\u73b0\u7eb9\u7406\u52a0\u8f7d\u9519\u8bef\uff0c\u53ef\u80fd\u9700\u8981\u5728\u6a21\u578b\u6587\u4ef6\u4e2d\u624b\u52a8\u8c03\u6574\u8fd9\u4e9b\u8def\u5f84\u3002 \u7b2c\u4e8c\u4e2a\u65b9\u6cd5\u6709\u4e00\u4e2a\u540d\u4e3a flags \u7684\u989d\u5916\u53c2\u6570\u3002\u6b64\u53c2\u6570\u5141\u8bb8\u8c03\u6574\u52a0\u8f7d\u8fc7\u7a0b\u3002\u7b2c\u4e00\u4e2a\u65b9\u6cd5\u8c03\u7528\u7b2c\u4e8c\u4e2a\u65b9\u6cd5\uff0c\u5e76\u4f20\u9012\u4e00\u4e9b\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u90fd\u6709\u7528\u7684\u503c\uff1a * aiProcess_JoinIdenticalVertices \uff1a\u6b64\u6807\u8bb0\u5c06\u51cf\u5c11\u4f7f\u7528\u7684\u9876\u70b9\u6570\uff0c\u8bc6\u522b\u53ef\u5728\u9762\u4e4b\u95f4\u91cd\u7528\u7684\u9876\u70b9\u3002 * aiProcess_Triangulate \uff1a\u6a21\u578b\u53ef\u4ee5\u4f7f\u7528\u56db\u8fb9\u5f62\u6216\u5176\u4ed6\u51e0\u4f55\u56fe\u5f62\u6765\u5b9a\u4e49\u5b83\u4eec\u7684\u5143\u7d20\u3002\u7531\u4e8e\u6211\u4eec\u53ea\u5904\u7406\u4e09\u89d2\u5f62\uff0c\u56e0\u6b64\u5fc5\u987b\u4f7f\u7528\u6b64\u6807\u8bb0\u5c06\u6240\u6709\u7684\u9762\u62c6\u5206\u4e3a\u4e09\u89d2\u5f62\uff08\u5982\u679c\u6709\u5fc5\u8981\u7684\u8bdd\uff09\u3002 * aiProcess_FixInfacingNormals \uff1a\u6b64\u6807\u8bb0\u5c06\u5c1d\u8bd5\u53cd\u8f6c\u53ef\u80fd\u6307\u5411\u5185\u90e8\u7684\u6cd5\u7ebf\u3002 \u8fd8\u6709\u8bb8\u591a\u5176\u4ed6\u6807\u8bb0\u53ef\u4ee5\u4f7f\u7528\uff0c\u4f60\u53ef\u4ee5\u5728LWJGL\u7684Javadoc\u6587\u6863\u4e2d\u67e5\u9605\u5b83\u4eec\u3002 \u56de\u770b\u5230\u7b2c\u4e8c\u4e2a\u8f7d\u5165\u65b9\u6cd5\uff0c\u6211\u4eec\u8981\u505a\u7684\u7b2c\u4e00\u4ef6\u4e8b\u662f\u8c03\u7528 aiImportFile \u65b9\u6cd5\u6765\u52a0\u8f7d\u5e26\u6709\u6240\u9009\u6807\u8bb0\u7684\u6a21\u578b\u3002 AIScene aiScene = aiImportFile(resourcePath, flags); if (aiScene == null) { throw new Exception(\"Error loading model\"); } \u8f7d\u5165\u65b9\u6cd5\u7684\u5176\u4f59\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a int numMaterials = aiScene.mNumMaterials(); PointerBuffer aiMaterials = aiScene.mMaterials(); List<Material> materials = new ArrayList<>(); for (int i = 0; i < numMaterials; i++) { AIMaterial aiMaterial = AIMaterial.create(aiMaterials.get(i)); processMaterial(aiMaterial, materials, texturesDir); } int numMeshes = aiScene.mNumMeshes(); PointerBuffer aiMeshes = aiScene.mMeshes(); Mesh[] meshes = new Mesh[numMeshes]; for (int i = 0; i < numMeshes; i++) { AIMesh aiMesh = AIMesh.create(aiMeshes.get(i)); Mesh mesh = processMesh(aiMesh, materials); meshes[i] = mesh; } return meshes; \u6211\u4eec\u5904\u7406\u6a21\u578b\u4e2d\u5305\u542b\u7684\u6750\u8d28\uff0c\u6750\u8d28\u5b9a\u4e49\u7ec4\u6210\u6a21\u578b\u7684\u7f51\u683c\u4f7f\u7528\u7684\u989c\u8272\u548c\u7eb9\u7406\u3002\u7136\u540e\u6211\u4eec\u5904\u7406\u4e0d\u540c\u7684\u7f51\u683c\uff0c\u6a21\u578b\u53ef\u4ee5\u5b9a\u4e49\u591a\u4e2a\u7f51\u683c\uff0c\u6bcf\u4e2a\u7f51\u683c\u90fd\u53ef\u4ee5\u4f7f\u7528\u4e3a\u6a21\u578b\u5b9a\u4e49\u7684\u4e00\u79cd\u6750\u8d28\u3002 \u5982\u679c\u4f60\u770b\u5230\u4e0a\u9762\u7684\u4ee3\u7801\uff0c\u4f60\u53ef\u80fd\u4f1a\u770b\u5230\u5f88\u591a\u5bf9Assimp\u5e93\u7684\u8c03\u7528\u8fd4\u56de\u7684 PointerBuffer \u5b9e\u4f8b\u3002\u4f60\u53ef\u4ee5\u7528C\u6307\u9488\u90a3\u6837\u7684\u65b9\u5f0f\u770b\u5f85\u5b83\u4eec\uff0c\u5b83\u4eec\u53ea\u662f\u6307\u5411\u50a8\u5b58\u6570\u636e\u7684\u5185\u5b58\u533a\u57df\u3002\u4f60\u9700\u8981\u63d0\u524d\u77e5\u9053\u5b83\u4eec\u50a8\u5b58\u7684\u6570\u636e\u7c7b\u578b\uff0c\u4ee5\u4fbf\u5904\u7406\u5b83\u4eec\u3002\u5bf9\u4e8e\u6750\u8d28\uff0c\u6211\u4eec\u8fed\u4ee3\u8be5\u7f13\u51b2\u533a\uff0c\u521b\u5efa AIMaterial \u7c7b\u7684\u5b9e\u4f8b\u3002\u5728\u7b2c\u4e8c\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u8fed\u4ee3\u50a8\u5b58\u7f51\u683c\u6570\u636e\u7684\u7f13\u51b2\u533a\uff0c\u521b\u5efa AIMesh \u7c7b\u7684\u5b9e\u4f8b\u3002 \u8ba9\u6211\u4eec\u770b\u770b processMaterial \u65b9\u6cd5\uff1a private static void processMaterial(AIMaterial aiMaterial, List<Material> materials, String texturesDir) throws Exception { AIColor4D colour = AIColor4D.create(); AIString path = AIString.calloc(); Assimp.aiGetMaterialTexture(aiMaterial, aiTextureType_DIFFUSE, 0, path, (IntBuffer) null, null, null, null, null, null); String textPath = path.dataString(); Texture texture = null; if (textPath != null && textPath.length() > 0) { TextureCache textCache = TextureCache.getInstance(); texture = textCache.getTexture(texturesDir + \"/\" + textPath); } Vector4f ambient = Material.DEFAULT_COLOUR; int result = aiGetMaterialColor(aiMaterial, AI_MATKEY_COLOR_AMBIENT, aiTextureType_NONE, 0, colour); if (result == 0) { ambient = new Vector4f(colour.r(), colour.g(), colour.b(), colour.a()); } Vector4f diffuse = Material.DEFAULT_COLOUR; result = aiGetMaterialColor(aiMaterial, AI_MATKEY_COLOR_DIFFUSE, aiTextureType_NONE, 0, colour); if (result == 0) { diffuse = new Vector4f(colour.r(), colour.g(), colour.b(), colour.a()); } Vector4f specular = Material.DEFAULT_COLOUR; result = aiGetMaterialColor(aiMaterial, AI_MATKEY_COLOR_SPECULAR, aiTextureType_NONE, 0, colour); if (result == 0) { specular = new Vector4f(colour.r(), colour.g(), colour.b(), colour.a()); } Material material = new Material(ambient, diffuse, specular, 1.0f); material.setTexture(texture); materials.add(material); } \u6211\u4eec\u68c0\u67e5\u6750\u8d28\u662f\u5426\u5b9a\u4e49\u4e86\u7eb9\u7406\u3002\u5982\u679c\u6709\uff0c\u6211\u4eec\u52a0\u8f7d\u7eb9\u7406\u3002\u6211\u4eec\u521b\u5efa\u4e86\u4e00\u4e2a\u540d\u4e3a TextureCache \u7684\u65b0\u7c7b\uff0c\u7528\u4e8e\u7f13\u5b58\u7eb9\u7406\u3002\u8fd9\u662f\u56e0\u4e3a\u51e0\u4e2a\u7f51\u683c\u53ef\u80fd\u5171\u4eab\u76f8\u540c\u7684\u7eb9\u7406\uff0c\u6211\u4eec\u4e0d\u60f3\u6d6a\u8d39\u7a7a\u95f4\u4e00\u6b21\u53c8\u4e00\u6b21\u52a0\u8f7d\u76f8\u540c\u7684\u6570\u636e\u3002\u7136\u540e\u6211\u4eec\u5c1d\u8bd5\u83b7\u5f97\u73af\u5883\u3001\u6f2b\u53cd\u5c04\u548c\u955c\u9762\u53cd\u5c04\u7684\u6750\u8d28\u989c\u8272\u5206\u91cf\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u6211\u4eec\u5bf9\u6750\u8d28\u7684\u5b9a\u4e49\u5df2\u7ecf\u5305\u542b\u4e86\u8fd9\u4e9b\u4fe1\u606f\u3002 TextureCache \u7684\u5b9a\u4e49\u975e\u5e38\u7b80\u5355\uff0c\u5b83\u53ea\u662f\u4e00\u4e2a\u6620\u5c04\uff0c\u901a\u8fc7\u7eb9\u7406\u6587\u4ef6\u7684\u8def\u5f84\u5bf9\u4e0d\u540c\u7684\u7eb9\u7406\u8fdb\u884c\u7d22\u5f15\uff08\u4f60\u53ef\u4ee5\u76f4\u63a5\u67e5\u770b\u6e90\u4ee3\u7801\uff09\u3002\u7531\u4e8e\u73b0\u5728\u7eb9\u7406\u53ef\u80fd\u4f7f\u7528\u4e0d\u540c\u7684\u56fe\u50cf\u683c\u5f0f\uff08PNG\u3001JPEG\u7b49\uff09\uff0c\u6211\u4eec\u5df2\u7ecf\u4fee\u6539\u4e86\u7eb9\u7406\u7684\u52a0\u8f7d\u65b9\u5f0f\uff0c\u73b0\u5728\u4f7f\u7528STB\u5e93\u6765\u52a0\u8f7d\u66f4\u591a\u7684\u683c\u5f0f\uff0c\u800c\u4e0d\u662f\u4f7f\u7528PNG\u5e93\u3002 \u8ba9\u6211\u4eec\u770b\u5230 StaticMeshesLoader \u7c7b\u3002 processMesh \u7684\u5b9a\u4e49\u5982\u4e0b\uff1a private static Mesh processMesh(AIMesh aiMesh, List<Material> materials) { List<Float> vertices = new ArrayList<>(); List<Float> textures = new ArrayList<>(); List<Float> normals = new ArrayList<>(); List<Integer> indices = new ArrayList(); processVertices(aiMesh, vertices); processNormals(aiMesh, normals); processTextCoords(aiMesh, textures); processIndices(aiMesh, indices); Mesh mesh = new Mesh(Utils.listToArray(vertices), Utils.listToArray(textures), Utils.listToArray(normals), Utils.listIntToArray(indices) ); Material material; int materialIdx = aiMesh.mMaterialIndex(); if (materialIdx >= 0 && materialIdx < materials.size()) { material = materials.get(materialIdx); } else { material = new Material(); } mesh.setMaterial(material); return mesh; } Mesh \u7531\u4e00\u7ec4\u9876\u70b9\u4f4d\u7f6e\u3001\u6cd5\u7ebf\u65b9\u5411\u3001\u7eb9\u7406\u5750\u6807\u548c\u7d22\u5f15\u5b9a\u4e49\u3002\u6bcf\u4e2a\u5143\u7d20\u90fd\u5728 processVertices \u3001 processNormals \u3001 processTextCoords \u548c processIndices \u65b9\u6cd5\u4e2d\u5904\u7406\uff0c\u7f51\u683c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u5176\u7d22\u5f15\u6307\u5411\u6750\u8d28\u3002\u5982\u679c\u7d22\u5f15\u4e0e\u4e4b\u524d\u5904\u7406\u7684\u6750\u8d28\u76f8\u5bf9\u5e94\uff0c\u6211\u4eec\u53ea\u9700\u5c06\u5b83\u4eec\u4e0e Mesh \u76f8\u5173\u8054\u3002 processXXX \u65b9\u6cd5\u975e\u5e38\u7b80\u5355\uff0c\u5b83\u4eec\u53ea\u662f\u5728\u8fd4\u56de\u6240\u9700\u6570\u636e\u7684 AIMesh \u5b9e\u4f8b\u4e0a\u8c03\u7528\u76f8\u5e94\u7684\u65b9\u6cd5\u3002\u4f8b\u5982\uff0c processVertices \u7684\u5b9a\u4e49\u5982\u4e0b\uff1a private static void processVertices(AIMesh aiMesh, List<Float> vertices) { AIVector3D.Buffer aiVertices = aiMesh.mVertices(); while (aiVertices.remaining() > 0) { AIVector3D aiVertex = aiVertices.get(); vertices.add(aiVertex.x()); vertices.add(aiVertex.y()); vertices.add(aiVertex.z()); } } \u4f60\u53ef\u4ee5\u770b\u5230\uff0c\u6211\u4eec\u53ea\u662f\u901a\u8fc7\u8c03\u7528 mVertices \u65b9\u6cd5\u6765\u83b7\u53d6\u9876\u70b9\u7684\u7f13\u51b2\u533a\uff0c\u7b80\u5355\u5730\u5904\u7406\u5b83\u4eec\u6765\u521b\u5efa\u4e00\u4e2a\u50a8\u5b58\u9876\u70b9\u4f4d\u7f6e\u7684\u6d6e\u70b9\u6570\u5217\u8868\u3002\u56e0\u4e3a\uff0c\u8be5\u65b9\u6cd5\u53ea\u8fd4\u56de\u4e00\u4e2a\u7f13\u51b2\u533a\uff0c\u4f60\u53ef\u4ee5\u5c06\u8be5\u6570\u636e\u76f4\u63a5\u4f20\u7ed9\u521b\u5efa\u9876\u70b9\u7684OpenGL\u65b9\u6cd5\u3002\u4f46\u6211\u4eec\u4e0d\u8fd9\u6837\u505a\uff0c\u539f\u56e0\u6709\u4e24\u4e2a\u3002\u7b2c\u4e00\u4e2a\u539f\u56e0\u662f\u5c3d\u91cf\u51cf\u5c11\u5bf9\u4ee3\u7801\u5e93\u7684\u4fee\u6539\uff0c\u7b2c\u4e8c\u4e2a\u539f\u56e0\u662f\uff0c\u901a\u8fc7\u52a0\u8f7d\u6570\u636e\u5230\u4e2d\u95f4\u5c42\u4e2d\uff0c\u4f60\u53ef\u4ee5\u6267\u884c\u4e00\u4e9b\u4e13\u95e8\u7684\u5904\u7406\u4efb\u52a1\uff0c\u751a\u81f3\u8c03\u8bd5\u52a0\u8f7d\u8fc7\u7a0b\u3002 \u5982\u679c\u4f60\u60f3\u8981\u4e00\u4e2a\u66f4\u6709\u6548\u7684\u793a\u4f8b\uff0c\u5373\u76f4\u63a5\u5c06\u7f13\u51b2\u533a\u4f20\u7ed9OpenGL\uff0c\u53ef\u4ee5\u67e5\u770b\u8fd9\u4e2a \u4f8b\u5b50 \u3002 StaticMeshesLoader \u7c7b\u8ba9 OBJLoader \u7c7b\u8fc7\u65f6\u4e86\uff0c\u56e0\u6b64\u5b83\u5df2\u7ecf\u4ece\u6e90\u4ee3\u7801\u4e2d\u5220\u9664\u3002\u4e00\u4e2a\u66f4\u590d\u6742\u7684OBJ\u6587\u4ef6\u5df2\u7ecf\u4f5c\u4e3a\u793a\u4f8b\u63d0\u4f9b\uff0c\u5982\u679c\u8fd0\u884c\u5b83\uff0c\u4f60\u5c06\u770b\u5230\u5982\u4e0b\u5185\u5bb9\uff1a \u52a8\u753b \u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u4f7f\u7528Assimp\u52a0\u8f7d\u4e86\u9759\u6001\u7f51\u683c\uff0c\u53ef\u4ee5\u7ee7\u7eed\u8bb2\u89e3\u52a8\u753b\u3002\u5982\u679c\u4f60\u56de\u60f3\u52a8\u753b\u4e00\u7ae0\uff0c\u4e0e\u7f51\u683c\u5173\u8054\u7684VAO\u5305\u542b\u9876\u70b9\u4f4d\u7f6e\u3001\u7eb9\u7406\u5750\u6807\u3001\u7d22\u5f15\u548c\u5e94\u5e94\u7528\u4e8e\u5173\u8282\u4f4d\u7f6e\u4ee5\u8c03\u6574\u6700\u7ec8\u9876\u70b9\u4f4d\u7f6e\u7684\u6743\u91cd\u5217\u8868\u3002 \u6bcf\u4e2a\u9876\u70b9\u4f4d\u7f6e\u90fd\u5173\u8054\u4e86\u4e00\u4e2a\u6539\u53d8\u6700\u7ec8\u4f4d\u7f6e\u7684\u56db\u4e2a\u6743\u91cd\u7684\u5217\u8868\uff0c\u5f15\u7528\u4e86\u5c06\u7ec4\u5408\u4ee5\u786e\u5b9a\u9876\u70b9\u6700\u7ec8\u4f4d\u7f6e\u7684\u9aa8\u9abc\u7d22\u5f15\u3002\u5728\u6bcf\u4e00\u5e27\uff0c\u4e00\u4e2a\u53d8\u6362\u77e9\u9635\u5217\u8868\u5c06\u88ab\u4f5c\u4e3aUniform\u52a0\u8f7d\u5230\u6bcf\u4e2a\u5173\u8282\u3002\u6839\u636e\u8fd9\u4e9b\u6570\u636e\uff0c\u7b97\u51fa\u6700\u7ec8\u4f4d\u7f6e\u3002 \u5728\u52a8\u753b\u4e00\u7ae0\u4e2d\uff0c\u6211\u4eec\u5f00\u53d1\u4e86\u4e00\u4e2aMD5\u89e3\u6790\u5668\u6765\u52a0\u8f7d\u52a8\u753b\u7f51\u683c\u3002\u5728\u672c\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u4f7f\u7528Assimp\u5e93\u3002\u8fd9\u5c06\u5141\u8bb8\u6211\u4eec\u52a0\u8f7dMD5\u4e4b\u5916\u7684\u66f4\u591a\u683c\u5f0f\uff0c\u4f8b\u5982 COLLADA \uff0c FBX \u7b49\u3002 \u5728\u5f00\u59cb\u7f16\u7801\u4e4b\u524d\uff0c\u8ba9\u6211\u4eec\u7406\u6e05\u4e00\u4e9b\u672f\u8bed\u3002\u5728\u672c\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u4e0d\u52a0\u533a\u5206\u5730\u63d0\u5230\u9aa8\u9abc\u548c\u5173\u8282\u3002\u9aa8\u9abc\u6216\u8005\u5173\u8282\u90fd\u53ea\u662f\u5f71\u54cd\u9876\u70b9\u7684\u5143\u7d20\uff0c\u5e76\u4e14\u5177\u6709\u5f62\u6210\u5c42\u6b21\u7684\u7236\u7ea7\u3002MD5\u683c\u5f0f\u4f7f\u7528\u672f\u8bed\u5173\u8282\uff0c\u800cAssimp\u4f7f\u7528\u672f\u8bed\u9aa8\u9abc\u3002 \u8ba9\u6211\u4eec\u5148\u770b\u4e00\u4e0b\u7531Assimp\u5904\u7406\u7684\u50a8\u5b58\u7740\u52a8\u753b\u4fe1\u606f\u7684\u7ed3\u6784\u3002\u6211\u4eec\u5c06\u9996\u5148\u4ece\u9aa8\u9abc\u548c\u6743\u91cd\u6570\u636e\u5f00\u59cb\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u7f51\u683c\uff0c\u6211\u4eec\u53ef\u4ee5\u8bbf\u95ee\u9876\u70b9\u4f4d\u7f6e\u3001\u7eb9\u7406\u5750\u6807\u548c\u7d22\u5f15\u3002\u7f51\u683c\u8fd8\u50a8\u5b58\u7740\u9aa8\u9abc\u5217\u8868\uff0c\u6bcf\u4e2a\u9aa8\u9abc\u7531\u4ee5\u4e0b\u5c5e\u6027\u5b9a\u4e49\uff1a \u4e00\u4e2a\u540d\u5b57\u3002 \u4e00\u4e2a\u504f\u79fb\u77e9\u9635\uff1a\u7a0d\u540e\u5c06\u7528\u5b83\u6765\u8ba1\u7b97\u6bcf\u4e2a\u9aa8\u9abc\u5e94\u8be5\u4f7f\u7528\u7684\u6700\u7ec8\u53d8\u6362\u3002 \u9aa8\u9abc\u8fd8\u6307\u5411\u4e00\u4e2a\u6743\u91cd\u5217\u8868\uff0c\u6bcf\u4e2a\u6743\u91cd\u7531\u4ee5\u4e0b\u5c5e\u6027\u5b9a\u4e49\uff1a \u4e00\u4e2a\u6743\u91cd\u56e0\u5b50\uff0c\u5373\u7528\u4e8e\u8c03\u8282\u4e0e\u6bcf\u4e2a\u9876\u70b9\u76f8\u5173\u7684\u9aa8\u9abc\u53d8\u6362\u5f71\u54cd\u7684\u6570\u5b57\u3002 \u4e00\u4e2a\u9876\u70b9\u6807\u8bc6\u7b26\uff0c\u5373\u4e0e\u5f53\u524d\u9aa8\u9abc\u76f8\u5173\u8054\u7684\u9876\u70b9\u3002 \u4e0b\u56fe\u5c55\u73b0\u4e86\u6240\u6709\u8fd9\u4e9b\u5143\u7d20\u4e4b\u95f4\u7684\u5173\u7cfb\u3002 \u56e0\u6b64\uff0c\u6211\u4eec\u9996\u5148\u8981\u505a\u7684\u4e8b\u662f\u4ece\u4e0a\u8ff0\u7684\u7ed3\u6784\u6784\u9020\u9876\u70b9\u4f4d\u7f6e\u3001\u9aa8\u9abc/\u5173\u8282/\u7d22\u5f15\u548c\u76f8\u5173\u6743\u91cd\u7684\u5217\u8868\u3002\u5b8c\u6210\u540e\uff0c\u6211\u4eec\u9700\u8981\u4e3a\u6a21\u578b\u4e2d\u5b9a\u4e00\u4e2a\u6240\u6709\u52a8\u753b\u5e27\u9884\u5148\u8ba1\u7b97\u6bcf\u4e2a\u9aa8\u9abc/\u5173\u8282\u7684\u53d8\u6362\u77e9\u9635\u3002 Assimp\u573a\u666f\u5bf9\u8c61\u662f\u5b9a\u4e49\u8282\u70b9\u7684\u5c42\u6b21\u7ed3\u6784\uff0c\u6bcf\u4e2a\u8282\u70b9\u90fd\u7531\u4e00\u4e2a\u540d\u8bcd\u548c\u4e00\u4e2a\u5b50\u8282\u70b9\u5217\u8868\u5b9a\u4e49\u3002\u52a8\u753b\u4f7f\u7528\u8fd9\u4e9b\u8282\u70b9\u6765\u5b9a\u4e49\u5e94\u8be5\u5e94\u7528\u7684\u53d8\u6362\uff0c\u8fd9\u4e2a\u5c42\u6b21\u7ed3\u6784\u5b9e\u9645\u4e0a\u5b9a\u4e49\u4e86\u9aa8\u9abc\u7684\u5c42\u6b21\u7ed3\u6784\u3002\u6bcf\u4e2a\u9aa8\u9abc\u90fd\u662f\u4e00\u4e2a\u8282\u70b9\uff0c\u5e76\u4e14\u6709\u4e00\u4e2a\u7236\u8282\u70b9\uff08\u6839\u8282\u70b9\u9664\u5916\uff09\uff0c\u53ef\u80fd\u8fd8\u6709\u4e00\u7ec4\u5b50\u8282\u70b9\u3002\u6709\u4e00\u4e9b\u7279\u6b8a\u7684\u8282\u70b9\u4e0d\u662f\u9aa8\u9abc\uff0c\u5b83\u4eec\u7528\u4e8e\u5bf9\u53d8\u6362\u8fdb\u884c\u5206\u7ec4\uff0c\u5728\u8ba1\u7b97\u53d8\u6362\u65f6\u8fdb\u884c\u5904\u7406\u3002\u53e6\u4e00\u4e2a\u95ee\u9898\u662f\uff0c\u8fd9\u4e9b\u8282\u70b9\u7684\u5c42\u6b21\u7ed3\u6784\u662f\u57fa\u4e8e\u6574\u4e2a\u6a21\u578b\u5b9a\u4e49\u7684\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u7f51\u683c\uff0c\u6211\u4eec\u6ca1\u6709\u5355\u72ec\u7684\u5c42\u6b21\u7ed3\u6784\u3002 \u573a\u666f\u8fd8\u5b9a\u4e49\u4e86\u4e00\u7ec4\u52a8\u753b\u3002\u4e00\u4e2a\u6a21\u578b\u53ef\u4ee5\u6709\u591a\u4e2a\u52a8\u753b\uff0c\u53ef\u4ee5\u5bf9\u6a21\u578b\u505a\u884c\u8d70\u3001\u8dd1\u52a8\u7b49\u52a8\u753b\u3002\u6bcf\u4e2a\u52a8\u753b\u5b9a\u4e49\u4e86\u4e0d\u540c\u7684\u53d8\u6362\u3002\u52a8\u753b\u5177\u6709\u4ee5\u4e0b\u5c5e\u6027\uff1a \u4e00\u4e2a\u540d\u5b57\u3002 \u6301\u7eed\u65f6\u95f4\u3002\u5373\u52a8\u753b\u7684\u6301\u7eed\u65f6\u95f4\uff0c\u7531\u4e8e\u52a8\u753b\u662f\u5e94\u7528\u4e8e\u6bcf\u4e2a\u4e0d\u540c\u5e27\u7684\u6bcf\u4e2a\u8282\u70b9\u7684\u53d8\u6362\u5217\u8868\uff0c\u56e0\u6b64\u540d\u79f0\u53ef\u80fd\u770b\u8d77\u6765\u5f88\u6df7\u4e71\u3002 \u4e00\u4e2a\u52a8\u753b\u901a\u9053\uff08Animation Channel\uff09\u7684\u5217\u8868\u3002\u52a8\u753b\u901a\u9053\u50a8\u5b58\u5e94\u5e94\u7528\u4e8e\u6bcf\u4e2a\u8282\u70b9\u7684\u7279\u5b9a\u65f6\u95f4\u70b9\u7684\u4f4d\u79fb\u3001\u65cb\u8f6c\u548c\u7f29\u653e\u6570\u636e\uff0c\u6a21\u578b\u4e2d\u50a8\u5b58\u52a8\u753b\u901a\u9053\u6570\u636e\u7684\u7c7b\u662f AINodeAnim \u3002 \u4e0b\u56fe\u5c55\u793a\u4e86\u4e0a\u8ff0\u6240\u6709\u5143\u7d20\u4e4b\u95f4\u7684\u5173\u7cfb\uff1a \u5bf9\u4e8e\u7279\u5b9a\u7684\u65f6\u523b\uff0c\u6216\u8005\u8bf4\u5bf9\u4e8e\u5e27\uff0c\u8981\u5e94\u7528\u5230\u9aa8\u9abc\u7684\u53d8\u6362\u662f\u5728\u52a8\u753b\u901a\u9053\u4e2d\u4e3a\u8be5\u65f6\u523b\u5b9a\u4e49\u7684\u53d8\u6362\uff0c\u4e58\u4ee5\u6240\u6709\u7236\u8282\u70b9\u5230\u6839\u8282\u70b9\u7684\u53d8\u6362\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u5bf9\u573a\u666f\u4e2d\u5b58\u50a8\u7684\u4fe1\u606f\u8fdb\u884c\u91cd\u65b0\u6392\u5e8f\uff0c\u6d41\u7a0b\u5982\u4e0b\uff1a \u6784\u9020\u8282\u70b9\u5c42\u6b21\u7ed3\u6784\u3002 \u5bf9\u6bcf\u4e2a\u52a8\u753b\uff0c\u8fed\u4ee3\u6bcf\u4e2a\u52a8\u753b\u901a\u9053\uff08\u5bf9\u6bcf\u4e2a\u52a8\u753b\u8282\u70b9\uff09\uff1a\u4e3a\u6240\u6709\u5e27\u6784\u9020\u53d8\u6362\u77e9\u9635\u3002\u53d8\u6362\u77e9\u9635\u662f\u4f4d\u79fb\u3001\u65cb\u8f6c\u548c\u7f29\u653e\u77e9\u9635\u7684\u7ec4\u5408\u3002 \u91cd\u65b0\u6392\u5217\u6bcf\u4e00\u5e27\u7684\u4fe1\u606f\uff1a\u6784\u9020\u8981\u5e94\u7528\u4e8e\u7f51\u683c\u4e2d\u6bcf\u4e2a\u9aa8\u9abc\u7684\u6700\u7ec8\u53d8\u6362\u3002\u8fd9\u662f\u901a\u8fc7\u5c06\u9aa8\u9abc\u7684\u53d8\u6362\u77e9\u9635\uff08\u76f8\u5173\u8282\u70b9\u7684\u53d8\u6362\u77e9\u9635\uff09\u4e58\u4ee5\u6240\u6709\u7236\u8282\u70b9\u7684\u53d8\u6362\u77e9\u9635\u76f4\u5230\u6839\u8282\u70b9\u6765\u5b9e\u73b0\u7684\u3002 \u8ba9\u6211\u4eec\u5f00\u59cb\u7f16\u7801\u5427\u3002\u9996\u5148\u5c06\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a AnimMeshesLoader \u7684\u7c7b\uff0c\u5b83\u7531 StaticMeshesLoader \u6269\u5c55\uff0c\u4f46\u5b83\u4e0d\u8fd4\u56de\u7f51\u683c\u6570\u7ec4\uff0c\u800c\u662f\u8fd4\u56de\u4e00\u4e2a AnimGameItem \u5b9e\u4f8b\u3002\u5b83\u5b9a\u4e49\u4e86\u4e24\u4e2a\u516c\u5171\u65b9\u6cd5\uff1a public static AnimGameItem loadAnimGameItem(String resourcePath, String texturesDir) throws Exception { return loadAnimGameItem(resourcePath, texturesDir, aiProcess_GenSmoothNormals | aiProcess_JoinIdenticalVertices | aiProcess_Triangulate | aiProcess_FixInfacingNormals | aiProcess_LimitBoneWeights); } public static AnimGameItem loadAnimGameItem(String resourcePath, String texturesDir, int flags) throws Exception { AIScene aiScene = aiImportFile(resourcePath, flags); if (aiScene == null) { throw new Exception(\"Error loading model\"); } int numMaterials = aiScene.mNumMaterials(); PointerBuffer aiMaterials = aiScene.mMaterials(); List<Material> materials = new ArrayList<>(); for (int i = 0; i < numMaterials; i++) { AIMaterial aiMaterial = AIMaterial.create(aiMaterials.get(i)); processMaterial(aiMaterial, materials, texturesDir); } List<Bone> boneList = new ArrayList<>(); int numMeshes = aiScene.mNumMeshes(); PointerBuffer aiMeshes = aiScene.mMeshes(); Mesh[] meshes = new Mesh[numMeshes]; for (int i = 0; i < numMeshes; i++) { AIMesh aiMesh = AIMesh.create(aiMeshes.get(i)); Mesh mesh = processMesh(aiMesh, materials, boneList); meshes[i] = mesh; } AINode aiRootNode = aiScene.mRootNode(); Matrix4f rootTransfromation = AnimMeshesLoader.toMatrix(aiRootNode.mTransformation()); Node rootNode = processNodesHierarchy(aiRootNode, null); Map<String, Animation> animations = processAnimations(aiScene, boneList, rootNode, rootTransfromation); AnimGameItem item = new AnimGameItem(meshes, animations); return item; } \u8fd9\u4e9b\u65b9\u6cd5\u4e0e StaticMeshesLoader \u4e2d\u5b9a\u4e49\u7684\u65b9\u6cd5\u975e\u5e38\u76f8\u4f3c\uff0c\u4f46\u6709\u5982\u4e0b\u533a\u522b\uff1a \u4f20\u9012\u9ed8\u8ba4\u52a0\u8f7d\u6807\u8bb0\u7684\u65b9\u6cd5\u4f7f\u7528\u4e86\u65b0\u53c2\u6570\uff1a aiProcess_LimitBoneWeights \u3002\u8fd9\u5c06\u4f1a\u5c06\u5f71\u54cd\u9876\u70b9\u7684\u6700\u5927\u6743\u91cd\u6570\u9650\u5236\u4e3a4\uff08\u8fd9\u4e5f\u662f\u6211\u4eec\u5f53\u524d\u5728\u52a8\u753b\u7ae0\u8282\u4e2d\u652f\u6301\u7684\u6700\u5927\u503c\uff09\u3002 \u5b9e\u9645\u52a0\u8f7d\u6a21\u578b\u7684\u65b9\u6cd5\u53ea\u52a0\u8f7d\u4e0d\u540c\u7684\u7f51\u683c\uff0c\u4f46\u5b83\u9996\u5148\u8ba1\u7b97\u8282\u70b9\u5c42\u6b21\u7ed3\u6784\uff0c\u7136\u540e\u5728\u7ed3\u5c3e\u8c03\u7528 processAnimations \u4ee5\u751f\u6210 AnimGameItem \u5b9e\u4f8b\u3002 processMesh \u65b9\u6cd5\u4e0e StaticMeshesLoader \u7c7b\u4e2d\u7684\u65b9\u6cd5\u975e\u5e38\u76f8\u4f3c\uff0c\u53ea\u662f\u5b83\u521b\u5efa\u7684\u7f51\u683c\u5c06\u5173\u8282\u7d22\u5f15\u548c\u6743\u91cd\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\uff1a processBones(aiMesh, boneList, boneIds, weights); Mesh mesh = new Mesh(Utils.listToArray(vertices), Utils.listToArray(textures), Utils.listToArray(normals), Utils.listIntToArray(indices), Utils.listIntToArray(boneIds), Utils.listToArray(weights)); \u5173\u8282\u7d22\u5f15\u548c\u6743\u91cd\u6309 processBones \u65b9\u6cd5\u8ba1\u7b97\uff1a private static void processBones(AIMesh aiMesh, List<Bone> boneList, List<Integer> boneIds, List<Float> weights) { Map<Integer, List<VertexWeight>> weightSet = new HashMap<>(); int numBones = aiMesh.mNumBones(); PointerBuffer aiBones = aiMesh.mBones(); for (int i = 0; i < numBones; i++) { AIBone aiBone = AIBone.create(aiBones.get(i)); int id = boneList.size(); Bone bone = new Bone(id, aiBone.mName().dataString(), toMatrix(aiBone.mOffsetMatrix())); boneList.add(bone); int numWeights = aiBone.mNumWeights(); AIVertexWeight.Buffer aiWeights = aiBone.mWeights(); for (int j = 0; j < numWeights; j++) { AIVertexWeight aiWeight = aiWeights.get(j); VertexWeight vw = new VertexWeight(bone.getBoneId(), aiWeight.mVertexId(), aiWeight.mWeight()); List<VertexWeight> vertexWeightList = weightSet.get(vw.getVertexId()); if (vertexWeightList == null) { vertexWeightList = new ArrayList<>(); weightSet.put(vw.getVertexId(), vertexWeightList); } vertexWeightList.add(vw); } } int numVertices = aiMesh.mNumVertices(); for (int i = 0; i < numVertices; i++) { List<VertexWeight> vertexWeightList = weightSet.get(i); int size = vertexWeightList != null ? vertexWeightList.size() : 0; for (int j = 0; j < Mesh.MAX_WEIGHTS; j++) { if (j < size) { VertexWeight vw = vertexWeightList.get(j); weights.add(vw.getWeight()); boneIds.add(vw.getBoneId()); } else { weights.add(0.0f); boneIds.add(0); } } } } \u6b64\u65b9\u6cd5\u904d\u5386\u7279\u5b9a\u7f51\u683c\u7684\u9aa8\u9abc\u5b9a\u4e49\uff0c\u83b7\u53d6\u5176\u6743\u91cd\u5e76\u751f\u6210\u4e09\u4e2a\u5217\u8868\uff1a boneList \uff1a\u50a8\u5b58\u8282\u70b9\u53ca\u5176\u504f\u79fb\u77e9\u9635\u7684\u5217\u8868\u3002\u7a0d\u540e\u5c06\u4f7f\u7528\u5b83\u6765\u8ba1\u7b97\u8282\u70b9\u53d8\u6362\u3002\u5df2\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a Bone \u7684\u65b0\u7c7b\u6765\u50a8\u5b58\u8be5\u4fe1\u606f\u3002\u6b64\u5217\u8868\u5c06\u50a8\u5b58\u6240\u6709\u7f51\u683c\u7684\u9aa8\u9abc\u3002 boneIds \uff1a\u53ea\u50a8\u5b58\u5305\u542b Mesh \u7684\u6bcf\u4e2a\u9876\u70b9\u7684\u9aa8\u9abc\u6807\u8bc6\u3002\u9aa8\u9abc\u5728\u6e32\u67d3\u65f6\u6839\u636e\u5176\u4f4d\u7f6e\u8fdb\u884c\u6807\u8bc6\uff0c\u6b64\u5217\u8868\u4ec5\u5305\u542b\u7279\u5b9a\u7f51\u683c\u7684\u9aa8\u9abc\u3002 weights \uff1a\u50a8\u5b58\u8981\u5e94\u7528\u4e8e\u5173\u8054\u9aa8\u9abc\u7684 Mesh \u7684\u6bcf\u4e2a\u9876\u70b9\u7684\u6743\u91cd\u3002 weights \u548c boneIds \u4e2d\u50a8\u5b58\u7684\u6570\u636e\u7528\u4e8e\u6784\u9020 Mesh \u6570\u636e\u3002 boneList \u4e2d\u50a8\u5b58\u7684\u6570\u636e\u5c06\u5728\u7a0d\u540e\u8ba1\u7b97\u52a8\u753b\u6570\u636e\u65f6\u4f7f\u7528\u3002 \u8ba9\u6211\u4eec\u56de\u5230 loadAnimGameItem \u65b9\u6cd5\u3002\u4e00\u65e6\u6211\u4eec\u521b\u5efa\u4e86\u7f51\u683c\uff0c\u8fd8\u5f97\u5230\u4e86\u5e94\u7528\u4e8e\u6839\u8282\u70b9\u7684\u53d8\u6362\uff0c\u8be5\u53d8\u6362\u4e5f\u5c06\u7528\u4e8e\u8ba1\u7b97\u6700\u7ec8\u7684\u53d8\u6362\u3002\u4e4b\u540e\uff0c\u6211\u4eec\u9700\u8981\u5904\u7406\u8282\u70b9\u7684\u5c42\u6b21\u7ed3\u6784\uff0c\u8fd9\u662f\u5728 processNodesHierarchy \u65b9\u6cd5\u4e2d\u5b8c\u6210\u7684\u3002\u8fd9\u4e2a\u65b9\u6cd5\u975e\u5e38\u7b80\u5355\uff0c\u5b83\u53ea\u662f\u4ece\u6839\u8282\u70b9\u5f00\u59cb\u904d\u5386\u8282\u70b9\u5c42\u6b21\u7ed3\u6784\uff0c\u6784\u9020\u4e00\u4e2a\u8282\u70b9\u6811\u3002 private static Node processNodesHierarchy(AINode aiNode, Node parentNode) { String nodeName = aiNode.mName().dataString(); Node node = new Node(nodeName, parentNode); int numChildren = aiNode.mNumChildren(); PointerBuffer aiChildren = aiNode.mChildren(); for (int i = 0; i < numChildren; i++) { AINode aiChildNode = AINode.create(aiChildren.get(i)); Node childNode = processNodesHierarchy(aiChildNode, node); node.addChild(childNode); } return node; } \u6211\u4eec\u5df2\u7ecf\u521b\u5efa\u4e86\u4e00\u4e2a\u65b0\u7684 Node \u7c7b\uff0c\u8be5\u7c7b\u5c06\u50a8\u5b58 AINode \u5b9e\u4f8b\u7684\u76f8\u5173\u4fe1\u606f\uff0c\u5e76\u63d0\u4f9b\u4e86\u67e5\u627e\u65b9\u6cd5\u6765\u5b9a\u4f4d\u8282\u70b9\u5c42\u6b21\u7ed3\u6784\uff0c\u4ee5\u4fbf\u6309\u540d\u79f0\u67e5\u627e\u8282\u70b9\u3002\u56de\u5230 loadAnimGameItem \u65b9\u6cd5\uff0c\u6211\u4eec\u53ea\u4f7f\u7528\u8be5\u6570\u636e\u8ba1\u7b97 processAnimations \u65b9\u6cd5\u4e2d\u7684\u52a8\u753b\u3002\u8be5\u65b9\u6cd5\u8fd4\u56de Animation \u5b9e\u4f8b\u7684 Map \u3002\u8bf7\u8bb0\u4f4f\uff0c\u4e00\u4e2a\u6a21\u578b\u53ef\u4ee5\u6709\u591a\u4e2a\u52a8\u753b\uff0c\u56e0\u6b64\u5b83\u4eec\u6309\u540d\u79f0\u50a8\u5b58\u7d22\u5f15\u3002\u6709\u4e86\u8fd9\u4e9b\u6570\u636e\uff0c\u6211\u4eec\u7ec8\u4e8e\u53ef\u4ee5\u6784\u5efa\u4e00\u4e2a AnimAgameItem \u5b9e\u4f8b\u3002 processAnimations \u65b9\u6cd5\u7684\u5b9a\u4e49\u5982\u4e0b\u6240\u793a\uff1a private static Map<String, Animation> processAnimations(AIScene aiScene, List<Bone> boneList, Node rootNode, Matrix4f rootTransformation) { Map<String, Animation> animations = new HashMap<>(); // \u5904\u7406\u6240\u6709\u52a8\u753b int numAnimations = aiScene.mNumAnimations(); PointerBuffer aiAnimations = aiScene.mAnimations(); for (int i = 0; i < numAnimations; i++) { AIAnimation aiAnimation = AIAnimation.create(aiAnimations.get(i)); // \u4e3a\u6bcf\u4e2a\u8282\u70b9\u8ba1\u7b97\u53d8\u6362\u77e9\u9635 int numChanels = aiAnimation.mNumChannels(); PointerBuffer aiChannels = aiAnimation.mChannels(); for (int j = 0; j < numChanels; j++) { AINodeAnim aiNodeAnim = AINodeAnim.create(aiChannels.get(j)); String nodeName = aiNodeAnim.mNodeName().dataString(); Node node = rootNode.findByName(nodeName); buildTransFormationMatrices(aiNodeAnim, node); } List<AnimatedFrame> frames = buildAnimationFrames(boneList, rootNode, rootTransformation); Animation animation = new Animation(aiAnimation.mName().dataString(), frames, aiAnimation.mDuration()); animations.put(animation.getName(), animation); } return animations; } \u5c06\u4e3a\u6bcf\u4e2a\u52a8\u753b\u5904\u7406\u5176\u52a8\u753b\u901a\u9053\uff0c\u6bcf\u4e2a\u901a\u9053\u5b9a\u4e49\u4e86\u4e0d\u540c\u7684\u53d8\u6362\uff0c\u8fd9\u4e9b\u53d8\u5316\u5e94\u8be5\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u5e94\u7528\u4e8e\u4e00\u4e2a\u8282\u70b9\u3002\u4e3a\u6bcf\u4e2a\u8282\u70b9\u5b9a\u4e49\u7684\u53d8\u6362\u5728 buildTransFormationMatrices \u65b9\u6cd5\u4e2d\u5b9a\u4e49\uff0c\u8fd9\u4e9b\u77e9\u9635\u88ab\u6bcf\u4e2a\u8282\u70b9\u50a8\u5b58\u3002\u4e00\u65e6\u8282\u70b9\u5c42\u6b21\u7ed3\u6784\u4e2d\u50a8\u5b58\u5b8c\u8fd9\u4e9b\u4fe1\u606f\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u6784\u5efa\u52a8\u753b\u5e27\u3002 \u8ba9\u6211\u4eec\u5148\u56de\u987e\u4e00\u4e0b buildTransFormationMatrices \u65b9\u6cd5\uff1a private static void buildTransFormationMatrices(AINodeAnim aiNodeAnim, Node node) { int numFrames = aiNodeAnim.mNumPositionKeys(); AIVectorKey.Buffer positionKeys = aiNodeAnim.mPositionKeys(); AIVectorKey.Buffer scalingKeys = aiNodeAnim.mScalingKeys(); AIQuatKey.Buffer rotationKeys = aiNodeAnim.mRotationKeys(); for (int i = 0; i < numFrames; i++) { AIVectorKey aiVecKey = positionKeys.get(i); AIVector3D vec = aiVecKey.mValue(); Matrix4f transfMat = new Matrix4f().translate(vec.x(), vec.y(), vec.z()); AIQuatKey quatKey = rotationKeys.get(i); AIQuaternion aiQuat = quatKey.mValue(); Quaternionf quat = new Quaternionf(aiQuat.x(), aiQuat.y(), aiQuat.z(), aiQuat.w()); transfMat.rotate(quat); if (i < aiNodeAnim.mNumScalingKeys()) { aiVecKey = scalingKeys.get(i); vec = aiVecKey.mValue(); transfMat.scale(vec.x(), vec.y(), vec.z()); } node.addTransformation(transfMat); } } \u5982\u4f60\u6240\u89c1\uff0c AINodeAnim \u5b9e\u4f8b\u5b9a\u4e49\u4e86\u4e00\u7ec4\u5305\u542b\u4f4d\u79fb\u3001\u65cb\u8f6c\u548c\u7f29\u653e\u4fe1\u606f\u7684\u952e\uff0c\u8fd9\u4e9b\u952e\u662f\u6307\u7279\u5b9a\u7684\u65f6\u523b\u3002\u6211\u4eec\u5047\u8bbe\u6570\u636e\u662f\u6309\u65f6\u95f4\u987a\u5e8f\u6392\u5217\u7684\uff0c\u5e76\u6784\u5efa\u4e00\u4e2a\u50a8\u5b58\u8981\u5e94\u7528\u4e8e\u6bcf\u4e2a\u5e27\u7684\u53d8\u6362\u7684\u77e9\u9635\u5217\u8868\u3002\u6700\u540e\u7684\u8ba1\u7b97\u662f\u5728 buildAnimationFrames \u65b9\u6cd5\u4e2d\u5b8c\u6210\u7684\uff1a private static List<AnimatedFrame> buildAnimationFrames(List<Bone> boneList, Node rootNode, Matrix4f rootTransformation) { int numFrames = rootNode.getAnimationFrames(); List<AnimatedFrame> frameList = new ArrayList<>(); for (int i = 0; i < numFrames; i++) { AnimatedFrame frame = new AnimatedFrame(); frameList.add(frame); int numBones = boneList.size(); for (int j = 0; j < numBones; j++) { Bone bone = boneList.get(j); Node node = rootNode.findByName(bone.getBoneName()); Matrix4f boneMatrix = Node.getParentTransforms(node, i); boneMatrix.mul(bone.getOffsetMatrix()); boneMatrix = new Matrix4f(rootTransformation).mul(boneMatrix); frame.setMatrix(j, boneMatrix); } } return frameList; } \u6b64\u65b9\u6cd5\u8fd4\u56de AnimatedFrame \u5b9e\u4f8b\u7684\u5217\u8868\uff0c\u6bcf\u4e2a AnimatedFrame \u5b9e\u4f8b\u5c06\u50a8\u5b58\u8981\u5e94\u7528\u4e8e\u7279\u5b9a\u5e27\u7684\u6bcf\u4e2a\u9aa8\u9abc\u7684\u53d8\u6362\u5217\u8868\u3002\u8fd9\u4e2a\u65b9\u6cd5\u53ea\u662f\u8fed\u4ee3\u50a8\u5b58\u6240\u6709\u9aa8\u9abc\u7684\u5217\u8868\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u9aa8\u9abc\uff1a \u83b7\u53d6\u76f8\u5173\u8054\u7684\u8282\u70b9\u3002 \u901a\u8fc7\u5c06\u76f8\u5173\u8054\u7684 Node \u7684\u53d8\u6362\u4e0e\u5176\u7236\u8282\u70b9\u7684\u6240\u6709\u53d8\u6362\u76f8\u4e58\uff0c\u751f\u6210\u53d8\u6362\u77e9\u9635\uff0c\u76f4\u81f3\u6839\u8282\u70b9\u3002\u8fd9\u662f\u5728 Node.getParentTransforms \u65b9\u6cd5\u4e2d\u5b8c\u6210\u7684\u3002 \u5b83\u5c06\u8be5\u77e9\u9635\u4e0e\u9aa8\u9abc\u7684\u504f\u501a\u77e9\u9635\u76f8\u4e58\u3002 \u6700\u540e\u7684\u53d8\u6362\u662f\u901a\u8fc7\u5c06\u6839\u8282\u70b9\u7684\u53d8\u6362\u4e0e\u4e0a\u8ff0\u6b65\u9aa4\u4e2d\u8ba1\u7b97\u7684\u77e9\u9635\u76f8\u4e58\u6765\u8ba1\u7b97\u7684\u3002 \u6e90\u4ee3\u7801\u4e2d\u7684\u5176\u4ed6\u4fee\u6539\u662f\u4e3a\u4e86\u9002\u5e94\u67d0\u4e9b\u7ed3\u6784\u800c\u8fdb\u884c\u7684\u5fae\u5c0f\u4fee\u6539\u3002\u6700\u540e\uff0c\u4f60\u80fd\u591f\u52a0\u8f7d\u7c7b\u4f3c\u4e8e\u4e0b\u56fe\u7684\u52a8\u753b\uff08\u4f60\u9700\u8981\u6309\u7a7a\u683c\u6539\u53d8\u5e27\uff09\uff1a \u8fd9\u4e2a\u793a\u4f8b\u7684\u590d\u6742\u4e4b\u5904\u5728\u4e8eAssimp\u7ed3\u6784\u7684\u8c03\u6574\uff0c\u4f7f\u5176\u9002\u5e94\u672c\u4e66\u4e2d\u4f7f\u7528\u7684\u5f15\u64ce\uff0c\u5e76\u9884\u5148\u8ba1\u7b97\u6bcf\u4e2a\u5e27\u7684\u6570\u636e\u3002\u6b64\u5916\uff0c\u8fd9\u4e9b\u6982\u5ff5\u4e0e\u52a8\u753b\u4e00\u7ae0\u4e2d\u7684\u6982\u5ff5\u7c7b\u4f3c\u3002\u4f60\u53ef\u4ee5\u5c1d\u8bd5\u4fee\u6539\u6e90\u4ee3\u7801\u4ee5\u5728\u5e27\u4e4b\u95f4\u63d2\u5165\uff0c\u4ee5\u83b7\u5f97\u66f4\u5e73\u6ed1\u7684\u52a8\u753b\u3002","title":"Assimp\u5e93"},{"location":"27-assimp/#assimpassimp","text":"","title":"Assimp\u5e93\uff08Assimp\uff09"},{"location":"27-assimp/#_1","text":"\u52a0\u8f7d\u4e0d\u540c\u683c\u5f0f\u7684\u590d\u6742\u4e09\u7ef4\u6a21\u578b\u7684\u529f\u80fd\u5bf9\u4e8e\u7f16\u5199\u6e38\u620f\u81f3\u5173\u91cd\u8981\uff0c\u4e3a\u5176\u4e2d\u4e00\u4e9b\u7f16\u5199\u89e3\u6790\u5668\u9700\u8981\u5927\u91cf\u7684\u5de5\u4f5c\uff0c\u5373\u4fbf\u53ea\u652f\u6301\u4e00\u79cd\u683c\u5f0f\u4e5f\u53ef\u80fd\u5f88\u8017\u65f6\u3002\u4f8b\u5982\uff0c\u5728\u7b2c\u4e5d\u7ae0\u4e2d\u63cf\u8ff0\u7684wavefront\u52a0\u8f7d\u5668\u53ea\u89e3\u6790\u4e86\u89c4\u8303\u4e2d\u7684\u4e00\u5c0f\u90e8\u5206\uff08\u6839\u672c\u4e0d\u5904\u7406\u6750\u8d28\uff09\u3002 \u5e78\u8fd0\u7684\u662f\uff0c\u5df2\u7ecf\u53ef\u4ee5\u4f7f\u7528 Assimp \u5e93\u6765\u89e3\u6790\u8bb8\u591a\u5e38\u89c1\u76843D\u683c\u5f0f\u3002\u5b83\u662f\u4e00\u4e2aC++\u5e93\uff0c\u53ef\u4ee5\u4ee5\u5404\u79cd\u683c\u5f0f\u52a0\u8f7d\u9759\u6001\u548c\u52a8\u753b\u6a21\u578b\u3002LWJGL\u63d0\u4f9b\u4e86\u7ed1\u5b9a\u4ee5\u4fbf\u4eceJava\u4ee3\u7801\u4e2d\u4f7f\u7528\u5b83\u4eec\u3002\u5728\u672c\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u5b66\u4e60\u5982\u4f55\u4f7f\u7528\u5b83\u3002 \u9996\u5148\u662f\u5c06Assimp\u7684Maven\u4f9d\u8d56\u9879\u6dfb\u52a0\u5230 pom.xml \u6587\u4ef6\u4e2d\u3002\u6211\u4eec\u9700\u8981\u6dfb\u52a0\u7f16\u8bd1\u65f6\u548c\u8fd0\u884c\u65f6\u4f9d\u8d56\u9879\u3002 <dependency> <groupId>org.lwjgl</groupId> <artifactId>lwjgl-assimp</artifactId> <version>${lwjgl.version}</version> </dependency> <dependency> <groupId>org.lwjgl</groupId> <artifactId>lwjgl-assimp</artifactId> <version>${lwjgl.version}</version> <classifier>${native.target}</classifier> <scope>runtime</scope> </dependency> \u4e00\u65e6\u8bbe\u7f6e\u4e86\u4f9d\u8d56\u9879\uff0c\u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a StaticMeshesLoader \u7684\u65b0\u7c7b\uff0c\u8be5\u7c7b\u5c06\u7528\u4e8e\u52a0\u8f7d\u4e0d\u5e26\u52a8\u753b\u7684\u7f51\u683c\uff0c\u8be5\u7c7b\u5b9a\u4e49\u4e86\u4e24\u4e2a\u9759\u6001\u516c\u5171\u65b9\u6cd5\uff1a public static Mesh[] load(String resourcePath, String texturesDir) throws Exception { return load(resourcePath, texturesDir, aiProcess_JoinIdenticalVertices | aiProcess_Triangulate | aiProcess_FixInfacingNormals); } public static Mesh[] load(String resourcePath, String texturesDir, int flags) throws Exception { // .... \u4e24\u79cd\u65b9\u6cd5\u90fd\u6709\u4ee5\u4e0b\u53c2\u6570\uff1a * resourcePath \uff1a\u6a21\u578b\u6587\u4ef6\u6240\u5728\u7684\u6587\u4ef6\u8def\u5f84\u3002\u8fd9\u662f\u4e00\u4e2a\u7edd\u5bf9\u8def\u5f84\uff0c\u56e0\u4e3aAssimp\u53ef\u80fd\u9700\u8981\u52a0\u8f7d\u5176\u4ed6\u6587\u4ef6\uff08\u4f8b\u5982wavefront\u3001OBJ\u7b49\u6587\u4ef6\u7684\u6750\u8d28\u6587\u4ef6\uff09\uff0c\u5e76\u4e14\u53ef\u80fd\u4f7f\u7528\u4e0e\u8d44\u6e90\u8def\u5f84\u76f8\u540c\u7684\u57fa\u8def\u5f84\u3002\u5982\u679c\u5c06\u8d44\u6e90\u5d4c\u5165JAR\u6587\u4ef6\u4e2d\uff0c\u90a3\u4e48assimp\u5c06\u65e0\u6cd5\u5bfc\u5165\u5b83\uff0c\u56e0\u6b64\u5b83\u5fc5\u987b\u662f\u6587\u4ef6\u7cfb\u7edf\u8def\u5f84\u3002 * texturesDir \uff1a\u4fdd\u5b58\u6b64\u6a21\u578b\u7684\u6587\u4ef6\u5939\u8def\u5f84\u3002\u8fd9\u662fCLASSPATH\u7684\u76f8\u5bf9\u8def\u5f84\u3002\u4f8b\u5982\uff0cwavefront\u6750\u8d28\u6587\u4ef6\u53ef\u4ee5\u5b9a\u4e49\u591a\u4e2a\u7eb9\u7406\u6587\u4ef6\u3002\u4ee3\u7801\u5e0c\u671b\u6b64\u6587\u4ef6\u4f4d\u4e8e texturesDir \u76ee\u5f55\u4e0b\u3002\u5982\u679c\u53d1\u73b0\u7eb9\u7406\u52a0\u8f7d\u9519\u8bef\uff0c\u53ef\u80fd\u9700\u8981\u5728\u6a21\u578b\u6587\u4ef6\u4e2d\u624b\u52a8\u8c03\u6574\u8fd9\u4e9b\u8def\u5f84\u3002 \u7b2c\u4e8c\u4e2a\u65b9\u6cd5\u6709\u4e00\u4e2a\u540d\u4e3a flags \u7684\u989d\u5916\u53c2\u6570\u3002\u6b64\u53c2\u6570\u5141\u8bb8\u8c03\u6574\u52a0\u8f7d\u8fc7\u7a0b\u3002\u7b2c\u4e00\u4e2a\u65b9\u6cd5\u8c03\u7528\u7b2c\u4e8c\u4e2a\u65b9\u6cd5\uff0c\u5e76\u4f20\u9012\u4e00\u4e9b\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u90fd\u6709\u7528\u7684\u503c\uff1a * aiProcess_JoinIdenticalVertices \uff1a\u6b64\u6807\u8bb0\u5c06\u51cf\u5c11\u4f7f\u7528\u7684\u9876\u70b9\u6570\uff0c\u8bc6\u522b\u53ef\u5728\u9762\u4e4b\u95f4\u91cd\u7528\u7684\u9876\u70b9\u3002 * aiProcess_Triangulate \uff1a\u6a21\u578b\u53ef\u4ee5\u4f7f\u7528\u56db\u8fb9\u5f62\u6216\u5176\u4ed6\u51e0\u4f55\u56fe\u5f62\u6765\u5b9a\u4e49\u5b83\u4eec\u7684\u5143\u7d20\u3002\u7531\u4e8e\u6211\u4eec\u53ea\u5904\u7406\u4e09\u89d2\u5f62\uff0c\u56e0\u6b64\u5fc5\u987b\u4f7f\u7528\u6b64\u6807\u8bb0\u5c06\u6240\u6709\u7684\u9762\u62c6\u5206\u4e3a\u4e09\u89d2\u5f62\uff08\u5982\u679c\u6709\u5fc5\u8981\u7684\u8bdd\uff09\u3002 * aiProcess_FixInfacingNormals \uff1a\u6b64\u6807\u8bb0\u5c06\u5c1d\u8bd5\u53cd\u8f6c\u53ef\u80fd\u6307\u5411\u5185\u90e8\u7684\u6cd5\u7ebf\u3002 \u8fd8\u6709\u8bb8\u591a\u5176\u4ed6\u6807\u8bb0\u53ef\u4ee5\u4f7f\u7528\uff0c\u4f60\u53ef\u4ee5\u5728LWJGL\u7684Javadoc\u6587\u6863\u4e2d\u67e5\u9605\u5b83\u4eec\u3002 \u56de\u770b\u5230\u7b2c\u4e8c\u4e2a\u8f7d\u5165\u65b9\u6cd5\uff0c\u6211\u4eec\u8981\u505a\u7684\u7b2c\u4e00\u4ef6\u4e8b\u662f\u8c03\u7528 aiImportFile \u65b9\u6cd5\u6765\u52a0\u8f7d\u5e26\u6709\u6240\u9009\u6807\u8bb0\u7684\u6a21\u578b\u3002 AIScene aiScene = aiImportFile(resourcePath, flags); if (aiScene == null) { throw new Exception(\"Error loading model\"); } \u8f7d\u5165\u65b9\u6cd5\u7684\u5176\u4f59\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a int numMaterials = aiScene.mNumMaterials(); PointerBuffer aiMaterials = aiScene.mMaterials(); List<Material> materials = new ArrayList<>(); for (int i = 0; i < numMaterials; i++) { AIMaterial aiMaterial = AIMaterial.create(aiMaterials.get(i)); processMaterial(aiMaterial, materials, texturesDir); } int numMeshes = aiScene.mNumMeshes(); PointerBuffer aiMeshes = aiScene.mMeshes(); Mesh[] meshes = new Mesh[numMeshes]; for (int i = 0; i < numMeshes; i++) { AIMesh aiMesh = AIMesh.create(aiMeshes.get(i)); Mesh mesh = processMesh(aiMesh, materials); meshes[i] = mesh; } return meshes; \u6211\u4eec\u5904\u7406\u6a21\u578b\u4e2d\u5305\u542b\u7684\u6750\u8d28\uff0c\u6750\u8d28\u5b9a\u4e49\u7ec4\u6210\u6a21\u578b\u7684\u7f51\u683c\u4f7f\u7528\u7684\u989c\u8272\u548c\u7eb9\u7406\u3002\u7136\u540e\u6211\u4eec\u5904\u7406\u4e0d\u540c\u7684\u7f51\u683c\uff0c\u6a21\u578b\u53ef\u4ee5\u5b9a\u4e49\u591a\u4e2a\u7f51\u683c\uff0c\u6bcf\u4e2a\u7f51\u683c\u90fd\u53ef\u4ee5\u4f7f\u7528\u4e3a\u6a21\u578b\u5b9a\u4e49\u7684\u4e00\u79cd\u6750\u8d28\u3002 \u5982\u679c\u4f60\u770b\u5230\u4e0a\u9762\u7684\u4ee3\u7801\uff0c\u4f60\u53ef\u80fd\u4f1a\u770b\u5230\u5f88\u591a\u5bf9Assimp\u5e93\u7684\u8c03\u7528\u8fd4\u56de\u7684 PointerBuffer \u5b9e\u4f8b\u3002\u4f60\u53ef\u4ee5\u7528C\u6307\u9488\u90a3\u6837\u7684\u65b9\u5f0f\u770b\u5f85\u5b83\u4eec\uff0c\u5b83\u4eec\u53ea\u662f\u6307\u5411\u50a8\u5b58\u6570\u636e\u7684\u5185\u5b58\u533a\u57df\u3002\u4f60\u9700\u8981\u63d0\u524d\u77e5\u9053\u5b83\u4eec\u50a8\u5b58\u7684\u6570\u636e\u7c7b\u578b\uff0c\u4ee5\u4fbf\u5904\u7406\u5b83\u4eec\u3002\u5bf9\u4e8e\u6750\u8d28\uff0c\u6211\u4eec\u8fed\u4ee3\u8be5\u7f13\u51b2\u533a\uff0c\u521b\u5efa AIMaterial \u7c7b\u7684\u5b9e\u4f8b\u3002\u5728\u7b2c\u4e8c\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u8fed\u4ee3\u50a8\u5b58\u7f51\u683c\u6570\u636e\u7684\u7f13\u51b2\u533a\uff0c\u521b\u5efa AIMesh \u7c7b\u7684\u5b9e\u4f8b\u3002 \u8ba9\u6211\u4eec\u770b\u770b processMaterial \u65b9\u6cd5\uff1a private static void processMaterial(AIMaterial aiMaterial, List<Material> materials, String texturesDir) throws Exception { AIColor4D colour = AIColor4D.create(); AIString path = AIString.calloc(); Assimp.aiGetMaterialTexture(aiMaterial, aiTextureType_DIFFUSE, 0, path, (IntBuffer) null, null, null, null, null, null); String textPath = path.dataString(); Texture texture = null; if (textPath != null && textPath.length() > 0) { TextureCache textCache = TextureCache.getInstance(); texture = textCache.getTexture(texturesDir + \"/\" + textPath); } Vector4f ambient = Material.DEFAULT_COLOUR; int result = aiGetMaterialColor(aiMaterial, AI_MATKEY_COLOR_AMBIENT, aiTextureType_NONE, 0, colour); if (result == 0) { ambient = new Vector4f(colour.r(), colour.g(), colour.b(), colour.a()); } Vector4f diffuse = Material.DEFAULT_COLOUR; result = aiGetMaterialColor(aiMaterial, AI_MATKEY_COLOR_DIFFUSE, aiTextureType_NONE, 0, colour); if (result == 0) { diffuse = new Vector4f(colour.r(), colour.g(), colour.b(), colour.a()); } Vector4f specular = Material.DEFAULT_COLOUR; result = aiGetMaterialColor(aiMaterial, AI_MATKEY_COLOR_SPECULAR, aiTextureType_NONE, 0, colour); if (result == 0) { specular = new Vector4f(colour.r(), colour.g(), colour.b(), colour.a()); } Material material = new Material(ambient, diffuse, specular, 1.0f); material.setTexture(texture); materials.add(material); } \u6211\u4eec\u68c0\u67e5\u6750\u8d28\u662f\u5426\u5b9a\u4e49\u4e86\u7eb9\u7406\u3002\u5982\u679c\u6709\uff0c\u6211\u4eec\u52a0\u8f7d\u7eb9\u7406\u3002\u6211\u4eec\u521b\u5efa\u4e86\u4e00\u4e2a\u540d\u4e3a TextureCache \u7684\u65b0\u7c7b\uff0c\u7528\u4e8e\u7f13\u5b58\u7eb9\u7406\u3002\u8fd9\u662f\u56e0\u4e3a\u51e0\u4e2a\u7f51\u683c\u53ef\u80fd\u5171\u4eab\u76f8\u540c\u7684\u7eb9\u7406\uff0c\u6211\u4eec\u4e0d\u60f3\u6d6a\u8d39\u7a7a\u95f4\u4e00\u6b21\u53c8\u4e00\u6b21\u52a0\u8f7d\u76f8\u540c\u7684\u6570\u636e\u3002\u7136\u540e\u6211\u4eec\u5c1d\u8bd5\u83b7\u5f97\u73af\u5883\u3001\u6f2b\u53cd\u5c04\u548c\u955c\u9762\u53cd\u5c04\u7684\u6750\u8d28\u989c\u8272\u5206\u91cf\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u6211\u4eec\u5bf9\u6750\u8d28\u7684\u5b9a\u4e49\u5df2\u7ecf\u5305\u542b\u4e86\u8fd9\u4e9b\u4fe1\u606f\u3002 TextureCache \u7684\u5b9a\u4e49\u975e\u5e38\u7b80\u5355\uff0c\u5b83\u53ea\u662f\u4e00\u4e2a\u6620\u5c04\uff0c\u901a\u8fc7\u7eb9\u7406\u6587\u4ef6\u7684\u8def\u5f84\u5bf9\u4e0d\u540c\u7684\u7eb9\u7406\u8fdb\u884c\u7d22\u5f15\uff08\u4f60\u53ef\u4ee5\u76f4\u63a5\u67e5\u770b\u6e90\u4ee3\u7801\uff09\u3002\u7531\u4e8e\u73b0\u5728\u7eb9\u7406\u53ef\u80fd\u4f7f\u7528\u4e0d\u540c\u7684\u56fe\u50cf\u683c\u5f0f\uff08PNG\u3001JPEG\u7b49\uff09\uff0c\u6211\u4eec\u5df2\u7ecf\u4fee\u6539\u4e86\u7eb9\u7406\u7684\u52a0\u8f7d\u65b9\u5f0f\uff0c\u73b0\u5728\u4f7f\u7528STB\u5e93\u6765\u52a0\u8f7d\u66f4\u591a\u7684\u683c\u5f0f\uff0c\u800c\u4e0d\u662f\u4f7f\u7528PNG\u5e93\u3002 \u8ba9\u6211\u4eec\u770b\u5230 StaticMeshesLoader \u7c7b\u3002 processMesh \u7684\u5b9a\u4e49\u5982\u4e0b\uff1a private static Mesh processMesh(AIMesh aiMesh, List<Material> materials) { List<Float> vertices = new ArrayList<>(); List<Float> textures = new ArrayList<>(); List<Float> normals = new ArrayList<>(); List<Integer> indices = new ArrayList(); processVertices(aiMesh, vertices); processNormals(aiMesh, normals); processTextCoords(aiMesh, textures); processIndices(aiMesh, indices); Mesh mesh = new Mesh(Utils.listToArray(vertices), Utils.listToArray(textures), Utils.listToArray(normals), Utils.listIntToArray(indices) ); Material material; int materialIdx = aiMesh.mMaterialIndex(); if (materialIdx >= 0 && materialIdx < materials.size()) { material = materials.get(materialIdx); } else { material = new Material(); } mesh.setMaterial(material); return mesh; } Mesh \u7531\u4e00\u7ec4\u9876\u70b9\u4f4d\u7f6e\u3001\u6cd5\u7ebf\u65b9\u5411\u3001\u7eb9\u7406\u5750\u6807\u548c\u7d22\u5f15\u5b9a\u4e49\u3002\u6bcf\u4e2a\u5143\u7d20\u90fd\u5728 processVertices \u3001 processNormals \u3001 processTextCoords \u548c processIndices \u65b9\u6cd5\u4e2d\u5904\u7406\uff0c\u7f51\u683c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u5176\u7d22\u5f15\u6307\u5411\u6750\u8d28\u3002\u5982\u679c\u7d22\u5f15\u4e0e\u4e4b\u524d\u5904\u7406\u7684\u6750\u8d28\u76f8\u5bf9\u5e94\uff0c\u6211\u4eec\u53ea\u9700\u5c06\u5b83\u4eec\u4e0e Mesh \u76f8\u5173\u8054\u3002 processXXX \u65b9\u6cd5\u975e\u5e38\u7b80\u5355\uff0c\u5b83\u4eec\u53ea\u662f\u5728\u8fd4\u56de\u6240\u9700\u6570\u636e\u7684 AIMesh \u5b9e\u4f8b\u4e0a\u8c03\u7528\u76f8\u5e94\u7684\u65b9\u6cd5\u3002\u4f8b\u5982\uff0c processVertices \u7684\u5b9a\u4e49\u5982\u4e0b\uff1a private static void processVertices(AIMesh aiMesh, List<Float> vertices) { AIVector3D.Buffer aiVertices = aiMesh.mVertices(); while (aiVertices.remaining() > 0) { AIVector3D aiVertex = aiVertices.get(); vertices.add(aiVertex.x()); vertices.add(aiVertex.y()); vertices.add(aiVertex.z()); } } \u4f60\u53ef\u4ee5\u770b\u5230\uff0c\u6211\u4eec\u53ea\u662f\u901a\u8fc7\u8c03\u7528 mVertices \u65b9\u6cd5\u6765\u83b7\u53d6\u9876\u70b9\u7684\u7f13\u51b2\u533a\uff0c\u7b80\u5355\u5730\u5904\u7406\u5b83\u4eec\u6765\u521b\u5efa\u4e00\u4e2a\u50a8\u5b58\u9876\u70b9\u4f4d\u7f6e\u7684\u6d6e\u70b9\u6570\u5217\u8868\u3002\u56e0\u4e3a\uff0c\u8be5\u65b9\u6cd5\u53ea\u8fd4\u56de\u4e00\u4e2a\u7f13\u51b2\u533a\uff0c\u4f60\u53ef\u4ee5\u5c06\u8be5\u6570\u636e\u76f4\u63a5\u4f20\u7ed9\u521b\u5efa\u9876\u70b9\u7684OpenGL\u65b9\u6cd5\u3002\u4f46\u6211\u4eec\u4e0d\u8fd9\u6837\u505a\uff0c\u539f\u56e0\u6709\u4e24\u4e2a\u3002\u7b2c\u4e00\u4e2a\u539f\u56e0\u662f\u5c3d\u91cf\u51cf\u5c11\u5bf9\u4ee3\u7801\u5e93\u7684\u4fee\u6539\uff0c\u7b2c\u4e8c\u4e2a\u539f\u56e0\u662f\uff0c\u901a\u8fc7\u52a0\u8f7d\u6570\u636e\u5230\u4e2d\u95f4\u5c42\u4e2d\uff0c\u4f60\u53ef\u4ee5\u6267\u884c\u4e00\u4e9b\u4e13\u95e8\u7684\u5904\u7406\u4efb\u52a1\uff0c\u751a\u81f3\u8c03\u8bd5\u52a0\u8f7d\u8fc7\u7a0b\u3002 \u5982\u679c\u4f60\u60f3\u8981\u4e00\u4e2a\u66f4\u6709\u6548\u7684\u793a\u4f8b\uff0c\u5373\u76f4\u63a5\u5c06\u7f13\u51b2\u533a\u4f20\u7ed9OpenGL\uff0c\u53ef\u4ee5\u67e5\u770b\u8fd9\u4e2a \u4f8b\u5b50 \u3002 StaticMeshesLoader \u7c7b\u8ba9 OBJLoader \u7c7b\u8fc7\u65f6\u4e86\uff0c\u56e0\u6b64\u5b83\u5df2\u7ecf\u4ece\u6e90\u4ee3\u7801\u4e2d\u5220\u9664\u3002\u4e00\u4e2a\u66f4\u590d\u6742\u7684OBJ\u6587\u4ef6\u5df2\u7ecf\u4f5c\u4e3a\u793a\u4f8b\u63d0\u4f9b\uff0c\u5982\u679c\u8fd0\u884c\u5b83\uff0c\u4f60\u5c06\u770b\u5230\u5982\u4e0b\u5185\u5bb9\uff1a","title":"\u9759\u6001\u7f51\u683c"},{"location":"27-assimp/#_2","text":"\u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u4f7f\u7528Assimp\u52a0\u8f7d\u4e86\u9759\u6001\u7f51\u683c\uff0c\u53ef\u4ee5\u7ee7\u7eed\u8bb2\u89e3\u52a8\u753b\u3002\u5982\u679c\u4f60\u56de\u60f3\u52a8\u753b\u4e00\u7ae0\uff0c\u4e0e\u7f51\u683c\u5173\u8054\u7684VAO\u5305\u542b\u9876\u70b9\u4f4d\u7f6e\u3001\u7eb9\u7406\u5750\u6807\u3001\u7d22\u5f15\u548c\u5e94\u5e94\u7528\u4e8e\u5173\u8282\u4f4d\u7f6e\u4ee5\u8c03\u6574\u6700\u7ec8\u9876\u70b9\u4f4d\u7f6e\u7684\u6743\u91cd\u5217\u8868\u3002 \u6bcf\u4e2a\u9876\u70b9\u4f4d\u7f6e\u90fd\u5173\u8054\u4e86\u4e00\u4e2a\u6539\u53d8\u6700\u7ec8\u4f4d\u7f6e\u7684\u56db\u4e2a\u6743\u91cd\u7684\u5217\u8868\uff0c\u5f15\u7528\u4e86\u5c06\u7ec4\u5408\u4ee5\u786e\u5b9a\u9876\u70b9\u6700\u7ec8\u4f4d\u7f6e\u7684\u9aa8\u9abc\u7d22\u5f15\u3002\u5728\u6bcf\u4e00\u5e27\uff0c\u4e00\u4e2a\u53d8\u6362\u77e9\u9635\u5217\u8868\u5c06\u88ab\u4f5c\u4e3aUniform\u52a0\u8f7d\u5230\u6bcf\u4e2a\u5173\u8282\u3002\u6839\u636e\u8fd9\u4e9b\u6570\u636e\uff0c\u7b97\u51fa\u6700\u7ec8\u4f4d\u7f6e\u3002 \u5728\u52a8\u753b\u4e00\u7ae0\u4e2d\uff0c\u6211\u4eec\u5f00\u53d1\u4e86\u4e00\u4e2aMD5\u89e3\u6790\u5668\u6765\u52a0\u8f7d\u52a8\u753b\u7f51\u683c\u3002\u5728\u672c\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u4f7f\u7528Assimp\u5e93\u3002\u8fd9\u5c06\u5141\u8bb8\u6211\u4eec\u52a0\u8f7dMD5\u4e4b\u5916\u7684\u66f4\u591a\u683c\u5f0f\uff0c\u4f8b\u5982 COLLADA \uff0c FBX \u7b49\u3002 \u5728\u5f00\u59cb\u7f16\u7801\u4e4b\u524d\uff0c\u8ba9\u6211\u4eec\u7406\u6e05\u4e00\u4e9b\u672f\u8bed\u3002\u5728\u672c\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u4e0d\u52a0\u533a\u5206\u5730\u63d0\u5230\u9aa8\u9abc\u548c\u5173\u8282\u3002\u9aa8\u9abc\u6216\u8005\u5173\u8282\u90fd\u53ea\u662f\u5f71\u54cd\u9876\u70b9\u7684\u5143\u7d20\uff0c\u5e76\u4e14\u5177\u6709\u5f62\u6210\u5c42\u6b21\u7684\u7236\u7ea7\u3002MD5\u683c\u5f0f\u4f7f\u7528\u672f\u8bed\u5173\u8282\uff0c\u800cAssimp\u4f7f\u7528\u672f\u8bed\u9aa8\u9abc\u3002 \u8ba9\u6211\u4eec\u5148\u770b\u4e00\u4e0b\u7531Assimp\u5904\u7406\u7684\u50a8\u5b58\u7740\u52a8\u753b\u4fe1\u606f\u7684\u7ed3\u6784\u3002\u6211\u4eec\u5c06\u9996\u5148\u4ece\u9aa8\u9abc\u548c\u6743\u91cd\u6570\u636e\u5f00\u59cb\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u7f51\u683c\uff0c\u6211\u4eec\u53ef\u4ee5\u8bbf\u95ee\u9876\u70b9\u4f4d\u7f6e\u3001\u7eb9\u7406\u5750\u6807\u548c\u7d22\u5f15\u3002\u7f51\u683c\u8fd8\u50a8\u5b58\u7740\u9aa8\u9abc\u5217\u8868\uff0c\u6bcf\u4e2a\u9aa8\u9abc\u7531\u4ee5\u4e0b\u5c5e\u6027\u5b9a\u4e49\uff1a \u4e00\u4e2a\u540d\u5b57\u3002 \u4e00\u4e2a\u504f\u79fb\u77e9\u9635\uff1a\u7a0d\u540e\u5c06\u7528\u5b83\u6765\u8ba1\u7b97\u6bcf\u4e2a\u9aa8\u9abc\u5e94\u8be5\u4f7f\u7528\u7684\u6700\u7ec8\u53d8\u6362\u3002 \u9aa8\u9abc\u8fd8\u6307\u5411\u4e00\u4e2a\u6743\u91cd\u5217\u8868\uff0c\u6bcf\u4e2a\u6743\u91cd\u7531\u4ee5\u4e0b\u5c5e\u6027\u5b9a\u4e49\uff1a \u4e00\u4e2a\u6743\u91cd\u56e0\u5b50\uff0c\u5373\u7528\u4e8e\u8c03\u8282\u4e0e\u6bcf\u4e2a\u9876\u70b9\u76f8\u5173\u7684\u9aa8\u9abc\u53d8\u6362\u5f71\u54cd\u7684\u6570\u5b57\u3002 \u4e00\u4e2a\u9876\u70b9\u6807\u8bc6\u7b26\uff0c\u5373\u4e0e\u5f53\u524d\u9aa8\u9abc\u76f8\u5173\u8054\u7684\u9876\u70b9\u3002 \u4e0b\u56fe\u5c55\u73b0\u4e86\u6240\u6709\u8fd9\u4e9b\u5143\u7d20\u4e4b\u95f4\u7684\u5173\u7cfb\u3002 \u56e0\u6b64\uff0c\u6211\u4eec\u9996\u5148\u8981\u505a\u7684\u4e8b\u662f\u4ece\u4e0a\u8ff0\u7684\u7ed3\u6784\u6784\u9020\u9876\u70b9\u4f4d\u7f6e\u3001\u9aa8\u9abc/\u5173\u8282/\u7d22\u5f15\u548c\u76f8\u5173\u6743\u91cd\u7684\u5217\u8868\u3002\u5b8c\u6210\u540e\uff0c\u6211\u4eec\u9700\u8981\u4e3a\u6a21\u578b\u4e2d\u5b9a\u4e00\u4e2a\u6240\u6709\u52a8\u753b\u5e27\u9884\u5148\u8ba1\u7b97\u6bcf\u4e2a\u9aa8\u9abc/\u5173\u8282\u7684\u53d8\u6362\u77e9\u9635\u3002 Assimp\u573a\u666f\u5bf9\u8c61\u662f\u5b9a\u4e49\u8282\u70b9\u7684\u5c42\u6b21\u7ed3\u6784\uff0c\u6bcf\u4e2a\u8282\u70b9\u90fd\u7531\u4e00\u4e2a\u540d\u8bcd\u548c\u4e00\u4e2a\u5b50\u8282\u70b9\u5217\u8868\u5b9a\u4e49\u3002\u52a8\u753b\u4f7f\u7528\u8fd9\u4e9b\u8282\u70b9\u6765\u5b9a\u4e49\u5e94\u8be5\u5e94\u7528\u7684\u53d8\u6362\uff0c\u8fd9\u4e2a\u5c42\u6b21\u7ed3\u6784\u5b9e\u9645\u4e0a\u5b9a\u4e49\u4e86\u9aa8\u9abc\u7684\u5c42\u6b21\u7ed3\u6784\u3002\u6bcf\u4e2a\u9aa8\u9abc\u90fd\u662f\u4e00\u4e2a\u8282\u70b9\uff0c\u5e76\u4e14\u6709\u4e00\u4e2a\u7236\u8282\u70b9\uff08\u6839\u8282\u70b9\u9664\u5916\uff09\uff0c\u53ef\u80fd\u8fd8\u6709\u4e00\u7ec4\u5b50\u8282\u70b9\u3002\u6709\u4e00\u4e9b\u7279\u6b8a\u7684\u8282\u70b9\u4e0d\u662f\u9aa8\u9abc\uff0c\u5b83\u4eec\u7528\u4e8e\u5bf9\u53d8\u6362\u8fdb\u884c\u5206\u7ec4\uff0c\u5728\u8ba1\u7b97\u53d8\u6362\u65f6\u8fdb\u884c\u5904\u7406\u3002\u53e6\u4e00\u4e2a\u95ee\u9898\u662f\uff0c\u8fd9\u4e9b\u8282\u70b9\u7684\u5c42\u6b21\u7ed3\u6784\u662f\u57fa\u4e8e\u6574\u4e2a\u6a21\u578b\u5b9a\u4e49\u7684\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u7f51\u683c\uff0c\u6211\u4eec\u6ca1\u6709\u5355\u72ec\u7684\u5c42\u6b21\u7ed3\u6784\u3002 \u573a\u666f\u8fd8\u5b9a\u4e49\u4e86\u4e00\u7ec4\u52a8\u753b\u3002\u4e00\u4e2a\u6a21\u578b\u53ef\u4ee5\u6709\u591a\u4e2a\u52a8\u753b\uff0c\u53ef\u4ee5\u5bf9\u6a21\u578b\u505a\u884c\u8d70\u3001\u8dd1\u52a8\u7b49\u52a8\u753b\u3002\u6bcf\u4e2a\u52a8\u753b\u5b9a\u4e49\u4e86\u4e0d\u540c\u7684\u53d8\u6362\u3002\u52a8\u753b\u5177\u6709\u4ee5\u4e0b\u5c5e\u6027\uff1a \u4e00\u4e2a\u540d\u5b57\u3002 \u6301\u7eed\u65f6\u95f4\u3002\u5373\u52a8\u753b\u7684\u6301\u7eed\u65f6\u95f4\uff0c\u7531\u4e8e\u52a8\u753b\u662f\u5e94\u7528\u4e8e\u6bcf\u4e2a\u4e0d\u540c\u5e27\u7684\u6bcf\u4e2a\u8282\u70b9\u7684\u53d8\u6362\u5217\u8868\uff0c\u56e0\u6b64\u540d\u79f0\u53ef\u80fd\u770b\u8d77\u6765\u5f88\u6df7\u4e71\u3002 \u4e00\u4e2a\u52a8\u753b\u901a\u9053\uff08Animation Channel\uff09\u7684\u5217\u8868\u3002\u52a8\u753b\u901a\u9053\u50a8\u5b58\u5e94\u5e94\u7528\u4e8e\u6bcf\u4e2a\u8282\u70b9\u7684\u7279\u5b9a\u65f6\u95f4\u70b9\u7684\u4f4d\u79fb\u3001\u65cb\u8f6c\u548c\u7f29\u653e\u6570\u636e\uff0c\u6a21\u578b\u4e2d\u50a8\u5b58\u52a8\u753b\u901a\u9053\u6570\u636e\u7684\u7c7b\u662f AINodeAnim \u3002 \u4e0b\u56fe\u5c55\u793a\u4e86\u4e0a\u8ff0\u6240\u6709\u5143\u7d20\u4e4b\u95f4\u7684\u5173\u7cfb\uff1a \u5bf9\u4e8e\u7279\u5b9a\u7684\u65f6\u523b\uff0c\u6216\u8005\u8bf4\u5bf9\u4e8e\u5e27\uff0c\u8981\u5e94\u7528\u5230\u9aa8\u9abc\u7684\u53d8\u6362\u662f\u5728\u52a8\u753b\u901a\u9053\u4e2d\u4e3a\u8be5\u65f6\u523b\u5b9a\u4e49\u7684\u53d8\u6362\uff0c\u4e58\u4ee5\u6240\u6709\u7236\u8282\u70b9\u5230\u6839\u8282\u70b9\u7684\u53d8\u6362\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u5bf9\u573a\u666f\u4e2d\u5b58\u50a8\u7684\u4fe1\u606f\u8fdb\u884c\u91cd\u65b0\u6392\u5e8f\uff0c\u6d41\u7a0b\u5982\u4e0b\uff1a \u6784\u9020\u8282\u70b9\u5c42\u6b21\u7ed3\u6784\u3002 \u5bf9\u6bcf\u4e2a\u52a8\u753b\uff0c\u8fed\u4ee3\u6bcf\u4e2a\u52a8\u753b\u901a\u9053\uff08\u5bf9\u6bcf\u4e2a\u52a8\u753b\u8282\u70b9\uff09\uff1a\u4e3a\u6240\u6709\u5e27\u6784\u9020\u53d8\u6362\u77e9\u9635\u3002\u53d8\u6362\u77e9\u9635\u662f\u4f4d\u79fb\u3001\u65cb\u8f6c\u548c\u7f29\u653e\u77e9\u9635\u7684\u7ec4\u5408\u3002 \u91cd\u65b0\u6392\u5217\u6bcf\u4e00\u5e27\u7684\u4fe1\u606f\uff1a\u6784\u9020\u8981\u5e94\u7528\u4e8e\u7f51\u683c\u4e2d\u6bcf\u4e2a\u9aa8\u9abc\u7684\u6700\u7ec8\u53d8\u6362\u3002\u8fd9\u662f\u901a\u8fc7\u5c06\u9aa8\u9abc\u7684\u53d8\u6362\u77e9\u9635\uff08\u76f8\u5173\u8282\u70b9\u7684\u53d8\u6362\u77e9\u9635\uff09\u4e58\u4ee5\u6240\u6709\u7236\u8282\u70b9\u7684\u53d8\u6362\u77e9\u9635\u76f4\u5230\u6839\u8282\u70b9\u6765\u5b9e\u73b0\u7684\u3002 \u8ba9\u6211\u4eec\u5f00\u59cb\u7f16\u7801\u5427\u3002\u9996\u5148\u5c06\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a AnimMeshesLoader \u7684\u7c7b\uff0c\u5b83\u7531 StaticMeshesLoader \u6269\u5c55\uff0c\u4f46\u5b83\u4e0d\u8fd4\u56de\u7f51\u683c\u6570\u7ec4\uff0c\u800c\u662f\u8fd4\u56de\u4e00\u4e2a AnimGameItem \u5b9e\u4f8b\u3002\u5b83\u5b9a\u4e49\u4e86\u4e24\u4e2a\u516c\u5171\u65b9\u6cd5\uff1a public static AnimGameItem loadAnimGameItem(String resourcePath, String texturesDir) throws Exception { return loadAnimGameItem(resourcePath, texturesDir, aiProcess_GenSmoothNormals | aiProcess_JoinIdenticalVertices | aiProcess_Triangulate | aiProcess_FixInfacingNormals | aiProcess_LimitBoneWeights); } public static AnimGameItem loadAnimGameItem(String resourcePath, String texturesDir, int flags) throws Exception { AIScene aiScene = aiImportFile(resourcePath, flags); if (aiScene == null) { throw new Exception(\"Error loading model\"); } int numMaterials = aiScene.mNumMaterials(); PointerBuffer aiMaterials = aiScene.mMaterials(); List<Material> materials = new ArrayList<>(); for (int i = 0; i < numMaterials; i++) { AIMaterial aiMaterial = AIMaterial.create(aiMaterials.get(i)); processMaterial(aiMaterial, materials, texturesDir); } List<Bone> boneList = new ArrayList<>(); int numMeshes = aiScene.mNumMeshes(); PointerBuffer aiMeshes = aiScene.mMeshes(); Mesh[] meshes = new Mesh[numMeshes]; for (int i = 0; i < numMeshes; i++) { AIMesh aiMesh = AIMesh.create(aiMeshes.get(i)); Mesh mesh = processMesh(aiMesh, materials, boneList); meshes[i] = mesh; } AINode aiRootNode = aiScene.mRootNode(); Matrix4f rootTransfromation = AnimMeshesLoader.toMatrix(aiRootNode.mTransformation()); Node rootNode = processNodesHierarchy(aiRootNode, null); Map<String, Animation> animations = processAnimations(aiScene, boneList, rootNode, rootTransfromation); AnimGameItem item = new AnimGameItem(meshes, animations); return item; } \u8fd9\u4e9b\u65b9\u6cd5\u4e0e StaticMeshesLoader \u4e2d\u5b9a\u4e49\u7684\u65b9\u6cd5\u975e\u5e38\u76f8\u4f3c\uff0c\u4f46\u6709\u5982\u4e0b\u533a\u522b\uff1a \u4f20\u9012\u9ed8\u8ba4\u52a0\u8f7d\u6807\u8bb0\u7684\u65b9\u6cd5\u4f7f\u7528\u4e86\u65b0\u53c2\u6570\uff1a aiProcess_LimitBoneWeights \u3002\u8fd9\u5c06\u4f1a\u5c06\u5f71\u54cd\u9876\u70b9\u7684\u6700\u5927\u6743\u91cd\u6570\u9650\u5236\u4e3a4\uff08\u8fd9\u4e5f\u662f\u6211\u4eec\u5f53\u524d\u5728\u52a8\u753b\u7ae0\u8282\u4e2d\u652f\u6301\u7684\u6700\u5927\u503c\uff09\u3002 \u5b9e\u9645\u52a0\u8f7d\u6a21\u578b\u7684\u65b9\u6cd5\u53ea\u52a0\u8f7d\u4e0d\u540c\u7684\u7f51\u683c\uff0c\u4f46\u5b83\u9996\u5148\u8ba1\u7b97\u8282\u70b9\u5c42\u6b21\u7ed3\u6784\uff0c\u7136\u540e\u5728\u7ed3\u5c3e\u8c03\u7528 processAnimations \u4ee5\u751f\u6210 AnimGameItem \u5b9e\u4f8b\u3002 processMesh \u65b9\u6cd5\u4e0e StaticMeshesLoader \u7c7b\u4e2d\u7684\u65b9\u6cd5\u975e\u5e38\u76f8\u4f3c\uff0c\u53ea\u662f\u5b83\u521b\u5efa\u7684\u7f51\u683c\u5c06\u5173\u8282\u7d22\u5f15\u548c\u6743\u91cd\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\uff1a processBones(aiMesh, boneList, boneIds, weights); Mesh mesh = new Mesh(Utils.listToArray(vertices), Utils.listToArray(textures), Utils.listToArray(normals), Utils.listIntToArray(indices), Utils.listIntToArray(boneIds), Utils.listToArray(weights)); \u5173\u8282\u7d22\u5f15\u548c\u6743\u91cd\u6309 processBones \u65b9\u6cd5\u8ba1\u7b97\uff1a private static void processBones(AIMesh aiMesh, List<Bone> boneList, List<Integer> boneIds, List<Float> weights) { Map<Integer, List<VertexWeight>> weightSet = new HashMap<>(); int numBones = aiMesh.mNumBones(); PointerBuffer aiBones = aiMesh.mBones(); for (int i = 0; i < numBones; i++) { AIBone aiBone = AIBone.create(aiBones.get(i)); int id = boneList.size(); Bone bone = new Bone(id, aiBone.mName().dataString(), toMatrix(aiBone.mOffsetMatrix())); boneList.add(bone); int numWeights = aiBone.mNumWeights(); AIVertexWeight.Buffer aiWeights = aiBone.mWeights(); for (int j = 0; j < numWeights; j++) { AIVertexWeight aiWeight = aiWeights.get(j); VertexWeight vw = new VertexWeight(bone.getBoneId(), aiWeight.mVertexId(), aiWeight.mWeight()); List<VertexWeight> vertexWeightList = weightSet.get(vw.getVertexId()); if (vertexWeightList == null) { vertexWeightList = new ArrayList<>(); weightSet.put(vw.getVertexId(), vertexWeightList); } vertexWeightList.add(vw); } } int numVertices = aiMesh.mNumVertices(); for (int i = 0; i < numVertices; i++) { List<VertexWeight> vertexWeightList = weightSet.get(i); int size = vertexWeightList != null ? vertexWeightList.size() : 0; for (int j = 0; j < Mesh.MAX_WEIGHTS; j++) { if (j < size) { VertexWeight vw = vertexWeightList.get(j); weights.add(vw.getWeight()); boneIds.add(vw.getBoneId()); } else { weights.add(0.0f); boneIds.add(0); } } } } \u6b64\u65b9\u6cd5\u904d\u5386\u7279\u5b9a\u7f51\u683c\u7684\u9aa8\u9abc\u5b9a\u4e49\uff0c\u83b7\u53d6\u5176\u6743\u91cd\u5e76\u751f\u6210\u4e09\u4e2a\u5217\u8868\uff1a boneList \uff1a\u50a8\u5b58\u8282\u70b9\u53ca\u5176\u504f\u79fb\u77e9\u9635\u7684\u5217\u8868\u3002\u7a0d\u540e\u5c06\u4f7f\u7528\u5b83\u6765\u8ba1\u7b97\u8282\u70b9\u53d8\u6362\u3002\u5df2\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a Bone \u7684\u65b0\u7c7b\u6765\u50a8\u5b58\u8be5\u4fe1\u606f\u3002\u6b64\u5217\u8868\u5c06\u50a8\u5b58\u6240\u6709\u7f51\u683c\u7684\u9aa8\u9abc\u3002 boneIds \uff1a\u53ea\u50a8\u5b58\u5305\u542b Mesh \u7684\u6bcf\u4e2a\u9876\u70b9\u7684\u9aa8\u9abc\u6807\u8bc6\u3002\u9aa8\u9abc\u5728\u6e32\u67d3\u65f6\u6839\u636e\u5176\u4f4d\u7f6e\u8fdb\u884c\u6807\u8bc6\uff0c\u6b64\u5217\u8868\u4ec5\u5305\u542b\u7279\u5b9a\u7f51\u683c\u7684\u9aa8\u9abc\u3002 weights \uff1a\u50a8\u5b58\u8981\u5e94\u7528\u4e8e\u5173\u8054\u9aa8\u9abc\u7684 Mesh \u7684\u6bcf\u4e2a\u9876\u70b9\u7684\u6743\u91cd\u3002 weights \u548c boneIds \u4e2d\u50a8\u5b58\u7684\u6570\u636e\u7528\u4e8e\u6784\u9020 Mesh \u6570\u636e\u3002 boneList \u4e2d\u50a8\u5b58\u7684\u6570\u636e\u5c06\u5728\u7a0d\u540e\u8ba1\u7b97\u52a8\u753b\u6570\u636e\u65f6\u4f7f\u7528\u3002 \u8ba9\u6211\u4eec\u56de\u5230 loadAnimGameItem \u65b9\u6cd5\u3002\u4e00\u65e6\u6211\u4eec\u521b\u5efa\u4e86\u7f51\u683c\uff0c\u8fd8\u5f97\u5230\u4e86\u5e94\u7528\u4e8e\u6839\u8282\u70b9\u7684\u53d8\u6362\uff0c\u8be5\u53d8\u6362\u4e5f\u5c06\u7528\u4e8e\u8ba1\u7b97\u6700\u7ec8\u7684\u53d8\u6362\u3002\u4e4b\u540e\uff0c\u6211\u4eec\u9700\u8981\u5904\u7406\u8282\u70b9\u7684\u5c42\u6b21\u7ed3\u6784\uff0c\u8fd9\u662f\u5728 processNodesHierarchy \u65b9\u6cd5\u4e2d\u5b8c\u6210\u7684\u3002\u8fd9\u4e2a\u65b9\u6cd5\u975e\u5e38\u7b80\u5355\uff0c\u5b83\u53ea\u662f\u4ece\u6839\u8282\u70b9\u5f00\u59cb\u904d\u5386\u8282\u70b9\u5c42\u6b21\u7ed3\u6784\uff0c\u6784\u9020\u4e00\u4e2a\u8282\u70b9\u6811\u3002 private static Node processNodesHierarchy(AINode aiNode, Node parentNode) { String nodeName = aiNode.mName().dataString(); Node node = new Node(nodeName, parentNode); int numChildren = aiNode.mNumChildren(); PointerBuffer aiChildren = aiNode.mChildren(); for (int i = 0; i < numChildren; i++) { AINode aiChildNode = AINode.create(aiChildren.get(i)); Node childNode = processNodesHierarchy(aiChildNode, node); node.addChild(childNode); } return node; } \u6211\u4eec\u5df2\u7ecf\u521b\u5efa\u4e86\u4e00\u4e2a\u65b0\u7684 Node \u7c7b\uff0c\u8be5\u7c7b\u5c06\u50a8\u5b58 AINode \u5b9e\u4f8b\u7684\u76f8\u5173\u4fe1\u606f\uff0c\u5e76\u63d0\u4f9b\u4e86\u67e5\u627e\u65b9\u6cd5\u6765\u5b9a\u4f4d\u8282\u70b9\u5c42\u6b21\u7ed3\u6784\uff0c\u4ee5\u4fbf\u6309\u540d\u79f0\u67e5\u627e\u8282\u70b9\u3002\u56de\u5230 loadAnimGameItem \u65b9\u6cd5\uff0c\u6211\u4eec\u53ea\u4f7f\u7528\u8be5\u6570\u636e\u8ba1\u7b97 processAnimations \u65b9\u6cd5\u4e2d\u7684\u52a8\u753b\u3002\u8be5\u65b9\u6cd5\u8fd4\u56de Animation \u5b9e\u4f8b\u7684 Map \u3002\u8bf7\u8bb0\u4f4f\uff0c\u4e00\u4e2a\u6a21\u578b\u53ef\u4ee5\u6709\u591a\u4e2a\u52a8\u753b\uff0c\u56e0\u6b64\u5b83\u4eec\u6309\u540d\u79f0\u50a8\u5b58\u7d22\u5f15\u3002\u6709\u4e86\u8fd9\u4e9b\u6570\u636e\uff0c\u6211\u4eec\u7ec8\u4e8e\u53ef\u4ee5\u6784\u5efa\u4e00\u4e2a AnimAgameItem \u5b9e\u4f8b\u3002 processAnimations \u65b9\u6cd5\u7684\u5b9a\u4e49\u5982\u4e0b\u6240\u793a\uff1a private static Map<String, Animation> processAnimations(AIScene aiScene, List<Bone> boneList, Node rootNode, Matrix4f rootTransformation) { Map<String, Animation> animations = new HashMap<>(); // \u5904\u7406\u6240\u6709\u52a8\u753b int numAnimations = aiScene.mNumAnimations(); PointerBuffer aiAnimations = aiScene.mAnimations(); for (int i = 0; i < numAnimations; i++) { AIAnimation aiAnimation = AIAnimation.create(aiAnimations.get(i)); // \u4e3a\u6bcf\u4e2a\u8282\u70b9\u8ba1\u7b97\u53d8\u6362\u77e9\u9635 int numChanels = aiAnimation.mNumChannels(); PointerBuffer aiChannels = aiAnimation.mChannels(); for (int j = 0; j < numChanels; j++) { AINodeAnim aiNodeAnim = AINodeAnim.create(aiChannels.get(j)); String nodeName = aiNodeAnim.mNodeName().dataString(); Node node = rootNode.findByName(nodeName); buildTransFormationMatrices(aiNodeAnim, node); } List<AnimatedFrame> frames = buildAnimationFrames(boneList, rootNode, rootTransformation); Animation animation = new Animation(aiAnimation.mName().dataString(), frames, aiAnimation.mDuration()); animations.put(animation.getName(), animation); } return animations; } \u5c06\u4e3a\u6bcf\u4e2a\u52a8\u753b\u5904\u7406\u5176\u52a8\u753b\u901a\u9053\uff0c\u6bcf\u4e2a\u901a\u9053\u5b9a\u4e49\u4e86\u4e0d\u540c\u7684\u53d8\u6362\uff0c\u8fd9\u4e9b\u53d8\u5316\u5e94\u8be5\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u5e94\u7528\u4e8e\u4e00\u4e2a\u8282\u70b9\u3002\u4e3a\u6bcf\u4e2a\u8282\u70b9\u5b9a\u4e49\u7684\u53d8\u6362\u5728 buildTransFormationMatrices \u65b9\u6cd5\u4e2d\u5b9a\u4e49\uff0c\u8fd9\u4e9b\u77e9\u9635\u88ab\u6bcf\u4e2a\u8282\u70b9\u50a8\u5b58\u3002\u4e00\u65e6\u8282\u70b9\u5c42\u6b21\u7ed3\u6784\u4e2d\u50a8\u5b58\u5b8c\u8fd9\u4e9b\u4fe1\u606f\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u6784\u5efa\u52a8\u753b\u5e27\u3002 \u8ba9\u6211\u4eec\u5148\u56de\u987e\u4e00\u4e0b buildTransFormationMatrices \u65b9\u6cd5\uff1a private static void buildTransFormationMatrices(AINodeAnim aiNodeAnim, Node node) { int numFrames = aiNodeAnim.mNumPositionKeys(); AIVectorKey.Buffer positionKeys = aiNodeAnim.mPositionKeys(); AIVectorKey.Buffer scalingKeys = aiNodeAnim.mScalingKeys(); AIQuatKey.Buffer rotationKeys = aiNodeAnim.mRotationKeys(); for (int i = 0; i < numFrames; i++) { AIVectorKey aiVecKey = positionKeys.get(i); AIVector3D vec = aiVecKey.mValue(); Matrix4f transfMat = new Matrix4f().translate(vec.x(), vec.y(), vec.z()); AIQuatKey quatKey = rotationKeys.get(i); AIQuaternion aiQuat = quatKey.mValue(); Quaternionf quat = new Quaternionf(aiQuat.x(), aiQuat.y(), aiQuat.z(), aiQuat.w()); transfMat.rotate(quat); if (i < aiNodeAnim.mNumScalingKeys()) { aiVecKey = scalingKeys.get(i); vec = aiVecKey.mValue(); transfMat.scale(vec.x(), vec.y(), vec.z()); } node.addTransformation(transfMat); } } \u5982\u4f60\u6240\u89c1\uff0c AINodeAnim \u5b9e\u4f8b\u5b9a\u4e49\u4e86\u4e00\u7ec4\u5305\u542b\u4f4d\u79fb\u3001\u65cb\u8f6c\u548c\u7f29\u653e\u4fe1\u606f\u7684\u952e\uff0c\u8fd9\u4e9b\u952e\u662f\u6307\u7279\u5b9a\u7684\u65f6\u523b\u3002\u6211\u4eec\u5047\u8bbe\u6570\u636e\u662f\u6309\u65f6\u95f4\u987a\u5e8f\u6392\u5217\u7684\uff0c\u5e76\u6784\u5efa\u4e00\u4e2a\u50a8\u5b58\u8981\u5e94\u7528\u4e8e\u6bcf\u4e2a\u5e27\u7684\u53d8\u6362\u7684\u77e9\u9635\u5217\u8868\u3002\u6700\u540e\u7684\u8ba1\u7b97\u662f\u5728 buildAnimationFrames \u65b9\u6cd5\u4e2d\u5b8c\u6210\u7684\uff1a private static List<AnimatedFrame> buildAnimationFrames(List<Bone> boneList, Node rootNode, Matrix4f rootTransformation) { int numFrames = rootNode.getAnimationFrames(); List<AnimatedFrame> frameList = new ArrayList<>(); for (int i = 0; i < numFrames; i++) { AnimatedFrame frame = new AnimatedFrame(); frameList.add(frame); int numBones = boneList.size(); for (int j = 0; j < numBones; j++) { Bone bone = boneList.get(j); Node node = rootNode.findByName(bone.getBoneName()); Matrix4f boneMatrix = Node.getParentTransforms(node, i); boneMatrix.mul(bone.getOffsetMatrix()); boneMatrix = new Matrix4f(rootTransformation).mul(boneMatrix); frame.setMatrix(j, boneMatrix); } } return frameList; } \u6b64\u65b9\u6cd5\u8fd4\u56de AnimatedFrame \u5b9e\u4f8b\u7684\u5217\u8868\uff0c\u6bcf\u4e2a AnimatedFrame \u5b9e\u4f8b\u5c06\u50a8\u5b58\u8981\u5e94\u7528\u4e8e\u7279\u5b9a\u5e27\u7684\u6bcf\u4e2a\u9aa8\u9abc\u7684\u53d8\u6362\u5217\u8868\u3002\u8fd9\u4e2a\u65b9\u6cd5\u53ea\u662f\u8fed\u4ee3\u50a8\u5b58\u6240\u6709\u9aa8\u9abc\u7684\u5217\u8868\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u9aa8\u9abc\uff1a \u83b7\u53d6\u76f8\u5173\u8054\u7684\u8282\u70b9\u3002 \u901a\u8fc7\u5c06\u76f8\u5173\u8054\u7684 Node \u7684\u53d8\u6362\u4e0e\u5176\u7236\u8282\u70b9\u7684\u6240\u6709\u53d8\u6362\u76f8\u4e58\uff0c\u751f\u6210\u53d8\u6362\u77e9\u9635\uff0c\u76f4\u81f3\u6839\u8282\u70b9\u3002\u8fd9\u662f\u5728 Node.getParentTransforms \u65b9\u6cd5\u4e2d\u5b8c\u6210\u7684\u3002 \u5b83\u5c06\u8be5\u77e9\u9635\u4e0e\u9aa8\u9abc\u7684\u504f\u501a\u77e9\u9635\u76f8\u4e58\u3002 \u6700\u540e\u7684\u53d8\u6362\u662f\u901a\u8fc7\u5c06\u6839\u8282\u70b9\u7684\u53d8\u6362\u4e0e\u4e0a\u8ff0\u6b65\u9aa4\u4e2d\u8ba1\u7b97\u7684\u77e9\u9635\u76f8\u4e58\u6765\u8ba1\u7b97\u7684\u3002 \u6e90\u4ee3\u7801\u4e2d\u7684\u5176\u4ed6\u4fee\u6539\u662f\u4e3a\u4e86\u9002\u5e94\u67d0\u4e9b\u7ed3\u6784\u800c\u8fdb\u884c\u7684\u5fae\u5c0f\u4fee\u6539\u3002\u6700\u540e\uff0c\u4f60\u80fd\u591f\u52a0\u8f7d\u7c7b\u4f3c\u4e8e\u4e0b\u56fe\u7684\u52a8\u753b\uff08\u4f60\u9700\u8981\u6309\u7a7a\u683c\u6539\u53d8\u5e27\uff09\uff1a \u8fd9\u4e2a\u793a\u4f8b\u7684\u590d\u6742\u4e4b\u5904\u5728\u4e8eAssimp\u7ed3\u6784\u7684\u8c03\u6574\uff0c\u4f7f\u5176\u9002\u5e94\u672c\u4e66\u4e2d\u4f7f\u7528\u7684\u5f15\u64ce\uff0c\u5e76\u9884\u5148\u8ba1\u7b97\u6bcf\u4e2a\u5e27\u7684\u6570\u636e\u3002\u6b64\u5916\uff0c\u8fd9\u4e9b\u6982\u5ff5\u4e0e\u52a8\u753b\u4e00\u7ae0\u4e2d\u7684\u6982\u5ff5\u7c7b\u4f3c\u3002\u4f60\u53ef\u4ee5\u5c1d\u8bd5\u4fee\u6539\u6e90\u4ee3\u7801\u4ee5\u5728\u5e27\u4e4b\u95f4\u63d2\u5165\uff0c\u4ee5\u83b7\u5f97\u66f4\u5e73\u6ed1\u7684\u52a8\u753b\u3002","title":"\u52a8\u753b"},{"location":"28-deferred-shading/","text":"\u5ef6\u8fdf\u7740\u8272\u6cd5\uff08Deferred Shading\uff09 \u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u6e32\u67d3\u4e09\u7ef4\u573a\u666f\u7684\u65b9\u5f0f\u79f0\u4e3a\u6b63\u5411\u6e32\u67d3\u6cd5\uff08Forward Rendering\uff09\u3002\u6211\u4eec\u9996\u5148\u6e32\u67d33D\u5bf9\u8c61\uff0c\u5e76\u5728\u7247\u5143\u7740\u8272\u5668\u4e2d\u5e94\u7528\u7eb9\u7406\u548c\u5149\u7167\u6548\u679c\u3002\u5982\u679c\u6211\u4eec\u6709\u4e00\u4e2a\u5177\u6709\u591a\u79cd\u5149\u7167\u548c\u590d\u6742\u6548\u679c\u7684\u590d\u6742\u7247\u5143\u7740\u8272\u5668\u5904\u7406\u9636\u6bb5\uff0c\u8fd9\u79cd\u65b9\u6cd5\u5c31\u4e0d\u662f\u5f88\u9ad8\u6548\u3002\u6b64\u5916\uff0c\u6211\u4eec\u6700\u7ec8\u53ef\u80fd\u4f1a\u5c06\u8fd9\u4e9b\u6548\u679c\u5e94\u7528\u5230\u7a0d\u540e\u53ef\u80fd\u7531\u4e8e\u6df1\u5ea6\u6d4b\u8bd5\u800c\u88ab\u4e22\u5f03\u7684\u7247\u5143\u4e0a\uff08\u5c3d\u7ba1\u8fd9\u5e76\u4e0d\u5b8c\u5168\u6b63\u786e\uff0c\u5982\u679c\u6211\u4eec\u542f\u7528 \u65e9\u671f\u7247\u5143\u6d4b\u8bd5 \u7684\u8bdd\uff09\u3002 \u4e3a\u4e86\u7f13\u89e3\u4e0a\u8ff0\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u6539\u53d8\u65b9\u5f0f\uff0c\u4f7f\u7528\u4e00\u79cd\u79f0\u4e3a\u5ef6\u8fdf\u7740\u8272\u6cd5\u7684\u6280\u672f\u6765\u6e32\u67d3\u573a\u666f\u3002\u901a\u8fc7\u5ef6\u8fdf\u7740\u8272\u6cd5\uff0c\u6211\u4eec\u5148\u5c06\u540e\u671f\uff08\u5728\u7247\u5143\u7740\u8272\u5668\u4e2d\uff09\u6240\u9700\u7684\u51e0\u4f55\u4fe1\u606f\u6e32\u67d3\u5230\u7f13\u51b2\u533a\u3002\u5f53\u4f7f\u7528\u50a8\u5b58\u5728\u8fd9\u4e9b\u7f13\u51b2\u533a\u4e2d\u7684\u4fe1\u606f\u65f6\uff0c\u7247\u5143\u7740\u8272\u5668\u6240\u9700\u7684\u590d\u6742\u8fd0\u7b97\u88ab\u63a8\u8fdf\uff08Postpone\uff09\u3001\u5ef6\u8fdf\uff08Defer\uff09\u5230\u4e4b\u540e\u7684\u9636\u6bb5\u3002 \u56e0\u6b64\uff0c\u4f7f\u7528\u5ef6\u8fdf\u7740\u8272\u6cd5\uff0c\u6211\u4eec\u8fdb\u884c\u4e24\u4e2a\u6e32\u67d3\u9636\u6bb5\uff08Pass\uff09\u3002\u7b2c\u4e00\u4e2a\u662f\u51e0\u4f55\u5904\u7406\u9636\u6bb5\uff0c\u6211\u4eec\u5c06\u573a\u666f\u6e32\u67d3\u5230\u50a8\u5b58\u4ee5\u4e0b\u6570\u636e\u7684\u7f13\u51b2\u533a\u4e2d\uff1a \u4f4d\u7f6e\uff08\u5728\u672c\u4f8b\u4e2d\uff0c\u5728\u5149\u7167\u89c6\u56fe\u5750\u6807\u7cfb\u4e2d\uff0c\u5c3d\u7ba1\u4f60\u53ef\u4ee5\u770b\u5230\u4f7f\u7528\u4e16\u754c\u5750\u6807\u7684\u5176\u4ed6\u793a\u4f8b\uff09\u3002 \u6bcf\u4e2a\u4f4d\u7f6e\u7684\u6f2b\u53cd\u5c04\u989c\u8272\u3002 \u6bcf\u4e2a\u4f4d\u7f6e\u7684\u955c\u9762\u53cd\u5c04\u5206\u91cf\u3002 \u6bcf\u4e2a\u4f4d\u7f6e\u7684\u6cd5\u7ebf\uff08\u4e5f\u5728\u5149\u7167\u89c6\u56fe\u5750\u6807\u7cfb\u4e2d\uff09\u3002 \u6709\u5411\u5149\u7684\u9634\u5f71\u56fe\uff08\u4f60\u53ef\u80fd\u4f1a\u53d1\u73b0\u8fd9\u4e00\u6b65\u5728\u5176\u4ed6\u5b9e\u73b0\u4e2d\u662f\u5355\u72ec\u5b8c\u6210\u7684\uff09\u3002 \u6240\u6709\u8fd9\u4e9b\u6570\u636e\u90fd\u5b58\u50a8\u5728\u4e00\u4e2a\u79f0\u4e3aG\u7f13\u51b2\u533a\uff08G-Buffer\uff09\u7684\u7f13\u51b2\u533a\u4e2d\u3002 \u7b2c\u4e8c\u4e2a\u9636\u6bb5\u79f0\u4e3a\u5149\u7167\u5904\u7406\u9636\u6bb5\uff0c\u8be5\u9636\u6bb5\u9700\u8981\u4e00\u4e2a\u5145\u6ee1\u6574\u4e2a\u5c4f\u5e55\u7684\u77e9\u5f62\uff0c\u5e76\u4f7f\u7528G\u7f13\u51b2\u533a\u4e2d\u50a8\u5b58\u7684\u4fe1\u606f\u4e3a\u6bcf\u4e2a\u7247\u5143\u751f\u6210\u989c\u8272\u4fe1\u606f\u3002\u5f53\u6211\u4eec\u8fdb\u884c\u5149\u7167\u5904\u7406\u9636\u6bb5\u65f6\uff0c\u6df1\u5ea6\u6d4b\u8bd5\u5c06\u5220\u9664\u6240\u6709\u770b\u4e0d\u5230\u7684\u573a\u666f\u6570\u636e\u3002\u56e0\u6b64\uff0c\u8981\u6267\u884c\u7684\u64cd\u4f5c\u6570\u91cf\u4ec5\u9650\u4e8e\u5c06\u5728\u5c4f\u5e55\u4e0a\u663e\u793a\u7684\u3002 \u4f60\u53ef\u80fd\u4f1a\u95ee\u8fdb\u884c\u989d\u5916\u7684\u6e32\u67d3\u9636\u6bb5\u80fd\u5426\u63d0\u9ad8\u6027\u80fd\uff0c\u7b54\u6848\u662f\u89c6\u60c5\u51b5\u800c\u5b9a\u3002\u5ef6\u8fdf\u7740\u8272\u6cd5\u901a\u5e38\u5728\u6709\u8bb8\u591a\u4e0d\u540c\u7684\u5149\u7167\u5904\u7406\u9636\u6bb5\u65f6\u4f7f\u7528\uff0c\u5728\u6b64\u60c5\u51b5\u4e0b\uff0c\u989d\u5916\u7684\u6e32\u67d3\u9636\u6bb5\u5c06\u901a\u8fc7\u51cf\u5c11\u5c06\u5728\u7247\u5143\u7740\u8272\u5668\u4e2d\u6267\u884c\u7684\u64cd\u4f5c\u6765\u8865\u507f\u3002 \u8ba9\u6211\u4eec\u5f00\u59cb\u7f16\u7801\u5427\uff0c\u9996\u5148\u8981\u505a\u7684\u662f\u4e3aG\u7f13\u51b2\u533a\u521b\u5efa\u4e00\u4e2a\u65b0\u7c7b\uff0c\u540d\u4e3a GBuffer \uff0c\u5176\u5b9a\u4e49\u5982\u4e0b\u6240\u793a\uff1a package org.lwjglb.engine.graph; import org.lwjgl.system.MemoryStack; import org.lwjglb.engine.Window; import java.nio.ByteBuffer; import java.nio.IntBuffer; import static org.lwjgl.opengl.GL11.*; import static org.lwjgl.opengl.GL20.*; import static org.lwjgl.opengl.GL30.*; public class GBuffer { private static final int TOTAL_TEXTURES = 6; private int gBufferId; private int[] textureIds; private int width; private int height; \u7c7b\u5b9a\u4e49\u4e86\u4e00\u4e2a\u5e38\u91cf\uff0c\u8be5\u5e38\u91cf\u4e3a\u8981\u4f7f\u7528\u7684\u6700\u5927\u7f13\u51b2\u533a\u6570\u5efa\u6a21\u3002\u4e0eG\u7f13\u51b2\u533a\u672c\u8eab\u5173\u8054\u7684ID\uff0c\u4ee5\u53ca\u5355\u4e2a\u7f13\u51b2\u533a\u7684\u6570\u7ec4\uff0c\u5c4f\u5e55\u7684\u5927\u5c0f\u4e5f\u4f1a\u88ab\u50a8\u5b58\u3002 \u8ba9\u6211\u4eec\u770b\u4e00\u4e0b\u6784\u9020\u51fd\u6570\uff1a public GBuffer(Window window) throws Exception { // \u521b\u5efaG\u7f13\u51b2\u533a gBufferId = glGenFramebuffers(); glBindFramebuffer(GL_DRAW_FRAMEBUFFER, gBufferId); textureIds = new int[TOTAL_TEXTURES]; glGenTextures(textureIds); this.width = window.getWidth(); this.height = window.getHeight(); // \u4e3a\u4f4d\u7f6e\u3001\u6f2b\u53cd\u5c04\u989c\u8272\u3001\u955c\u9762\u53cd\u5c04\u989c\u8272\u3001\u6cd5\u7ebf\u3001\u9634\u5f71\u56e0\u5b50\u548c\u6df1\u5ea6\u521b\u5efa\u7eb9\u7406 // \u6240\u6709\u5750\u6807\u90fd\u5728\u4e16\u754c\u5750\u6807\u7cfb\u4e2d for(int i=0; i<TOTAL_TEXTURES; i++) { glBindTexture(GL_TEXTURE_2D, textureIds[i]); int attachmentType; switch(i) { case TOTAL_TEXTURES - 1: // \u6df1\u5ea6\u5206\u91cf glTexImage2D(GL_TEXTURE_2D, 0, GL_DEPTH_COMPONENT32F, width, height, 0, GL_DEPTH_COMPONENT, GL_FLOAT, (ByteBuffer) null); attachmentType = GL_DEPTH_ATTACHMENT; break; default: glTexImage2D(GL_TEXTURE_2D, 0, GL_RGB32F, width, height, 0, GL_RGB, GL_FLOAT, (ByteBuffer) null); attachmentType = GL_COLOR_ATTACHMENT0 + i; break; } // \u7528\u4e8e\u91c7\u6837 glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST); glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST); // \u5c06\u7eb9\u7406\u7ed1\u5b9a\u5230G\u7f13\u51b2\u533a glFramebufferTexture2D(GL_FRAMEBUFFER, attachmentType, GL_TEXTURE_2D, textureIds[i], 0); } try (MemoryStack stack = MemoryStack.stackPush()) { IntBuffer intBuff = stack.mallocInt(TOTAL_TEXTURES); int values[] = {GL_COLOR_ATTACHMENT0, GL_COLOR_ATTACHMENT1, GL_COLOR_ATTACHMENT2, GL_COLOR_ATTACHMENT3, GL_COLOR_ATTACHMENT4, GL_COLOR_ATTACHMENT5}; for(int i = 0; i < values.length; i++) { intBuff.put(values[i]); } intBuff.flip(); glDrawBuffers(intBuff); } // \u89e3\u7ed1 glBindFramebuffer(GL_FRAMEBUFFER, 0); } \u9996\u5148\u6211\u4eec\u8981\u505a\u7684\u4e8b\u662f\u521b\u5efa\u4e00\u4e2a\u5e27\u7f13\u51b2\u533a\u3002\u8bb0\u4f4f\uff0c\u5e27\u7f13\u51b2\u533a\u53ea\u662f\u4e00\u4e2aOpenGL\u5bf9\u8c61\uff0c\u53ef\u7528\u4e8e\u6e32\u67d3\u64cd\u4f5c\uff0c\u800c\u4e0d\u662f\u6e32\u67d3\u5230\u5c4f\u5e55\u3002\u7136\u540e\u6211\u4eec\u751f\u6210\u4e00\u7ec4\u7eb9\u7406\uff086\u4e2a\u7eb9\u7406\uff09\uff0c\u8fd9\u4e9b\u7eb9\u7406\u5c06\u4e0e\u5e27\u7f13\u51b2\u533a\u5173\u8054\u3002 \u4e4b\u540e\uff0c\u6211\u4eec\u4f7f\u7528for\u5faa\u73af\u6765\u521d\u59cb\u5316\u7eb9\u7406\uff0c\u6709\u5982\u4e0b\u7c7b\u578b\uff1a \u201c\u5e38\u89c4\u7eb9\u7406\u201d\uff0c\u5c06\u50a8\u5b58\u4f4d\u7f6e\u3001\u6cd5\u7ebf\u548c\u6f2b\u53cd\u5c04\u5206\u91cf\u7b49\u3002 \u7528\u4e8e\u50a8\u5b58\u6df1\u5ea6\u7f13\u51b2\u533a\u7684\u7eb9\u7406\uff0c\u8fd9\u5c06\u662f\u6700\u540e\u7684\u7eb9\u7406\u3002 \u7eb9\u7406\u521d\u59cb\u5316\u540e\uff0c\u6211\u4eec\u4e3a\u5b83\u4eec\u542f\u7528\u91c7\u6837\u5e76\u5c06\u5b83\u4eec\u7ed1\u5b9a\u5230\u5e27\u7f13\u51b2\u533a\u3002\u6bcf\u4e2a\u7eb9\u7406\u4f7f\u7528\u4ee5 GL_COLOR_ATTACHMENT0 \u4e3a\u5f00\u5934\u7684ID\u8fdb\u884c\u7ed1\u5b9a\u3002\u6bcf\u4e2a\u7eb9\u7406\u90fd\u4ee5\u8be5ID\u9012\u589e\u4e00\u4f4d\uff0c\u56e0\u6b64\u5750\u6807\u4f7f\u7528 GL_COLOR_ATTACHMENT0 \u7ed1\u5b9a\uff0c\u6f2b\u53cd\u5c04\u5206\u91cf\u4f7f\u7528 GL_COLOR_ATTACHMENT1 \uff08\u5373 GL_COLOR_ATTACHMENT0 + 1 \uff09\u9644\u52a0\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002 \u5728\u521b\u5efa\u5b8c\u6240\u6709\u7eb9\u7406\u4e4b\u540e\uff0c\u6211\u4eec\u9700\u8981\u8ba9\u7247\u5143\u7740\u8272\u5668\u4f7f\u7528\u5b83\u4eec\u8fdb\u884c\u6e32\u67d3\u3002\u8fd9\u662f\u901a\u8fc7\u8c03\u7528 glDrawBuffers \u5b8c\u6210\u7684\u3002\u6211\u4eec\u53ea\u4f20\u9012\u5e26\u6709\u6240\u7528\u989c\u8272\u7ed1\u5b9a\u7684ID\u7684\u6570\u7ec4\uff08 GL_COLOR_ ATTACHMENT0 \u5230 GL_COLOR_ATTACHMENT5 \uff09\u3002 \u7c7b\u7684\u5176\u4ed6\u90e8\u5206\u53ea\u662fgetter\u65b9\u6cd5\u548c cleanup \u65b9\u6cd5\u3002 public int getWidth() { return width; } public int getHeight() { return height; } public int getGBufferId() { return gBufferId; } public int[] getTextureIds() { return textureIds; } public int getPositionTexture() { return textureIds[0]; } public int getDepthTexture() { return textureIds[TOTAL_TEXTURES-1]; } public void cleanUp() { glDeleteFramebuffers(gBufferId); if (textureIds != null) { for (int i=0; i<TOTAL_TEXTURES; i++) { glDeleteTextures(textureIds[i]); } } } \u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a SceneBuffer \u7684\u65b0\u7c7b\uff0c\u5b83\u53ea\u662f\u53e6\u4e00\u4e2a\u5e27\u7f13\u51b2\u533a\uff0c\u5c06\u5728\u6267\u884c\u5149\u7167\u5904\u7406\u9636\u6bb5\u65f6\u4f7f\u7528\u5b83\u3002\u6211\u4eec\u4e0d\u76f4\u63a5\u6e32\u67d3\u5230\u5c4f\u5e55\uff0c\u800c\u662f\u6e32\u67d3\u5230\u8fd9\u4e2a\u5e27\u7f13\u51b2\u533a\u3002\u8fd9\u6837\u505a\uff0c\u6211\u4eec\u53ef\u4ee5\u5e94\u7528\u5176\u4ed6\u6548\u679c\uff08\u5982\u96fe\u3001\u5929\u7a7a\u76d2\u7b49\uff09\u3002\u7c7b\u7684\u5b9a\u4e49\u5982\u4e0b\uff1a package org.lwjglb.engine.graph; import org.lwjglb.engine.Window; import java.nio.ByteBuffer; import static org.lwjgl.opengl.GL11.*; import static org.lwjgl.opengl.GL30.*; public class SceneBuffer { private int bufferId; private int textureId; public SceneBuffer(Window window) throws Exception { // \u521b\u5efa\u7f13\u51b2\u533a bufferId = glGenFramebuffers(); glBindFramebuffer(GL_DRAW_FRAMEBUFFER, bufferId); // \u521b\u5efa\u7eb9\u7406 int[] textureIds = new int[1]; glGenTextures(textureIds); textureId = textureIds[0]; glBindTexture(GL_TEXTURE_2D, textureId); glTexImage2D(GL_TEXTURE_2D, 0, GL_RGB32F, window.getWidth(), window.getHeight(), 0, GL_RGB, GL_FLOAT, (ByteBuffer) null); // \u7528\u4e8e\u91c7\u6837 glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST); glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST); // \u9644\u52a0\u7eb9\u7406\u5230G\u7f13\u51b2\u533a glFramebufferTexture2D(GL_FRAMEBUFFER, GL_COLOR_ATTACHMENT0, GL_TEXTURE_2D, textureId, 0); // \u89e3\u7ed1 glBindFramebuffer(GL_FRAMEBUFFER, 0); } public int getBufferId() { return bufferId; } public int getTextureId() { return textureId; } public void cleanup() { glDeleteFramebuffers(bufferId); glDeleteTextures(textureId); } } \u5982\u4f60\u6240\u89c1\uff0c\u5b83\u7c7b\u4f3c\u4e8e GBuffer \u7c7b\uff0c\u4f46\u8fd9\u91cc\u53ea\u4f7f\u7528\u4e00\u4e2a\u7eb9\u7406\u6765\u50a8\u5b58\u751f\u6210\u7684\u989c\u8272\u3002\u65e2\u7136\u5df2\u7ecf\u521b\u5efa\u4e86\u8fd9\u4e9b\u65b0\u7c7b\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f00\u59cb\u4f7f\u7528\u5b83\u4eec\u4e86\u3002\u5728 Renderer \u7c7b\u4e2d\uff0c\u6211\u4eec\u5c06\u4e0d\u518d\u4f7f\u7528\u7528\u4e8e\u6e32\u67d3\u573a\u666f\u7684\u6b63\u5411\u6e32\u67d3\u7740\u8272\u5668\uff08\u540d\u4e3a scene_vertex.vs \u548c scene_fragment.fs \uff09\u3002 \u5728 Renderer \u7c7b\u7684 init \u65b9\u6cd5\u4e2d\uff0c\u4f60\u4f1a\u770b\u5230\u521b\u5efa\u4e86\u4e00\u4e2a GBuffer \u5b9e\u73b0\uff0c\u6211\u4eec\u5206\u522b\u4e3a\u51e0\u4f55\u5904\u7406\u9636\u6bb5\uff08\u901a\u8fc7\u8c03\u7528 setupGeometryShader \u65b9\u6cd5\uff09\u548c\u5149\u7167\u5904\u7406\u9636\u6bb5\uff08\u901a\u8fc7\u8c03\u7528 setupDirLightShader \u548c setupPointLightShader \u65b9\u6cd5\uff09\u521d\u59cb\u5316\u4e86\u53e6\u4e00\u7ec4\u7740\u8272\u5668\u3002\u4f60\u6362\u53ef\u4ee5\u770b\u5230\u6211\u4eec\u521b\u5efa\u4e86\u4e00\u4e2a\u540d\u4e3a sceneBuffer \u7684 SceneBuffer \u7c7b\u7684\u5b9e\u4f8b\uff0c\u5982\u4e0a\u6240\u8ff0\uff0c\u5b83\u5c06\u5728\u6e32\u67d3\u5149\u7167\u65f6\u4f7f\u7528\u3002\u540d\u4e3a bufferPassModelMatrix \u7684\u5b9e\u7528\u77e9\u9635\u4e5f\u88ab\u5b9e\u4f8b\u5316\uff08\u5728\u6267\u884c\u51e0\u4f55\u5904\u7406\u9636\u6bb5\u65f6\u5c06\u4f7f\u7528\u5b83\uff09\u3002\u4f60\u53ef\u4ee5\u770b\u5230\u6211\u4eec\u5728 init \u65b9\u6cd5\u7684\u672b\u5c3e\u521b\u5efa\u4e86\u4e00\u4e2a\u65b0\u7684 Mesh \uff0c\u5b83\u5c06\u7528\u4e8e\u5149\u7167\u5904\u7406\u9636\u6bb5\u3002\u5173\u4e8e\u8fd9\u65b9\u9762\u7684\u8be6\u60c5\u5c06\u5728\u4e4b\u540e\u4ecb\u7ecd\u3002 public void init(Window window) throws Exception { shadowRenderer.init(window); gBuffer = new GBuffer(window); sceneBuffer = new SceneBuffer(window); setupSkyBoxShader(); setupParticlesShader(); setupGeometryShader(); setupDirLightShader(); setupPointLightShader(); setupFogShader(); bufferPassModelMatrix = new Matrix4f(); bufferPassMesh = StaticMeshesLoader.load(\"src/main/resources/models/buffer_pass_mess.obj\", \"src/main/resources/models\")[0]; } \u51e0\u4f55\u5904\u7406\u9636\u6bb5\u548c\u5149\u7167\u5904\u7406\u9636\u6bb5\u4f7f\u7528\u7684\u7740\u8272\u5668\u5b9a\u4e49\u4e0e\u901a\u5e38\u4e00\u81f4\uff08\u4f60\u53ef\u4ee5\u76f4\u63a5\u67e5\u770b\u6e90\u4ee3\u7801\uff09\uff0c\u8ba9\u6211\u4eec\u5173\u6ce8\u5b83\u4eec\u7684\u5185\u5bb9\u3002\u6211\u4eec\u5c06\u4ece\u51e0\u4f55\u5904\u7406\u9636\u6bb5\u5f00\u59cb\uff0c\u63a5\u4e0b\u6765\u662f\u9876\u70b9\u7740\u8272\u5668\u4ee3\u7801\uff08 gbuffer_vertex.vs \uff09\uff1a #version 330 const int MAX_WEIGHTS = 4; const int MAX_JOINTS = 150; const int NUM_CASCADES = 3; layout (location=0) in vec3 position; layout (location=1) in vec2 texCoord; layout (location=2) in vec3 vertexNormal; layout (location=3) in vec4 jointWeights; layout (location=4) in ivec4 jointIndices; layout (location=5) in mat4 modelInstancedMatrix; layout (location=9) in vec2 texOffset; layout (location=10) in float selectedInstanced; uniform int isInstanced; uniform mat4 viewMatrix; uniform mat4 projectionMatrix; uniform mat4 modelNonInstancedMatrix; uniform mat4 jointsMatrix[MAX_JOINTS]; uniform mat4 lightViewMatrix[NUM_CASCADES]; uniform mat4 orthoProjectionMatrix[NUM_CASCADES]; uniform int numCols; uniform int numRows; uniform float selectedNonInstanced; out vec2 vs_textcoord; out vec3 vs_normal; out vec4 vs_mvVertexPos; out vec4 vs_mlightviewVertexPos[NUM_CASCADES]; out mat4 vs_modelMatrix; out float vs_selected; void main() { vec4 initPos = vec4(0, 0, 0, 0); vec4 initNormal = vec4(0, 0, 0, 0); mat4 modelMatrix; if ( isInstanced > 0 ) { vs_selected = selectedInstanced; modelMatrix = modelInstancedMatrix; initPos = vec4(position, 1.0); initNormal = vec4(vertexNormal, 0.0); } else { vs_selected = selectedNonInstanced; modelMatrix = modelNonInstancedMatrix; int count = 0; for(int i = 0; i < MAX_WEIGHTS; i++) { float weight = jointWeights[i]; if(weight > 0) { count++; int jointIndex = jointIndices[i]; vec4 tmpPos = jointsMatrix[jointIndex] * vec4(position, 1.0); initPos += weight * tmpPos; vec4 tmpNormal = jointsMatrix[jointIndex] * vec4(vertexNormal, 0.0); initNormal += weight * tmpNormal; } } if (count == 0) { initPos = vec4(position, 1.0); initNormal = vec4(vertexNormal, 0.0); } } mat4 modelViewMatrix = viewMatrix * modelMatrix; vs_mvVertexPos = modelViewMatrix * initPos; gl_Position = projectionMatrix * vs_mvVertexPos; // Support for texture atlas, update texture coordinates float x = (texCoord.x / numCols + texOffset.x); float y = (texCoord.y / numRows + texOffset.y); vs_textcoord = vec2(x, y); vs_normal = normalize(modelViewMatrix * initNormal).xyz; for (int i = 0 ; i < NUM_CASCADES ; i++) { vs_mlightviewVertexPos[i] = orthoProjectionMatrix[i] * lightViewMatrix[i] * modelMatrix * initPos; } vs_modelMatrix = modelMatrix; } \u6b64\u7740\u8272\u5668\u4e0e\u4e0a\u4e00\u7ae0\u4e2d\u7528\u4e8e\u6e32\u67d3\u573a\u666f\u7684\u9876\u70b9\u7740\u8272\u5668\u975e\u5e38\u76f8\u4f3c\uff0c\u8f93\u51fa\u53d8\u91cf\u7684\u540d\u79f0\u6709\u4e00\u4e9b\u53d8\u5316\uff0c\u4f46\u672c\u8d28\u4e0a\u662f\u76f8\u540c\u7684\u7740\u8272\u5668\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5b83\u5e94\u8be5\u662f\u51e0\u8fd1\u4e00\u81f4\u7684\uff0c\u6211\u4eec\u6e32\u67d3\u9876\u70b9\u7684\u65b9\u5f0f\u4e0d\u5e94\u8be5\u6539\u53d8\uff0c\u4e3b\u8981\u7684\u66f4\u6539\u662f\u5728\u7247\u5143\u7740\u8272\u5668\u4e2d\uff0c\u5b83\u662f\u8fd9\u6837\u5b9a\u4e49\u7684\uff08 gbuffer_fragment.fs \uff09\uff1a #version 330 const int NUM_CASCADES = 3; in vec2 vs_textcoord; in vec3 vs_normal; in vec4 vs_mvVertexPos; in vec4 vs_mlightviewVertexPos[NUM_CASCADES]; in mat4 vs_modelMatrix; in float vs_selected; layout (location = 0) out vec3 fs_worldpos; layout (location = 1) out vec3 fs_diffuse; layout (location = 2) out vec3 fs_specular; layout (location = 3) out vec3 fs_normal; layout (location = 4) out vec2 fs_shadow; uniform mat4 viewMatrix; struct Material { vec4 diffuse; vec4 specular; int hasTexture; int hasNormalMap; float reflectance; }; uniform sampler2D texture_sampler; uniform sampler2D normalMap; uniform Material material; uniform sampler2D shadowMap_0; uniform sampler2D shadowMap_1; uniform sampler2D shadowMap_2; uniform float cascadeFarPlanes[NUM_CASCADES]; uniform mat4 orthoProjectionMatrix[NUM_CASCADES]; uniform int renderShadow; vec4 diffuseC; vec4 speculrC; void getColour(Material material, vec2 textCoord) { if (material.hasTexture == 1) { diffuseC = texture(texture_sampler, textCoord); speculrC = diffuseC; } else { diffuseC = material.diffuse; speculrC = material.specular; } } vec3 calcNormal(Material material, vec3 normal, vec2 text_coord, mat4 modelMatrix) { vec3 newNormal = normal; if ( material.hasNormalMap == 1 ) { newNormal = texture(normalMap, text_coord).rgb; newNormal = normalize(newNormal * 2 - 1); newNormal = normalize(viewMatrix * modelMatrix * vec4(newNormal, 0.0)).xyz; } return newNormal; } float calcShadow(vec4 position, int idx) { if ( renderShadow == 0 ) { return 1.0; } vec3 projCoords = position.xyz; // Transform from screen coordinates to texture coordinates projCoords = projCoords * 0.5 + 0.5; float bias = 0.005; float shadowFactor = 0.0; vec2 inc; if (idx == 0) { inc = 1.0 / textureSize(shadowMap_0, 0); } else if (idx == 1) { inc = 1.0 / textureSize(shadowMap_1, 0); } else { inc = 1.0 / textureSize(shadowMap_2, 0); } for(int row = -1; row <= 1; ++row) { for(int col = -1; col <= 1; ++col) { float textDepth; if (idx == 0) { textDepth = texture(shadowMap_0, projCoords.xy + vec2(row, col) * inc).r; } else if (idx == 1) { textDepth = texture(shadowMap_1, projCoords.xy + vec2(row, col) * inc).r; } else { textDepth = texture(shadowMap_2, projCoords.xy + vec2(row, col) * inc).r; } shadowFactor += projCoords.z - bias > textDepth ? 1.0 : 0.0; } } shadowFactor /= 9.0; if(projCoords.z > 1.0) { shadowFactor = 1.0; } return 1 - shadowFactor; } void main() { getColour(material, vs_textcoord); fs_worldpos = vs_mvVertexPos.xyz; fs_diffuse = diffuseC.xyz; fs_specular = speculrC.xyz; fs_normal = normalize(calcNormal(material, vs_normal, vs_textcoord, vs_modelMatrix)); int idx; for (int i=0; i<NUM_CASCADES; i++) { if ( abs(vs_mvVertexPos.z) < cascadeFarPlanes[i] ) { idx = i; break; } } fs_shadow = vec2(calcShadow(vs_mlightviewVertexPos[idx], idx), material.reflectance); if ( vs_selected > 0 ) { fs_diffuse = vec3(fs_diffuse.x, fs_diffuse.y, 1); } } \u6700\u5173\u952e\u7684\u884c\u662f\uff1a layout (location = 0) out vec3 fs_worldpos; layout (location = 1) out vec3 fs_diffuse; layout (location = 2) out vec3 fs_specular; layout (location = 3) out vec3 fs_normal; layout (location = 4) out vec2 fs_shadow; \u8fd9\u5c31\u662f\u6211\u4eec\u8981\u5f15\u7528\u8be5\u7247\u5143\u7740\u8272\u5668\u5c06\u5199\u5165\u7684\u7eb9\u7406\u7684\u5730\u65b9\u3002\u5982\u4f60\u6240\u89c1\uff0c\u6211\u4eec\u53ea\u662f\u8f6c\u50a8\u4f4d\u7f6e\uff08\u5728\u5149\u7167\u89c6\u56fe\u5750\u6807\u7cfb\u4e2d\uff09\u3001\u6f2b\u53cd\u5c04\u989c\u8272\uff08\u53ef\u4ee5\u662f\u6750\u8d28\u76f8\u5173\u7684\u7eb9\u7406\u7684\u989c\u8272\u5206\u91cf\uff09\u3001\u955c\u9762\u53cd\u5c04\u5206\u91cf\u3001\u6cd5\u7ebf\u548c\u9634\u5f71\u56fe\u7684\u6df1\u5ea6\u503c\u3002 \u65c1\u6ce8\uff1a\u6211\u4eec\u5df2\u7ecf\u7b80\u5316\u4e86 Material \u7c7b\u7684\u5b9a\u4e49\uff0c\u5220\u9664\u4e86\u73af\u5883\u989c\u8272\u5206\u91cf\u3002 \u56de\u5230 Renderer \u7c7b\uff0c render \u65b9\u6cd5\u7684\u5b9a\u4e49\u5982\u4e0b\uff1a public void render(Window window, Camera camera, Scene scene, boolean sceneChanged) { clear(); if (window.getOptions().frustumCulling) { frustumFilter.updateFrustum(window.getProjectionMatrix(), camera.getViewMatrix()); frustumFilter.filter(scene.getGameMeshes()); frustumFilter.filter(scene.getGameInstancedMeshes()); } // \u5728\u8bbe\u7f6e\u89c6\u53e3\u4e4b\u524d\u6e32\u67d3\u6df1\u5ea6\u56fe if (scene.isRenderShadows() && sceneChanged) { shadowRenderer.render(window, scene, camera, transformation, this); } glViewport(0, 0, window.getWidth(), window.getHeight()); // \u6bcf\u4e2a\u6e32\u67d3\u5468\u671f\u66f4\u65b0\u6295\u5f71\u77e9\u9635\u4e00\u6b21 window.updateProjectionMatrix(); renderGeometry(window, camera, scene); initLightRendering(); renderPointLights(window, camera, scene); renderDirectionalLight(window, camera, scene); endLightRendering(); renderFog(window, camera, scene); renderSkyBox(window, camera, scene); renderParticles(window, camera, scene); } \u51e0\u4f55\u5904\u7406\u9636\u6bb5\u662f\u5728 renderGeometry \u65b9\u6cd5\u4e2d\u5b8c\u6210\u7684\uff08\u4f60\u53ef\u4ee5\u770b\u5230\u6211\u4eec\u4e0d\u518d\u6709 renderScene \uff09\u3002\u5149\u7167\u5904\u7406\u9636\u6bb5\u5206\u51e0\u4e2a\u6b65\u9aa4\u5b8c\u6210\uff0c\u9996\u5148\u8bbe\u7f6e\u8981\u4f7f\u7528\u7684\u7f13\u51b2\u533a\u548c\u5176\u4ed6\u53c2\u6570\uff08\u5728 initLightRendering \u4e2d\uff09\uff0c\u7136\u540e\u6e32\u67d3\u70b9\u5149\u6e90\uff08\u5728 renderPointLights \u4e2d\uff09\u548c\u5e73\u884c\u5149\uff08\u5728 renderDirectionalLight \u4e2d\uff09\uff0c\u6700\u540e\u6062\u590d\u72b6\u6001\uff08\u5728 endLightRendering \u4e2d\uff09\u3002 \u8ba9\u6211\u4eec\u4ece\u51e0\u4f55\u5904\u7406\u9636\u6bb5\u5f00\u59cb\u3002 renderGeometry \u65b9\u6cd5\u51e0\u4e4e\u7b49\u540c\u4e8e\u5728\u524d\u51e0\u7ae0\u4e2d\u4f7f\u7528\u7684 renderScene \u65b9\u6cd5\uff1a private void renderGeometry(Window window, Camera camera, Scene scene) { // \u6e32\u67d3G\u7f13\u51b2\u533a\u4ee5\u4fbf\u5199\u5165 glBindFramebuffer(GL_DRAW_FRAMEBUFFER, gBuffer.getGBufferId()); clear(); glDisable(GL_BLEND); gBufferShaderProgram.bind(); Matrix4f viewMatrix = camera.getViewMatrix(); Matrix4f projectionMatrix = window.getProjectionMatrix(); gBufferShaderProgram.setUniform(\"viewMatrix\", viewMatrix); gBufferShaderProgram.setUniform(\"projectionMatrix\", projectionMatrix); gBufferShaderProgram.setUniform(\"texture_sampler\", 0); gBufferShaderProgram.setUniform(\"normalMap\", 1); List<ShadowCascade> shadowCascades = shadowRenderer.getShadowCascades(); for (int i = 0; i < ShadowRenderer.NUM_CASCADES; i++) { ShadowCascade shadowCascade = shadowCascades.get(i); gBufferShaderProgram.setUniform(\"orthoProjectionMatrix\", shadowCascade.getOrthoProjMatrix(), i); gBufferShaderProgram.setUniform(\"cascadeFarPlanes\", ShadowRenderer.CASCADE_SPLITS[i], i); gBufferShaderProgram.setUniform(\"lightViewMatrix\", shadowCascade.getLightViewMatrix(), i); } shadowRenderer.bindTextures(GL_TEXTURE2); int start = 2; for (int i = 0; i < ShadowRenderer.NUM_CASCADES; i++) { gBufferShaderProgram.setUniform(\"shadowMap_\" + i, start + i); } gBufferShaderProgram.setUniform(\"renderShadow\", scene.isRenderShadows() ? 1 : 0); renderNonInstancedMeshes(scene); renderInstancedMeshes(scene, viewMatrix); gBufferShaderProgram.unbind(); glEnable(GL_BLEND); } \u4ec5\u6709\u7684\u533a\u522b\u662f\uff1a \u6211\u4eec\u7ed1\u5b9a\u5230G\u7f13\u51b2\u533a\u800c\u4e0d\u662f\u5c4f\u5e55\u3002 \u7981\u7528\u6df7\u5408\uff0c\u56e0\u4e3a\u6211\u4eec\u53ea\u60f3\u4f7f\u7528\u6700\u63a5\u8fd1\u6444\u50cf\u673a\u7684\u503c\uff08\u6700\u5c0f\u6df1\u5ea6\u503c\uff09\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u6df7\u5408\u3002 \u5982\u679c\u4f7f\u7528OpenGL\u8c03\u8bd5\u5668\uff08\u5982RenderDoc\uff09\u8c03\u8bd5\u793a\u4f8b\uff0c\u5219\u53ef\u4ee5\u770b\u5230\u51e0\u4f55\u5904\u7406\u9636\u6bb5\u671f\u95f4\u751f\u6210\u7684\u7eb9\u7406\u3002\u4f4d\u7f6e\u7eb9\u7406\u5c06\u5982\u4e0b\u6240\u793a\uff1a \u50a8\u5b58\u6f2b\u53cd\u5c04\u5206\u91cf\u503c\u7684\u7eb9\u7406\u5982\u4e0b\u6240\u793a\uff1a \u50a8\u5b58\u6cd5\u7ebf\u503c\u7684\u7eb9\u7406\u5982\u4e0b\u6240\u793a\uff1a \u73b0\u5728\u8f6e\u5230\u5149\u7167\u5904\u7406\u9636\u6bb5\u4e86\u3002\u6211\u4eec\u9996\u5148\u9700\u8981\u5728\u6e32\u67d3\u4e4b\u524d\u8bbe\u7f6e\u4e00\u4e9b\u4e1c\u897f\uff0c\u8fd9\u662f\u5728 initLightRendering \u65b9\u6cd5\u4e2d\u5b8c\u6210\u7684\uff1a private void initLightRendering() { // \u7ed1\u5b9a\u573a\u666f\u7f13\u51b2\u533a glBindFramebuffer(GL_FRAMEBUFFER, sceneBuffer.getBufferId()); // \u6e05\u7406G\u7f13\u51b2\u533a clear(); // \u7981\u7528\u6df1\u5ea6\u6d4b\u8bd5\u4ee5\u5141\u8bb8\u7ed8\u5236\u5177\u6709\u76f8\u540c\u6df1\u5ea6\u7684\u591a\u4e2a\u56fe\u5c42 glDisable(GL_DEPTH_TEST); glEnable(GL_BLEND); glBlendEquation(GL_FUNC_ADD); glBlendFunc(GL_ONE, GL_ONE); // \u7ed1\u5b9aG\u7f13\u51b2\u533a\u4ee5\u4fbf\u8bfb\u53d6 glBindFramebuffer(GL_READ_FRAMEBUFFER, gBuffer.getGBufferId()); } \u56e0\u4e3a\u6211\u4eec\u4e0d\u4f1a\u6e32\u67d3\u5230\u5c4f\u5e55\u4e0a\uff0c\u6240\u4ee5\u9996\u5148\u9700\u8981\u7ed1\u5b9a\u5230\u7eb9\u7406\u4e0a\uff0c\u8be5\u7eb9\u7406\u5c06\u4fdd\u5b58\u5149\u7167\u5904\u7406\u9636\u6bb5\u7684\u7ed3\u679c\u3002\u7136\u540e\u6e05\u9664\u7f13\u51b2\u533a\u5e76\u7981\u7528\u6df1\u5ea6\u6d4b\u8bd5\u3002\u56e0\u4e3a\u5df2\u7ecf\u5728\u51e0\u4f55\u5904\u7406\u9636\u6bb5\u8fdb\u884c\u4e86\u6df1\u5ea6\u6d4b\u8bd5\uff0c\u8fd9\u5c31\u4e0d\u518d\u9700\u8981\u4e86\u3002\u53e6\u4e00\u91cd\u8981\u6b65\u9aa4\u662f\u542f\u7528\u6df7\u5408\u3002\u6700\u540e\u4e00\u4e2a\u64cd\u4f5c\u662f\u542f\u7528G\u7f13\u51b2\u533a\u8fdb\u884c\u8bfb\u53d6\uff0c\u5b83\u5c06\u5728\u5149\u7167\u5904\u7406\u9636\u6bb5\u671f\u95f4\u4f7f\u7528\u3002 \u5728\u5206\u6790\u4e0d\u540c\u5149\u7167\u7684\u6e32\u67d3\u65b9\u6cd5\u4e4b\u524d\uff0c\u8ba9\u6211\u4eec\u7a0d\u5fae\u8003\u8651\u4e00\u4e0b\u5982\u4f55\u6e32\u67d3\u5149\u7167\u3002\u6211\u4eec\u9700\u8981\u4f7f\u7528G\u7f13\u51b2\u533a\u7684\u5185\u5bb9\uff0c\u4f46\u4e3a\u4e86\u4f7f\u7528\u5b83\u4eec\uff0c\u9700\u8981\u5148\u6e32\u67d3\u4e00\u4e9b\u4e1c\u897f\u3002\u4f46\u662f\uff0c\u6211\u4eec\u5df2\u7ecf\u7ed8\u5236\u4e86\u573a\u666f\uff0c\u73b0\u5728\u8981\u6e32\u67d3\u4ec0\u4e48\uff1f\u7b54\u6848\u5f88\u7b80\u5355\uff0c\u6211\u4eec\u53ea\u9700\u8981\u6e32\u67d3\u4e00\u4e2a\u5145\u6ee1\u4e86\u6574\u4e2a\u5c4f\u5e55\u7684\u77e9\u5f62\u3002\u5bf9\u4e8e\u8be5\u77e9\u5f62\u7684\u6bcf\u4e2a\u7247\u5143\uff0c\u6211\u4eec\u5c06\u4f7f\u7528G\u7f13\u51b2\u533a\u4e2d\u50a8\u5b58\u7684\u6570\u636e\u5e76\u751f\u6210\u6b63\u786e\u7684\u8f93\u51fa\u989c\u8272\u3002\u4f60\u8fd8\u8bb0\u5f97\u6211\u4eec\u5728 Renderer \u7c7b\u7684 init \u65b9\u6cd5\u4e2d\u52a0\u8f7d\u7684 Mesh \u5417\uff1f\u5b83\u88ab\u547d\u540d\u4e3a bufferPassMesh \uff0c\u5b83\u53ea\u50a8\u5b58\u4e00\u4e2a\u5145\u6ee1\u6574\u4e2a\u5c4f\u5e55\u7684\u77e9\u5f62\u3002 \u90a3\u4e48\uff0c\u5149\u7167\u5904\u7406\u9636\u6bb5\u7684\u9876\u70b9\u7740\u8272\u5668\u770b\u8d77\u6765\u662f\u600e\u6837\u7684\uff1f #version 330 layout (location=0) in vec3 position; uniform mat4 projectionMatrix; uniform mat4 modelMatrix; void main() { gl_Position = projectionMatrix * modelMatrix * vec4(position, 1.0); } \u4e0a\u8ff0\u4ee3\u7801\u662f\u6e32\u67d3\u70b9\u5149\u6e90\u548c\u5e73\u884c\u5149\u65f6\u4f7f\u7528\u7684\u9876\u70b9\u7740\u8272\u5668\uff08 light_vertex.vs \uff09\u3002\u5b83\u53ea\u662f\u4f7f\u7528\u6a21\u578b\u77e9\u9635\u548c\u6295\u5f71\u77e9\u9635\u6765\u8f6c\u50a8\u9876\u70b9\u3002\u4e0d\u9700\u8981\u4f7f\u7528\u89c2\u5bdf\u77e9\u9635\uff0c\u56e0\u4e3a\u8fd9\u91cc\u4e0d\u9700\u8981\u6444\u50cf\u673a\u3002 \u70b9\u5149\u6e90\u7684\u7247\u5143\u7740\u8272\u5668\uff08 point_light_fragment.fs \uff09\u7684\u5b9a\u4e49\u5982\u4e0b\uff1a #version 330 out vec4 fragColor; struct Attenuation { float constant; float linear; float exponent; }; struct PointLight { vec3 colour; // Light position is assumed to be in view coordinates vec3 position; float intensity; Attenuation att; }; uniform sampler2D positionsText; uniform sampler2D diffuseText; uniform sampler2D specularText; uniform sampler2D normalsText; uniform sampler2D shadowText; uniform sampler2D depthText; uniform vec2 screenSize; uniform float specularPower; uniform PointLight pointLight; vec2 getTextCoord() { return gl_FragCoord.xy / screenSize; } vec4 calcLightColour(vec4 diffuseC, vec4 speculrC, float reflectance, vec3 light_colour, float light_intensity, vec3 position, vec3 to_light_dir, vec3 normal) { vec4 diffuseColour = vec4(0, 0, 0, 1); vec4 specColour = vec4(0, 0, 0, 1); // Diffuse Light float diffuseFactor = max(dot(normal, to_light_dir), 0.0); diffuseColour = diffuseC * vec4(light_colour, 1.0) * light_intensity * diffuseFactor; // Specular Light vec3 camera_direction = normalize(-position); vec3 from_light_dir = -to_light_dir; vec3 reflected_light = normalize(reflect(from_light_dir , normal)); float specularFactor = max( dot(camera_direction, reflected_light), 0.0); specularFactor = pow(specularFactor, specularPower); specColour = speculrC * light_intensity * specularFactor * reflectance * vec4(light_colour, 1.0); return (diffuseColour + specColour); } vec4 calcPointLight(vec4 diffuseC, vec4 speculrC, float reflectance, PointLight light, vec3 position, vec3 normal) { vec3 light_direction = light.position - position; vec3 to_light_dir = normalize(light_direction); vec4 light_colour = calcLightColour(diffuseC, speculrC, reflectance, light.colour, light.intensity, position, to_light_dir, normal); // Apply Attenuation float distance = length(light_direction); float attenuationInv = light.att.constant + light.att.linear * distance + light.att.exponent * distance * distance; return light_colour / attenuationInv; } void main() { vec2 textCoord = getTextCoord(); float depth = texture(depthText, textCoord).r; vec3 worldPos = texture(positionsText, textCoord).xyz; vec4 diffuseC = texture(diffuseText, textCoord); vec4 speculrC = texture(specularText, textCoord); vec3 normal = texture(normalsText, textCoord).xyz; float shadowFactor = texture(shadowText, textCoord).r; float reflectance = texture(shadowText, textCoord).g; fragColor = calcPointLight(diffuseC, speculrC, reflectance, pointLight, worldPos.xyz, normal.xyz) * shadowFactor; } \u5982\u4f60\u6240\u89c1\uff0c\u5b83\u5305\u542b\u4f60\u5e94\u8be5\u719f\u6089\u7684\u51fd\u6570\uff0c\u5b83\u4eec\u5728\u524d\u51e0\u7ae0\u7684\u573a\u666f\u7247\u5143\u7740\u8272\u5668\u4e2d\u4f7f\u7528\u8fc7\u3002\u8fd9\u91cc\u9700\u8981\u6ce8\u610f\u7684\u91cd\u8981\u4e8b\u9879\u5982\u4e0b\uff1a uniform sampler2D positionsText; uniform sampler2D diffuseText; uniform sampler2D specularText; uniform sampler2D normalsText; uniform sampler2D shadowText; uniform sampler2D depthText; \u8fd9\u4e9bUniform\u5efa\u6a21\u6784\u6210\u4e86G\u7f13\u51b2\u533a\u7684\u4e0d\u540c\u7eb9\u7406\u3002\u6211\u4eec\u5c06\u4f7f\u7528\u5b83\u4eec\u6765\u8bbf\u95ee\u6570\u636e\u3002\u4f60\u73b0\u5728\u53ef\u80fd\u4f1a\u95ee\uff0c\u5f53\u6211\u4eec\u6e32\u67d3\u4e00\u4e2a\u7247\u5143\u65f6\uff0c\u5982\u4f55\u77e5\u9053\u8981\u4ece\u8fd9\u4e9b\u7eb9\u7406\u4e2d\u83b7\u53d6\u54ea\u4e2a\u50cf\u7d20\uff1f\u7b54\u6848\u662f\u4f7f\u7528 gl_FragCoord \u8f93\u5165\u53d8\u91cf\uff0c\u6b64\u53d8\u91cf\u50a8\u5b58\u5f53\u524d\u7247\u5143\u4e0e\u7a97\u53e3\u7684\u76f8\u5bf9\u5750\u6807\u3002\u56e0\u4e3a\u8981\u4ece\u5750\u6807\u7cfb\u8f6c\u6362\u4e3a\u7eb9\u7406\uff0c\u6211\u4eec\u4f7f\u7528\u4ee5\u4e0b\u51fd\u6570\uff1a vec2 getTextCoord() { return gl_FragCoord.xy / screenSize; } \u5e73\u884c\u5149\u7684\u7247\u5143\u7740\u8272\u5668\u4e5f\u5f88\u76f8\u4f3c\uff0c\u53ef\u4ee5\u67e5\u770b\u6e90\u4ee3\u7801\u3002\u73b0\u5728\u5df2\u7ecf\u6709\u4e86\u7740\u8272\u5668\uff0c\u6211\u4eec\u56de\u5230 Renderer \u7c7b\u3002\u5bf9\u4e8e\u70b9\u5149\u6e90\uff0c\u6211\u4eec\u5c06\u505a\u5c3d\u53ef\u80fd\u591a\u7684\u5149\u7167\u5904\u7406\uff0c\u6211\u4eec\u53ea\u662f\u7ed1\u5b9a\u7528\u4e8e\u6b64\u7c7b\u578b\u5149\u6e90\u7684\u7740\u8272\u5668\uff0c\u5e76\u4e3a\u6bcf\u4e2a\u7740\u8272\u5668\u7ed8\u5236\u77e9\u5f62\u3002 private void renderPointLights(Window window, Camera camera, Scene scene) { pointLightShaderProgram.bind(); Matrix4f viewMatrix = camera.getViewMatrix(); Matrix4f projectionMatrix = window.getProjectionMatrix(); pointLightShaderProgram.setUniform(\"modelMatrix\", bufferPassModelMatrix); pointLightShaderProgram.setUniform(\"projectionMatrix\", projectionMatrix); // \u955c\u9762\u53cd\u5c04\u7cfb\u6570 pointLightShaderProgram.setUniform(\"specularPower\", specularPower); // \u7ed1\u5b9aG\u7f13\u51b2\u533a\u7eb9\u7406 int[] textureIds = this.gBuffer.getTextureIds(); int numTextures = textureIds != null ? textureIds.length : 0; for (int i=0; i<numTextures; i++) { glActiveTexture(GL_TEXTURE0 + i); glBindTexture(GL_TEXTURE_2D, textureIds[i]); } pointLightShaderProgram.setUniform(\"positionsText\", 0); pointLightShaderProgram.setUniform(\"diffuseText\", 1); pointLightShaderProgram.setUniform(\"specularText\", 2); pointLightShaderProgram.setUniform(\"normalsText\", 3); pointLightShaderProgram.setUniform(\"shadowText\", 4); pointLightShaderProgram.setUniform(\"screenSize\", (float) gBuffer.getWidth(), (float)gBuffer.getHeight()); SceneLight sceneLight = scene.getSceneLight(); PointLight[] pointLights = sceneLight.getPointLightList(); int numPointLights = pointLights != null ? pointLights.length : 0; for(int i=0; i<numPointLights; i++) { // \u83b7\u53d6\u70b9\u5149\u6e90\u5bf9\u8c61\u7684\u526f\u672c\u5e76\u5c06\u5176\u4f4d\u7f6e\u8f6c\u6362\u5230\u89c2\u5bdf\u5750\u6807\u7cfb PointLight currPointLight = new PointLight(pointLights[i]); Vector3f lightPos = currPointLight.getPosition(); tmpVec.set(lightPos, 1); tmpVec.mul(viewMatrix); lightPos.x = tmpVec.x; lightPos.y = tmpVec.y; lightPos.z = tmpVec.z; pointLightShaderProgram.setUniform(\"pointLight\", currPointLight); bufferPassMesh.render(); } pointLightShaderProgram.unbind(); } \u5bf9\u4e8e\u5e73\u884c\u5149\u6765\u8bf4\uff0c\u65b9\u6cd5\u975e\u5e38\u76f8\u4f3c\u3002\u5728\u6b64\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u53ea\u8fdb\u884c\u4e00\u6b21\u5904\u7406\uff1a private void renderDirectionalLight(Window window, Camera camera, Scene scene) { dirLightShaderProgram.bind(); Matrix4f viewMatrix = camera.getViewMatrix(); Matrix4f projectionMatrix = window.getProjectionMatrix(); dirLightShaderProgram.setUniform(\"modelMatrix\", bufferPassModelMatrix); dirLightShaderProgram.setUniform(\"projectionMatrix\", projectionMatrix); // \u955c\u9762\u53cd\u5c04\u7cfb\u6570 dirLightShaderProgram.setUniform(\"specularPower\", specularPower); // \u7ed1\u5b9aG\u7f13\u51b2\u533a\u7eb9\u7406 int[] textureIds = this.gBuffer.getTextureIds(); int numTextures = textureIds != null ? textureIds.length : 0; for (int i=0; i<numTextures; i++) { glActiveTexture(GL_TEXTURE0 + i); glBindTexture(GL_TEXTURE_2D, textureIds[i]); } dirLightShaderProgram.setUniform(\"positionsText\", 0); dirLightShaderProgram.setUniform(\"diffuseText\", 1); dirLightShaderProgram.setUniform(\"specularText\", 2); dirLightShaderProgram.setUniform(\"normalsText\", 3); dirLightShaderProgram.setUniform(\"shadowText\", 4); dirLightShaderProgram.setUniform(\"screenSize\", (float) gBuffer.getWidth(), (float)gBuffer.getHeight()); // \u73af\u5883\u5149\u7167 SceneLight sceneLight = scene.getSceneLight(); dirLightShaderProgram.setUniform(\"ambientLight\", sceneLight.getAmbientLight()); // \u5e73\u884c\u5149 // \u83b7\u53d6\u5e73\u884c\u5149\u5bf9\u8c61\u7684\u526f\u672c\u5e76\u5c06\u5176\u4f4d\u7f6e\u8f6c\u6362\u5230\u89c2\u5bdf\u5750\u6807\u7cfb DirectionalLight currDirLight = new DirectionalLight(sceneLight.getDirectionalLight()); tmpVec.set(currDirLight.getDirection(), 0); tmpVec.mul(viewMatrix); currDirLight.setDirection(new Vector3f(tmpVec.x, tmpVec.y, tmpVec.z)); dirLightShaderProgram.setUniform(\"directionalLight\", currDirLight); bufferPassMesh.render(); dirLightShaderProgram.unbind(); } endLightRendering \u53ea\u7b80\u5355\u5730\u6062\u590d\u72b6\u6001\u3002 private void endLightRendering() { // \u7ed1\u5b9a\u5c4f\u5e55\u4ee5\u4fbf\u5199\u5165 glBindFramebuffer(GL_FRAMEBUFFER, 0); glEnable(GL_DEPTH_TEST); glDisable(GL_BLEND); } \u5982\u679c\u8fd0\u884c\u793a\u4f8b\uff0c\u4f60\u5c06\u770b\u5230\u5982\u4e0b\u5185\u5bb9\uff1a \u672c\u7ae0\u6bd4\u9884\u671f\u65f6\u95f4\u957f\uff0c\u4f46\u6709\u51e0\u4e2a\u8981\u70b9\u9700\u8981\u6f84\u6e05\uff1a \u4e3a\u4e86\u7b80\u5316\u672c\u7ae0\uff0c\u5df2\u7ecf\u5220\u9664\u4e86\u805a\u5149\u6e90\u7684\u76f8\u5173\u5185\u5bb9\u3002 \u5ef6\u8fdf\u7740\u8272\u6cd5\u4e2d\u4f7f\u7528\u70b9\u5149\u6e90\u7684\u4e00\u79cd\u5e38\u89c1\u6280\u672f\u662f\u8ba1\u7b97\u53d7\u8be5\u5149\u6e90\u5f71\u54cd\u7684\u573a\u666f\u533a\u57df\u3002\u5728\u6b64\u60c5\u51b5\u4e0b\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u8f83\u5c0f\u7684\u56db\u8fb9\u5f62\uff0c\u5706\u5f62\u7b49\uff0c\u800c\u4e0d\u662f\u6e32\u67d3\u5145\u6ee1\u5c4f\u5e55\u7684\u77e9\u5f62\u3002\u8bf7\u7262\u8bb0\uff0c\u6700\u597d\u662f\u597d\u7684\u654c\u4eba\uff0c\u8fdb\u884c\u590d\u6742\u7684\u5fae\u79ef\u5206\u4ee5\u786e\u5b9a\u6240\u9700\u7684\u6700\u5c0f\u5f62\u72b6\u53ef\u80fd\u6bd4\u4f7f\u7528\u5176\u4ed6\u7c97\u7cd9\u65b9\u6cd5\u6162\u3002 \u5982\u679c\u6ca1\u6709\u8bb8\u591a\u5149\u6e90\uff0c\u6b64\u65b9\u6cd5\u6bd4\u6b63\u5411\u7740\u8272\u6cd5\u6162\u3002 \u6700\u540e\u8981\u6ce8\u610f\u7684\u4e00\u70b9\u662f\uff0c\u5982\u679c\u4f60\u60f3\u4e86\u89e3\u8fd9\u4e9b\u6280\u672f\u5728\u73b0\u5b9e\u4e2d\u7684\u5e94\u7528\uff0c\u53ef\u4ee5\u67e5\u770b \u8fd9\u4e2a\u6781\u597d\u7684\u8bf4\u660e \uff0c\u4e86\u89e3GTA V\u7684\u5e27\u662f\u5982\u4f55\u6e32\u67d3\u7684\u3002","title":"\u5ef6\u8fdf\u7740\u8272\u6cd5"},{"location":"28-deferred-shading/#deferred-shading","text":"\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u6e32\u67d3\u4e09\u7ef4\u573a\u666f\u7684\u65b9\u5f0f\u79f0\u4e3a\u6b63\u5411\u6e32\u67d3\u6cd5\uff08Forward Rendering\uff09\u3002\u6211\u4eec\u9996\u5148\u6e32\u67d33D\u5bf9\u8c61\uff0c\u5e76\u5728\u7247\u5143\u7740\u8272\u5668\u4e2d\u5e94\u7528\u7eb9\u7406\u548c\u5149\u7167\u6548\u679c\u3002\u5982\u679c\u6211\u4eec\u6709\u4e00\u4e2a\u5177\u6709\u591a\u79cd\u5149\u7167\u548c\u590d\u6742\u6548\u679c\u7684\u590d\u6742\u7247\u5143\u7740\u8272\u5668\u5904\u7406\u9636\u6bb5\uff0c\u8fd9\u79cd\u65b9\u6cd5\u5c31\u4e0d\u662f\u5f88\u9ad8\u6548\u3002\u6b64\u5916\uff0c\u6211\u4eec\u6700\u7ec8\u53ef\u80fd\u4f1a\u5c06\u8fd9\u4e9b\u6548\u679c\u5e94\u7528\u5230\u7a0d\u540e\u53ef\u80fd\u7531\u4e8e\u6df1\u5ea6\u6d4b\u8bd5\u800c\u88ab\u4e22\u5f03\u7684\u7247\u5143\u4e0a\uff08\u5c3d\u7ba1\u8fd9\u5e76\u4e0d\u5b8c\u5168\u6b63\u786e\uff0c\u5982\u679c\u6211\u4eec\u542f\u7528 \u65e9\u671f\u7247\u5143\u6d4b\u8bd5 \u7684\u8bdd\uff09\u3002 \u4e3a\u4e86\u7f13\u89e3\u4e0a\u8ff0\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u6539\u53d8\u65b9\u5f0f\uff0c\u4f7f\u7528\u4e00\u79cd\u79f0\u4e3a\u5ef6\u8fdf\u7740\u8272\u6cd5\u7684\u6280\u672f\u6765\u6e32\u67d3\u573a\u666f\u3002\u901a\u8fc7\u5ef6\u8fdf\u7740\u8272\u6cd5\uff0c\u6211\u4eec\u5148\u5c06\u540e\u671f\uff08\u5728\u7247\u5143\u7740\u8272\u5668\u4e2d\uff09\u6240\u9700\u7684\u51e0\u4f55\u4fe1\u606f\u6e32\u67d3\u5230\u7f13\u51b2\u533a\u3002\u5f53\u4f7f\u7528\u50a8\u5b58\u5728\u8fd9\u4e9b\u7f13\u51b2\u533a\u4e2d\u7684\u4fe1\u606f\u65f6\uff0c\u7247\u5143\u7740\u8272\u5668\u6240\u9700\u7684\u590d\u6742\u8fd0\u7b97\u88ab\u63a8\u8fdf\uff08Postpone\uff09\u3001\u5ef6\u8fdf\uff08Defer\uff09\u5230\u4e4b\u540e\u7684\u9636\u6bb5\u3002 \u56e0\u6b64\uff0c\u4f7f\u7528\u5ef6\u8fdf\u7740\u8272\u6cd5\uff0c\u6211\u4eec\u8fdb\u884c\u4e24\u4e2a\u6e32\u67d3\u9636\u6bb5\uff08Pass\uff09\u3002\u7b2c\u4e00\u4e2a\u662f\u51e0\u4f55\u5904\u7406\u9636\u6bb5\uff0c\u6211\u4eec\u5c06\u573a\u666f\u6e32\u67d3\u5230\u50a8\u5b58\u4ee5\u4e0b\u6570\u636e\u7684\u7f13\u51b2\u533a\u4e2d\uff1a \u4f4d\u7f6e\uff08\u5728\u672c\u4f8b\u4e2d\uff0c\u5728\u5149\u7167\u89c6\u56fe\u5750\u6807\u7cfb\u4e2d\uff0c\u5c3d\u7ba1\u4f60\u53ef\u4ee5\u770b\u5230\u4f7f\u7528\u4e16\u754c\u5750\u6807\u7684\u5176\u4ed6\u793a\u4f8b\uff09\u3002 \u6bcf\u4e2a\u4f4d\u7f6e\u7684\u6f2b\u53cd\u5c04\u989c\u8272\u3002 \u6bcf\u4e2a\u4f4d\u7f6e\u7684\u955c\u9762\u53cd\u5c04\u5206\u91cf\u3002 \u6bcf\u4e2a\u4f4d\u7f6e\u7684\u6cd5\u7ebf\uff08\u4e5f\u5728\u5149\u7167\u89c6\u56fe\u5750\u6807\u7cfb\u4e2d\uff09\u3002 \u6709\u5411\u5149\u7684\u9634\u5f71\u56fe\uff08\u4f60\u53ef\u80fd\u4f1a\u53d1\u73b0\u8fd9\u4e00\u6b65\u5728\u5176\u4ed6\u5b9e\u73b0\u4e2d\u662f\u5355\u72ec\u5b8c\u6210\u7684\uff09\u3002 \u6240\u6709\u8fd9\u4e9b\u6570\u636e\u90fd\u5b58\u50a8\u5728\u4e00\u4e2a\u79f0\u4e3aG\u7f13\u51b2\u533a\uff08G-Buffer\uff09\u7684\u7f13\u51b2\u533a\u4e2d\u3002 \u7b2c\u4e8c\u4e2a\u9636\u6bb5\u79f0\u4e3a\u5149\u7167\u5904\u7406\u9636\u6bb5\uff0c\u8be5\u9636\u6bb5\u9700\u8981\u4e00\u4e2a\u5145\u6ee1\u6574\u4e2a\u5c4f\u5e55\u7684\u77e9\u5f62\uff0c\u5e76\u4f7f\u7528G\u7f13\u51b2\u533a\u4e2d\u50a8\u5b58\u7684\u4fe1\u606f\u4e3a\u6bcf\u4e2a\u7247\u5143\u751f\u6210\u989c\u8272\u4fe1\u606f\u3002\u5f53\u6211\u4eec\u8fdb\u884c\u5149\u7167\u5904\u7406\u9636\u6bb5\u65f6\uff0c\u6df1\u5ea6\u6d4b\u8bd5\u5c06\u5220\u9664\u6240\u6709\u770b\u4e0d\u5230\u7684\u573a\u666f\u6570\u636e\u3002\u56e0\u6b64\uff0c\u8981\u6267\u884c\u7684\u64cd\u4f5c\u6570\u91cf\u4ec5\u9650\u4e8e\u5c06\u5728\u5c4f\u5e55\u4e0a\u663e\u793a\u7684\u3002 \u4f60\u53ef\u80fd\u4f1a\u95ee\u8fdb\u884c\u989d\u5916\u7684\u6e32\u67d3\u9636\u6bb5\u80fd\u5426\u63d0\u9ad8\u6027\u80fd\uff0c\u7b54\u6848\u662f\u89c6\u60c5\u51b5\u800c\u5b9a\u3002\u5ef6\u8fdf\u7740\u8272\u6cd5\u901a\u5e38\u5728\u6709\u8bb8\u591a\u4e0d\u540c\u7684\u5149\u7167\u5904\u7406\u9636\u6bb5\u65f6\u4f7f\u7528\uff0c\u5728\u6b64\u60c5\u51b5\u4e0b\uff0c\u989d\u5916\u7684\u6e32\u67d3\u9636\u6bb5\u5c06\u901a\u8fc7\u51cf\u5c11\u5c06\u5728\u7247\u5143\u7740\u8272\u5668\u4e2d\u6267\u884c\u7684\u64cd\u4f5c\u6765\u8865\u507f\u3002 \u8ba9\u6211\u4eec\u5f00\u59cb\u7f16\u7801\u5427\uff0c\u9996\u5148\u8981\u505a\u7684\u662f\u4e3aG\u7f13\u51b2\u533a\u521b\u5efa\u4e00\u4e2a\u65b0\u7c7b\uff0c\u540d\u4e3a GBuffer \uff0c\u5176\u5b9a\u4e49\u5982\u4e0b\u6240\u793a\uff1a package org.lwjglb.engine.graph; import org.lwjgl.system.MemoryStack; import org.lwjglb.engine.Window; import java.nio.ByteBuffer; import java.nio.IntBuffer; import static org.lwjgl.opengl.GL11.*; import static org.lwjgl.opengl.GL20.*; import static org.lwjgl.opengl.GL30.*; public class GBuffer { private static final int TOTAL_TEXTURES = 6; private int gBufferId; private int[] textureIds; private int width; private int height; \u7c7b\u5b9a\u4e49\u4e86\u4e00\u4e2a\u5e38\u91cf\uff0c\u8be5\u5e38\u91cf\u4e3a\u8981\u4f7f\u7528\u7684\u6700\u5927\u7f13\u51b2\u533a\u6570\u5efa\u6a21\u3002\u4e0eG\u7f13\u51b2\u533a\u672c\u8eab\u5173\u8054\u7684ID\uff0c\u4ee5\u53ca\u5355\u4e2a\u7f13\u51b2\u533a\u7684\u6570\u7ec4\uff0c\u5c4f\u5e55\u7684\u5927\u5c0f\u4e5f\u4f1a\u88ab\u50a8\u5b58\u3002 \u8ba9\u6211\u4eec\u770b\u4e00\u4e0b\u6784\u9020\u51fd\u6570\uff1a public GBuffer(Window window) throws Exception { // \u521b\u5efaG\u7f13\u51b2\u533a gBufferId = glGenFramebuffers(); glBindFramebuffer(GL_DRAW_FRAMEBUFFER, gBufferId); textureIds = new int[TOTAL_TEXTURES]; glGenTextures(textureIds); this.width = window.getWidth(); this.height = window.getHeight(); // \u4e3a\u4f4d\u7f6e\u3001\u6f2b\u53cd\u5c04\u989c\u8272\u3001\u955c\u9762\u53cd\u5c04\u989c\u8272\u3001\u6cd5\u7ebf\u3001\u9634\u5f71\u56e0\u5b50\u548c\u6df1\u5ea6\u521b\u5efa\u7eb9\u7406 // \u6240\u6709\u5750\u6807\u90fd\u5728\u4e16\u754c\u5750\u6807\u7cfb\u4e2d for(int i=0; i<TOTAL_TEXTURES; i++) { glBindTexture(GL_TEXTURE_2D, textureIds[i]); int attachmentType; switch(i) { case TOTAL_TEXTURES - 1: // \u6df1\u5ea6\u5206\u91cf glTexImage2D(GL_TEXTURE_2D, 0, GL_DEPTH_COMPONENT32F, width, height, 0, GL_DEPTH_COMPONENT, GL_FLOAT, (ByteBuffer) null); attachmentType = GL_DEPTH_ATTACHMENT; break; default: glTexImage2D(GL_TEXTURE_2D, 0, GL_RGB32F, width, height, 0, GL_RGB, GL_FLOAT, (ByteBuffer) null); attachmentType = GL_COLOR_ATTACHMENT0 + i; break; } // \u7528\u4e8e\u91c7\u6837 glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST); glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST); // \u5c06\u7eb9\u7406\u7ed1\u5b9a\u5230G\u7f13\u51b2\u533a glFramebufferTexture2D(GL_FRAMEBUFFER, attachmentType, GL_TEXTURE_2D, textureIds[i], 0); } try (MemoryStack stack = MemoryStack.stackPush()) { IntBuffer intBuff = stack.mallocInt(TOTAL_TEXTURES); int values[] = {GL_COLOR_ATTACHMENT0, GL_COLOR_ATTACHMENT1, GL_COLOR_ATTACHMENT2, GL_COLOR_ATTACHMENT3, GL_COLOR_ATTACHMENT4, GL_COLOR_ATTACHMENT5}; for(int i = 0; i < values.length; i++) { intBuff.put(values[i]); } intBuff.flip(); glDrawBuffers(intBuff); } // \u89e3\u7ed1 glBindFramebuffer(GL_FRAMEBUFFER, 0); } \u9996\u5148\u6211\u4eec\u8981\u505a\u7684\u4e8b\u662f\u521b\u5efa\u4e00\u4e2a\u5e27\u7f13\u51b2\u533a\u3002\u8bb0\u4f4f\uff0c\u5e27\u7f13\u51b2\u533a\u53ea\u662f\u4e00\u4e2aOpenGL\u5bf9\u8c61\uff0c\u53ef\u7528\u4e8e\u6e32\u67d3\u64cd\u4f5c\uff0c\u800c\u4e0d\u662f\u6e32\u67d3\u5230\u5c4f\u5e55\u3002\u7136\u540e\u6211\u4eec\u751f\u6210\u4e00\u7ec4\u7eb9\u7406\uff086\u4e2a\u7eb9\u7406\uff09\uff0c\u8fd9\u4e9b\u7eb9\u7406\u5c06\u4e0e\u5e27\u7f13\u51b2\u533a\u5173\u8054\u3002 \u4e4b\u540e\uff0c\u6211\u4eec\u4f7f\u7528for\u5faa\u73af\u6765\u521d\u59cb\u5316\u7eb9\u7406\uff0c\u6709\u5982\u4e0b\u7c7b\u578b\uff1a \u201c\u5e38\u89c4\u7eb9\u7406\u201d\uff0c\u5c06\u50a8\u5b58\u4f4d\u7f6e\u3001\u6cd5\u7ebf\u548c\u6f2b\u53cd\u5c04\u5206\u91cf\u7b49\u3002 \u7528\u4e8e\u50a8\u5b58\u6df1\u5ea6\u7f13\u51b2\u533a\u7684\u7eb9\u7406\uff0c\u8fd9\u5c06\u662f\u6700\u540e\u7684\u7eb9\u7406\u3002 \u7eb9\u7406\u521d\u59cb\u5316\u540e\uff0c\u6211\u4eec\u4e3a\u5b83\u4eec\u542f\u7528\u91c7\u6837\u5e76\u5c06\u5b83\u4eec\u7ed1\u5b9a\u5230\u5e27\u7f13\u51b2\u533a\u3002\u6bcf\u4e2a\u7eb9\u7406\u4f7f\u7528\u4ee5 GL_COLOR_ATTACHMENT0 \u4e3a\u5f00\u5934\u7684ID\u8fdb\u884c\u7ed1\u5b9a\u3002\u6bcf\u4e2a\u7eb9\u7406\u90fd\u4ee5\u8be5ID\u9012\u589e\u4e00\u4f4d\uff0c\u56e0\u6b64\u5750\u6807\u4f7f\u7528 GL_COLOR_ATTACHMENT0 \u7ed1\u5b9a\uff0c\u6f2b\u53cd\u5c04\u5206\u91cf\u4f7f\u7528 GL_COLOR_ATTACHMENT1 \uff08\u5373 GL_COLOR_ATTACHMENT0 + 1 \uff09\u9644\u52a0\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002 \u5728\u521b\u5efa\u5b8c\u6240\u6709\u7eb9\u7406\u4e4b\u540e\uff0c\u6211\u4eec\u9700\u8981\u8ba9\u7247\u5143\u7740\u8272\u5668\u4f7f\u7528\u5b83\u4eec\u8fdb\u884c\u6e32\u67d3\u3002\u8fd9\u662f\u901a\u8fc7\u8c03\u7528 glDrawBuffers \u5b8c\u6210\u7684\u3002\u6211\u4eec\u53ea\u4f20\u9012\u5e26\u6709\u6240\u7528\u989c\u8272\u7ed1\u5b9a\u7684ID\u7684\u6570\u7ec4\uff08 GL_COLOR_ ATTACHMENT0 \u5230 GL_COLOR_ATTACHMENT5 \uff09\u3002 \u7c7b\u7684\u5176\u4ed6\u90e8\u5206\u53ea\u662fgetter\u65b9\u6cd5\u548c cleanup \u65b9\u6cd5\u3002 public int getWidth() { return width; } public int getHeight() { return height; } public int getGBufferId() { return gBufferId; } public int[] getTextureIds() { return textureIds; } public int getPositionTexture() { return textureIds[0]; } public int getDepthTexture() { return textureIds[TOTAL_TEXTURES-1]; } public void cleanUp() { glDeleteFramebuffers(gBufferId); if (textureIds != null) { for (int i=0; i<TOTAL_TEXTURES; i++) { glDeleteTextures(textureIds[i]); } } } \u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a SceneBuffer \u7684\u65b0\u7c7b\uff0c\u5b83\u53ea\u662f\u53e6\u4e00\u4e2a\u5e27\u7f13\u51b2\u533a\uff0c\u5c06\u5728\u6267\u884c\u5149\u7167\u5904\u7406\u9636\u6bb5\u65f6\u4f7f\u7528\u5b83\u3002\u6211\u4eec\u4e0d\u76f4\u63a5\u6e32\u67d3\u5230\u5c4f\u5e55\uff0c\u800c\u662f\u6e32\u67d3\u5230\u8fd9\u4e2a\u5e27\u7f13\u51b2\u533a\u3002\u8fd9\u6837\u505a\uff0c\u6211\u4eec\u53ef\u4ee5\u5e94\u7528\u5176\u4ed6\u6548\u679c\uff08\u5982\u96fe\u3001\u5929\u7a7a\u76d2\u7b49\uff09\u3002\u7c7b\u7684\u5b9a\u4e49\u5982\u4e0b\uff1a package org.lwjglb.engine.graph; import org.lwjglb.engine.Window; import java.nio.ByteBuffer; import static org.lwjgl.opengl.GL11.*; import static org.lwjgl.opengl.GL30.*; public class SceneBuffer { private int bufferId; private int textureId; public SceneBuffer(Window window) throws Exception { // \u521b\u5efa\u7f13\u51b2\u533a bufferId = glGenFramebuffers(); glBindFramebuffer(GL_DRAW_FRAMEBUFFER, bufferId); // \u521b\u5efa\u7eb9\u7406 int[] textureIds = new int[1]; glGenTextures(textureIds); textureId = textureIds[0]; glBindTexture(GL_TEXTURE_2D, textureId); glTexImage2D(GL_TEXTURE_2D, 0, GL_RGB32F, window.getWidth(), window.getHeight(), 0, GL_RGB, GL_FLOAT, (ByteBuffer) null); // \u7528\u4e8e\u91c7\u6837 glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST); glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST); // \u9644\u52a0\u7eb9\u7406\u5230G\u7f13\u51b2\u533a glFramebufferTexture2D(GL_FRAMEBUFFER, GL_COLOR_ATTACHMENT0, GL_TEXTURE_2D, textureId, 0); // \u89e3\u7ed1 glBindFramebuffer(GL_FRAMEBUFFER, 0); } public int getBufferId() { return bufferId; } public int getTextureId() { return textureId; } public void cleanup() { glDeleteFramebuffers(bufferId); glDeleteTextures(textureId); } } \u5982\u4f60\u6240\u89c1\uff0c\u5b83\u7c7b\u4f3c\u4e8e GBuffer \u7c7b\uff0c\u4f46\u8fd9\u91cc\u53ea\u4f7f\u7528\u4e00\u4e2a\u7eb9\u7406\u6765\u50a8\u5b58\u751f\u6210\u7684\u989c\u8272\u3002\u65e2\u7136\u5df2\u7ecf\u521b\u5efa\u4e86\u8fd9\u4e9b\u65b0\u7c7b\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f00\u59cb\u4f7f\u7528\u5b83\u4eec\u4e86\u3002\u5728 Renderer \u7c7b\u4e2d\uff0c\u6211\u4eec\u5c06\u4e0d\u518d\u4f7f\u7528\u7528\u4e8e\u6e32\u67d3\u573a\u666f\u7684\u6b63\u5411\u6e32\u67d3\u7740\u8272\u5668\uff08\u540d\u4e3a scene_vertex.vs \u548c scene_fragment.fs \uff09\u3002 \u5728 Renderer \u7c7b\u7684 init \u65b9\u6cd5\u4e2d\uff0c\u4f60\u4f1a\u770b\u5230\u521b\u5efa\u4e86\u4e00\u4e2a GBuffer \u5b9e\u73b0\uff0c\u6211\u4eec\u5206\u522b\u4e3a\u51e0\u4f55\u5904\u7406\u9636\u6bb5\uff08\u901a\u8fc7\u8c03\u7528 setupGeometryShader \u65b9\u6cd5\uff09\u548c\u5149\u7167\u5904\u7406\u9636\u6bb5\uff08\u901a\u8fc7\u8c03\u7528 setupDirLightShader \u548c setupPointLightShader \u65b9\u6cd5\uff09\u521d\u59cb\u5316\u4e86\u53e6\u4e00\u7ec4\u7740\u8272\u5668\u3002\u4f60\u6362\u53ef\u4ee5\u770b\u5230\u6211\u4eec\u521b\u5efa\u4e86\u4e00\u4e2a\u540d\u4e3a sceneBuffer \u7684 SceneBuffer \u7c7b\u7684\u5b9e\u4f8b\uff0c\u5982\u4e0a\u6240\u8ff0\uff0c\u5b83\u5c06\u5728\u6e32\u67d3\u5149\u7167\u65f6\u4f7f\u7528\u3002\u540d\u4e3a bufferPassModelMatrix \u7684\u5b9e\u7528\u77e9\u9635\u4e5f\u88ab\u5b9e\u4f8b\u5316\uff08\u5728\u6267\u884c\u51e0\u4f55\u5904\u7406\u9636\u6bb5\u65f6\u5c06\u4f7f\u7528\u5b83\uff09\u3002\u4f60\u53ef\u4ee5\u770b\u5230\u6211\u4eec\u5728 init \u65b9\u6cd5\u7684\u672b\u5c3e\u521b\u5efa\u4e86\u4e00\u4e2a\u65b0\u7684 Mesh \uff0c\u5b83\u5c06\u7528\u4e8e\u5149\u7167\u5904\u7406\u9636\u6bb5\u3002\u5173\u4e8e\u8fd9\u65b9\u9762\u7684\u8be6\u60c5\u5c06\u5728\u4e4b\u540e\u4ecb\u7ecd\u3002 public void init(Window window) throws Exception { shadowRenderer.init(window); gBuffer = new GBuffer(window); sceneBuffer = new SceneBuffer(window); setupSkyBoxShader(); setupParticlesShader(); setupGeometryShader(); setupDirLightShader(); setupPointLightShader(); setupFogShader(); bufferPassModelMatrix = new Matrix4f(); bufferPassMesh = StaticMeshesLoader.load(\"src/main/resources/models/buffer_pass_mess.obj\", \"src/main/resources/models\")[0]; } \u51e0\u4f55\u5904\u7406\u9636\u6bb5\u548c\u5149\u7167\u5904\u7406\u9636\u6bb5\u4f7f\u7528\u7684\u7740\u8272\u5668\u5b9a\u4e49\u4e0e\u901a\u5e38\u4e00\u81f4\uff08\u4f60\u53ef\u4ee5\u76f4\u63a5\u67e5\u770b\u6e90\u4ee3\u7801\uff09\uff0c\u8ba9\u6211\u4eec\u5173\u6ce8\u5b83\u4eec\u7684\u5185\u5bb9\u3002\u6211\u4eec\u5c06\u4ece\u51e0\u4f55\u5904\u7406\u9636\u6bb5\u5f00\u59cb\uff0c\u63a5\u4e0b\u6765\u662f\u9876\u70b9\u7740\u8272\u5668\u4ee3\u7801\uff08 gbuffer_vertex.vs \uff09\uff1a #version 330 const int MAX_WEIGHTS = 4; const int MAX_JOINTS = 150; const int NUM_CASCADES = 3; layout (location=0) in vec3 position; layout (location=1) in vec2 texCoord; layout (location=2) in vec3 vertexNormal; layout (location=3) in vec4 jointWeights; layout (location=4) in ivec4 jointIndices; layout (location=5) in mat4 modelInstancedMatrix; layout (location=9) in vec2 texOffset; layout (location=10) in float selectedInstanced; uniform int isInstanced; uniform mat4 viewMatrix; uniform mat4 projectionMatrix; uniform mat4 modelNonInstancedMatrix; uniform mat4 jointsMatrix[MAX_JOINTS]; uniform mat4 lightViewMatrix[NUM_CASCADES]; uniform mat4 orthoProjectionMatrix[NUM_CASCADES]; uniform int numCols; uniform int numRows; uniform float selectedNonInstanced; out vec2 vs_textcoord; out vec3 vs_normal; out vec4 vs_mvVertexPos; out vec4 vs_mlightviewVertexPos[NUM_CASCADES]; out mat4 vs_modelMatrix; out float vs_selected; void main() { vec4 initPos = vec4(0, 0, 0, 0); vec4 initNormal = vec4(0, 0, 0, 0); mat4 modelMatrix; if ( isInstanced > 0 ) { vs_selected = selectedInstanced; modelMatrix = modelInstancedMatrix; initPos = vec4(position, 1.0); initNormal = vec4(vertexNormal, 0.0); } else { vs_selected = selectedNonInstanced; modelMatrix = modelNonInstancedMatrix; int count = 0; for(int i = 0; i < MAX_WEIGHTS; i++) { float weight = jointWeights[i]; if(weight > 0) { count++; int jointIndex = jointIndices[i]; vec4 tmpPos = jointsMatrix[jointIndex] * vec4(position, 1.0); initPos += weight * tmpPos; vec4 tmpNormal = jointsMatrix[jointIndex] * vec4(vertexNormal, 0.0); initNormal += weight * tmpNormal; } } if (count == 0) { initPos = vec4(position, 1.0); initNormal = vec4(vertexNormal, 0.0); } } mat4 modelViewMatrix = viewMatrix * modelMatrix; vs_mvVertexPos = modelViewMatrix * initPos; gl_Position = projectionMatrix * vs_mvVertexPos; // Support for texture atlas, update texture coordinates float x = (texCoord.x / numCols + texOffset.x); float y = (texCoord.y / numRows + texOffset.y); vs_textcoord = vec2(x, y); vs_normal = normalize(modelViewMatrix * initNormal).xyz; for (int i = 0 ; i < NUM_CASCADES ; i++) { vs_mlightviewVertexPos[i] = orthoProjectionMatrix[i] * lightViewMatrix[i] * modelMatrix * initPos; } vs_modelMatrix = modelMatrix; } \u6b64\u7740\u8272\u5668\u4e0e\u4e0a\u4e00\u7ae0\u4e2d\u7528\u4e8e\u6e32\u67d3\u573a\u666f\u7684\u9876\u70b9\u7740\u8272\u5668\u975e\u5e38\u76f8\u4f3c\uff0c\u8f93\u51fa\u53d8\u91cf\u7684\u540d\u79f0\u6709\u4e00\u4e9b\u53d8\u5316\uff0c\u4f46\u672c\u8d28\u4e0a\u662f\u76f8\u540c\u7684\u7740\u8272\u5668\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5b83\u5e94\u8be5\u662f\u51e0\u8fd1\u4e00\u81f4\u7684\uff0c\u6211\u4eec\u6e32\u67d3\u9876\u70b9\u7684\u65b9\u5f0f\u4e0d\u5e94\u8be5\u6539\u53d8\uff0c\u4e3b\u8981\u7684\u66f4\u6539\u662f\u5728\u7247\u5143\u7740\u8272\u5668\u4e2d\uff0c\u5b83\u662f\u8fd9\u6837\u5b9a\u4e49\u7684\uff08 gbuffer_fragment.fs \uff09\uff1a #version 330 const int NUM_CASCADES = 3; in vec2 vs_textcoord; in vec3 vs_normal; in vec4 vs_mvVertexPos; in vec4 vs_mlightviewVertexPos[NUM_CASCADES]; in mat4 vs_modelMatrix; in float vs_selected; layout (location = 0) out vec3 fs_worldpos; layout (location = 1) out vec3 fs_diffuse; layout (location = 2) out vec3 fs_specular; layout (location = 3) out vec3 fs_normal; layout (location = 4) out vec2 fs_shadow; uniform mat4 viewMatrix; struct Material { vec4 diffuse; vec4 specular; int hasTexture; int hasNormalMap; float reflectance; }; uniform sampler2D texture_sampler; uniform sampler2D normalMap; uniform Material material; uniform sampler2D shadowMap_0; uniform sampler2D shadowMap_1; uniform sampler2D shadowMap_2; uniform float cascadeFarPlanes[NUM_CASCADES]; uniform mat4 orthoProjectionMatrix[NUM_CASCADES]; uniform int renderShadow; vec4 diffuseC; vec4 speculrC; void getColour(Material material, vec2 textCoord) { if (material.hasTexture == 1) { diffuseC = texture(texture_sampler, textCoord); speculrC = diffuseC; } else { diffuseC = material.diffuse; speculrC = material.specular; } } vec3 calcNormal(Material material, vec3 normal, vec2 text_coord, mat4 modelMatrix) { vec3 newNormal = normal; if ( material.hasNormalMap == 1 ) { newNormal = texture(normalMap, text_coord).rgb; newNormal = normalize(newNormal * 2 - 1); newNormal = normalize(viewMatrix * modelMatrix * vec4(newNormal, 0.0)).xyz; } return newNormal; } float calcShadow(vec4 position, int idx) { if ( renderShadow == 0 ) { return 1.0; } vec3 projCoords = position.xyz; // Transform from screen coordinates to texture coordinates projCoords = projCoords * 0.5 + 0.5; float bias = 0.005; float shadowFactor = 0.0; vec2 inc; if (idx == 0) { inc = 1.0 / textureSize(shadowMap_0, 0); } else if (idx == 1) { inc = 1.0 / textureSize(shadowMap_1, 0); } else { inc = 1.0 / textureSize(shadowMap_2, 0); } for(int row = -1; row <= 1; ++row) { for(int col = -1; col <= 1; ++col) { float textDepth; if (idx == 0) { textDepth = texture(shadowMap_0, projCoords.xy + vec2(row, col) * inc).r; } else if (idx == 1) { textDepth = texture(shadowMap_1, projCoords.xy + vec2(row, col) * inc).r; } else { textDepth = texture(shadowMap_2, projCoords.xy + vec2(row, col) * inc).r; } shadowFactor += projCoords.z - bias > textDepth ? 1.0 : 0.0; } } shadowFactor /= 9.0; if(projCoords.z > 1.0) { shadowFactor = 1.0; } return 1 - shadowFactor; } void main() { getColour(material, vs_textcoord); fs_worldpos = vs_mvVertexPos.xyz; fs_diffuse = diffuseC.xyz; fs_specular = speculrC.xyz; fs_normal = normalize(calcNormal(material, vs_normal, vs_textcoord, vs_modelMatrix)); int idx; for (int i=0; i<NUM_CASCADES; i++) { if ( abs(vs_mvVertexPos.z) < cascadeFarPlanes[i] ) { idx = i; break; } } fs_shadow = vec2(calcShadow(vs_mlightviewVertexPos[idx], idx), material.reflectance); if ( vs_selected > 0 ) { fs_diffuse = vec3(fs_diffuse.x, fs_diffuse.y, 1); } } \u6700\u5173\u952e\u7684\u884c\u662f\uff1a layout (location = 0) out vec3 fs_worldpos; layout (location = 1) out vec3 fs_diffuse; layout (location = 2) out vec3 fs_specular; layout (location = 3) out vec3 fs_normal; layout (location = 4) out vec2 fs_shadow; \u8fd9\u5c31\u662f\u6211\u4eec\u8981\u5f15\u7528\u8be5\u7247\u5143\u7740\u8272\u5668\u5c06\u5199\u5165\u7684\u7eb9\u7406\u7684\u5730\u65b9\u3002\u5982\u4f60\u6240\u89c1\uff0c\u6211\u4eec\u53ea\u662f\u8f6c\u50a8\u4f4d\u7f6e\uff08\u5728\u5149\u7167\u89c6\u56fe\u5750\u6807\u7cfb\u4e2d\uff09\u3001\u6f2b\u53cd\u5c04\u989c\u8272\uff08\u53ef\u4ee5\u662f\u6750\u8d28\u76f8\u5173\u7684\u7eb9\u7406\u7684\u989c\u8272\u5206\u91cf\uff09\u3001\u955c\u9762\u53cd\u5c04\u5206\u91cf\u3001\u6cd5\u7ebf\u548c\u9634\u5f71\u56fe\u7684\u6df1\u5ea6\u503c\u3002 \u65c1\u6ce8\uff1a\u6211\u4eec\u5df2\u7ecf\u7b80\u5316\u4e86 Material \u7c7b\u7684\u5b9a\u4e49\uff0c\u5220\u9664\u4e86\u73af\u5883\u989c\u8272\u5206\u91cf\u3002 \u56de\u5230 Renderer \u7c7b\uff0c render \u65b9\u6cd5\u7684\u5b9a\u4e49\u5982\u4e0b\uff1a public void render(Window window, Camera camera, Scene scene, boolean sceneChanged) { clear(); if (window.getOptions().frustumCulling) { frustumFilter.updateFrustum(window.getProjectionMatrix(), camera.getViewMatrix()); frustumFilter.filter(scene.getGameMeshes()); frustumFilter.filter(scene.getGameInstancedMeshes()); } // \u5728\u8bbe\u7f6e\u89c6\u53e3\u4e4b\u524d\u6e32\u67d3\u6df1\u5ea6\u56fe if (scene.isRenderShadows() && sceneChanged) { shadowRenderer.render(window, scene, camera, transformation, this); } glViewport(0, 0, window.getWidth(), window.getHeight()); // \u6bcf\u4e2a\u6e32\u67d3\u5468\u671f\u66f4\u65b0\u6295\u5f71\u77e9\u9635\u4e00\u6b21 window.updateProjectionMatrix(); renderGeometry(window, camera, scene); initLightRendering(); renderPointLights(window, camera, scene); renderDirectionalLight(window, camera, scene); endLightRendering(); renderFog(window, camera, scene); renderSkyBox(window, camera, scene); renderParticles(window, camera, scene); } \u51e0\u4f55\u5904\u7406\u9636\u6bb5\u662f\u5728 renderGeometry \u65b9\u6cd5\u4e2d\u5b8c\u6210\u7684\uff08\u4f60\u53ef\u4ee5\u770b\u5230\u6211\u4eec\u4e0d\u518d\u6709 renderScene \uff09\u3002\u5149\u7167\u5904\u7406\u9636\u6bb5\u5206\u51e0\u4e2a\u6b65\u9aa4\u5b8c\u6210\uff0c\u9996\u5148\u8bbe\u7f6e\u8981\u4f7f\u7528\u7684\u7f13\u51b2\u533a\u548c\u5176\u4ed6\u53c2\u6570\uff08\u5728 initLightRendering \u4e2d\uff09\uff0c\u7136\u540e\u6e32\u67d3\u70b9\u5149\u6e90\uff08\u5728 renderPointLights \u4e2d\uff09\u548c\u5e73\u884c\u5149\uff08\u5728 renderDirectionalLight \u4e2d\uff09\uff0c\u6700\u540e\u6062\u590d\u72b6\u6001\uff08\u5728 endLightRendering \u4e2d\uff09\u3002 \u8ba9\u6211\u4eec\u4ece\u51e0\u4f55\u5904\u7406\u9636\u6bb5\u5f00\u59cb\u3002 renderGeometry \u65b9\u6cd5\u51e0\u4e4e\u7b49\u540c\u4e8e\u5728\u524d\u51e0\u7ae0\u4e2d\u4f7f\u7528\u7684 renderScene \u65b9\u6cd5\uff1a private void renderGeometry(Window window, Camera camera, Scene scene) { // \u6e32\u67d3G\u7f13\u51b2\u533a\u4ee5\u4fbf\u5199\u5165 glBindFramebuffer(GL_DRAW_FRAMEBUFFER, gBuffer.getGBufferId()); clear(); glDisable(GL_BLEND); gBufferShaderProgram.bind(); Matrix4f viewMatrix = camera.getViewMatrix(); Matrix4f projectionMatrix = window.getProjectionMatrix(); gBufferShaderProgram.setUniform(\"viewMatrix\", viewMatrix); gBufferShaderProgram.setUniform(\"projectionMatrix\", projectionMatrix); gBufferShaderProgram.setUniform(\"texture_sampler\", 0); gBufferShaderProgram.setUniform(\"normalMap\", 1); List<ShadowCascade> shadowCascades = shadowRenderer.getShadowCascades(); for (int i = 0; i < ShadowRenderer.NUM_CASCADES; i++) { ShadowCascade shadowCascade = shadowCascades.get(i); gBufferShaderProgram.setUniform(\"orthoProjectionMatrix\", shadowCascade.getOrthoProjMatrix(), i); gBufferShaderProgram.setUniform(\"cascadeFarPlanes\", ShadowRenderer.CASCADE_SPLITS[i], i); gBufferShaderProgram.setUniform(\"lightViewMatrix\", shadowCascade.getLightViewMatrix(), i); } shadowRenderer.bindTextures(GL_TEXTURE2); int start = 2; for (int i = 0; i < ShadowRenderer.NUM_CASCADES; i++) { gBufferShaderProgram.setUniform(\"shadowMap_\" + i, start + i); } gBufferShaderProgram.setUniform(\"renderShadow\", scene.isRenderShadows() ? 1 : 0); renderNonInstancedMeshes(scene); renderInstancedMeshes(scene, viewMatrix); gBufferShaderProgram.unbind(); glEnable(GL_BLEND); } \u4ec5\u6709\u7684\u533a\u522b\u662f\uff1a \u6211\u4eec\u7ed1\u5b9a\u5230G\u7f13\u51b2\u533a\u800c\u4e0d\u662f\u5c4f\u5e55\u3002 \u7981\u7528\u6df7\u5408\uff0c\u56e0\u4e3a\u6211\u4eec\u53ea\u60f3\u4f7f\u7528\u6700\u63a5\u8fd1\u6444\u50cf\u673a\u7684\u503c\uff08\u6700\u5c0f\u6df1\u5ea6\u503c\uff09\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u6df7\u5408\u3002 \u5982\u679c\u4f7f\u7528OpenGL\u8c03\u8bd5\u5668\uff08\u5982RenderDoc\uff09\u8c03\u8bd5\u793a\u4f8b\uff0c\u5219\u53ef\u4ee5\u770b\u5230\u51e0\u4f55\u5904\u7406\u9636\u6bb5\u671f\u95f4\u751f\u6210\u7684\u7eb9\u7406\u3002\u4f4d\u7f6e\u7eb9\u7406\u5c06\u5982\u4e0b\u6240\u793a\uff1a \u50a8\u5b58\u6f2b\u53cd\u5c04\u5206\u91cf\u503c\u7684\u7eb9\u7406\u5982\u4e0b\u6240\u793a\uff1a \u50a8\u5b58\u6cd5\u7ebf\u503c\u7684\u7eb9\u7406\u5982\u4e0b\u6240\u793a\uff1a \u73b0\u5728\u8f6e\u5230\u5149\u7167\u5904\u7406\u9636\u6bb5\u4e86\u3002\u6211\u4eec\u9996\u5148\u9700\u8981\u5728\u6e32\u67d3\u4e4b\u524d\u8bbe\u7f6e\u4e00\u4e9b\u4e1c\u897f\uff0c\u8fd9\u662f\u5728 initLightRendering \u65b9\u6cd5\u4e2d\u5b8c\u6210\u7684\uff1a private void initLightRendering() { // \u7ed1\u5b9a\u573a\u666f\u7f13\u51b2\u533a glBindFramebuffer(GL_FRAMEBUFFER, sceneBuffer.getBufferId()); // \u6e05\u7406G\u7f13\u51b2\u533a clear(); // \u7981\u7528\u6df1\u5ea6\u6d4b\u8bd5\u4ee5\u5141\u8bb8\u7ed8\u5236\u5177\u6709\u76f8\u540c\u6df1\u5ea6\u7684\u591a\u4e2a\u56fe\u5c42 glDisable(GL_DEPTH_TEST); glEnable(GL_BLEND); glBlendEquation(GL_FUNC_ADD); glBlendFunc(GL_ONE, GL_ONE); // \u7ed1\u5b9aG\u7f13\u51b2\u533a\u4ee5\u4fbf\u8bfb\u53d6 glBindFramebuffer(GL_READ_FRAMEBUFFER, gBuffer.getGBufferId()); } \u56e0\u4e3a\u6211\u4eec\u4e0d\u4f1a\u6e32\u67d3\u5230\u5c4f\u5e55\u4e0a\uff0c\u6240\u4ee5\u9996\u5148\u9700\u8981\u7ed1\u5b9a\u5230\u7eb9\u7406\u4e0a\uff0c\u8be5\u7eb9\u7406\u5c06\u4fdd\u5b58\u5149\u7167\u5904\u7406\u9636\u6bb5\u7684\u7ed3\u679c\u3002\u7136\u540e\u6e05\u9664\u7f13\u51b2\u533a\u5e76\u7981\u7528\u6df1\u5ea6\u6d4b\u8bd5\u3002\u56e0\u4e3a\u5df2\u7ecf\u5728\u51e0\u4f55\u5904\u7406\u9636\u6bb5\u8fdb\u884c\u4e86\u6df1\u5ea6\u6d4b\u8bd5\uff0c\u8fd9\u5c31\u4e0d\u518d\u9700\u8981\u4e86\u3002\u53e6\u4e00\u91cd\u8981\u6b65\u9aa4\u662f\u542f\u7528\u6df7\u5408\u3002\u6700\u540e\u4e00\u4e2a\u64cd\u4f5c\u662f\u542f\u7528G\u7f13\u51b2\u533a\u8fdb\u884c\u8bfb\u53d6\uff0c\u5b83\u5c06\u5728\u5149\u7167\u5904\u7406\u9636\u6bb5\u671f\u95f4\u4f7f\u7528\u3002 \u5728\u5206\u6790\u4e0d\u540c\u5149\u7167\u7684\u6e32\u67d3\u65b9\u6cd5\u4e4b\u524d\uff0c\u8ba9\u6211\u4eec\u7a0d\u5fae\u8003\u8651\u4e00\u4e0b\u5982\u4f55\u6e32\u67d3\u5149\u7167\u3002\u6211\u4eec\u9700\u8981\u4f7f\u7528G\u7f13\u51b2\u533a\u7684\u5185\u5bb9\uff0c\u4f46\u4e3a\u4e86\u4f7f\u7528\u5b83\u4eec\uff0c\u9700\u8981\u5148\u6e32\u67d3\u4e00\u4e9b\u4e1c\u897f\u3002\u4f46\u662f\uff0c\u6211\u4eec\u5df2\u7ecf\u7ed8\u5236\u4e86\u573a\u666f\uff0c\u73b0\u5728\u8981\u6e32\u67d3\u4ec0\u4e48\uff1f\u7b54\u6848\u5f88\u7b80\u5355\uff0c\u6211\u4eec\u53ea\u9700\u8981\u6e32\u67d3\u4e00\u4e2a\u5145\u6ee1\u4e86\u6574\u4e2a\u5c4f\u5e55\u7684\u77e9\u5f62\u3002\u5bf9\u4e8e\u8be5\u77e9\u5f62\u7684\u6bcf\u4e2a\u7247\u5143\uff0c\u6211\u4eec\u5c06\u4f7f\u7528G\u7f13\u51b2\u533a\u4e2d\u50a8\u5b58\u7684\u6570\u636e\u5e76\u751f\u6210\u6b63\u786e\u7684\u8f93\u51fa\u989c\u8272\u3002\u4f60\u8fd8\u8bb0\u5f97\u6211\u4eec\u5728 Renderer \u7c7b\u7684 init \u65b9\u6cd5\u4e2d\u52a0\u8f7d\u7684 Mesh \u5417\uff1f\u5b83\u88ab\u547d\u540d\u4e3a bufferPassMesh \uff0c\u5b83\u53ea\u50a8\u5b58\u4e00\u4e2a\u5145\u6ee1\u6574\u4e2a\u5c4f\u5e55\u7684\u77e9\u5f62\u3002 \u90a3\u4e48\uff0c\u5149\u7167\u5904\u7406\u9636\u6bb5\u7684\u9876\u70b9\u7740\u8272\u5668\u770b\u8d77\u6765\u662f\u600e\u6837\u7684\uff1f #version 330 layout (location=0) in vec3 position; uniform mat4 projectionMatrix; uniform mat4 modelMatrix; void main() { gl_Position = projectionMatrix * modelMatrix * vec4(position, 1.0); } \u4e0a\u8ff0\u4ee3\u7801\u662f\u6e32\u67d3\u70b9\u5149\u6e90\u548c\u5e73\u884c\u5149\u65f6\u4f7f\u7528\u7684\u9876\u70b9\u7740\u8272\u5668\uff08 light_vertex.vs \uff09\u3002\u5b83\u53ea\u662f\u4f7f\u7528\u6a21\u578b\u77e9\u9635\u548c\u6295\u5f71\u77e9\u9635\u6765\u8f6c\u50a8\u9876\u70b9\u3002\u4e0d\u9700\u8981\u4f7f\u7528\u89c2\u5bdf\u77e9\u9635\uff0c\u56e0\u4e3a\u8fd9\u91cc\u4e0d\u9700\u8981\u6444\u50cf\u673a\u3002 \u70b9\u5149\u6e90\u7684\u7247\u5143\u7740\u8272\u5668\uff08 point_light_fragment.fs \uff09\u7684\u5b9a\u4e49\u5982\u4e0b\uff1a #version 330 out vec4 fragColor; struct Attenuation { float constant; float linear; float exponent; }; struct PointLight { vec3 colour; // Light position is assumed to be in view coordinates vec3 position; float intensity; Attenuation att; }; uniform sampler2D positionsText; uniform sampler2D diffuseText; uniform sampler2D specularText; uniform sampler2D normalsText; uniform sampler2D shadowText; uniform sampler2D depthText; uniform vec2 screenSize; uniform float specularPower; uniform PointLight pointLight; vec2 getTextCoord() { return gl_FragCoord.xy / screenSize; } vec4 calcLightColour(vec4 diffuseC, vec4 speculrC, float reflectance, vec3 light_colour, float light_intensity, vec3 position, vec3 to_light_dir, vec3 normal) { vec4 diffuseColour = vec4(0, 0, 0, 1); vec4 specColour = vec4(0, 0, 0, 1); // Diffuse Light float diffuseFactor = max(dot(normal, to_light_dir), 0.0); diffuseColour = diffuseC * vec4(light_colour, 1.0) * light_intensity * diffuseFactor; // Specular Light vec3 camera_direction = normalize(-position); vec3 from_light_dir = -to_light_dir; vec3 reflected_light = normalize(reflect(from_light_dir , normal)); float specularFactor = max( dot(camera_direction, reflected_light), 0.0); specularFactor = pow(specularFactor, specularPower); specColour = speculrC * light_intensity * specularFactor * reflectance * vec4(light_colour, 1.0); return (diffuseColour + specColour); } vec4 calcPointLight(vec4 diffuseC, vec4 speculrC, float reflectance, PointLight light, vec3 position, vec3 normal) { vec3 light_direction = light.position - position; vec3 to_light_dir = normalize(light_direction); vec4 light_colour = calcLightColour(diffuseC, speculrC, reflectance, light.colour, light.intensity, position, to_light_dir, normal); // Apply Attenuation float distance = length(light_direction); float attenuationInv = light.att.constant + light.att.linear * distance + light.att.exponent * distance * distance; return light_colour / attenuationInv; } void main() { vec2 textCoord = getTextCoord(); float depth = texture(depthText, textCoord).r; vec3 worldPos = texture(positionsText, textCoord).xyz; vec4 diffuseC = texture(diffuseText, textCoord); vec4 speculrC = texture(specularText, textCoord); vec3 normal = texture(normalsText, textCoord).xyz; float shadowFactor = texture(shadowText, textCoord).r; float reflectance = texture(shadowText, textCoord).g; fragColor = calcPointLight(diffuseC, speculrC, reflectance, pointLight, worldPos.xyz, normal.xyz) * shadowFactor; } \u5982\u4f60\u6240\u89c1\uff0c\u5b83\u5305\u542b\u4f60\u5e94\u8be5\u719f\u6089\u7684\u51fd\u6570\uff0c\u5b83\u4eec\u5728\u524d\u51e0\u7ae0\u7684\u573a\u666f\u7247\u5143\u7740\u8272\u5668\u4e2d\u4f7f\u7528\u8fc7\u3002\u8fd9\u91cc\u9700\u8981\u6ce8\u610f\u7684\u91cd\u8981\u4e8b\u9879\u5982\u4e0b\uff1a uniform sampler2D positionsText; uniform sampler2D diffuseText; uniform sampler2D specularText; uniform sampler2D normalsText; uniform sampler2D shadowText; uniform sampler2D depthText; \u8fd9\u4e9bUniform\u5efa\u6a21\u6784\u6210\u4e86G\u7f13\u51b2\u533a\u7684\u4e0d\u540c\u7eb9\u7406\u3002\u6211\u4eec\u5c06\u4f7f\u7528\u5b83\u4eec\u6765\u8bbf\u95ee\u6570\u636e\u3002\u4f60\u73b0\u5728\u53ef\u80fd\u4f1a\u95ee\uff0c\u5f53\u6211\u4eec\u6e32\u67d3\u4e00\u4e2a\u7247\u5143\u65f6\uff0c\u5982\u4f55\u77e5\u9053\u8981\u4ece\u8fd9\u4e9b\u7eb9\u7406\u4e2d\u83b7\u53d6\u54ea\u4e2a\u50cf\u7d20\uff1f\u7b54\u6848\u662f\u4f7f\u7528 gl_FragCoord \u8f93\u5165\u53d8\u91cf\uff0c\u6b64\u53d8\u91cf\u50a8\u5b58\u5f53\u524d\u7247\u5143\u4e0e\u7a97\u53e3\u7684\u76f8\u5bf9\u5750\u6807\u3002\u56e0\u4e3a\u8981\u4ece\u5750\u6807\u7cfb\u8f6c\u6362\u4e3a\u7eb9\u7406\uff0c\u6211\u4eec\u4f7f\u7528\u4ee5\u4e0b\u51fd\u6570\uff1a vec2 getTextCoord() { return gl_FragCoord.xy / screenSize; } \u5e73\u884c\u5149\u7684\u7247\u5143\u7740\u8272\u5668\u4e5f\u5f88\u76f8\u4f3c\uff0c\u53ef\u4ee5\u67e5\u770b\u6e90\u4ee3\u7801\u3002\u73b0\u5728\u5df2\u7ecf\u6709\u4e86\u7740\u8272\u5668\uff0c\u6211\u4eec\u56de\u5230 Renderer \u7c7b\u3002\u5bf9\u4e8e\u70b9\u5149\u6e90\uff0c\u6211\u4eec\u5c06\u505a\u5c3d\u53ef\u80fd\u591a\u7684\u5149\u7167\u5904\u7406\uff0c\u6211\u4eec\u53ea\u662f\u7ed1\u5b9a\u7528\u4e8e\u6b64\u7c7b\u578b\u5149\u6e90\u7684\u7740\u8272\u5668\uff0c\u5e76\u4e3a\u6bcf\u4e2a\u7740\u8272\u5668\u7ed8\u5236\u77e9\u5f62\u3002 private void renderPointLights(Window window, Camera camera, Scene scene) { pointLightShaderProgram.bind(); Matrix4f viewMatrix = camera.getViewMatrix(); Matrix4f projectionMatrix = window.getProjectionMatrix(); pointLightShaderProgram.setUniform(\"modelMatrix\", bufferPassModelMatrix); pointLightShaderProgram.setUniform(\"projectionMatrix\", projectionMatrix); // \u955c\u9762\u53cd\u5c04\u7cfb\u6570 pointLightShaderProgram.setUniform(\"specularPower\", specularPower); // \u7ed1\u5b9aG\u7f13\u51b2\u533a\u7eb9\u7406 int[] textureIds = this.gBuffer.getTextureIds(); int numTextures = textureIds != null ? textureIds.length : 0; for (int i=0; i<numTextures; i++) { glActiveTexture(GL_TEXTURE0 + i); glBindTexture(GL_TEXTURE_2D, textureIds[i]); } pointLightShaderProgram.setUniform(\"positionsText\", 0); pointLightShaderProgram.setUniform(\"diffuseText\", 1); pointLightShaderProgram.setUniform(\"specularText\", 2); pointLightShaderProgram.setUniform(\"normalsText\", 3); pointLightShaderProgram.setUniform(\"shadowText\", 4); pointLightShaderProgram.setUniform(\"screenSize\", (float) gBuffer.getWidth(), (float)gBuffer.getHeight()); SceneLight sceneLight = scene.getSceneLight(); PointLight[] pointLights = sceneLight.getPointLightList(); int numPointLights = pointLights != null ? pointLights.length : 0; for(int i=0; i<numPointLights; i++) { // \u83b7\u53d6\u70b9\u5149\u6e90\u5bf9\u8c61\u7684\u526f\u672c\u5e76\u5c06\u5176\u4f4d\u7f6e\u8f6c\u6362\u5230\u89c2\u5bdf\u5750\u6807\u7cfb PointLight currPointLight = new PointLight(pointLights[i]); Vector3f lightPos = currPointLight.getPosition(); tmpVec.set(lightPos, 1); tmpVec.mul(viewMatrix); lightPos.x = tmpVec.x; lightPos.y = tmpVec.y; lightPos.z = tmpVec.z; pointLightShaderProgram.setUniform(\"pointLight\", currPointLight); bufferPassMesh.render(); } pointLightShaderProgram.unbind(); } \u5bf9\u4e8e\u5e73\u884c\u5149\u6765\u8bf4\uff0c\u65b9\u6cd5\u975e\u5e38\u76f8\u4f3c\u3002\u5728\u6b64\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u53ea\u8fdb\u884c\u4e00\u6b21\u5904\u7406\uff1a private void renderDirectionalLight(Window window, Camera camera, Scene scene) { dirLightShaderProgram.bind(); Matrix4f viewMatrix = camera.getViewMatrix(); Matrix4f projectionMatrix = window.getProjectionMatrix(); dirLightShaderProgram.setUniform(\"modelMatrix\", bufferPassModelMatrix); dirLightShaderProgram.setUniform(\"projectionMatrix\", projectionMatrix); // \u955c\u9762\u53cd\u5c04\u7cfb\u6570 dirLightShaderProgram.setUniform(\"specularPower\", specularPower); // \u7ed1\u5b9aG\u7f13\u51b2\u533a\u7eb9\u7406 int[] textureIds = this.gBuffer.getTextureIds(); int numTextures = textureIds != null ? textureIds.length : 0; for (int i=0; i<numTextures; i++) { glActiveTexture(GL_TEXTURE0 + i); glBindTexture(GL_TEXTURE_2D, textureIds[i]); } dirLightShaderProgram.setUniform(\"positionsText\", 0); dirLightShaderProgram.setUniform(\"diffuseText\", 1); dirLightShaderProgram.setUniform(\"specularText\", 2); dirLightShaderProgram.setUniform(\"normalsText\", 3); dirLightShaderProgram.setUniform(\"shadowText\", 4); dirLightShaderProgram.setUniform(\"screenSize\", (float) gBuffer.getWidth(), (float)gBuffer.getHeight()); // \u73af\u5883\u5149\u7167 SceneLight sceneLight = scene.getSceneLight(); dirLightShaderProgram.setUniform(\"ambientLight\", sceneLight.getAmbientLight()); // \u5e73\u884c\u5149 // \u83b7\u53d6\u5e73\u884c\u5149\u5bf9\u8c61\u7684\u526f\u672c\u5e76\u5c06\u5176\u4f4d\u7f6e\u8f6c\u6362\u5230\u89c2\u5bdf\u5750\u6807\u7cfb DirectionalLight currDirLight = new DirectionalLight(sceneLight.getDirectionalLight()); tmpVec.set(currDirLight.getDirection(), 0); tmpVec.mul(viewMatrix); currDirLight.setDirection(new Vector3f(tmpVec.x, tmpVec.y, tmpVec.z)); dirLightShaderProgram.setUniform(\"directionalLight\", currDirLight); bufferPassMesh.render(); dirLightShaderProgram.unbind(); } endLightRendering \u53ea\u7b80\u5355\u5730\u6062\u590d\u72b6\u6001\u3002 private void endLightRendering() { // \u7ed1\u5b9a\u5c4f\u5e55\u4ee5\u4fbf\u5199\u5165 glBindFramebuffer(GL_FRAMEBUFFER, 0); glEnable(GL_DEPTH_TEST); glDisable(GL_BLEND); } \u5982\u679c\u8fd0\u884c\u793a\u4f8b\uff0c\u4f60\u5c06\u770b\u5230\u5982\u4e0b\u5185\u5bb9\uff1a \u672c\u7ae0\u6bd4\u9884\u671f\u65f6\u95f4\u957f\uff0c\u4f46\u6709\u51e0\u4e2a\u8981\u70b9\u9700\u8981\u6f84\u6e05\uff1a \u4e3a\u4e86\u7b80\u5316\u672c\u7ae0\uff0c\u5df2\u7ecf\u5220\u9664\u4e86\u805a\u5149\u6e90\u7684\u76f8\u5173\u5185\u5bb9\u3002 \u5ef6\u8fdf\u7740\u8272\u6cd5\u4e2d\u4f7f\u7528\u70b9\u5149\u6e90\u7684\u4e00\u79cd\u5e38\u89c1\u6280\u672f\u662f\u8ba1\u7b97\u53d7\u8be5\u5149\u6e90\u5f71\u54cd\u7684\u573a\u666f\u533a\u57df\u3002\u5728\u6b64\u60c5\u51b5\u4e0b\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u8f83\u5c0f\u7684\u56db\u8fb9\u5f62\uff0c\u5706\u5f62\u7b49\uff0c\u800c\u4e0d\u662f\u6e32\u67d3\u5145\u6ee1\u5c4f\u5e55\u7684\u77e9\u5f62\u3002\u8bf7\u7262\u8bb0\uff0c\u6700\u597d\u662f\u597d\u7684\u654c\u4eba\uff0c\u8fdb\u884c\u590d\u6742\u7684\u5fae\u79ef\u5206\u4ee5\u786e\u5b9a\u6240\u9700\u7684\u6700\u5c0f\u5f62\u72b6\u53ef\u80fd\u6bd4\u4f7f\u7528\u5176\u4ed6\u7c97\u7cd9\u65b9\u6cd5\u6162\u3002 \u5982\u679c\u6ca1\u6709\u8bb8\u591a\u5149\u6e90\uff0c\u6b64\u65b9\u6cd5\u6bd4\u6b63\u5411\u7740\u8272\u6cd5\u6162\u3002 \u6700\u540e\u8981\u6ce8\u610f\u7684\u4e00\u70b9\u662f\uff0c\u5982\u679c\u4f60\u60f3\u4e86\u89e3\u8fd9\u4e9b\u6280\u672f\u5728\u73b0\u5b9e\u4e2d\u7684\u5e94\u7528\uff0c\u53ef\u4ee5\u67e5\u770b \u8fd9\u4e2a\u6781\u597d\u7684\u8bf4\u660e \uff0c\u4e86\u89e3GTA V\u7684\u5e27\u662f\u5982\u4f55\u6e32\u67d3\u7684\u3002","title":"\u5ef6\u8fdf\u7740\u8272\u6cd5\uff08Deferred Shading\uff09"},{"location":"a01-opengl-debugging/","text":"\u9644\u5f55 A - OpenGL\u8c03\u8bd5\uff08OpenGL Debugging\uff09 \u8c03\u8bd5OpenGL\u7a0b\u5e8f\u53ef\u80fd\u662f\u4e00\u9879\u8270\u5de8\u7684\u4efb\u52a1\u3002\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u4f60\u4f1a\u770b\u5230\u4e00\u4e2a\u9ed1\u5c4f\uff0c\u4f60\u65e0\u6cd5\u77e5\u9053\u5230\u5e95\u53d1\u751f\u4e86\u4ec0\u4e48\u3002\u4e3a\u4e86\u7f13\u89e3\u8fd9\u4e2a\u7a98\u51b5\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e9b\u73b0\u6709\u7684\u5de5\u5177\u6765\u63d0\u4f9b\u5173\u4e8e\u6e32\u67d3\u6d41\u7a0b\u7684\u66f4\u591a\u4fe1\u606f\u3002 \u5728\u672c\u9644\u5f55\u4e2d\uff0c\u6211\u4eec\u5c06\u5b66\u4e60\u5982\u4f55\u4f7f\u7528 RenderDoc \u5de5\u5177\u8c03\u8bd5LWJGL\u7a0b\u5e8f\u3002RenderDoc\u662f\u4e00\u4e2a\u56fe\u5f62\u8c03\u8bd5\u5de5\u7a0b\uff0c\u53ef\u4ee5\u4e0eDirect3D\u3001Vulkan\u548cOpenGL\u4e00\u8d77\u4f7f\u7528\u3002\u5bf9\u4e8eOpenGL\uff0c\u5b83\u4ec5\u652f\u6301\u4ece3.2\u52304.5\u7684\u6838\u5fc3\u6a21\u5f0f\u3002 \u8ba9\u6211\u4eec\u5f00\u59cb\u5427\uff0c\u4f60\u9700\u8981\u4e0b\u8f7d\u5e76\u5b89\u88c5\u5bf9\u5e94\u64cd\u4f5c\u7cfb\u7edf\u7684RenderDoc\u3002\u5b89\u88c5\u540e\uff0c\u5f53\u4f60\u542f\u52a8\u5b83\u65f6\uff0c\u4f1a\u770b\u5230\u7c7b\u4f3c\u4e8e\u4e0b\u56fe\u7684\u4e1c\u897f\uff1a \u7b2c\u4e00\u6b65\u662f\u914d\u7f6eRenderDoc\u6765\u8fd0\u884c\u548c\u76d1\u89c6\u6211\u4eec\u7684\u793a\u4f8b\u3002\u5728\u201cCapture Executable\u201d\u9009\u9879\u5361\u4e2d\uff0c\u9700\u8981\u8bbe\u7f6e\u4ee5\u4e0b\u53c2\u6570\uff1a Executable path \uff1a\u5728\u672c\u4f8b\u4e2d\uff0c\u8fd9\u5e94\u8be5\u6307\u5411JVM\u542f\u52a8\u7a0b\u5e8f\uff08\u4f8b\u5982\uff0c\u201cC:\\Program Files\\Java\\jdk-9\\bin\\java.exe\u201d\uff09\u3002 Working Directory \uff1a\u8fd9\u5c06\u4e3a\u4f60\u7684\u7a0b\u5e8f\u8bbe\u7f6e\u5de5\u4f5c\u76ee\u5f55\u3002\u5728\u672c\u4f8b\u4e2d\uff0c\u5e94\u8be5\u5c06\u5176\u8bbe\u7f6e\u4e3aMaven\u8f6c\u50a8\u7ed3\u679c\u7684 target \u76ee\u5f55\u3002\u8fd9\u6837\u8bbe\u7f6e\u540e\uff0c\u53ef\u4ee5\u627e\u5230\u4f9d\u8d56\u9879\u3002 Command line arguments \uff1a\u8fd9\u5c06\u5305\u542bJVM\u8fd0\u884c\u793a\u4f8b\u6240\u9700\u7684\u53c2\u6570\u3002\u5728\u672c\u4f8b\u4e2d\uff0c\u53ea\u9700\u8981\u4f20\u9012\u8981\u6267\u884c\u7684Jar\uff08\u4f8b\u5982\uff0c\u201c-java game-c28-1.0.jar\u201d\uff09\u3002 \u4f60\u8981\u8bb0\u4f4f3D\u6a21\u578b\u73b0\u5df2\u7531 Assimp \u5e93\u52a0\u8f7d\uff0c\u6211\u4eec\u9700\u8981\u7684\u662f\u5b9e\u9645\u7684\u6587\u4ef6\u8def\u5f84\uff08\u800c\u4e0d\u662f CLASSPATH \u7684\u76f8\u5bf9\u8def\u5f84\uff09\uff0c\u56e0\u6b64\u4f60\u9700\u8981\u5728\u4f60\u8bbe\u7f6e\u7684\u5de5\u4f5c\u76ee\u5f55\u68c0\u67e5\u8def\u5f84\u3002\u5728\u6b64\u60c5\u51b5\u4e0b\uff0c\u6700\u7b80\u5355\u5feb\u901f\u7684\u6d4b\u8bd5\u65b9\u6cd5\u662f\u5c06src\u6587\u4ef6\u5939\u590d\u5236\u5230 target \u76ee\u5f55\u4e2d\u3002 \u6b64\u9009\u9879\u5361\u4e2d\u8fd8\u6709\u8bb8\u591a\u5176\u4ed6\u9009\u9879\u7528\u4e8e\u914d\u7f6e\u6355\u83b7\u9009\u9879\u3002\u4f60\u53ef\u4ee5\u5728 RenderDoc\u6587\u6863 \u4e2d\u67e5\u9605\u5b83\u4eec\u7684\u7528\u9014\u3002\u4e00\u5207\u5c31\u7eea\u540e\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u70b9\u51fb\u201cLaunch\u201d\u6309\u94ae\u6765\u5f00\u59cb\u8fd0\u884c\u7a0b\u5e8f\u3002\u4f60\u5c06\u770b\u5230\u5982\u4e0b\u5185\u5bb9\uff1a \u4f60\u53ef\u80fd\u4f1a\u770b\u5230\u4e00\u4e2a\u8b66\u544a\uff0c\u56e0\u4e3aRenderDoc\u53ea\u80fd\u4f7f\u7528OpenGL\u6838\u5fc3\u6a21\u5f0f\u3002\u5728\u672c\u4f8b\u4e2d\uff0c\u6211\u4eec\u5df2\u7ecf\u542f\u7528\u4e86\u517c\u5bb9\u6027\u6a21\u5f0f\uff0c\u4f46\u5b83\u4f1a\u5ffd\u7565\u8b66\u544a\u7ee7\u7eed\u5de5\u4f5c\u3002\u7a0b\u5e8f\u8fd0\u884c\u540e\uff0c\u4f60\u5c31\u53ef\u4ee5\u89e6\u53d1\u5b83\u7684\u5feb\u7167\u3002\u4f60\u5c06\u770b\u5230\u6dfb\u52a0\u4e86\u4e00\u4e2a\u65b0\u7684\u9009\u9879\u5361\uff0c\u540d\u4e3a\u201cjava [PID XXXX]\u201d\uff08\u5176\u4e2dXXXX\u6570\u5b57\u8868\u793aJava\u8fdb\u7a0b\u7684PID\u3001\u8fdb\u7a0b\u6807\u8bc6\u53f7\uff09 \u4ece\u8be5\u9009\u9879\u5361\u4e2d\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u6309\u4e0b\u201cTrigger capture\u201d\u6309\u94ae\u6765\u6355\u83b7\u7a0b\u5e8f\u7684\u72b6\u6001\u3002\u751f\u6210\u4e86\u4e00\u4e2a\u6355\u83b7\u7ed3\u679c\u540e\uff0c\u4f60\u5c06\u5728\u540c\u4e00\u4e2a\u9009\u9879\u5361\u4e2d\u770b\u5230\u4e00\u4e2a\u5c0f\u5feb\u7167\u3002 \u5982\u679c\u53cc\u51fb\u8be5\u6355\u83b7\u7ed3\u679c\uff0c\u5219\u5c06\u52a0\u8f7d\u6536\u96c6\u7684\u6240\u6709\u6570\u636e\uff0c\u5e76\u53ef\u4ee5\u5f00\u59cb\u67e5\u770b\u5b83\u3002\u201cEvent Browser\u201d\u9762\u677f\u5c06\u663e\u793a\u6240\u6709\u5728\u4e00\u4e2a\u6e32\u67d3\u5468\u671f\u5185\u6267\u884c\u7684\u4e0eOpenGL\u76f8\u5173\u7684\u8c03\u7528\u3002 \u5bf9\u4e8e\u7b2c\u4e00\u4e2a\u6e32\u67d3\u6d41\u7a0b\uff0c\u4f60\u53ef\u4ee5\u770b\u5230\u5730\u9762\u662f\u5982\u4f55\u5728\u6a21\u578b\u623f\u5c4b\u7684\u7f51\u683c\u4e4b\u540e\u7ed8\u5236\u7684\u3002\u5982\u679c\u5355\u51fb\u4e00\u4e2aglDrawELements\u4e8b\u4ef6\uff0c\u5e76\u9009\u62e9\u201cMesh\u201d\u9009\u9879\u5361\uff0c\u5219\u53ef\u4ee5\u67e5\u770b\u7ed8\u5236\u7684\u7f51\u683c\uff0c\u4e8b\u4ef6\u7684\u9876\u70b9\u7740\u8272\u5668\u7684\u8f93\u5165\u4e0e\u8f93\u51fa\u3002 \u4f60\u6362\u53ef\u4ee5\u67e5\u770b\u7528\u4e8e\u8be5\u7ed8\u5236\u64cd\u4f5c\u7684\u8f93\u5165\u7eb9\u7406\uff08\u901a\u8fc7\u5355\u51fb\u201cTexture Viewer\u201d\u9009\u9879\u5361\uff09\u3002 \u5728\u4e2d\u592e\u9762\u677f\u4e2d\uff0c\u4f60\u53ef\u4ee5\u770b\u5230\u8f93\u51fa\uff0c\u5728\u53f3\u4fa7\u9762\u677f\u4e0a\u53ef\u4ee5\u770b\u5230\u7528\u4e8e\u8f93\u5165\u7684\u7eb9\u7406\u5217\u8868\u3002\u8fd8\u53ef\u4ee5\u9010\u4e2a\u67e5\u770b\u8f93\u51fa\u7eb9\u7406\u3002\u8fd9\u5f88\u597d\u5730\u8bf4\u660e\u4e86\u5ef6\u8fdf\u7740\u8272\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u3002 \u5982\u4f60\u6240\u89c1\uff0c\u8be5\u5de5\u5177\u63d0\u4f9b\u4e86\u6709\u5173\u6e32\u67d3\u65f6\u53d1\u751f\u7684\u60c5\u51b5\u7684\u5b9d\u8d35\u6570\u636e\uff0c\u5b83\u53ef\u4ee5\u5728\u8c03\u8bd5\u6e32\u67d3\u95ee\u9898\u65f6\u8282\u7701\u5b9d\u8d35\u7684\u65f6\u95f4\u3002\u5b83\u751a\u81f3\u53ef\u4ee5\u663e\u793a\u6709\u5173\u6e32\u67d3\u7ba1\u7ebf\u4e2d\u4f7f\u7528\u7684\u7740\u8272\u5668\u7684\u4fe1\u606f\u3002","title":"\u9644\u5f55 A - OpenGL\u8c03\u8bd5"},{"location":"a01-opengl-debugging/#a-openglopengl-debugging","text":"\u8c03\u8bd5OpenGL\u7a0b\u5e8f\u53ef\u80fd\u662f\u4e00\u9879\u8270\u5de8\u7684\u4efb\u52a1\u3002\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u4f60\u4f1a\u770b\u5230\u4e00\u4e2a\u9ed1\u5c4f\uff0c\u4f60\u65e0\u6cd5\u77e5\u9053\u5230\u5e95\u53d1\u751f\u4e86\u4ec0\u4e48\u3002\u4e3a\u4e86\u7f13\u89e3\u8fd9\u4e2a\u7a98\u51b5\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e9b\u73b0\u6709\u7684\u5de5\u5177\u6765\u63d0\u4f9b\u5173\u4e8e\u6e32\u67d3\u6d41\u7a0b\u7684\u66f4\u591a\u4fe1\u606f\u3002 \u5728\u672c\u9644\u5f55\u4e2d\uff0c\u6211\u4eec\u5c06\u5b66\u4e60\u5982\u4f55\u4f7f\u7528 RenderDoc \u5de5\u5177\u8c03\u8bd5LWJGL\u7a0b\u5e8f\u3002RenderDoc\u662f\u4e00\u4e2a\u56fe\u5f62\u8c03\u8bd5\u5de5\u7a0b\uff0c\u53ef\u4ee5\u4e0eDirect3D\u3001Vulkan\u548cOpenGL\u4e00\u8d77\u4f7f\u7528\u3002\u5bf9\u4e8eOpenGL\uff0c\u5b83\u4ec5\u652f\u6301\u4ece3.2\u52304.5\u7684\u6838\u5fc3\u6a21\u5f0f\u3002 \u8ba9\u6211\u4eec\u5f00\u59cb\u5427\uff0c\u4f60\u9700\u8981\u4e0b\u8f7d\u5e76\u5b89\u88c5\u5bf9\u5e94\u64cd\u4f5c\u7cfb\u7edf\u7684RenderDoc\u3002\u5b89\u88c5\u540e\uff0c\u5f53\u4f60\u542f\u52a8\u5b83\u65f6\uff0c\u4f1a\u770b\u5230\u7c7b\u4f3c\u4e8e\u4e0b\u56fe\u7684\u4e1c\u897f\uff1a \u7b2c\u4e00\u6b65\u662f\u914d\u7f6eRenderDoc\u6765\u8fd0\u884c\u548c\u76d1\u89c6\u6211\u4eec\u7684\u793a\u4f8b\u3002\u5728\u201cCapture Executable\u201d\u9009\u9879\u5361\u4e2d\uff0c\u9700\u8981\u8bbe\u7f6e\u4ee5\u4e0b\u53c2\u6570\uff1a Executable path \uff1a\u5728\u672c\u4f8b\u4e2d\uff0c\u8fd9\u5e94\u8be5\u6307\u5411JVM\u542f\u52a8\u7a0b\u5e8f\uff08\u4f8b\u5982\uff0c\u201cC:\\Program Files\\Java\\jdk-9\\bin\\java.exe\u201d\uff09\u3002 Working Directory \uff1a\u8fd9\u5c06\u4e3a\u4f60\u7684\u7a0b\u5e8f\u8bbe\u7f6e\u5de5\u4f5c\u76ee\u5f55\u3002\u5728\u672c\u4f8b\u4e2d\uff0c\u5e94\u8be5\u5c06\u5176\u8bbe\u7f6e\u4e3aMaven\u8f6c\u50a8\u7ed3\u679c\u7684 target \u76ee\u5f55\u3002\u8fd9\u6837\u8bbe\u7f6e\u540e\uff0c\u53ef\u4ee5\u627e\u5230\u4f9d\u8d56\u9879\u3002 Command line arguments \uff1a\u8fd9\u5c06\u5305\u542bJVM\u8fd0\u884c\u793a\u4f8b\u6240\u9700\u7684\u53c2\u6570\u3002\u5728\u672c\u4f8b\u4e2d\uff0c\u53ea\u9700\u8981\u4f20\u9012\u8981\u6267\u884c\u7684Jar\uff08\u4f8b\u5982\uff0c\u201c-java game-c28-1.0.jar\u201d\uff09\u3002 \u4f60\u8981\u8bb0\u4f4f3D\u6a21\u578b\u73b0\u5df2\u7531 Assimp \u5e93\u52a0\u8f7d\uff0c\u6211\u4eec\u9700\u8981\u7684\u662f\u5b9e\u9645\u7684\u6587\u4ef6\u8def\u5f84\uff08\u800c\u4e0d\u662f CLASSPATH \u7684\u76f8\u5bf9\u8def\u5f84\uff09\uff0c\u56e0\u6b64\u4f60\u9700\u8981\u5728\u4f60\u8bbe\u7f6e\u7684\u5de5\u4f5c\u76ee\u5f55\u68c0\u67e5\u8def\u5f84\u3002\u5728\u6b64\u60c5\u51b5\u4e0b\uff0c\u6700\u7b80\u5355\u5feb\u901f\u7684\u6d4b\u8bd5\u65b9\u6cd5\u662f\u5c06src\u6587\u4ef6\u5939\u590d\u5236\u5230 target \u76ee\u5f55\u4e2d\u3002 \u6b64\u9009\u9879\u5361\u4e2d\u8fd8\u6709\u8bb8\u591a\u5176\u4ed6\u9009\u9879\u7528\u4e8e\u914d\u7f6e\u6355\u83b7\u9009\u9879\u3002\u4f60\u53ef\u4ee5\u5728 RenderDoc\u6587\u6863 \u4e2d\u67e5\u9605\u5b83\u4eec\u7684\u7528\u9014\u3002\u4e00\u5207\u5c31\u7eea\u540e\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u70b9\u51fb\u201cLaunch\u201d\u6309\u94ae\u6765\u5f00\u59cb\u8fd0\u884c\u7a0b\u5e8f\u3002\u4f60\u5c06\u770b\u5230\u5982\u4e0b\u5185\u5bb9\uff1a \u4f60\u53ef\u80fd\u4f1a\u770b\u5230\u4e00\u4e2a\u8b66\u544a\uff0c\u56e0\u4e3aRenderDoc\u53ea\u80fd\u4f7f\u7528OpenGL\u6838\u5fc3\u6a21\u5f0f\u3002\u5728\u672c\u4f8b\u4e2d\uff0c\u6211\u4eec\u5df2\u7ecf\u542f\u7528\u4e86\u517c\u5bb9\u6027\u6a21\u5f0f\uff0c\u4f46\u5b83\u4f1a\u5ffd\u7565\u8b66\u544a\u7ee7\u7eed\u5de5\u4f5c\u3002\u7a0b\u5e8f\u8fd0\u884c\u540e\uff0c\u4f60\u5c31\u53ef\u4ee5\u89e6\u53d1\u5b83\u7684\u5feb\u7167\u3002\u4f60\u5c06\u770b\u5230\u6dfb\u52a0\u4e86\u4e00\u4e2a\u65b0\u7684\u9009\u9879\u5361\uff0c\u540d\u4e3a\u201cjava [PID XXXX]\u201d\uff08\u5176\u4e2dXXXX\u6570\u5b57\u8868\u793aJava\u8fdb\u7a0b\u7684PID\u3001\u8fdb\u7a0b\u6807\u8bc6\u53f7\uff09 \u4ece\u8be5\u9009\u9879\u5361\u4e2d\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u6309\u4e0b\u201cTrigger capture\u201d\u6309\u94ae\u6765\u6355\u83b7\u7a0b\u5e8f\u7684\u72b6\u6001\u3002\u751f\u6210\u4e86\u4e00\u4e2a\u6355\u83b7\u7ed3\u679c\u540e\uff0c\u4f60\u5c06\u5728\u540c\u4e00\u4e2a\u9009\u9879\u5361\u4e2d\u770b\u5230\u4e00\u4e2a\u5c0f\u5feb\u7167\u3002 \u5982\u679c\u53cc\u51fb\u8be5\u6355\u83b7\u7ed3\u679c\uff0c\u5219\u5c06\u52a0\u8f7d\u6536\u96c6\u7684\u6240\u6709\u6570\u636e\uff0c\u5e76\u53ef\u4ee5\u5f00\u59cb\u67e5\u770b\u5b83\u3002\u201cEvent Browser\u201d\u9762\u677f\u5c06\u663e\u793a\u6240\u6709\u5728\u4e00\u4e2a\u6e32\u67d3\u5468\u671f\u5185\u6267\u884c\u7684\u4e0eOpenGL\u76f8\u5173\u7684\u8c03\u7528\u3002 \u5bf9\u4e8e\u7b2c\u4e00\u4e2a\u6e32\u67d3\u6d41\u7a0b\uff0c\u4f60\u53ef\u4ee5\u770b\u5230\u5730\u9762\u662f\u5982\u4f55\u5728\u6a21\u578b\u623f\u5c4b\u7684\u7f51\u683c\u4e4b\u540e\u7ed8\u5236\u7684\u3002\u5982\u679c\u5355\u51fb\u4e00\u4e2aglDrawELements\u4e8b\u4ef6\uff0c\u5e76\u9009\u62e9\u201cMesh\u201d\u9009\u9879\u5361\uff0c\u5219\u53ef\u4ee5\u67e5\u770b\u7ed8\u5236\u7684\u7f51\u683c\uff0c\u4e8b\u4ef6\u7684\u9876\u70b9\u7740\u8272\u5668\u7684\u8f93\u5165\u4e0e\u8f93\u51fa\u3002 \u4f60\u6362\u53ef\u4ee5\u67e5\u770b\u7528\u4e8e\u8be5\u7ed8\u5236\u64cd\u4f5c\u7684\u8f93\u5165\u7eb9\u7406\uff08\u901a\u8fc7\u5355\u51fb\u201cTexture Viewer\u201d\u9009\u9879\u5361\uff09\u3002 \u5728\u4e2d\u592e\u9762\u677f\u4e2d\uff0c\u4f60\u53ef\u4ee5\u770b\u5230\u8f93\u51fa\uff0c\u5728\u53f3\u4fa7\u9762\u677f\u4e0a\u53ef\u4ee5\u770b\u5230\u7528\u4e8e\u8f93\u5165\u7684\u7eb9\u7406\u5217\u8868\u3002\u8fd8\u53ef\u4ee5\u9010\u4e2a\u67e5\u770b\u8f93\u51fa\u7eb9\u7406\u3002\u8fd9\u5f88\u597d\u5730\u8bf4\u660e\u4e86\u5ef6\u8fdf\u7740\u8272\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u3002 \u5982\u4f60\u6240\u89c1\uff0c\u8be5\u5de5\u5177\u63d0\u4f9b\u4e86\u6709\u5173\u6e32\u67d3\u65f6\u53d1\u751f\u7684\u60c5\u51b5\u7684\u5b9d\u8d35\u6570\u636e\uff0c\u5b83\u53ef\u4ee5\u5728\u8c03\u8bd5\u6e32\u67d3\u95ee\u9898\u65f6\u8282\u7701\u5b9d\u8d35\u7684\u65f6\u95f4\u3002\u5b83\u751a\u81f3\u53ef\u4ee5\u663e\u793a\u6709\u5173\u6e32\u67d3\u7ba1\u7ebf\u4e2d\u4f7f\u7528\u7684\u7740\u8272\u5668\u7684\u4fe1\u606f\u3002","title":"\u9644\u5f55 A - OpenGL\u8c03\u8bd5\uff08OpenGL Debugging\uff09"},{"location":"glossary/","text":"\u672f\u8bed\u8868 \u672c\u4e66\u672f\u8bed\u8868\u6309\u672f\u8bed\u9996\u6b21\u4ecb\u7ecd\u7ae0\u8282\u6392\u5e8f\u3002 Java\u8f7b\u91cf\u7ea7\u6e38\u620f\u5e93\uff08Lightweight Java Game Library\uff0cLWJGL\uff09\uff1a OpenGL\u3001OpenCL\u3001OpenAL\u548cVulkan\u5bf9Java\u5e73\u53f0\u7684\u539f\u751f\u7ed1\u5b9a\uff0c\u5e38\u7528\u4e8e\u5f00\u53d1\u6e38\u620f\u3002 GLFW\uff1a \u4e3aOpenGL\u3001OpenGL ES\u548cVulkan\u63d0\u4f9b\u7684\u8de8\u5e73\u53f0\u7a97\u53e3\u4e0e\u8f93\u5165\u5e93\u3002 \u5e27\u7387\uff08Frames Per Second\uff0cFPS\uff09\uff1a \u4ee5\u5e27\u79f0\u4e3a\u5355\u4f4d\u7684\u4f4d\u56fe\u56fe\u50cf\u8fde\u7eed\u51fa\u73b0\u5728\u663e\u793a\u5668\u4e0a\u7684\u9891\u7387\uff08\u901f\u7387\uff09\uff0c\u5355\u4f4d\u4e3aHz\u6216FPS\uff0c\u901a\u4fd7\u6765\u8bb2\u5c31\u662f\u6bcf\u79d2\u51fa\u73b0\u5728\u5c4f\u5e55\u4e0a\u7684\u753b\u9762\u6570\u3002 \u5b9a\u957f\u6e38\u620f\u5faa\u73af\uff08Fixed Step Game Loop\uff09\uff1a \u4ee5\u56fa\u5b9a\u65f6\u95f4\u5468\u671f\u66f4\u65b0\u7684\u6e38\u620f\u5faa\u73af\u3002 \u5782\u76f4\u540c\u6b65\uff08Vertical Synchronization\uff09\uff1a \u907f\u514d\u56e0\u4e3a\u6e38\u620f\u8fd0\u884c\u901f\u5ea6\u8fc7\u5feb\u5bfc\u81f4\u7684\u753b\u9762\u6495\u88c2\u73b0\u8c61\u3002 \u56fe\u5f62\u7ba1\u7ebf\uff08Graphics Pipeline\uff09\uff1a \u53c8\u79f0 \u6e32\u67d3\u7ba1\u7ebf\uff08Rendering Pipeline\uff09 \uff0c\u662f\u5c06\u4e09\u7ef4\u8868\u793a\u6620\u5c04\u5230\u4e8c\u7ef4\u5c4f\u5e55\u7684\u4e00\u7cfb\u5217\u6b65\u9aa4\u3002 \u56fa\u5b9a\u7ba1\u7ebf\uff08Fixed-function Pipeline\uff09\uff1a \u56fa\u5b9a\u7ba1\u7ebf\u5728\u7ed8\u5236\u8fc7\u7a0b\u4e2d\u5b9a\u4e49\u4e86\u4e00\u7ec4\u56fa\u5b9a\u7684\u64cd\u4f5c\u6b65\u9aa4\uff0c\u7a0b\u5e8f\u5458\u88ab\u6bcf\u4e00\u6b65\u9aa4\u53ef\u7528\u7684\u51fd\u6570\u96c6\u7ea6\u675f\uff0c\u53ef\u4ee5\u4f7f\u7528\u7684\u6548\u679c\u548c\u53ef\u8fdb\u884c\u7684\u64cd\u4f5c\u53d7\u5230API\u7684\u9650\u5236\uff0c\u4f46\u662f\u8fd9\u4e9b\u529f\u80fd\u7684\u5b9e\u73b0\u662f\u56fa\u5b9a\u7684\uff0c\u5e76\u4e14\u4e0d\u80fd\u4fee\u6539\u3002 \u53ef\u7f16\u7a0b\u7ba1\u7ebf\uff08Programmable Pipeline\uff09\uff1a \u53ef\u7f16\u7a0b\u7ba1\u7ebf\u4f7f\u7ec4\u6210\u56fe\u5f62\u7ba1\u7ebf\u7684\u4e0d\u540c\u6b65\u9aa4\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528\u4e00\u7ec4\u53eb\u505a\u7740\u8272\u5668\u7684\u7279\u5b9a\u7a0b\u5e8f\u6765\u63a7\u5236\u6216\u7f16\u7a0b\u3002 \u7740\u8272\u5668\uff08Shader\uff09\uff1a \u7528\u4e8e\u63a7\u5236\u56fe\u5f62\u7ba1\u7ebf\u4e0d\u540c\u9636\u6bb5\u7684\u7279\u5b9a\u7a0b\u5e8f\u3002 \u9876\u70b9\uff08Vertex\uff09\uff1a \u7528\u4e8e\u63cf\u8ff0\u4e8c\u7ef4\u6216\u8005\u4e09\u7ef4\u7a7a\u95f4\u4e2d\u7684\u70b9\u7684\u6570\u636e\u7ed3\u6784\u3002 \u9876\u70b9\u7f13\u51b2\u533a\uff08Vertex Buffer\uff09\uff1a \u4f7f\u7528\u9876\u70b9\u6570\u7ec4\u6765\u5305\u88c5\u6240\u6709\u9700\u8981\u6e32\u67d3\u7684\u9876\u70b9\u7684\u6570\u636e\u7ed3\u6784\uff0c\u5e76\u4f7f\u8fd9\u4e9b\u6570\u636e\u80fd\u591f\u5728\u56fe\u5f62\u7ba1\u7ebf\u7684\u7740\u8272\u5668\u4e2d\u4f7f\u7528\u3002 \u9876\u70b9\u7740\u8272\u5668\uff08Vertex Shader\uff09\uff1a \u7740\u8272\u5668\u4e4b\u4e00\uff0c\u7528\u4e8e\u8ba1\u7b97\u6bcf\u4e2a\u9876\u70b9\u5230\u5c4f\u5e55\u7a7a\u95f4\u4e2d\u7684\u6295\u5f71\u4f4d\u7f6e\u3002 \u51e0\u4f55\u5904\u7406\u9636\u6bb5\uff08Geometry Processing\uff09\uff1a \u56fe\u5f62\u7ba1\u7ebf\u9636\u6bb5\u4e4b\u4e00\uff0c\u6b64\u9636\u6bb5\u5c06\u7531\u9876\u70b9\u7740\u8272\u5668\u53d8\u6362\u7684\u9876\u70b9\u8fde\u63a5\u6210\u4e09\u89d2\u5f62\u3002 \u4e09\u89d2\u5f62\uff08Triangle\uff09\uff1a \u663e\u5361\u7684\u57fa\u672c\u5de5\u4f5c\u5355\u5143\u4e4b\u4e00\uff0c\u6700\u7b80\u5355\u7684\u4e8c\u7ef4\u51e0\u4f55\u5f62\u72b6\u3002 \u5149\u6805\u5316\uff08Rasterization\uff09\uff1a \u56fe\u5f62\u7ba1\u7ebf\u9636\u6bb5\u4e4b\u4e00\uff0c\u6b64\u9636\u6bb5\u5c06\u51e0\u4f55\u5904\u7406\u9636\u6bb5\u751f\u6210\u7684\u4e09\u89d2\u5f62\u526a\u8f91\u5e76\u5c06\u5176\u8f6c\u6362\u4e3a\u50cf\u7d20\u5927\u5c0f\u7684\u7247\u5143\u3002 \u7247\u5143\u5904\u7406\u9636\u6bb5\uff08Fragment Processing\uff09\uff1a \u56fe\u5f62\u7ba1\u7ebf\u9636\u6bb5\u4e4b\u4e00\uff0c\u751f\u6210\u5199\u5165\u5230\u5e27\u7f13\u51b2\u533a\u7684\u50cf\u7d20\u7684\u6700\u7ec8\u989c\u8272\u3002 \u7247\u5143\uff08Fragment\uff09\uff1a \u7ec4\u6210\u5e27\u7684\u6700\u5c0f\u5355\u4f4d\uff0c\u901a\u5e38\u76f8\u5f53\u4e8e\u4e00\u4e2a\u50cf\u7d20\u7684\u5927\u5c0f\uff0c\u53ef\u8ba4\u4e3a\u5176\u5373\u662f\u50cf\u7d20\uff08Pixel\uff09\u3002 \u7247\u5143\u7740\u8272\u5668\uff08Fragment Shader\uff09\uff1a \u7740\u8272\u5668\u4e4b\u4e00\uff0c\u7528\u4e8e\u751f\u6210\u5199\u5165\u5230\u5e27\u7f13\u51b2\u533a\u7684\u50cf\u7d20\u7684\u6700\u7ec8\u989c\u8272\u3002 \u5e27\u7f13\u51b2\u533a\uff08Framebuffer\uff09\uff1a \u7528\u4e8e\u50a8\u5b58\u56fe\u5f62\u7ba1\u7ebf\u7684\u8f93\u51fa\uff0c\u7531\u591a\u4e2a\u50cf\u7d20\u7ec4\u6210\u7684\u6570\u636e\u7ed3\u6784\u3002 OpenGL\u7740\u8272\u5668\u8bed\u8a00\uff08GLSL\uff09\uff1a \u7528\u4e8e\u7f16\u5199OpenGL\u7740\u8272\u5668\u7684\u7c7bC\u8bed\u8a00\u3002 \u9f50\u6b21\u5750\u6807\uff08Homogeneous Coordinates\uff09\uff1a \u9f50\u6b21\u5750\u6807\u5c31\u662f\u5c06\u4e00\u4e2a\u539f\u672c\u662fn\u7ef4\u7684\u5411\u91cf\u7528\u4e00\u4e2an+1\u7ef4\u5411\u91cf\u6765\u8868\u793a\u3002 \u9876\u70b9\u7f13\u51b2\u5bf9\u8c61\uff08Vertex Buffer Object\uff0cVBO\uff09\uff1a \u663e\u5b58\u4e2d\u5b58\u50a8\u9876\u70b9\u6216\u5176\u4ed6\u6570\u636e\u7684\u5185\u5b58\u7f13\u51b2\u533a\u3002 \u9876\u70b9\u6570\u7ec4\u5bf9\u8c61\uff08Vertex Array Object\uff0cVAO\uff09\uff1a \u7528\u4e8e\u50a8\u5b58\u4e00\u4e2a\u6216\u591a\u4e2a\u9876\u70b9\u7f13\u51b2\u5bf9\u8c61\u7684\u5bf9\u8c61\uff0c\u4fbf\u4e8e\u4f7f\u7528\u663e\u5361\u4e2d\u7684\u50a8\u5b58\u7684\u6570\u636e\u3002 \u56db\u8fb9\u5f62\uff08Quad\uff09\uff1a \u53ef\u7531\u4e24\u4e2a\u4e09\u89d2\u5f62\u7ec4\u6210\u7684\u51e0\u4f55\u5f62\u72b6\uff0c\u7531\u56db\u4e2a\u9876\u70b9\u7ec4\u6210\u3002 \u7f51\u683c\uff08Mesh\uff09\uff1a \u6e38\u620f\u5f00\u53d1\u4e2d\u5e38\u89c1\u6982\u5ff5\u4e4b\u4e00\uff0c\u901a\u5e38\u7528\u4e8e\u5305\u88c5\u9876\u70b9\u6570\u7ec4\u5bf9\u8c61\uff08VAO\uff09\uff0c\u50a8\u5b58\u6a21\u578b\u7684\u4f4d\u7f6e\u3001\u9876\u70b9\u7d22\u5f15\u3001\u989c\u8272\u7b49\u6570\u636e\u3002 \u7d22\u5f15\u7f13\u51b2\u533a\uff08Index Buffer\uff09\uff1a \u7528\u4e8e\u6307\u5b9a\u9876\u70b9\u7ed8\u5236\u987a\u5e8f\u7684\u7f13\u51b2\u533a\u3002 \u6295\u5f71\u77e9\u9635\uff08Projection Matrix\uff09\uff1a \u5c06\u9876\u70b9\u4ece\u4e09\u7ef4\u4e16\u754c\u7a7a\u95f4\u6295\u5f71\u5230\u4e8c\u7ef4\u5c4f\u5e55\u7a7a\u95f4\u7684\u77e9\u9635\u3002 \u622a\u9525\u4f53\uff08Frustum\uff09\uff1a \u4e09\u7ef4\u51e0\u4f55\u4f53\u7684\u4e00\u79cd\uff0c\u53c8\u79f0\u4e3a\u68f1\u53f0\u3002\u5728\u6e38\u620f\u5f15\u64ce\u4e2d\u901a\u5e38\u4e3a\u56db\u68f1\u53f0\u3002 \u77e9\u9635\uff08Matrix\uff09\uff1a \u77e9\u9635\u662f\u4ee5\u884c\u548c\u5217\u6392\u5217\u7684\u4e8c\u7ef4\u6570\u7ec4\uff0c\u5728\u6e38\u620f\u5f15\u64ce\u4e2d\u901a\u5e38\u7528\u4e8e\u53d8\u6362\u4e09\u7ef4\u7a7a\u95f4\u4e2d\u7684\u70b9\u3002 \u5bbd\u9ad8\u6bd4\uff08Aspect Ratio\uff09\uff1a \u9ad8\u5ea6\u4e0e\u5bbd\u5ea6\u4e4b\u6bd4\u3002 JOML\uff08Java OpenGL Math Library\uff09\uff1a Java OpenGL \u6570\u5b66\u5e93\uff0c\u63d0\u4f9b\u4e86\u5bf9OpenGL\u7684\u4e00\u7cfb\u5217\u5e38\u7528\u6570\u5b66\u5b9e\u4f53\u7684\u5c01\u88c5\u3002 Uniform\uff1a Uniform\u662f\u7740\u8272\u5668\u53ef\u4ee5\u4f7f\u7528\u7684\u5168\u5c40\u7684GLSL\u53d8\u91cf\u3002 \u4f4d\u79fb\uff08Translation\uff09\uff1a \u5728\u4e09\u4e2a\u8f74\u4e2d\u7684\u4efb\u610f\u4e00\u4e2a\u8f74\u4e0a\u79fb\u52a8\u4e00\u4e2a\u7269\u4f53\u3002 \u65cb\u8f6c\uff08Rotation\uff09\uff1a \u6309\u4efb\u610f\u4e00\u4e2a\u8f74\u65cb\u8f6c\u7269\u4f53\u4efb\u610f\u89d2\u5ea6\u3002 \u7f29\u653e\uff08Scale\uff09\uff1a \u8c03\u6574\u7269\u4f53\u7684\u5927\u5c0f\u3002 \u53d8\u6362\uff08Transformation\uff09\uff1a \u4f4d\u79fb\u3001\u65cb\u8f6c\u548c\u7f29\u653e\u4e09\u8005\u7684\u7edf\u79f0\u3002 \u4e16\u754c\u77e9\u9635\uff08World Matrix\uff09\uff1a \u5c06\u7269\u4f53\u6216\u6a21\u578b\u4ece\u6a21\u578b\u5750\u6807\u7a7a\u95f4\u53d8\u6362\u5230\u4e16\u754c\u5750\u6807\u7a7a\u95f4\u7684\u77e9\u9635\uff0c\u7531\u4f4d\u79fb\u77e9\u9635\u3001\u65cb\u8f6c\u77e9\u9635\u548c\u7f29\u653e\u77e9\u9635\u76f8\u4e58\u6240\u5f97\u3002 \u4f4d\u79fb\u77e9\u9635\uff08Translation Matrix\uff09\uff1a \u53ef\u5bf9\u4e09\u7ef4\u5750\u6807\u8fdb\u884c\u4f4d\u79fb\u53d8\u6362\u7684\u77e9\u9635\u3002 \u65cb\u8f6c\u77e9\u9635\uff08Rotation Matrix\uff09\uff1a \u53ef\u5bf9\u4e09\u7ef4\u5750\u6807\u8fdb\u884c\u65cb\u8f6c\u53d8\u6362\u7684\u77e9\u9635\u3002 \u7f29\u653e\u77e9\u9635\uff08Scale Matrix\uff09\uff1a \u53ef\u5bf9\u4e09\u7ef4\u5750\u6807\u8fdb\u884c\u7f29\u653e\u53d8\u6362\u7684\u77e9\u9635\u3002 \u6df1\u5ea6\u6d4b\u8bd5\uff08Depth Test\uff09\uff1a \u5bf9\u7247\u5143\u8fdb\u884c\u6df1\u5ea6\u6d4b\u8bd5\uff0c\u4e22\u5f03\u8ddd\u79bb\u5c4f\u5e55\u8f83\u8fdc\u7684\u7247\u5143\u3002 \u7eb9\u7406\uff08Texture\uff09\uff1a \u7528\u4e8e\u7ed8\u5236\u6a21\u578b\u7684\u50cf\u7d20\u7684\u56fe\u50cf\u3002 \u591a\u7ea7\u6e10\u8fdc\u7eb9\u7406\uff08Mipmap\uff09\uff1a \u5bf9\u4e8e\u8ddd\u79bb\u5c4f\u5e55\u8f83\u8fdc\u7684\u50cf\u7d20\uff0c\u5c06\u4f7f\u7528\u7ec6\u8282\u8f83\u4f4e\u7684\u7eb9\u7406\u8fdb\u884c\u7ed8\u5236\u3002\u591a\u7ea7\u6e10\u8fdc\u7eb9\u7406\u53ef\u89e3\u51b3\u7531\u4e8e\u8ddd\u79bb\u95ee\u9898\u800c\u5bfc\u81f4\u7684\u8fdc\u5904\u50cf\u7d20\u95ea\u70c1\u95ee\u9898\u3002 \u7eb9\u7406\u5750\u6807\uff08Texture Coordinate\uff09\uff1a \u901a\u5e38\u53ea\u6709\u4e24\u4e2a\u5206\u91cf\uff0c\u7528\u4e8e\u6307\u5b9a\u7247\u5143\u5728\u7eb9\u7406\u4e0a\u7684\u4f4d\u7f6e\u3002 \u7eb9\u7406\u5355\u5143\uff08Texture Unit\uff09\uff1a \u7528\u4e8e\u50a8\u5b58\u7eb9\u7406\u7684\u7a7a\u95f4\u3002 \u53d6\u6837\u5668\uff08Sampler\uff09\uff1a Uniform\u7c7b\u578b\u4e4b\u4e00\uff0c\u7528\u4e8e\u6307\u5b9a\u88ab\u53d6\u6837\u7684\u7eb9\u7406\u3002 \u6df7\u5408\uff08Blend\uff09\uff1a OpenGL\u529f\u80fd\u4e4b\u4e00\uff0c\u7528\u4e8e\u6e32\u67d3\u900f\u660e\u6216\u534a\u900f\u660e\u7269\u4f53\uff0c\u5c06\u5176\u7247\u5143\u4e0e\u5176\u540e\u7247\u5143\u7684\u989c\u8272\u8fdb\u884c\u6df7\u5408\u3002 \u6444\u50cf\u673a\uff08Camera\uff09\uff1a \u7528\u4e8e\u81ea\u7531\u89c2\u5bdf\u4e09\u7ef4\u4e16\u754c\u7684\u529f\u80fd\u3002OpenGL\u4e2d\u4e0d\u5b58\u5728\u6b64\u529f\u80fd\u548c\u6982\u5ff5\uff0c\u79fb\u52a8\u6444\u50cf\u673a\u5b9e\u9645\u4e0a\u662f\u5c06\u573a\u666f\u4e2d\u7684\u6240\u6709\u7269\u4f53\u5411\u76f8\u53cd\u7684\u65b9\u5411\u79fb\u52a8\u3002 \u7ffb\u6eda\uff08Roll\uff09\uff1a \u6b27\u62c9\u89d2\uff08Euler Angles\uff09\u4e4b\u4e00\uff0c\u7528\u4e8e\u63cf\u8ff0\u7269\u4f53\u6cbf\u5176\u7eb5\u8f74\u65cb\u8f6c\u7684\u89d2\u5ea6\u3002 \u4fef\u4ef0\uff08Pitch\uff09\uff1a \u6b27\u62c9\u89d2\u4e4b\u4e00\uff0c\u7528\u4e8e\u63cf\u8ff0\u7269\u4f53\u6cbf\u5176\u6a2a\u8f74\u65cb\u8f6c\u7684\u89d2\u5ea6\u3002 \u504f\u822a\uff08Yaw\uff09\uff1a \u6b27\u62c9\u89d2\u4e4b\u4e00\uff0c\u7528\u4e8e\u63cf\u8ff0\u7269\u4f53\u6cbf\u5176\u7ad6\u8f74\u65cb\u8f6c\u7684\u89d2\u5ea6\u3002 \u89c2\u5bdf\u77e9\u9635\uff08View Matrix\uff09\uff1a \u7528\u4e8e\u5c06\u9876\u70b9\u5411\u6444\u50cf\u673a\u6240\u5728\u4f4d\u7f6e\u7684\u76f8\u53cd\u65b9\u5411\u548c\u65cb\u8f6c\u72b6\u6001\u53d8\u6362\u7684\u77e9\u9635\u3002 \u6a21\u578b\u89c2\u5bdf\u77e9\u9635\uff08Model View Matrix\uff09\uff1a \u662f\u89c2\u5bdf\u77e9\u9635\u4e0e\u4e16\u754c\u77e9\u9635\u7ec4\u5408\uff0c\u53ef\u5c06\u6a21\u578b\u7a7a\u95f4\u7684\u5750\u6807\u53d8\u6362\u5230\u6444\u50cf\u673a\u7a7a\u95f4\u4e2d\u7684\u5750\u6807\uff0c\u7528\u4e8e\u7b80\u5316\u8ba1\u7b97\u3002 OBJ\uff08.obj\uff09\uff1a Wavefront Technologies\u5f00\u53d1\u7684\u4e00\u79cd\u51e0\u4f55\u5b9a\u4e49\u5f00\u653e\u6587\u4ef6\u683c\u5f0f\uff0c\u73b0\u5df2\u88ab\u5e7f\u6cdb\u91c7\u7528\u3002 \u6cd5\u7ebf\uff08Normal\uff09\uff1a \u4e00\u4e2a\u5e73\u9762\u7684\u6cd5\u7ebf\u662f\u4e00\u4e2a\u5782\u76f4\u4e8e\u8be5\u5e73\u9762\u7684\u5411\u91cf\u3002 \u5f52\u4e00\u5316\uff08Normalize\uff09\uff1a \u4f7f\u5411\u91cf\u7684\u957f\u5ea6\uff08\u6216\u6a21\u957f\uff09\u4e3a1\u3002 \u9876\u70b9\u6cd5\u7ebf\uff08Vertex Normal\uff09\uff1a \u4e00\u4e2a\u9876\u70b9\u7684\u6cd5\u7ebf\u662f\u5176\u53c2\u4e0e\u7ec4\u6210\u7684\u4e09\u89d2\u5f62\u7684\u9762\u7684\u6cd5\u7ebf\u7684\u7ec4\u5408\uff0c\u5176\u957f\u5ea6\u4ecd\u4e3a1\u3002 \u70b9\u5149\u6e90\uff08Point Light\uff09\uff1a \u8fd9\u79cd\u5149\u6a21\u62df\u7684\u662f\u4e00\u4e2a\u7531\u70b9\u5411\u7a7a\u95f4\u5404\u4e2a\u65b9\u5411\u5747\u5300\u53d1\u5c04\u7684\u5149\u6e90\u3002 \u805a\u5149\u6e90\uff08Spot Light\uff09\uff1a \u8fd9\u79cd\u5149\u6a21\u62df\u4ece\u7a7a\u95f4\u4e2d\u7684\u70b9\u53d1\u5c04\u7684\u5149\u6e90\uff0c\u4f46\u4e0d\u662f\u5411\u6240\u6709\u65b9\u5411\u4e0a\u53d1\u5c04\uff0c\u800c\u662f\u9650\u5b9a\u5728\u4e86\u4e00\u4e2a\u9525\u5f62\u65b9\u5411\u4e0a\u3002 \u5e73\u884c\u5149\uff08Directional Light\uff09\uff1a \u8fd9\u79cd\u5149\u6a21\u62df\u4e86\u592a\u9633\u5149\uff0c3D\u573a\u666f\u4e2d\u7684\u6240\u6709\u7269\u4f53\u90fd\u4f1a\u53d7\u5230\u6765\u81ea\u7279\u5b9a\u65b9\u5411\u7684\u5e73\u884c\u5149\u7ebf\u7684\u7167\u5c04\u3002\u65e0\u8bba\u7269\u4f53\u662f\u8fd1\u6291\u6216\u662f\u8fdc\uff0c\u5149\u7ebf\u603b\u662f\u4ee5\u76f8\u540c\u89d2\u5ea6\u7167\u5c04\u5728\u7269\u4f53\u4e0a\u3002 \u73af\u5883\u5149\uff08Ambient Light\uff09\uff1a \u8fd9\u79cd\u5149\u6765\u81ea\u7a7a\u95f4\u7684\u4efb\u4f55\u65b9\u5411\uff0c\u5e76\u4ee5\u76f8\u540c\u7684\u5f3a\u5ea6\u7167\u4eae\u6240\u6709\u7269\u4f53\u3002 \u6f2b\u53cd\u5c04\uff08Diffuse Reflectance\uff09\uff1a \u8003\u8651\u5230\u9762\u5411\u5149\u6e90\u7684\u8868\u9762\u66f4\u4eae\u3002 \u955c\u9762\u53cd\u5c04\uff08Specular Reflectance\uff09\uff1a \u6a21\u62df\u5149\u7ebf\u5728\u629b\u5149\u6216\u91d1\u5c5e\u8868\u9762\u4e0a\u7684\u53cd\u5c04\u3002 HUD\uff08Heads-Up Display\uff09\uff1a \u5e73\u89c6\u663e\u793a\u5668\uff0c\u5e38\u7528\u4e8e\u98de\u673a\u4e0a\u5c06\u91cd\u8981\u4fe1\u606f\u6295\u5f71\u4e8e\u6321\u98ce\u73bb\u7483\u6216\u5934\u76d4\u4e0a\uff0c\u4ee5\u4fbf\u98de\u884c\u5458\u540c\u65f6\u67e5\u770b\u524d\u65b9\u60c5\u51b5\u548c\u98de\u884c\u4fe1\u606f\u3002\u73b0\u7528\u4e8e\u6e38\u620f\u4e2d\uff0c\u5c06\u6e38\u620f\u4e2d\u7684\u91cd\u8981\u4fe1\u606f\u663e\u793a\u4e8e\u4e09\u7ef4\u573a\u666f\u524d\u3002 \u6b63\u4ea4\u6295\u5f71\uff08Orthographic Projection\uff0cOrthogonal Projection\uff09\uff1a \u4e5f\u79f0\u4e3a\u6b63\u6295\u5f71\uff0c\u6b63\u5c04\u6295\u5f71\u3002\u6307\u4e0d\u53d7\u8fd1\u5927\u8fdc\u5c0f\u5f71\u54cd\u7684\u5c06\u4e09\u7ef4\u7269\u4f53\u6295\u5f71\u5230\u4e8c\u7ef4\u5e73\u9762\u4e0a\u7684\u6295\u5f71\u65b9\u5f0f\u3002 \u6df7\u5408\uff08Blend\uff09\uff1a \u5b9e\u73b03D\u6e32\u67d3\u4e2d\u7269\u4f53\u900f\u660e\u7684\u4e00\u4e2a\u529f\u80fd\uff0c\u542f\u7528\u900f\u660e\u5c06\u5141\u8bb8\u4f7f\u7528Alpha\u5206\u91cf\u6df7\u5408\u989c\u8272\u3002 \u5929\u7a7a\u76d2\uff08Sky Box\uff09\uff1a \u5305\u88f93D\u573a\u666f\u5e76\u4ee5\u6444\u50cf\u673a\u4f4d\u7f6e\u4e3a\u539f\u70b9\u7684\u5de8\u5927\u7acb\u65b9\u4f53\uff0c\u5c06\u7eb9\u7406\u6e32\u67d3\u5728\u8be5\u7acb\u65b9\u4f53\u5185\u90e8\uff0c\u4ee5\u4ea7\u751f\u4e00\u79cd\u770b\u5230\u6ca1\u6709\u8fb9\u7f18\u7684\u573a\u666f\u7684\u9519\u89c9\u3002 \u7acb\u65b9\u4f53\u6620\u5c04\uff08Cube Mapping\uff09\uff1a \u5c06\u7eb9\u7406\u5206\u4e3a\u516d\u4e2a\u90e8\u5206\uff0c\u5c06\u5404\u90e8\u5206\u6620\u5c04\u5230\u7acb\u65b9\u4f53\u4e0a\u3002 \u9762\u5254\u9664\uff08Face Culling\uff09\uff1a \u5254\u9664\u65e0\u7528\u6216\u770b\u4e0d\u5230\u7684\u9762\uff0c\u4ee5\u63d0\u5347\u6027\u80fd\u7684OpenGL\u529f\u80fd\u3002","title":"\u672f\u8bed\u8868"},{"location":"glossary/#_1","text":"\u672c\u4e66\u672f\u8bed\u8868\u6309\u672f\u8bed\u9996\u6b21\u4ecb\u7ecd\u7ae0\u8282\u6392\u5e8f\u3002 Java\u8f7b\u91cf\u7ea7\u6e38\u620f\u5e93\uff08Lightweight Java Game Library\uff0cLWJGL\uff09\uff1a OpenGL\u3001OpenCL\u3001OpenAL\u548cVulkan\u5bf9Java\u5e73\u53f0\u7684\u539f\u751f\u7ed1\u5b9a\uff0c\u5e38\u7528\u4e8e\u5f00\u53d1\u6e38\u620f\u3002 GLFW\uff1a \u4e3aOpenGL\u3001OpenGL ES\u548cVulkan\u63d0\u4f9b\u7684\u8de8\u5e73\u53f0\u7a97\u53e3\u4e0e\u8f93\u5165\u5e93\u3002 \u5e27\u7387\uff08Frames Per Second\uff0cFPS\uff09\uff1a \u4ee5\u5e27\u79f0\u4e3a\u5355\u4f4d\u7684\u4f4d\u56fe\u56fe\u50cf\u8fde\u7eed\u51fa\u73b0\u5728\u663e\u793a\u5668\u4e0a\u7684\u9891\u7387\uff08\u901f\u7387\uff09\uff0c\u5355\u4f4d\u4e3aHz\u6216FPS\uff0c\u901a\u4fd7\u6765\u8bb2\u5c31\u662f\u6bcf\u79d2\u51fa\u73b0\u5728\u5c4f\u5e55\u4e0a\u7684\u753b\u9762\u6570\u3002 \u5b9a\u957f\u6e38\u620f\u5faa\u73af\uff08Fixed Step Game Loop\uff09\uff1a \u4ee5\u56fa\u5b9a\u65f6\u95f4\u5468\u671f\u66f4\u65b0\u7684\u6e38\u620f\u5faa\u73af\u3002 \u5782\u76f4\u540c\u6b65\uff08Vertical Synchronization\uff09\uff1a \u907f\u514d\u56e0\u4e3a\u6e38\u620f\u8fd0\u884c\u901f\u5ea6\u8fc7\u5feb\u5bfc\u81f4\u7684\u753b\u9762\u6495\u88c2\u73b0\u8c61\u3002 \u56fe\u5f62\u7ba1\u7ebf\uff08Graphics Pipeline\uff09\uff1a \u53c8\u79f0 \u6e32\u67d3\u7ba1\u7ebf\uff08Rendering Pipeline\uff09 \uff0c\u662f\u5c06\u4e09\u7ef4\u8868\u793a\u6620\u5c04\u5230\u4e8c\u7ef4\u5c4f\u5e55\u7684\u4e00\u7cfb\u5217\u6b65\u9aa4\u3002 \u56fa\u5b9a\u7ba1\u7ebf\uff08Fixed-function Pipeline\uff09\uff1a \u56fa\u5b9a\u7ba1\u7ebf\u5728\u7ed8\u5236\u8fc7\u7a0b\u4e2d\u5b9a\u4e49\u4e86\u4e00\u7ec4\u56fa\u5b9a\u7684\u64cd\u4f5c\u6b65\u9aa4\uff0c\u7a0b\u5e8f\u5458\u88ab\u6bcf\u4e00\u6b65\u9aa4\u53ef\u7528\u7684\u51fd\u6570\u96c6\u7ea6\u675f\uff0c\u53ef\u4ee5\u4f7f\u7528\u7684\u6548\u679c\u548c\u53ef\u8fdb\u884c\u7684\u64cd\u4f5c\u53d7\u5230API\u7684\u9650\u5236\uff0c\u4f46\u662f\u8fd9\u4e9b\u529f\u80fd\u7684\u5b9e\u73b0\u662f\u56fa\u5b9a\u7684\uff0c\u5e76\u4e14\u4e0d\u80fd\u4fee\u6539\u3002 \u53ef\u7f16\u7a0b\u7ba1\u7ebf\uff08Programmable Pipeline\uff09\uff1a \u53ef\u7f16\u7a0b\u7ba1\u7ebf\u4f7f\u7ec4\u6210\u56fe\u5f62\u7ba1\u7ebf\u7684\u4e0d\u540c\u6b65\u9aa4\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528\u4e00\u7ec4\u53eb\u505a\u7740\u8272\u5668\u7684\u7279\u5b9a\u7a0b\u5e8f\u6765\u63a7\u5236\u6216\u7f16\u7a0b\u3002 \u7740\u8272\u5668\uff08Shader\uff09\uff1a \u7528\u4e8e\u63a7\u5236\u56fe\u5f62\u7ba1\u7ebf\u4e0d\u540c\u9636\u6bb5\u7684\u7279\u5b9a\u7a0b\u5e8f\u3002 \u9876\u70b9\uff08Vertex\uff09\uff1a \u7528\u4e8e\u63cf\u8ff0\u4e8c\u7ef4\u6216\u8005\u4e09\u7ef4\u7a7a\u95f4\u4e2d\u7684\u70b9\u7684\u6570\u636e\u7ed3\u6784\u3002 \u9876\u70b9\u7f13\u51b2\u533a\uff08Vertex Buffer\uff09\uff1a \u4f7f\u7528\u9876\u70b9\u6570\u7ec4\u6765\u5305\u88c5\u6240\u6709\u9700\u8981\u6e32\u67d3\u7684\u9876\u70b9\u7684\u6570\u636e\u7ed3\u6784\uff0c\u5e76\u4f7f\u8fd9\u4e9b\u6570\u636e\u80fd\u591f\u5728\u56fe\u5f62\u7ba1\u7ebf\u7684\u7740\u8272\u5668\u4e2d\u4f7f\u7528\u3002 \u9876\u70b9\u7740\u8272\u5668\uff08Vertex Shader\uff09\uff1a \u7740\u8272\u5668\u4e4b\u4e00\uff0c\u7528\u4e8e\u8ba1\u7b97\u6bcf\u4e2a\u9876\u70b9\u5230\u5c4f\u5e55\u7a7a\u95f4\u4e2d\u7684\u6295\u5f71\u4f4d\u7f6e\u3002 \u51e0\u4f55\u5904\u7406\u9636\u6bb5\uff08Geometry Processing\uff09\uff1a \u56fe\u5f62\u7ba1\u7ebf\u9636\u6bb5\u4e4b\u4e00\uff0c\u6b64\u9636\u6bb5\u5c06\u7531\u9876\u70b9\u7740\u8272\u5668\u53d8\u6362\u7684\u9876\u70b9\u8fde\u63a5\u6210\u4e09\u89d2\u5f62\u3002 \u4e09\u89d2\u5f62\uff08Triangle\uff09\uff1a \u663e\u5361\u7684\u57fa\u672c\u5de5\u4f5c\u5355\u5143\u4e4b\u4e00\uff0c\u6700\u7b80\u5355\u7684\u4e8c\u7ef4\u51e0\u4f55\u5f62\u72b6\u3002 \u5149\u6805\u5316\uff08Rasterization\uff09\uff1a \u56fe\u5f62\u7ba1\u7ebf\u9636\u6bb5\u4e4b\u4e00\uff0c\u6b64\u9636\u6bb5\u5c06\u51e0\u4f55\u5904\u7406\u9636\u6bb5\u751f\u6210\u7684\u4e09\u89d2\u5f62\u526a\u8f91\u5e76\u5c06\u5176\u8f6c\u6362\u4e3a\u50cf\u7d20\u5927\u5c0f\u7684\u7247\u5143\u3002 \u7247\u5143\u5904\u7406\u9636\u6bb5\uff08Fragment Processing\uff09\uff1a \u56fe\u5f62\u7ba1\u7ebf\u9636\u6bb5\u4e4b\u4e00\uff0c\u751f\u6210\u5199\u5165\u5230\u5e27\u7f13\u51b2\u533a\u7684\u50cf\u7d20\u7684\u6700\u7ec8\u989c\u8272\u3002 \u7247\u5143\uff08Fragment\uff09\uff1a \u7ec4\u6210\u5e27\u7684\u6700\u5c0f\u5355\u4f4d\uff0c\u901a\u5e38\u76f8\u5f53\u4e8e\u4e00\u4e2a\u50cf\u7d20\u7684\u5927\u5c0f\uff0c\u53ef\u8ba4\u4e3a\u5176\u5373\u662f\u50cf\u7d20\uff08Pixel\uff09\u3002 \u7247\u5143\u7740\u8272\u5668\uff08Fragment Shader\uff09\uff1a \u7740\u8272\u5668\u4e4b\u4e00\uff0c\u7528\u4e8e\u751f\u6210\u5199\u5165\u5230\u5e27\u7f13\u51b2\u533a\u7684\u50cf\u7d20\u7684\u6700\u7ec8\u989c\u8272\u3002 \u5e27\u7f13\u51b2\u533a\uff08Framebuffer\uff09\uff1a \u7528\u4e8e\u50a8\u5b58\u56fe\u5f62\u7ba1\u7ebf\u7684\u8f93\u51fa\uff0c\u7531\u591a\u4e2a\u50cf\u7d20\u7ec4\u6210\u7684\u6570\u636e\u7ed3\u6784\u3002 OpenGL\u7740\u8272\u5668\u8bed\u8a00\uff08GLSL\uff09\uff1a \u7528\u4e8e\u7f16\u5199OpenGL\u7740\u8272\u5668\u7684\u7c7bC\u8bed\u8a00\u3002 \u9f50\u6b21\u5750\u6807\uff08Homogeneous Coordinates\uff09\uff1a \u9f50\u6b21\u5750\u6807\u5c31\u662f\u5c06\u4e00\u4e2a\u539f\u672c\u662fn\u7ef4\u7684\u5411\u91cf\u7528\u4e00\u4e2an+1\u7ef4\u5411\u91cf\u6765\u8868\u793a\u3002 \u9876\u70b9\u7f13\u51b2\u5bf9\u8c61\uff08Vertex Buffer Object\uff0cVBO\uff09\uff1a \u663e\u5b58\u4e2d\u5b58\u50a8\u9876\u70b9\u6216\u5176\u4ed6\u6570\u636e\u7684\u5185\u5b58\u7f13\u51b2\u533a\u3002 \u9876\u70b9\u6570\u7ec4\u5bf9\u8c61\uff08Vertex Array Object\uff0cVAO\uff09\uff1a \u7528\u4e8e\u50a8\u5b58\u4e00\u4e2a\u6216\u591a\u4e2a\u9876\u70b9\u7f13\u51b2\u5bf9\u8c61\u7684\u5bf9\u8c61\uff0c\u4fbf\u4e8e\u4f7f\u7528\u663e\u5361\u4e2d\u7684\u50a8\u5b58\u7684\u6570\u636e\u3002 \u56db\u8fb9\u5f62\uff08Quad\uff09\uff1a \u53ef\u7531\u4e24\u4e2a\u4e09\u89d2\u5f62\u7ec4\u6210\u7684\u51e0\u4f55\u5f62\u72b6\uff0c\u7531\u56db\u4e2a\u9876\u70b9\u7ec4\u6210\u3002 \u7f51\u683c\uff08Mesh\uff09\uff1a \u6e38\u620f\u5f00\u53d1\u4e2d\u5e38\u89c1\u6982\u5ff5\u4e4b\u4e00\uff0c\u901a\u5e38\u7528\u4e8e\u5305\u88c5\u9876\u70b9\u6570\u7ec4\u5bf9\u8c61\uff08VAO\uff09\uff0c\u50a8\u5b58\u6a21\u578b\u7684\u4f4d\u7f6e\u3001\u9876\u70b9\u7d22\u5f15\u3001\u989c\u8272\u7b49\u6570\u636e\u3002 \u7d22\u5f15\u7f13\u51b2\u533a\uff08Index Buffer\uff09\uff1a \u7528\u4e8e\u6307\u5b9a\u9876\u70b9\u7ed8\u5236\u987a\u5e8f\u7684\u7f13\u51b2\u533a\u3002 \u6295\u5f71\u77e9\u9635\uff08Projection Matrix\uff09\uff1a \u5c06\u9876\u70b9\u4ece\u4e09\u7ef4\u4e16\u754c\u7a7a\u95f4\u6295\u5f71\u5230\u4e8c\u7ef4\u5c4f\u5e55\u7a7a\u95f4\u7684\u77e9\u9635\u3002 \u622a\u9525\u4f53\uff08Frustum\uff09\uff1a \u4e09\u7ef4\u51e0\u4f55\u4f53\u7684\u4e00\u79cd\uff0c\u53c8\u79f0\u4e3a\u68f1\u53f0\u3002\u5728\u6e38\u620f\u5f15\u64ce\u4e2d\u901a\u5e38\u4e3a\u56db\u68f1\u53f0\u3002 \u77e9\u9635\uff08Matrix\uff09\uff1a \u77e9\u9635\u662f\u4ee5\u884c\u548c\u5217\u6392\u5217\u7684\u4e8c\u7ef4\u6570\u7ec4\uff0c\u5728\u6e38\u620f\u5f15\u64ce\u4e2d\u901a\u5e38\u7528\u4e8e\u53d8\u6362\u4e09\u7ef4\u7a7a\u95f4\u4e2d\u7684\u70b9\u3002 \u5bbd\u9ad8\u6bd4\uff08Aspect Ratio\uff09\uff1a \u9ad8\u5ea6\u4e0e\u5bbd\u5ea6\u4e4b\u6bd4\u3002 JOML\uff08Java OpenGL Math Library\uff09\uff1a Java OpenGL \u6570\u5b66\u5e93\uff0c\u63d0\u4f9b\u4e86\u5bf9OpenGL\u7684\u4e00\u7cfb\u5217\u5e38\u7528\u6570\u5b66\u5b9e\u4f53\u7684\u5c01\u88c5\u3002 Uniform\uff1a Uniform\u662f\u7740\u8272\u5668\u53ef\u4ee5\u4f7f\u7528\u7684\u5168\u5c40\u7684GLSL\u53d8\u91cf\u3002 \u4f4d\u79fb\uff08Translation\uff09\uff1a \u5728\u4e09\u4e2a\u8f74\u4e2d\u7684\u4efb\u610f\u4e00\u4e2a\u8f74\u4e0a\u79fb\u52a8\u4e00\u4e2a\u7269\u4f53\u3002 \u65cb\u8f6c\uff08Rotation\uff09\uff1a \u6309\u4efb\u610f\u4e00\u4e2a\u8f74\u65cb\u8f6c\u7269\u4f53\u4efb\u610f\u89d2\u5ea6\u3002 \u7f29\u653e\uff08Scale\uff09\uff1a \u8c03\u6574\u7269\u4f53\u7684\u5927\u5c0f\u3002 \u53d8\u6362\uff08Transformation\uff09\uff1a \u4f4d\u79fb\u3001\u65cb\u8f6c\u548c\u7f29\u653e\u4e09\u8005\u7684\u7edf\u79f0\u3002 \u4e16\u754c\u77e9\u9635\uff08World Matrix\uff09\uff1a \u5c06\u7269\u4f53\u6216\u6a21\u578b\u4ece\u6a21\u578b\u5750\u6807\u7a7a\u95f4\u53d8\u6362\u5230\u4e16\u754c\u5750\u6807\u7a7a\u95f4\u7684\u77e9\u9635\uff0c\u7531\u4f4d\u79fb\u77e9\u9635\u3001\u65cb\u8f6c\u77e9\u9635\u548c\u7f29\u653e\u77e9\u9635\u76f8\u4e58\u6240\u5f97\u3002 \u4f4d\u79fb\u77e9\u9635\uff08Translation Matrix\uff09\uff1a \u53ef\u5bf9\u4e09\u7ef4\u5750\u6807\u8fdb\u884c\u4f4d\u79fb\u53d8\u6362\u7684\u77e9\u9635\u3002 \u65cb\u8f6c\u77e9\u9635\uff08Rotation Matrix\uff09\uff1a \u53ef\u5bf9\u4e09\u7ef4\u5750\u6807\u8fdb\u884c\u65cb\u8f6c\u53d8\u6362\u7684\u77e9\u9635\u3002 \u7f29\u653e\u77e9\u9635\uff08Scale Matrix\uff09\uff1a \u53ef\u5bf9\u4e09\u7ef4\u5750\u6807\u8fdb\u884c\u7f29\u653e\u53d8\u6362\u7684\u77e9\u9635\u3002 \u6df1\u5ea6\u6d4b\u8bd5\uff08Depth Test\uff09\uff1a \u5bf9\u7247\u5143\u8fdb\u884c\u6df1\u5ea6\u6d4b\u8bd5\uff0c\u4e22\u5f03\u8ddd\u79bb\u5c4f\u5e55\u8f83\u8fdc\u7684\u7247\u5143\u3002 \u7eb9\u7406\uff08Texture\uff09\uff1a \u7528\u4e8e\u7ed8\u5236\u6a21\u578b\u7684\u50cf\u7d20\u7684\u56fe\u50cf\u3002 \u591a\u7ea7\u6e10\u8fdc\u7eb9\u7406\uff08Mipmap\uff09\uff1a \u5bf9\u4e8e\u8ddd\u79bb\u5c4f\u5e55\u8f83\u8fdc\u7684\u50cf\u7d20\uff0c\u5c06\u4f7f\u7528\u7ec6\u8282\u8f83\u4f4e\u7684\u7eb9\u7406\u8fdb\u884c\u7ed8\u5236\u3002\u591a\u7ea7\u6e10\u8fdc\u7eb9\u7406\u53ef\u89e3\u51b3\u7531\u4e8e\u8ddd\u79bb\u95ee\u9898\u800c\u5bfc\u81f4\u7684\u8fdc\u5904\u50cf\u7d20\u95ea\u70c1\u95ee\u9898\u3002 \u7eb9\u7406\u5750\u6807\uff08Texture Coordinate\uff09\uff1a \u901a\u5e38\u53ea\u6709\u4e24\u4e2a\u5206\u91cf\uff0c\u7528\u4e8e\u6307\u5b9a\u7247\u5143\u5728\u7eb9\u7406\u4e0a\u7684\u4f4d\u7f6e\u3002 \u7eb9\u7406\u5355\u5143\uff08Texture Unit\uff09\uff1a \u7528\u4e8e\u50a8\u5b58\u7eb9\u7406\u7684\u7a7a\u95f4\u3002 \u53d6\u6837\u5668\uff08Sampler\uff09\uff1a Uniform\u7c7b\u578b\u4e4b\u4e00\uff0c\u7528\u4e8e\u6307\u5b9a\u88ab\u53d6\u6837\u7684\u7eb9\u7406\u3002 \u6df7\u5408\uff08Blend\uff09\uff1a OpenGL\u529f\u80fd\u4e4b\u4e00\uff0c\u7528\u4e8e\u6e32\u67d3\u900f\u660e\u6216\u534a\u900f\u660e\u7269\u4f53\uff0c\u5c06\u5176\u7247\u5143\u4e0e\u5176\u540e\u7247\u5143\u7684\u989c\u8272\u8fdb\u884c\u6df7\u5408\u3002 \u6444\u50cf\u673a\uff08Camera\uff09\uff1a \u7528\u4e8e\u81ea\u7531\u89c2\u5bdf\u4e09\u7ef4\u4e16\u754c\u7684\u529f\u80fd\u3002OpenGL\u4e2d\u4e0d\u5b58\u5728\u6b64\u529f\u80fd\u548c\u6982\u5ff5\uff0c\u79fb\u52a8\u6444\u50cf\u673a\u5b9e\u9645\u4e0a\u662f\u5c06\u573a\u666f\u4e2d\u7684\u6240\u6709\u7269\u4f53\u5411\u76f8\u53cd\u7684\u65b9\u5411\u79fb\u52a8\u3002 \u7ffb\u6eda\uff08Roll\uff09\uff1a \u6b27\u62c9\u89d2\uff08Euler Angles\uff09\u4e4b\u4e00\uff0c\u7528\u4e8e\u63cf\u8ff0\u7269\u4f53\u6cbf\u5176\u7eb5\u8f74\u65cb\u8f6c\u7684\u89d2\u5ea6\u3002 \u4fef\u4ef0\uff08Pitch\uff09\uff1a \u6b27\u62c9\u89d2\u4e4b\u4e00\uff0c\u7528\u4e8e\u63cf\u8ff0\u7269\u4f53\u6cbf\u5176\u6a2a\u8f74\u65cb\u8f6c\u7684\u89d2\u5ea6\u3002 \u504f\u822a\uff08Yaw\uff09\uff1a \u6b27\u62c9\u89d2\u4e4b\u4e00\uff0c\u7528\u4e8e\u63cf\u8ff0\u7269\u4f53\u6cbf\u5176\u7ad6\u8f74\u65cb\u8f6c\u7684\u89d2\u5ea6\u3002 \u89c2\u5bdf\u77e9\u9635\uff08View Matrix\uff09\uff1a \u7528\u4e8e\u5c06\u9876\u70b9\u5411\u6444\u50cf\u673a\u6240\u5728\u4f4d\u7f6e\u7684\u76f8\u53cd\u65b9\u5411\u548c\u65cb\u8f6c\u72b6\u6001\u53d8\u6362\u7684\u77e9\u9635\u3002 \u6a21\u578b\u89c2\u5bdf\u77e9\u9635\uff08Model View Matrix\uff09\uff1a \u662f\u89c2\u5bdf\u77e9\u9635\u4e0e\u4e16\u754c\u77e9\u9635\u7ec4\u5408\uff0c\u53ef\u5c06\u6a21\u578b\u7a7a\u95f4\u7684\u5750\u6807\u53d8\u6362\u5230\u6444\u50cf\u673a\u7a7a\u95f4\u4e2d\u7684\u5750\u6807\uff0c\u7528\u4e8e\u7b80\u5316\u8ba1\u7b97\u3002 OBJ\uff08.obj\uff09\uff1a Wavefront Technologies\u5f00\u53d1\u7684\u4e00\u79cd\u51e0\u4f55\u5b9a\u4e49\u5f00\u653e\u6587\u4ef6\u683c\u5f0f\uff0c\u73b0\u5df2\u88ab\u5e7f\u6cdb\u91c7\u7528\u3002 \u6cd5\u7ebf\uff08Normal\uff09\uff1a \u4e00\u4e2a\u5e73\u9762\u7684\u6cd5\u7ebf\u662f\u4e00\u4e2a\u5782\u76f4\u4e8e\u8be5\u5e73\u9762\u7684\u5411\u91cf\u3002 \u5f52\u4e00\u5316\uff08Normalize\uff09\uff1a \u4f7f\u5411\u91cf\u7684\u957f\u5ea6\uff08\u6216\u6a21\u957f\uff09\u4e3a1\u3002 \u9876\u70b9\u6cd5\u7ebf\uff08Vertex Normal\uff09\uff1a \u4e00\u4e2a\u9876\u70b9\u7684\u6cd5\u7ebf\u662f\u5176\u53c2\u4e0e\u7ec4\u6210\u7684\u4e09\u89d2\u5f62\u7684\u9762\u7684\u6cd5\u7ebf\u7684\u7ec4\u5408\uff0c\u5176\u957f\u5ea6\u4ecd\u4e3a1\u3002 \u70b9\u5149\u6e90\uff08Point Light\uff09\uff1a \u8fd9\u79cd\u5149\u6a21\u62df\u7684\u662f\u4e00\u4e2a\u7531\u70b9\u5411\u7a7a\u95f4\u5404\u4e2a\u65b9\u5411\u5747\u5300\u53d1\u5c04\u7684\u5149\u6e90\u3002 \u805a\u5149\u6e90\uff08Spot Light\uff09\uff1a \u8fd9\u79cd\u5149\u6a21\u62df\u4ece\u7a7a\u95f4\u4e2d\u7684\u70b9\u53d1\u5c04\u7684\u5149\u6e90\uff0c\u4f46\u4e0d\u662f\u5411\u6240\u6709\u65b9\u5411\u4e0a\u53d1\u5c04\uff0c\u800c\u662f\u9650\u5b9a\u5728\u4e86\u4e00\u4e2a\u9525\u5f62\u65b9\u5411\u4e0a\u3002 \u5e73\u884c\u5149\uff08Directional Light\uff09\uff1a \u8fd9\u79cd\u5149\u6a21\u62df\u4e86\u592a\u9633\u5149\uff0c3D\u573a\u666f\u4e2d\u7684\u6240\u6709\u7269\u4f53\u90fd\u4f1a\u53d7\u5230\u6765\u81ea\u7279\u5b9a\u65b9\u5411\u7684\u5e73\u884c\u5149\u7ebf\u7684\u7167\u5c04\u3002\u65e0\u8bba\u7269\u4f53\u662f\u8fd1\u6291\u6216\u662f\u8fdc\uff0c\u5149\u7ebf\u603b\u662f\u4ee5\u76f8\u540c\u89d2\u5ea6\u7167\u5c04\u5728\u7269\u4f53\u4e0a\u3002 \u73af\u5883\u5149\uff08Ambient Light\uff09\uff1a \u8fd9\u79cd\u5149\u6765\u81ea\u7a7a\u95f4\u7684\u4efb\u4f55\u65b9\u5411\uff0c\u5e76\u4ee5\u76f8\u540c\u7684\u5f3a\u5ea6\u7167\u4eae\u6240\u6709\u7269\u4f53\u3002 \u6f2b\u53cd\u5c04\uff08Diffuse Reflectance\uff09\uff1a \u8003\u8651\u5230\u9762\u5411\u5149\u6e90\u7684\u8868\u9762\u66f4\u4eae\u3002 \u955c\u9762\u53cd\u5c04\uff08Specular Reflectance\uff09\uff1a \u6a21\u62df\u5149\u7ebf\u5728\u629b\u5149\u6216\u91d1\u5c5e\u8868\u9762\u4e0a\u7684\u53cd\u5c04\u3002 HUD\uff08Heads-Up Display\uff09\uff1a \u5e73\u89c6\u663e\u793a\u5668\uff0c\u5e38\u7528\u4e8e\u98de\u673a\u4e0a\u5c06\u91cd\u8981\u4fe1\u606f\u6295\u5f71\u4e8e\u6321\u98ce\u73bb\u7483\u6216\u5934\u76d4\u4e0a\uff0c\u4ee5\u4fbf\u98de\u884c\u5458\u540c\u65f6\u67e5\u770b\u524d\u65b9\u60c5\u51b5\u548c\u98de\u884c\u4fe1\u606f\u3002\u73b0\u7528\u4e8e\u6e38\u620f\u4e2d\uff0c\u5c06\u6e38\u620f\u4e2d\u7684\u91cd\u8981\u4fe1\u606f\u663e\u793a\u4e8e\u4e09\u7ef4\u573a\u666f\u524d\u3002 \u6b63\u4ea4\u6295\u5f71\uff08Orthographic Projection\uff0cOrthogonal Projection\uff09\uff1a \u4e5f\u79f0\u4e3a\u6b63\u6295\u5f71\uff0c\u6b63\u5c04\u6295\u5f71\u3002\u6307\u4e0d\u53d7\u8fd1\u5927\u8fdc\u5c0f\u5f71\u54cd\u7684\u5c06\u4e09\u7ef4\u7269\u4f53\u6295\u5f71\u5230\u4e8c\u7ef4\u5e73\u9762\u4e0a\u7684\u6295\u5f71\u65b9\u5f0f\u3002 \u6df7\u5408\uff08Blend\uff09\uff1a \u5b9e\u73b03D\u6e32\u67d3\u4e2d\u7269\u4f53\u900f\u660e\u7684\u4e00\u4e2a\u529f\u80fd\uff0c\u542f\u7528\u900f\u660e\u5c06\u5141\u8bb8\u4f7f\u7528Alpha\u5206\u91cf\u6df7\u5408\u989c\u8272\u3002 \u5929\u7a7a\u76d2\uff08Sky Box\uff09\uff1a \u5305\u88f93D\u573a\u666f\u5e76\u4ee5\u6444\u50cf\u673a\u4f4d\u7f6e\u4e3a\u539f\u70b9\u7684\u5de8\u5927\u7acb\u65b9\u4f53\uff0c\u5c06\u7eb9\u7406\u6e32\u67d3\u5728\u8be5\u7acb\u65b9\u4f53\u5185\u90e8\uff0c\u4ee5\u4ea7\u751f\u4e00\u79cd\u770b\u5230\u6ca1\u6709\u8fb9\u7f18\u7684\u573a\u666f\u7684\u9519\u89c9\u3002 \u7acb\u65b9\u4f53\u6620\u5c04\uff08Cube Mapping\uff09\uff1a \u5c06\u7eb9\u7406\u5206\u4e3a\u516d\u4e2a\u90e8\u5206\uff0c\u5c06\u5404\u90e8\u5206\u6620\u5c04\u5230\u7acb\u65b9\u4f53\u4e0a\u3002 \u9762\u5254\u9664\uff08Face Culling\uff09\uff1a \u5254\u9664\u65e0\u7528\u6216\u770b\u4e0d\u5230\u7684\u9762\uff0c\u4ee5\u63d0\u5347\u6027\u80fd\u7684OpenGL\u529f\u80fd\u3002","title":"\u672f\u8bed\u8868"}]}